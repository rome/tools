[workspace]
# Use the newer version of the cargo resolver
# https://doc.rust-lang.org/cargo/reference/resolver.html#resolver-versions
members = [
  "crates/*",
  "xtask/bench",
  "xtask/codegen",
  "xtask/coverage",
  "xtask/lintdoc",
  "xtask/libs_bench",
  "xtask/contributors",
]
resolver = "2"

[workspace.package]
authors    = ["Rome Tools Developers and Contributors"]
edition    = "2021"
homepage   = "https://rome.tools"
license    = "MIT"
repository = "https://github.com/rome/tools"

[profile.release-with-debug]
debug    = true
inherits = "release"

[workspace.dependencies]
# Internal crates
rome_analyze                = { path = "./crates/rome_analyze" }
rome_aria                   = { path = "./crates/rome_aria" }
rome_aria_metadata          = { path = "./crates/rome_aria_metadata" }
rome_cli                    = { path = "./crates/rome_cli" }
rome_console                = { version = "0.0.1", path = "./crates/rome_console" }
rome_control_flow           = { path = "./crates/rome_control_flow" }
rome_css_factory            = { path = "./crates/rome_css_factory" }
rome_css_parser             = { path = "./crates/rome_css_parser" }
rome_css_syntax             = { path = "./crates/rome_css_syntax" }
rome_deserialize            = { version = "0.0.0", path = "./crates/rome_deserialize" }
rome_diagnostics            = { version = "0.0.1", path = "./crates/rome_diagnostics" }
rome_diagnostics_categories = { version = "0.0.1", path = "./crates/rome_diagnostics_categories" }
rome_diagnostics_macros     = { version = "0.0.1", path = "./crates/rome_diagnostics_macros" }
rome_flags                  = { path = "./crates/rome_flags" }
rome_formatter              = { version = "0.0.1", path = "./crates/rome_formatter" }
rome_formatter_test         = { path = "./crates/rome_formatter_test" }
rome_fs                     = { path = "./crates/rome_fs" }
rome_js_analyze             = { path = "./crates/rome_js_analyze" }
rome_js_factory             = { version = "0.0.2", path = "./crates/rome_js_factory" }
rome_js_formatter           = { path = "./crates/rome_js_formatter" }
rome_js_parser              = { path = "./crates/rome_js_parser" }
rome_js_semantic            = { path = "./crates/rome_js_semantic" }
rome_js_syntax              = { version = "0.0.2", path = "./crates/rome_js_syntax" }
rome_js_unicode_table       = { version = "0.0.1", path = "./crates/rome_js_unicode_table" }
rome_json_analyze           = { path = "./crates/rome_json_analyze" }
rome_json_factory           = { version = "0.0.1", path = "./crates/rome_json_factory" }
rome_json_formatter         = { path = "./crates/rome_json_formatter" }
rome_json_parser            = { path = "./crates/rome_json_parser" }
rome_json_syntax            = { version = "0.0.1", path = "./crates/rome_json_syntax" }
rome_lsp                    = { path = "./crates/rome_lsp" }
rome_markup                 = { version = "0.0.1", path = "./crates/rome_markup" }
rome_migrate                = { path = "./crates/rome_migrate" }
rome_parser                 = { version = "0.0.1", path = "./crates/rome_parser" }
rome_rowan                  = { version = "0.0.1", path = "./crates/rome_rowan" }
rome_service                = { path = "./crates/rome_service" }
rome_suppression            = { version = "0.0.1", path = "./crates/rome_suppression" }
rome_text_edit              = { version = "0.0.1", path = "./crates/rome_text_edit" }
rome_text_size              = { version = "0.0.1", path = "./crates/rome_text_size" }
tests_macros                = { path = "./crates/tests_macros" }

# Crates needed in the workspace
bitflags          = "2.3.1"
bpaf              = { version = "0.9.2", features = ["derive"] }
countme           = "3.0.1"
dashmap           = "5.4.0"
indexmap          = "1.9.3"
insta             = "1.29.0"
lazy_static       = "1.4.0"
quickcheck        = "1.0.3"
quickcheck_macros = "1.0.0"
quote             = { version = "1.0.28" }
rustc-hash        = "1.1.0"
schemars          = { version = "0.8.12" }
serde             = { version = "1.0.163", features = ["derive"], default-features = false }
serde_json        = "1.0.96"
smallvec          = { version = "1.10.0", features = ["union", "const_new"] }
tracing           = { version = "0.1.37", default-features = false, features = ["std"] }
# pinning to version 1.18 to avoid multiple versions of windows-sys as dependency
tokio = { version = "~1.18.5" }


[profile.dev.package.rome_wasm]
debug     = true
opt-level = "s"

[profile.test.package.rome_wasm]
debug     = true
opt-level = "s"

[profile.release.package.rome_wasm]
debug     = false
opt-level = 3
