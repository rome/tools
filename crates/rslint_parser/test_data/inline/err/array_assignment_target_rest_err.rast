JsRoot {
    interpreter_token: missing (optional),
    directives: [],
    statements: [
        JsExpressionStatement {
            expression: JsParenthesizedExpression {
                l_paren_token: L_PAREN@0..1 "(" [] [],
                expression: JsAssignmentExpression {
                    left: JsArrayAssignmentPattern {
                        l_brack_token: L_BRACK@1..3 "[" [] [Whitespace(" ")],
                        elements: [
                            JsArrayAssignmentPatternRestElement {
                                dotdotdot_token: DOT2@3..7 "..." [] [Whitespace(" ")],
                                pattern: missing (required),
                            },
                        ],
                        r_brack_token: R_BRACK@7..9 "]" [] [Whitespace(" ")],
                    },
                    operator_token: EQ@9..11 "=" [] [Whitespace(" ")],
                    right: JsIdentifierExpression {
                        name: JsReferenceIdentifier {
                            value_token: IDENT@11..12 "a" [] [],
                        },
                    },
                },
                r_paren_token: R_PAREN@12..13 ")" [] [],
            },
            semicolon_token: SEMICOLON@13..14 ";" [] [],
        },
        JsExpressionStatement {
            expression: JsParenthesizedExpression {
                l_paren_token: L_PAREN@14..16 "(" [Whitespace("\n")] [],
                expression: JsAssignmentExpression {
                    left: JsArrayAssignmentPattern {
                        l_brack_token: L_BRACK@16..18 "[" [] [Whitespace(" ")],
                        elements: [
                            JsUnknownAssignment {
                                items: [
                                    Token(
                                        DOT2@18..21 "..." [] [],
                                    ),
                                    Node(
                                        1: JS_IDENTIFIER_ASSIGNMENT@21..23
                                          0: IDENT@21..23 "c" [] [Whitespace(" ")]
                                        ,
                                    ),
                                    Token(
                                        EQ@23..25 "=" [] [Whitespace(" ")],
                                    ),
                                    Token(
                                        JS_STRING_LITERAL@25..35 "\"default\"" [] [Whitespace(" ")],
                                    ),
                                ],
                            },
                        ],
                        r_brack_token: R_BRACK@35..37 "]" [] [Whitespace(" ")],
                    },
                    operator_token: EQ@37..39 "=" [] [Whitespace(" ")],
                    right: JsIdentifierExpression {
                        name: JsReferenceIdentifier {
                            value_token: IDENT@39..40 "a" [] [],
                        },
                    },
                },
                r_paren_token: R_PAREN@40..41 ")" [] [],
            },
            semicolon_token: SEMICOLON@41..42 ";" [] [],
        },
        JsExpressionStatement {
            expression: JsParenthesizedExpression {
                l_paren_token: L_PAREN@42..44 "(" [Whitespace("\n")] [],
                expression: JsAssignmentExpression {
                    left: JsArrayAssignmentPattern {
                        l_brack_token: L_BRACK@44..46 "[" [] [Whitespace(" ")],
                        elements: [
                            JsUnknownAssignment {
                                items: [
                                    Token(
                                        DOT2@46..49 "..." [] [],
                                    ),
                                    Node(
                                        1: JS_IDENTIFIER_ASSIGNMENT@49..53
                                          0: IDENT@49..53 "rest" [] []
                                        ,
                                    ),
                                ],
                            },
                            COMMA@53..55 "," [] [Whitespace(" ")],
                            JsIdentifierAssignment {
                                name_token: IDENT@55..72 "other_assignment" [] [Whitespace(" ")],
                            },
                        ],
                        r_brack_token: R_BRACK@72..74 "]" [] [Whitespace(" ")],
                    },
                    operator_token: EQ@74..76 "=" [] [Whitespace(" ")],
                    right: JsIdentifierExpression {
                        name: JsReferenceIdentifier {
                            value_token: IDENT@76..77 "a" [] [],
                        },
                    },
                },
                r_paren_token: R_PAREN@77..78 ")" [] [],
            },
            semicolon_token: SEMICOLON@78..79 ";" [] [],
        },
    ],
}

0: JS_ROOT@0..80
  0: (empty)
  1: LIST@0..0
  2: LIST@0..79
    0: JS_EXPRESSION_STATEMENT@0..14
      0: JS_PARENTHESIZED_EXPRESSION@0..13
        0: L_PAREN@0..1 "(" [] []
        1: JS_ASSIGNMENT_EXPRESSION@1..12
          0: JS_ARRAY_ASSIGNMENT_PATTERN@1..9
            0: L_BRACK@1..3 "[" [] [Whitespace(" ")]
            1: LIST@3..7
              0: JS_ARRAY_ASSIGNMENT_PATTERN_REST_ELEMENT@3..7
                0: DOT2@3..7 "..." [] [Whitespace(" ")]
                1: (empty)
            2: R_BRACK@7..9 "]" [] [Whitespace(" ")]
          1: EQ@9..11 "=" [] [Whitespace(" ")]
          2: JS_IDENTIFIER_EXPRESSION@11..12
            0: JS_REFERENCE_IDENTIFIER@11..12
              0: IDENT@11..12 "a" [] []
        2: R_PAREN@12..13 ")" [] []
      1: SEMICOLON@13..14 ";" [] []
    1: JS_EXPRESSION_STATEMENT@14..42
      0: JS_PARENTHESIZED_EXPRESSION@14..41
        0: L_PAREN@14..16 "(" [Whitespace("\n")] []
        1: JS_ASSIGNMENT_EXPRESSION@16..40
          0: JS_ARRAY_ASSIGNMENT_PATTERN@16..37
            0: L_BRACK@16..18 "[" [] [Whitespace(" ")]
            1: LIST@18..35
              0: JS_UNKNOWN_ASSIGNMENT@18..35
                0: DOT2@18..21 "..." [] []
                1: JS_IDENTIFIER_ASSIGNMENT@21..23
                  0: IDENT@21..23 "c" [] [Whitespace(" ")]
                2: EQ@23..25 "=" [] [Whitespace(" ")]
                3: JS_STRING_LITERAL@25..35 "\"default\"" [] [Whitespace(" ")]
            2: R_BRACK@35..37 "]" [] [Whitespace(" ")]
          1: EQ@37..39 "=" [] [Whitespace(" ")]
          2: JS_IDENTIFIER_EXPRESSION@39..40
            0: JS_REFERENCE_IDENTIFIER@39..40
              0: IDENT@39..40 "a" [] []
        2: R_PAREN@40..41 ")" [] []
      1: SEMICOLON@41..42 ";" [] []
    2: JS_EXPRESSION_STATEMENT@42..79
      0: JS_PARENTHESIZED_EXPRESSION@42..78
        0: L_PAREN@42..44 "(" [Whitespace("\n")] []
        1: JS_ASSIGNMENT_EXPRESSION@44..77
          0: JS_ARRAY_ASSIGNMENT_PATTERN@44..74
            0: L_BRACK@44..46 "[" [] [Whitespace(" ")]
            1: LIST@46..72
              0: JS_UNKNOWN_ASSIGNMENT@46..53
                0: DOT2@46..49 "..." [] []
                1: JS_IDENTIFIER_ASSIGNMENT@49..53
                  0: IDENT@49..53 "rest" [] []
              1: COMMA@53..55 "," [] [Whitespace(" ")]
              2: JS_IDENTIFIER_ASSIGNMENT@55..72
                0: IDENT@55..72 "other_assignment" [] [Whitespace(" ")]
            2: R_BRACK@72..74 "]" [] [Whitespace(" ")]
          1: EQ@74..76 "=" [] [Whitespace(" ")]
          2: JS_IDENTIFIER_EXPRESSION@76..77
            0: JS_REFERENCE_IDENTIFIER@76..77
              0: IDENT@76..77 "a" [] []
        2: R_PAREN@77..78 ")" [] []
      1: SEMICOLON@78..79 ";" [] []
  3: EOF@79..80 "" [Whitespace("\n")] []
--
error[SyntaxError]: expected an identifier, or an assignment target but instead found ''
  ┌─ array_assignment_target_rest_err.js:1:7
  │
1 │ ([ ... ] = a);
  │       ^ Expected an identifier, or an assignment target here

--
error[SyntaxError]: rest element cannot have a default
  ┌─ array_assignment_target_rest_err.js:2:9
  │
2 │ ([ ...c = "default" ] = a);
  │    ---- ^^^^^^^^^^^^ Remove the default value here
  │    │     
  │    Rest element

--
error[SyntaxError]: rest element must be the last element
  ┌─ array_assignment_target_rest_err.js:3:4
  │
3 │ ([ ...rest, other_assignment ] = a);
  │    ^^^^^^^ Move the rest element to the end of the pattern, right before the closing ']'

--
([ ... ] = a);
([ ...c = "default" ] = a);
([ ...rest, other_assignment ] = a);
