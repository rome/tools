JsRoot {
    interpreter_token: missing (optional),
    directives: [],
    statements: [
        JsFunctionDeclaration {
            async_token: missing (optional),
            function_token: FUNCTION_KW@0..8 "function" [] [],
            star_token: missing (optional),
            id: missing (required),
            type_parameters: missing (optional),
            parameter_list: JsParameterList {
                l_paren_token: L_PAREN@8..9 "(" [] [],
                parameters: [],
                r_paren_token: R_PAREN@9..11 ")" [] [Whitespace(" ")],
            },
            return_type: missing (optional),
            body: JsFunctionBody {
                l_curly_token: L_CURLY@11..12 "{" [] [],
                directives: [],
                statements: [],
                r_curly_token: R_CURLY@12..13 "}" [] [],
            },
        },
        JsFunctionDeclaration {
            async_token: missing (optional),
            function_token: FUNCTION_KW@13..23 "function" [Whitespace("\n")] [Whitespace(" ")],
            star_token: missing (optional),
            id: JsIdentifierBinding {
                name_token: IDENT@23..27 "foo" [] [Whitespace(" ")],
                question_mark_token: missing (optional),
                excl_token: missing (optional),
                ty: missing (optional),
            },
            type_parameters: missing (optional),
            parameter_list: missing (required),
            return_type: missing (optional),
            body: JsFunctionBody {
                l_curly_token: L_CURLY@27..28 "{" [] [],
                directives: [],
                statements: [],
                r_curly_token: R_CURLY@28..29 "}" [] [],
            },
        },
        JsFunctionDeclaration {
            async_token: missing (optional),
            function_token: FUNCTION_KW@29..39 "function" [Whitespace("\n")] [Whitespace(" ")],
            star_token: missing (optional),
            id: missing (required),
            type_parameters: missing (optional),
            parameter_list: missing (required),
            return_type: missing (optional),
            body: JsFunctionBody {
                l_curly_token: L_CURLY@39..40 "{" [] [],
                directives: [],
                statements: [],
                r_curly_token: R_CURLY@40..41 "}" [] [],
            },
        },
        JsFunctionDeclaration {
            async_token: missing (optional),
            function_token: FUNCTION_KW@41..51 "function" [Whitespace("\n")] [Whitespace(" ")],
            star_token: STAR@51..52 "*" [] [],
            id: missing (required),
            type_parameters: missing (optional),
            parameter_list: JsParameterList {
                l_paren_token: L_PAREN@52..53 "(" [] [],
                parameters: [],
                r_paren_token: R_PAREN@53..55 ")" [] [Whitespace(" ")],
            },
            return_type: missing (optional),
            body: JsFunctionBody {
                l_curly_token: L_CURLY@55..56 "{" [] [],
                directives: [],
                statements: [],
                r_curly_token: R_CURLY@56..57 "}" [] [],
            },
        },
        JsFunctionDeclaration {
            async_token: ASYNC_KW@57..64 "async" [Whitespace("\n")] [Whitespace(" ")],
            function_token: FUNCTION_KW@64..72 "function" [] [],
            star_token: missing (optional),
            id: missing (required),
            type_parameters: missing (optional),
            parameter_list: JsParameterList {
                l_paren_token: L_PAREN@72..73 "(" [] [],
                parameters: [],
                r_paren_token: R_PAREN@73..75 ")" [] [Whitespace(" ")],
            },
            return_type: missing (optional),
            body: JsFunctionBody {
                l_curly_token: L_CURLY@75..76 "{" [] [],
                directives: [],
                statements: [],
                r_curly_token: R_CURLY@76..77 "}" [] [],
            },
        },
        JsFunctionDeclaration {
            async_token: ASYNC_KW@77..84 "async" [Whitespace("\n")] [Whitespace(" ")],
            function_token: FUNCTION_KW@84..93 "function" [] [Whitespace(" ")],
            star_token: STAR@93..94 "*" [] [],
            id: missing (required),
            type_parameters: missing (optional),
            parameter_list: JsParameterList {
                l_paren_token: L_PAREN@94..95 "(" [] [],
                parameters: [],
                r_paren_token: R_PAREN@95..97 ")" [] [Whitespace(" ")],
            },
            return_type: missing (optional),
            body: JsFunctionBody {
                l_curly_token: L_CURLY@97..98 "{" [] [],
                directives: [],
                statements: [],
                r_curly_token: R_CURLY@98..99 "}" [] [],
            },
        },
        JsFunctionDeclaration {
            async_token: missing (optional),
            function_token: FUNCTION_KW@99..109 "function" [Whitespace("\n")] [Whitespace(" ")],
            star_token: STAR@109..110 "*" [] [],
            id: JsIdentifierBinding {
                name_token: IDENT@110..113 "foo" [] [],
                question_mark_token: missing (optional),
                excl_token: missing (optional),
                ty: missing (optional),
            },
            type_parameters: missing (optional),
            parameter_list: JsParameterList {
                l_paren_token: L_PAREN@113..114 "(" [] [],
                parameters: [],
                r_paren_token: R_PAREN@114..116 ")" [] [Whitespace(" ")],
            },
            return_type: missing (optional),
            body: JsFunctionBody {
                l_curly_token: L_CURLY@116..117 "{" [] [],
                directives: [],
                statements: [],
                r_curly_token: R_CURLY@117..118 "}" [] [],
            },
        },
        JsExpressionStatement {
            expression: JsUnknownExpression {
                items: [
                    Token(
                        IDENT@118..125 "yield" [Whitespace("\n")] [Whitespace(" ")],
                    ),
                ],
            },
            semicolon_token: missing (optional),
        },
        JsExpressionStatement {
            expression: JsReferenceIdentifierExpression {
                name_token: IDENT@125..128 "foo" [] [],
            },
            semicolon_token: SEMICOLON@128..129 ";" [] [],
        },
        JsUnknownStatement {
            items: [
                Token(
                    FUNCTION_KW@129..139 "function" [Whitespace("\n")] [Whitespace(" ")],
                ),
                Node(
                    1: JS_IDENTIFIER_BINDING@139..143
                      0: IDENT@139..143 "test" [] []
                    ,
                ),
                Node(
                    2: JS_PARAMETER_LIST@143..145
                      0: L_PAREN@143..144 "(" [] []
                      1: LIST@144..144
                      2: R_PAREN@144..145 ")" [] []
                    ,
                ),
                Node(
                    3: TS_TYPE_ANNOTATION@145..154
                      0: COLON@145..147 ":" [] [Whitespace(" ")]
                      1: TS_NUMBER@147..154
                        0: IDENT@147..154 "number" [] [Whitespace(" ")]
                    ,
                ),
                Node(
                    4: JS_FUNCTION_BODY@154..156
                      0: L_CURLY@154..155 "{" [] []
                      1: LIST@155..155
                      2: LIST@155..155
                      3: R_CURLY@155..156 "}" [] []
                    ,
                ),
            ],
        },
        JsFunctionDeclaration {
            async_token: missing (optional),
            function_token: FUNCTION_KW@156..166 "function" [Whitespace("\n")] [Whitespace(" ")],
            star_token: missing (optional),
            id: JsIdentifierBinding {
                name_token: IDENT@166..169 "foo" [] [],
                question_mark_token: missing (optional),
                excl_token: missing (optional),
                ty: missing (optional),
            },
            type_parameters: missing (optional),
            parameter_list: JsParameterList {
                l_paren_token: L_PAREN@169..170 "(" [] [],
                parameters: [
                    JsIdentifierBinding {
                        name_token: IDENT@170..175 "await" [] [],
                        question_mark_token: missing (optional),
                        excl_token: missing (optional),
                        ty: missing (optional),
                    },
                ],
                r_paren_token: R_PAREN@175..177 ")" [] [Whitespace(" ")],
            },
            return_type: missing (optional),
            body: JsFunctionBody {
                l_curly_token: L_CURLY@177..178 "{" [] [],
                directives: [],
                statements: [],
                r_curly_token: R_CURLY@178..179 "}" [] [],
            },
        },
        JsFunctionDeclaration {
            async_token: missing (optional),
            function_token: FUNCTION_KW@179..189 "function" [Whitespace("\n")] [Whitespace(" ")],
            star_token: missing (optional),
            id: JsIdentifierBinding {
                name_token: IDENT@189..192 "foo" [] [],
                question_mark_token: missing (optional),
                excl_token: missing (optional),
                ty: missing (optional),
            },
            type_parameters: missing (optional),
            parameter_list: JsParameterList {
                l_paren_token: L_PAREN@192..193 "(" [] [],
                parameters: [
                    JsUnknownBinding {
                        items: [
                            Token(
                                IDENT@193..198 "yield" [] [],
                            ),
                        ],
                    },
                ],
                r_paren_token: R_PAREN@198..200 ")" [] [Whitespace(" ")],
            },
            return_type: missing (optional),
            body: JsFunctionBody {
                l_curly_token: L_CURLY@200..201 "{" [] [],
                directives: [],
                statements: [],
                r_curly_token: R_CURLY@201..202 "}" [] [],
            },
        },
    ],
}

0: JS_ROOT@0..203
  0: (empty)
  1: LIST@0..0
  2: LIST@0..202
    0: JS_FUNCTION_DECLARATION@0..13
      0: FUNCTION_KW@0..8 "function" [] []
      1: (empty)
      2: JS_PARAMETER_LIST@8..11
        0: L_PAREN@8..9 "(" [] []
        1: LIST@9..9
        2: R_PAREN@9..11 ")" [] [Whitespace(" ")]
      3: JS_FUNCTION_BODY@11..13
        0: L_CURLY@11..12 "{" [] []
        1: LIST@12..12
        2: LIST@12..12
        3: R_CURLY@12..13 "}" [] []
    1: JS_FUNCTION_DECLARATION@13..29
      0: FUNCTION_KW@13..23 "function" [Whitespace("\n")] [Whitespace(" ")]
      1: JS_IDENTIFIER_BINDING@23..27
        0: IDENT@23..27 "foo" [] [Whitespace(" ")]
      2: (empty)
      3: JS_FUNCTION_BODY@27..29
        0: L_CURLY@27..28 "{" [] []
        1: LIST@28..28
        2: LIST@28..28
        3: R_CURLY@28..29 "}" [] []
    2: JS_FUNCTION_DECLARATION@29..41
      0: FUNCTION_KW@29..39 "function" [Whitespace("\n")] [Whitespace(" ")]
      1: (empty)
      2: (empty)
      3: JS_FUNCTION_BODY@39..41
        0: L_CURLY@39..40 "{" [] []
        1: LIST@40..40
        2: LIST@40..40
        3: R_CURLY@40..41 "}" [] []
    3: JS_FUNCTION_DECLARATION@41..57
      0: FUNCTION_KW@41..51 "function" [Whitespace("\n")] [Whitespace(" ")]
      1: STAR@51..52 "*" [] []
      2: (empty)
      3: JS_PARAMETER_LIST@52..55
        0: L_PAREN@52..53 "(" [] []
        1: LIST@53..53
        2: R_PAREN@53..55 ")" [] [Whitespace(" ")]
      4: JS_FUNCTION_BODY@55..57
        0: L_CURLY@55..56 "{" [] []
        1: LIST@56..56
        2: LIST@56..56
        3: R_CURLY@56..57 "}" [] []
    4: JS_FUNCTION_DECLARATION@57..77
      0: ASYNC_KW@57..64 "async" [Whitespace("\n")] [Whitespace(" ")]
      1: FUNCTION_KW@64..72 "function" [] []
      2: (empty)
      3: JS_PARAMETER_LIST@72..75
        0: L_PAREN@72..73 "(" [] []
        1: LIST@73..73
        2: R_PAREN@73..75 ")" [] [Whitespace(" ")]
      4: JS_FUNCTION_BODY@75..77
        0: L_CURLY@75..76 "{" [] []
        1: LIST@76..76
        2: LIST@76..76
        3: R_CURLY@76..77 "}" [] []
    5: JS_FUNCTION_DECLARATION@77..99
      0: ASYNC_KW@77..84 "async" [Whitespace("\n")] [Whitespace(" ")]
      1: FUNCTION_KW@84..93 "function" [] [Whitespace(" ")]
      2: STAR@93..94 "*" [] []
      3: (empty)
      4: JS_PARAMETER_LIST@94..97
        0: L_PAREN@94..95 "(" [] []
        1: LIST@95..95
        2: R_PAREN@95..97 ")" [] [Whitespace(" ")]
      5: JS_FUNCTION_BODY@97..99
        0: L_CURLY@97..98 "{" [] []
        1: LIST@98..98
        2: LIST@98..98
        3: R_CURLY@98..99 "}" [] []
    6: JS_FUNCTION_DECLARATION@99..118
      0: FUNCTION_KW@99..109 "function" [Whitespace("\n")] [Whitespace(" ")]
      1: STAR@109..110 "*" [] []
      2: JS_IDENTIFIER_BINDING@110..113
        0: IDENT@110..113 "foo" [] []
      3: JS_PARAMETER_LIST@113..116
        0: L_PAREN@113..114 "(" [] []
        1: LIST@114..114
        2: R_PAREN@114..116 ")" [] [Whitespace(" ")]
      4: JS_FUNCTION_BODY@116..118
        0: L_CURLY@116..117 "{" [] []
        1: LIST@117..117
        2: LIST@117..117
        3: R_CURLY@117..118 "}" [] []
    7: JS_EXPRESSION_STATEMENT@118..125
      0: JS_UNKNOWN_EXPRESSION@118..125
        0: IDENT@118..125 "yield" [Whitespace("\n")] [Whitespace(" ")]
      1: (empty)
    8: JS_EXPRESSION_STATEMENT@125..129
      0: JS_REFERENCE_IDENTIFIER_EXPRESSION@125..128
        0: IDENT@125..128 "foo" [] []
      1: SEMICOLON@128..129 ";" [] []
    9: JS_UNKNOWN_STATEMENT@129..156
      0: FUNCTION_KW@129..139 "function" [Whitespace("\n")] [Whitespace(" ")]
      1: JS_IDENTIFIER_BINDING@139..143
        0: IDENT@139..143 "test" [] []
      2: JS_PARAMETER_LIST@143..145
        0: L_PAREN@143..144 "(" [] []
        1: LIST@144..144
        2: R_PAREN@144..145 ")" [] []
      3: TS_TYPE_ANNOTATION@145..154
        0: COLON@145..147 ":" [] [Whitespace(" ")]
        1: TS_NUMBER@147..154
          0: IDENT@147..154 "number" [] [Whitespace(" ")]
      4: JS_FUNCTION_BODY@154..156
        0: L_CURLY@154..155 "{" [] []
        1: LIST@155..155
        2: LIST@155..155
        3: R_CURLY@155..156 "}" [] []
    10: JS_FUNCTION_DECLARATION@156..179
      0: FUNCTION_KW@156..166 "function" [Whitespace("\n")] [Whitespace(" ")]
      1: JS_IDENTIFIER_BINDING@166..169
        0: IDENT@166..169 "foo" [] []
      2: JS_PARAMETER_LIST@169..177
        0: L_PAREN@169..170 "(" [] []
        1: LIST@170..175
          0: JS_IDENTIFIER_BINDING@170..175
            0: IDENT@170..175 "await" [] []
        2: R_PAREN@175..177 ")" [] [Whitespace(" ")]
      3: JS_FUNCTION_BODY@177..179
        0: L_CURLY@177..178 "{" [] []
        1: LIST@178..178
        2: LIST@178..178
        3: R_CURLY@178..179 "}" [] []
    11: JS_FUNCTION_DECLARATION@179..202
      0: FUNCTION_KW@179..189 "function" [Whitespace("\n")] [Whitespace(" ")]
      1: JS_IDENTIFIER_BINDING@189..192
        0: IDENT@189..192 "foo" [] []
      2: JS_PARAMETER_LIST@192..200
        0: L_PAREN@192..193 "(" [] []
        1: LIST@193..198
          0: JS_UNKNOWN_BINDING@193..198
            0: IDENT@193..198 "yield" [] []
        2: R_PAREN@198..200 ")" [] [Whitespace(" ")]
      3: JS_FUNCTION_BODY@200..202
        0: L_CURLY@200..201 "{" [] []
        1: LIST@201..201
        2: LIST@201..201
        3: R_CURLY@201..202 "}" [] []
  3: EOF@202..203 "" [Whitespace("\n")] []
--
error[SyntaxError]: expected a name for the function in a function declaration, but found none
  ┌─ function_decl_err.js:1:9
  │
1 │ function() {}
  │         ^

--
error[SyntaxError]: expected a parenthesis '(' but instead found '{'
  ┌─ function_decl_err.js:2:14
  │
2 │ function foo {}
  │              ^ Expected a parenthesis '(' here

--
error[SyntaxError]: expected a name for the function in a function declaration, but found none
  ┌─ function_decl_err.js:3:10
  │
3 │ function {}
  │          ^

--
error[SyntaxError]: expected a parenthesis '(' but instead found '{'
  ┌─ function_decl_err.js:3:10
  │
3 │ function {}
  │          ^ Expected a parenthesis '(' here

--
error[SyntaxError]: expected a name for the function in a function declaration, but found none
  ┌─ function_decl_err.js:4:11
  │
4 │ function *() {}
  │           ^

--
error[SyntaxError]: expected a name for the function in a function declaration, but found none
  ┌─ function_decl_err.js:5:15
  │
5 │ async function() {}
  │               ^

--
error[SyntaxError]: expected a name for the function in a function declaration, but found none
  ┌─ function_decl_err.js:6:17
  │
6 │ async function *() {}
  │                 ^

--
error[SyntaxError]: Illegal use of `yield` as an identifier in strict mode
  ┌─ function_decl_err.js:8:1
  │
8 │ yield foo;
  │ ^^^^^

--
error[SyntaxError]: Expected a semicolon or an implicit semicolon after a statement, but found none
  ┌─ function_decl_err.js:8:7
  │
8 │ yield foo;
  │ ------^^^
  │ │     │
  │ │     An explicit or implicit semicolon is expected here...
  │ ...Which is required to end this statement

--
error[SyntaxError]: Illegal use of `yield` as an identifier in strict mode
   ┌─ function_decl_err.js:11:14
   │
11 │ function foo(yield) {}
   │              ^^^^^

--
function() {}
function foo {}
function {}
function *() {}
async function() {}
async function *() {}
function *foo() {}
yield foo;
function test(): number {}
function foo(await) {}
function foo(yield) {}
