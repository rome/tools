JsModule {
    interpreter_token: missing (optional),
    directives: JsDirectiveList [],
    items: JsModuleItemList [
        JsExpressionStatement {
            expression: JsArrowFunctionExpression {
                async_token: missing (optional),
                type_parameters: missing (optional),
                parameters: JsParameters {
                    l_paren_token: L_PAREN@0..1 "(" [] [],
                    items: JsParameterList [
                        JsUnknownParameter {
                            items: [
                                JS_NUMBER_LITERAL@1..3 "5" [] [Whitespace(" ")],
                                PLUS@3..5 "+" [] [Whitespace(" ")],
                                JS_NUMBER_LITERAL@5..6 "5" [] [],
                            ],
                        },
                    ],
                    r_paren_token: R_PAREN@6..8 ")" [] [Whitespace(" ")],
                },
                return_type: missing (optional),
                fat_arrow_token: FAT_ARROW@8..11 "=>" [] [Whitespace(" ")],
                body: JsFunctionBody {
                    l_curly_token: L_CURLY@11..12 "{" [] [],
                    directives: JsDirectiveList [],
                    statements: JsStatementList [],
                    r_curly_token: R_CURLY@12..13 "}" [] [],
                },
            },
            semicolon_token: missing (optional),
        },
        JsExpressionStatement {
            expression: JsUnknownExpression {
                items: [
                    JsParameters {
                        l_paren_token: L_PAREN@13..15 "(" [Whitespace("\n")] [],
                        items: JsParameterList [
                            JsParameter {
                                binding: JsIdentifierBinding {
                                    name_token: IDENT@15..16 "a" [] [],
                                },
                                type_annotation: missing (optional),
                                initializer: missing (optional),
                            },
                            COMMA@16..18 "," [] [Whitespace(" ")],
                        ],
                        r_paren_token: missing (required),
                    },
                    COMMA@18..19 "," [] [],
                    JsIdentifierExpression {
                        name: JsReferenceIdentifier {
                            value_token: IDENT@19..20 "b" [] [],
                        },
                    },
                ],
            },
            semicolon_token: missing (optional),
        },
        JsUnknownStatement {
            items: [
                R_PAREN@20..22 ")" [] [Whitespace(" ")],
                FAT_ARROW@22..25 "=>" [] [Whitespace(" ")],
            ],
        },
        JsBlockStatement {
            l_curly_token: L_CURLY@25..26 "{" [] [],
            statements: JsStatementList [],
            r_curly_token: R_CURLY@26..27 "}" [] [],
        },
        JsExpressionStatement {
            expression: JsArrowFunctionExpression {
                async_token: missing (optional),
                type_parameters: missing (optional),
                parameters: JsParameters {
                    l_paren_token: L_PAREN@27..29 "(" [Whitespace("\n")] [],
                    items: JsParameterList [
                        JsParameter {
                            binding: JsIdentifierBinding {
                                name_token: IDENT@29..30 "a" [] [],
                            },
                            type_annotation: missing (optional),
                            initializer: missing (optional),
                        },
                        COMMA@30..32 "," [] [Whitespace(" ")],
                        JsParameter {
                            binding: JsIdentifierBinding {
                                name_token: IDENT@32..33 "b" [] [],
                            },
                            type_annotation: missing (optional),
                            initializer: missing (optional),
                        },
                    ],
                    r_paren_token: R_PAREN@33..35 ")" [] [Whitespace(" ")],
                },
                return_type: missing (optional),
                fat_arrow_token: FAT_ARROW@35..37 "=>" [] [],
                body: missing (required),
            },
            semicolon_token: missing (optional),
        },
    ],
    eof_token: EOF@37..38 "" [Whitespace("\n")] [],
}

0: JS_MODULE@0..38
  0: (empty)
  1: JS_DIRECTIVE_LIST@0..0
  2: JS_MODULE_ITEM_LIST@0..37
    0: JS_EXPRESSION_STATEMENT@0..13
      0: JS_ARROW_FUNCTION_EXPRESSION@0..13
        0: (empty)
        1: (empty)
        2: JS_PARAMETERS@0..8
          0: L_PAREN@0..1 "(" [] []
          1: JS_PARAMETER_LIST@1..6
            0: JS_UNKNOWN_PARAMETER@1..6
              0: JS_NUMBER_LITERAL@1..3 "5" [] [Whitespace(" ")]
              1: PLUS@3..5 "+" [] [Whitespace(" ")]
              2: JS_NUMBER_LITERAL@5..6 "5" [] []
          2: R_PAREN@6..8 ")" [] [Whitespace(" ")]
        3: (empty)
        4: FAT_ARROW@8..11 "=>" [] [Whitespace(" ")]
        5: JS_FUNCTION_BODY@11..13
          0: L_CURLY@11..12 "{" [] []
          1: JS_DIRECTIVE_LIST@12..12
          2: JS_STATEMENT_LIST@12..12
          3: R_CURLY@12..13 "}" [] []
      1: (empty)
    1: JS_EXPRESSION_STATEMENT@13..20
      0: JS_UNKNOWN_EXPRESSION@13..20
        0: JS_PARAMETERS@13..18
          0: L_PAREN@13..15 "(" [Whitespace("\n")] []
          1: JS_PARAMETER_LIST@15..18
            0: JS_PARAMETER@15..16
              0: JS_IDENTIFIER_BINDING@15..16
                0: IDENT@15..16 "a" [] []
              1: (empty)
              2: (empty)
            1: COMMA@16..18 "," [] [Whitespace(" ")]
          2: (empty)
        1: COMMA@18..19 "," [] []
        2: JS_IDENTIFIER_EXPRESSION@19..20
          0: JS_REFERENCE_IDENTIFIER@19..20
            0: IDENT@19..20 "b" [] []
      1: (empty)
    2: JS_UNKNOWN_STATEMENT@20..25
      0: R_PAREN@20..22 ")" [] [Whitespace(" ")]
      1: FAT_ARROW@22..25 "=>" [] [Whitespace(" ")]
    3: JS_BLOCK_STATEMENT@25..27
      0: L_CURLY@25..26 "{" [] []
      1: JS_STATEMENT_LIST@26..26
      2: R_CURLY@26..27 "}" [] []
    4: JS_EXPRESSION_STATEMENT@27..37
      0: JS_ARROW_FUNCTION_EXPRESSION@27..37
        0: (empty)
        1: (empty)
        2: JS_PARAMETERS@27..35
          0: L_PAREN@27..29 "(" [Whitespace("\n")] []
          1: JS_PARAMETER_LIST@29..33
            0: JS_PARAMETER@29..30
              0: JS_IDENTIFIER_BINDING@29..30
                0: IDENT@29..30 "a" [] []
              1: (empty)
              2: (empty)
            1: COMMA@30..32 "," [] [Whitespace(" ")]
            2: JS_PARAMETER@32..33
              0: JS_IDENTIFIER_BINDING@32..33
                0: IDENT@32..33 "b" [] []
              1: (empty)
              2: (empty)
          2: R_PAREN@33..35 ")" [] [Whitespace(" ")]
        3: (empty)
        4: FAT_ARROW@35..37 "=>" [] []
        5: (empty)
      1: (empty)
  3: EOF@37..38 "" [Whitespace("\n")] []
--
error[SyntaxError]: expected a parameter but instead found '5 + 5'
  ┌─ paren_or_arrow_expr_invalid_params.js:1:2
  │
1 │ (5 + 5) => {}
  │  ^^^^^ Expected a parameter here

--
error[SyntaxError]: expected a parameter but instead found ','
  ┌─ paren_or_arrow_expr_invalid_params.js:2:5
  │
2 │ (a, ,b) => {}
  │     ^ Expected a parameter here

--
error[SyntaxError]: Expected a semicolon or an implicit semicolon after a statement, but found none
  ┌─ paren_or_arrow_expr_invalid_params.js:2:7
  │
2 │ (a, ,b) => {}
  │ ------^
  │ │     │
  │ │     An explicit or implicit semicolon is expected here...
  │ ...Which is required to end this statement

--
error[SyntaxError]: expected a function body, or an expression but instead found ''
  ┌─ paren_or_arrow_expr_invalid_params.js:4:1
  │
4 │ 
  │ ^ Expected a function body, or an expression here

--
(5 + 5) => {}
(a, ,b) => {}
(a, b) =>
