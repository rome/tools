0: JS_ROOT@0..37
  0: (empty)
  1: LIST@0..0
  2: LIST@0..36
    0: JS_EXPRESSION_STATEMENT@0..11
      0: JS_LOGICAL_EXPRESSION@0..10
        0: JS_REFERENCE_IDENTIFIER_EXPRESSION@0..4
          0: IDENT@0..4 "foo" [] [Whitespace(" ")]
        1: QUESTION2@4..7 "??" [] [Whitespace(" ")]
        2: JS_BINARY_EXPRESSION@7..10
          0: STAR@7..9 "*" [] [Whitespace(" ")]
          1: JS_NUMBER_LITERAL@9..10
            0: JS_NUMBER_LITERAL_TOKEN@9..10 "2" [] []
      1: SEMICOLON@10..11 ";" [] []
    1: JS_EXPRESSION_STATEMENT@11..24
      0: JS_LOGICAL_EXPRESSION@11..23
        0: JS_UNARY_EXPRESSION@11..17
          0: BANG@11..13 "!" [Whitespace("\n")] []
          1: JS_REFERENCE_IDENTIFIER_EXPRESSION@13..17
            0: IDENT@13..17 "foo" [] [Whitespace(" ")]
        1: AMP2@17..20 "&&" [] [Whitespace(" ")]
        2: JS_REFERENCE_IDENTIFIER_EXPRESSION@20..23
          0: IDENT@20..23 "bar" [] []
      1: SEMICOLON@23..24 ";" [] []
    2: JS_EXPRESSION_STATEMENT@24..36
      0: CALL_EXPR@24..36
        0: JS_REFERENCE_IDENTIFIER_EXPRESSION@24..28
          0: IDENT@24..28 "foo" [Whitespace("\n")] []
        1: ARG_LIST@28..36
          0: L_PAREN@28..29 "(" [] []
          1: LIST@29..35
            0: JS_LOGICAL_EXPRESSION@29..35
              0: JS_REFERENCE_IDENTIFIER_EXPRESSION@29..33
                0: IDENT@29..33 "foo" [] [Whitespace(" ")]
              1: PIPE2@33..35 "||" [] []
          2: R_PAREN@35..36 ")" [] []
      1: (empty)
  3: EOF@36..37 "" [Whitespace("\n")] []
--
error[SyntaxError]: Expected an expression for the right hand side of a `??`, but found an operator instead
  ┌─ logical_expressions_err.js:1:8
  │
1 │ foo ?? * 2;
  │     -- ^ But this operator was encountered instead
  │     │   
  │     This operator requires a right hand side value

--
error[SyntaxError]: Expected an expression, but found none
  ┌─ logical_expressions_err.js:3:11
  │
3 │ foo(foo ||)
  │           ^ Expected an expression here

--
foo ?? * 2;
!foo && bar;
foo(foo ||)
