JsModule {
    interpreter_token: missing (optional),
    directives: JsDirectiveList [],
    items: JsModuleItemList [
        JsClassStatement {
            abstract_token: missing (optional),
            class_token: CLASS_KW@0..6 "class" [] [Whitespace(" ")],
            id: JsIdentifierBinding {
                name_token: IDENT@6..22 "AbstractMembers" [] [Whitespace(" ")],
            },
            type_parameters: missing (optional),
            extends_clause: missing (optional),
            implements_clause: missing (optional),
            l_curly_token: L_CURLY@22..23 "{" [] [],
            members: JsClassMemberList [
                JsMethodClassMember {
                    access_modifier: missing (optional),
                    static_token: missing (optional),
                    abstract_token: missing (optional),
                    async_token: missing (optional),
                    star_token: missing (optional),
                    name: JsLiteralMemberName {
                        value: IDENT@23..32 "name" [Newline("\n"), Whitespace("    ")] [],
                    },
                    question_mark_token: missing (required),
                    type_parameters: missing (optional),
                    parameters: JsParameters {
                        l_paren_token: L_PAREN@32..33 "(" [] [],
                        items: JsParameterList [],
                        r_paren_token: R_PAREN@33..34 ")" [] [],
                    },
                    return_type_annotation: TsReturnTypeAnnotation {
                        colon_token: COLON@34..36 ":" [] [Whitespace(" ")],
                        ty: TsStringType {
                            string_token: STRING_KW@36..42 "string" [] [],
                        },
                    },
                    body: missing (required),
                },
                JsEmptyClassMember {
                    semicolon_token: SEMICOLON@42..43 ";" [] [],
                },
            ],
            r_curly_token: R_CURLY@43..45 "}" [Newline("\n")] [],
        },
        JsClassStatement {
            abstract_token: ABSTRACT_KW@45..55 "abstract" [Newline("\n")] [Whitespace(" ")],
            class_token: CLASS_KW@55..61 "class" [] [Whitespace(" ")],
            id: JsIdentifierBinding {
                name_token: IDENT@61..77 "AbstractMembers" [] [Whitespace(" ")],
            },
            type_parameters: missing (optional),
            extends_clause: missing (optional),
            implements_clause: missing (optional),
            l_curly_token: L_CURLY@77..78 "{" [] [],
            members: JsClassMemberList [
                JsMethodClassMember {
                    access_modifier: missing (optional),
                    static_token: missing (optional),
                    abstract_token: ABSTRACT_KW@78..92 "abstract" [Newline("\n"), Whitespace("    ")] [Whitespace(" ")],
                    async_token: missing (optional),
                    star_token: missing (optional),
                    name: JsLiteralMemberName {
                        value: IDENT@92..99 "display" [] [],
                    },
                    question_mark_token: missing (required),
                    type_parameters: missing (optional),
                    parameters: JsParameters {
                        l_paren_token: L_PAREN@99..100 "(" [] [],
                        items: JsParameterList [],
                        r_paren_token: R_PAREN@100..101 ")" [] [],
                    },
                    return_type_annotation: TsReturnTypeAnnotation {
                        colon_token: COLON@101..103 ":" [] [Whitespace(" ")],
                        ty: TsVoidType {
                            void_token: VOID_KW@103..108 "void" [] [Whitespace(" ")],
                        },
                    },
                    body: JsFunctionBody {
                        l_curly_token: L_CURLY@108..110 "{" [] [Whitespace(" ")],
                        directives: JsDirectiveList [],
                        statements: JsStatementList [
                            JsExpressionStatement {
                                expression: JsCallExpression {
                                    callee: JsStaticMemberExpression {
                                        object: JsIdentifierExpression {
                                            name: JsReferenceIdentifier {
                                                value_token: IDENT@110..117 "console" [] [],
                                            },
                                        },
                                        operator: DOT@117..118 "." [] [],
                                        member: JsName {
                                            value_token: IDENT@118..121 "log" [] [],
                                        },
                                    },
                                    optional_chain_token_token: missing (optional),
                                    type_arguments: missing (optional),
                                    arguments: JsCallArguments {
                                        l_paren_token: L_PAREN@121..122 "(" [] [],
                                        args: JsCallArgumentList [
                                            JsStaticMemberExpression {
                                                object: JsThisExpression {
                                                    this_token: THIS_KW@122..126 "this" [] [],
                                                },
                                                operator: DOT@126..127 "." [] [],
                                                member: JsName {
                                                    value_token: IDENT@127..131 "name" [] [],
                                                },
                                            },
                                        ],
                                        r_paren_token: R_PAREN@131..132 ")" [] [],
                                    },
                                },
                                semicolon_token: SEMICOLON@132..134 ";" [] [Whitespace(" ")],
                            },
                        ],
                        r_curly_token: R_CURLY@134..135 "}" [] [],
                    },
                },
                JsGetterClassMember {
                    access_modifier: missing (optional),
                    static_token: missing (optional),
                    abstract_token: ABSTRACT_KW@135..149 "abstract" [Newline("\n"), Whitespace("    ")] [Whitespace(" ")],
                    get_token: GET_KW@149..153 "get" [] [Whitespace(" ")],
                    name: JsLiteralMemberName {
                        value: IDENT@153..160 "my_name" [] [],
                    },
                    l_paren_token: L_PAREN@160..161 "(" [] [],
                    r_paren_token: R_PAREN@161..163 ")" [] [Whitespace(" ")],
                    return_type: missing (optional),
                    body: JsFunctionBody {
                        l_curly_token: L_CURLY@163..165 "{" [] [Whitespace(" ")],
                        directives: JsDirectiveList [],
                        statements: JsStatementList [
                            JsReturnStatement {
                                return_token: RETURN_KW@165..172 "return" [] [Whitespace(" ")],
                                argument: JsStaticMemberExpression {
                                    object: JsThisExpression {
                                        this_token: THIS_KW@172..176 "this" [] [],
                                    },
                                    operator: DOT@176..177 "." [] [],
                                    member: JsName {
                                        value_token: IDENT@177..181 "name" [] [],
                                    },
                                },
                                semicolon_token: SEMICOLON@181..183 ";" [] [Whitespace(" ")],
                            },
                        ],
                        r_curly_token: R_CURLY@183..184 "}" [] [],
                    },
                },
                JsSetterClassMember {
                    access_modifier: missing (optional),
                    static_token: missing (optional),
                    abstract_token: ABSTRACT_KW@184..198 "abstract" [Newline("\n"), Whitespace("    ")] [Whitespace(" ")],
                    set_token: SET_KW@198..202 "set" [] [Whitespace(" ")],
                    name: JsLiteralMemberName {
                        value: IDENT@202..209 "my_name" [] [],
                    },
                    l_paren_token: L_PAREN@209..210 "(" [] [],
                    parameter: JsFormalParameter {
                        binding: JsIdentifierBinding {
                            name_token: IDENT@210..214 "name" [] [],
                        },
                        question_mark_token: missing (optional),
                        type_annotation: missing (optional),
                        initializer: missing (optional),
                    },
                    r_paren_token: R_PAREN@214..216 ")" [] [Whitespace(" ")],
                    body: JsFunctionBody {
                        l_curly_token: L_CURLY@216..218 "{" [] [Whitespace(" ")],
                        directives: JsDirectiveList [],
                        statements: JsStatementList [
                            JsExpressionStatement {
                                expression: JsAssignmentExpression {
                                    left: JsStaticMemberAssignment {
                                        object: JsThisExpression {
                                            this_token: THIS_KW@218..222 "this" [] [],
                                        },
                                        dot_token: DOT@222..223 "." [] [],
                                        member: JsName {
                                            value_token: IDENT@223..228 "name" [] [Whitespace(" ")],
                                        },
                                    },
                                    operator_token: EQ@228..230 "=" [] [Whitespace(" ")],
                                    right: JsIdentifierExpression {
                                        name: JsReferenceIdentifier {
                                            value_token: IDENT@230..234 "name" [] [],
                                        },
                                    },
                                },
                                semicolon_token: SEMICOLON@234..236 ";" [] [Whitespace(" ")],
                            },
                        ],
                        r_curly_token: R_CURLY@236..237 "}" [] [],
                    },
                },
            ],
            r_curly_token: R_CURLY@237..239 "}" [Newline("\n")] [],
        },
    ],
    eof_token: EOF@239..240 "" [Newline("\n")] [],
}

0: JS_MODULE@0..240
  0: (empty)
  1: JS_DIRECTIVE_LIST@0..0
  2: JS_MODULE_ITEM_LIST@0..239
    0: JS_CLASS_STATEMENT@0..45
      0: (empty)
      1: CLASS_KW@0..6 "class" [] [Whitespace(" ")]
      2: JS_IDENTIFIER_BINDING@6..22
        0: IDENT@6..22 "AbstractMembers" [] [Whitespace(" ")]
      3: (empty)
      4: (empty)
      5: (empty)
      6: L_CURLY@22..23 "{" [] []
      7: JS_CLASS_MEMBER_LIST@23..43
        0: JS_METHOD_CLASS_MEMBER@23..42
          0: (empty)
          1: (empty)
          2: (empty)
          3: (empty)
          4: (empty)
          5: JS_LITERAL_MEMBER_NAME@23..32
            0: IDENT@23..32 "name" [Newline("\n"), Whitespace("    ")] []
          6: (empty)
          7: (empty)
          8: JS_PARAMETERS@32..34
            0: L_PAREN@32..33 "(" [] []
            1: JS_PARAMETER_LIST@33..33
            2: R_PAREN@33..34 ")" [] []
          9: TS_RETURN_TYPE_ANNOTATION@34..42
            0: COLON@34..36 ":" [] [Whitespace(" ")]
            1: TS_STRING_TYPE@36..42
              0: STRING_KW@36..42 "string" [] []
          10: (empty)
        1: JS_EMPTY_CLASS_MEMBER@42..43
          0: SEMICOLON@42..43 ";" [] []
      8: R_CURLY@43..45 "}" [Newline("\n")] []
    1: JS_CLASS_STATEMENT@45..239
      0: ABSTRACT_KW@45..55 "abstract" [Newline("\n")] [Whitespace(" ")]
      1: CLASS_KW@55..61 "class" [] [Whitespace(" ")]
      2: JS_IDENTIFIER_BINDING@61..77
        0: IDENT@61..77 "AbstractMembers" [] [Whitespace(" ")]
      3: (empty)
      4: (empty)
      5: (empty)
      6: L_CURLY@77..78 "{" [] []
      7: JS_CLASS_MEMBER_LIST@78..237
        0: JS_METHOD_CLASS_MEMBER@78..135
          0: (empty)
          1: (empty)
          2: ABSTRACT_KW@78..92 "abstract" [Newline("\n"), Whitespace("    ")] [Whitespace(" ")]
          3: (empty)
          4: (empty)
          5: JS_LITERAL_MEMBER_NAME@92..99
            0: IDENT@92..99 "display" [] []
          6: (empty)
          7: (empty)
          8: JS_PARAMETERS@99..101
            0: L_PAREN@99..100 "(" [] []
            1: JS_PARAMETER_LIST@100..100
            2: R_PAREN@100..101 ")" [] []
          9: TS_RETURN_TYPE_ANNOTATION@101..108
            0: COLON@101..103 ":" [] [Whitespace(" ")]
            1: TS_VOID_TYPE@103..108
              0: VOID_KW@103..108 "void" [] [Whitespace(" ")]
          10: JS_FUNCTION_BODY@108..135
            0: L_CURLY@108..110 "{" [] [Whitespace(" ")]
            1: JS_DIRECTIVE_LIST@110..110
            2: JS_STATEMENT_LIST@110..134
              0: JS_EXPRESSION_STATEMENT@110..134
                0: JS_CALL_EXPRESSION@110..132
                  0: JS_STATIC_MEMBER_EXPRESSION@110..121
                    0: JS_IDENTIFIER_EXPRESSION@110..117
                      0: JS_REFERENCE_IDENTIFIER@110..117
                        0: IDENT@110..117 "console" [] []
                    1: DOT@117..118 "." [] []
                    2: JS_NAME@118..121
                      0: IDENT@118..121 "log" [] []
                  1: (empty)
                  2: (empty)
                  3: JS_CALL_ARGUMENTS@121..132
                    0: L_PAREN@121..122 "(" [] []
                    1: JS_CALL_ARGUMENT_LIST@122..131
                      0: JS_STATIC_MEMBER_EXPRESSION@122..131
                        0: JS_THIS_EXPRESSION@122..126
                          0: THIS_KW@122..126 "this" [] []
                        1: DOT@126..127 "." [] []
                        2: JS_NAME@127..131
                          0: IDENT@127..131 "name" [] []
                    2: R_PAREN@131..132 ")" [] []
                1: SEMICOLON@132..134 ";" [] [Whitespace(" ")]
            3: R_CURLY@134..135 "}" [] []
        1: JS_GETTER_CLASS_MEMBER@135..184
          0: (empty)
          1: (empty)
          2: ABSTRACT_KW@135..149 "abstract" [Newline("\n"), Whitespace("    ")] [Whitespace(" ")]
          3: GET_KW@149..153 "get" [] [Whitespace(" ")]
          4: JS_LITERAL_MEMBER_NAME@153..160
            0: IDENT@153..160 "my_name" [] []
          5: L_PAREN@160..161 "(" [] []
          6: R_PAREN@161..163 ")" [] [Whitespace(" ")]
          7: (empty)
          8: JS_FUNCTION_BODY@163..184
            0: L_CURLY@163..165 "{" [] [Whitespace(" ")]
            1: JS_DIRECTIVE_LIST@165..165
            2: JS_STATEMENT_LIST@165..183
              0: JS_RETURN_STATEMENT@165..183
                0: RETURN_KW@165..172 "return" [] [Whitespace(" ")]
                1: JS_STATIC_MEMBER_EXPRESSION@172..181
                  0: JS_THIS_EXPRESSION@172..176
                    0: THIS_KW@172..176 "this" [] []
                  1: DOT@176..177 "." [] []
                  2: JS_NAME@177..181
                    0: IDENT@177..181 "name" [] []
                2: SEMICOLON@181..183 ";" [] [Whitespace(" ")]
            3: R_CURLY@183..184 "}" [] []
        2: JS_SETTER_CLASS_MEMBER@184..237
          0: (empty)
          1: (empty)
          2: ABSTRACT_KW@184..198 "abstract" [Newline("\n"), Whitespace("    ")] [Whitespace(" ")]
          3: SET_KW@198..202 "set" [] [Whitespace(" ")]
          4: JS_LITERAL_MEMBER_NAME@202..209
            0: IDENT@202..209 "my_name" [] []
          5: L_PAREN@209..210 "(" [] []
          6: JS_FORMAL_PARAMETER@210..214
            0: JS_IDENTIFIER_BINDING@210..214
              0: IDENT@210..214 "name" [] []
            1: (empty)
            2: (empty)
            3: (empty)
          7: R_PAREN@214..216 ")" [] [Whitespace(" ")]
          8: JS_FUNCTION_BODY@216..237
            0: L_CURLY@216..218 "{" [] [Whitespace(" ")]
            1: JS_DIRECTIVE_LIST@218..218
            2: JS_STATEMENT_LIST@218..236
              0: JS_EXPRESSION_STATEMENT@218..236
                0: JS_ASSIGNMENT_EXPRESSION@218..234
                  0: JS_STATIC_MEMBER_ASSIGNMENT@218..228
                    0: JS_THIS_EXPRESSION@218..222
                      0: THIS_KW@218..222 "this" [] []
                    1: DOT@222..223 "." [] []
                    2: JS_NAME@223..228
                      0: IDENT@223..228 "name" [] [Whitespace(" ")]
                  1: EQ@228..230 "=" [] [Whitespace(" ")]
                  2: JS_IDENTIFIER_EXPRESSION@230..234
                    0: JS_REFERENCE_IDENTIFIER@230..234
                      0: IDENT@230..234 "name" [] []
                1: SEMICOLON@234..236 ";" [] [Whitespace(" ")]
            3: R_CURLY@236..237 "}" [] []
      8: R_CURLY@237..239 "}" [Newline("\n")] []
  3: EOF@239..240 "" [Newline("\n")] []
--
error[SyntaxError]: expected a class method body but instead found ';'
  ┌─ typescript_class_member_body.ts:2:19
  │
2 │     name(): string;
  │                   ^ Expected a class method body here

--
error[SyntaxError]: abstract members should not have a body
  ┌─ typescript_class_member_body.ts:5:30
  │
5 │     abstract display(): void { console.log(this.name); }
  │                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ unexpected

--
error[SyntaxError]: abstract members should not have a body
  ┌─ typescript_class_member_body.ts:6:28
  │
6 │     abstract get my_name() { return this.name; }
  │                            ^^^^^^^^^^^^^^^^^^^^^ unexpected

--
error[SyntaxError]: abstract members should not have a body
  ┌─ typescript_class_member_body.ts:7:32
  │
7 │     abstract set my_name(name) { this.name = name; }
  │                                ^^^^^^^^^^^^^^^^^^^^^ unexpected

--
class AbstractMembers {
    name(): string;
}
abstract class AbstractMembers {
    abstract display(): void { console.log(this.name); }
    abstract get my_name() { return this.name; }
    abstract set my_name(name) { this.name = name; }
}
