JS_ROOT@0..83
  LIST@0..0
  LIST@0..83
    JS_EXPRESSION_STATEMENT@0..30
      JS_ARROW_FUNCTION_EXPRESSION@0..30
        ASYNC_KW@0..6 "async "
        JS_PARAMETER_LIST@6..9
          L_PAREN@6..7 "("
          LIST@7..7
          R_PAREN@7..9 ") "
        FAT_ARROW@9..12 "=> "
        JS_FUNCTION_BODY@12..30
          L_CURLY@12..14 "{ "
          LIST@14..14
          LIST@14..29
            JS_VARIABLE_DECLARATION_STATEMENT@14..29
              JS_VARIABLE_DECLARATION@14..27
                LET_KW@14..18 "let "
                LIST@18..27
                  JS_VARIABLE_DECLARATOR@18..27
                    SINGLE_PATTERN@18..24
                      NAME@18..24
                        IDENT@18..24 "await "
                    JS_EQUAL_VALUE_CLAUSE@24..27
                      EQ@24..26 "= "
                      JS_NUMBER_LITERAL@26..27
                        JS_NUMBER_LITERAL_TOKEN@26..27 "5"
              SEMICOLON@27..29 "; "
          R_CURLY@29..30 "}"
    JS_FUNCTION_DECLARATION@30..68
      FUNCTION_KW@30..40 "\nfunction "
      STAR@40..41 "*"
      JS_IDENTIFIER_BINDING@41..44
        IDENT@41..44 "foo"
      JS_PARAMETER_LIST@44..47
        L_PAREN@44..45 "("
        LIST@45..45
        R_PAREN@45..47 ") "
      JS_FUNCTION_BODY@47..68
        L_CURLY@47..48 "{"
        LIST@48..48
        LIST@48..66
          JS_VARIABLE_DECLARATION_STATEMENT@48..66
            JS_VARIABLE_DECLARATION@48..65
              LET_KW@48..56 "\n   let "
              LIST@56..65
                JS_VARIABLE_DECLARATOR@56..65
                  SINGLE_PATTERN@56..62
                    NAME@56..62
                      IDENT@56..62 "yield "
                  JS_EQUAL_VALUE_CLAUSE@62..65
                    EQ@62..64 "= "
                    JS_NUMBER_LITERAL@64..65
                      JS_NUMBER_LITERAL_TOKEN@64..65 "5"
            SEMICOLON@65..66 ";"
        R_CURLY@66..68 "\n}"
    JS_VARIABLE_DECLARATION_STATEMENT@68..83
      JS_VARIABLE_DECLARATION@68..81
        LET_KW@68..73 "\nlet "
        LIST@73..81
          JS_VARIABLE_DECLARATOR@73..81
            SINGLE_PATTERN@73..78
              NAME@73..78
                IDENT@73..78 "eval "
            JS_EQUAL_VALUE_CLAUSE@78..81
              EQ@78..80 "= "
              JS_NUMBER_LITERAL@80..81
                JS_NUMBER_LITERAL_TOKEN@80..81 "5"
      SEMICOLON@81..83 ";\n"
--
error[SyntaxError]: Illegal use of `await` as an identifier in an async context
  ┌─ binding_identifier_invalid.js:1:19
  │
1 │ async () => { let await = 5; }
  │                   ^^^^^

--
error[SyntaxError]: Illegal use of `yield` as an identifier in generator function
  ┌─ binding_identifier_invalid.js:3:8
  │
3 │    let yield = 5;
  │        ^^^^^

--
error[SyntaxError]: Illegal use of `yield` as an identifier in strict mode
  ┌─ binding_identifier_invalid.js:3:8
  │
3 │    let yield = 5;
  │        ^^^^^

--
error[SyntaxError]: Illegal use of `eval` as an identifier in strict mode
  ┌─ binding_identifier_invalid.js:5:5
  │
5 │ let eval = 5;
  │     ^^^^

--
async () => { let await = 5; }
function *foo() {
   let yield = 5;
}
let eval = 5;
