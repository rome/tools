JS_ROOT@0..83
  LIST@0..0
  LIST@0..82
    JS_EXPRESSION_STATEMENT@0..30
      ARROW_EXPR@0..30
        ASYNC_KW@0..5 "async"
        WHITESPACE@5..6 " "
        JS_PARAMETER_LIST@6..8
          L_PAREN@6..7 "("
          LIST@7..7
          R_PAREN@7..8 ")"
        WHITESPACE@8..9 " "
        FAT_ARROW@9..11 "=>"
        WHITESPACE@11..12 " "
        JS_FUNCTION_BODY@12..30
          L_CURLY@12..13 "{"
          WHITESPACE@13..14 " "
          LIST@14..14
          LIST@14..28
            JS_VARIABLE_DECLARATION_STATEMENT@14..28
              JS_VARIABLE_DECLARATION@14..27
                LET_KW@14..17 "let"
                WHITESPACE@17..18 " "
                LIST@18..27
                  JS_VARIABLE_DECLARATOR@18..27
                    SINGLE_PATTERN@18..23
                      NAME@18..23
                        IDENT@18..23 "await"
                    WHITESPACE@23..24 " "
                    JS_EQUAL_VALUE_CLAUSE@24..27
                      EQ@24..25 "="
                      WHITESPACE@25..26 " "
                      JS_NUMBER_LITERAL@26..27
                        JS_NUMBER_LITERAL_TOKEN@26..27 "5"
              SEMICOLON@27..28 ";"
          WHITESPACE@28..29 " "
          R_CURLY@29..30 "}"
    WHITESPACE@30..31 "\n"
    JS_FUNCTION_DECLARATION@31..68
      FUNCTION_KW@31..39 "function"
      WHITESPACE@39..40 " "
      STAR@40..41 "*"
      JS_IDENTIFIER_BINDING@41..44
        IDENT@41..44 "foo"
      JS_PARAMETER_LIST@44..46
        L_PAREN@44..45 "("
        LIST@45..45
        R_PAREN@45..46 ")"
      WHITESPACE@46..47 " "
      JS_FUNCTION_BODY@47..68
        L_CURLY@47..48 "{"
        WHITESPACE@48..52 "\n   "
        LIST@52..52
        LIST@52..66
          JS_VARIABLE_DECLARATION_STATEMENT@52..66
            JS_VARIABLE_DECLARATION@52..65
              LET_KW@52..55 "let"
              WHITESPACE@55..56 " "
              LIST@56..65
                JS_VARIABLE_DECLARATOR@56..65
                  SINGLE_PATTERN@56..61
                    NAME@56..61
                      IDENT@56..61 "yield"
                  WHITESPACE@61..62 " "
                  JS_EQUAL_VALUE_CLAUSE@62..65
                    EQ@62..63 "="
                    WHITESPACE@63..64 " "
                    JS_NUMBER_LITERAL@64..65
                      JS_NUMBER_LITERAL_TOKEN@64..65 "5"
            SEMICOLON@65..66 ";"
        WHITESPACE@66..67 "\n"
        R_CURLY@67..68 "}"
    WHITESPACE@68..69 "\n"
    JS_VARIABLE_DECLARATION_STATEMENT@69..82
      JS_VARIABLE_DECLARATION@69..81
        LET_KW@69..72 "let"
        WHITESPACE@72..73 " "
        LIST@73..81
          JS_VARIABLE_DECLARATOR@73..81
            SINGLE_PATTERN@73..77
              NAME@73..77
                IDENT@73..77 "eval"
            WHITESPACE@77..78 " "
            JS_EQUAL_VALUE_CLAUSE@78..81
              EQ@78..79 "="
              WHITESPACE@79..80 " "
              JS_NUMBER_LITERAL@80..81
                JS_NUMBER_LITERAL_TOKEN@80..81 "5"
      SEMICOLON@81..82 ";"
  WHITESPACE@82..83 "\n"
--
error[SyntaxError]: Illegal use of `await` as an identifier in an async context
  ┌─ binding_identifier_invalid.js:1:19
  │
1 │ async () => { let await = 5; }
  │                   ^^^^^

--
error[SyntaxError]: Illegal use of `yield` as an identifier in generator function
  ┌─ binding_identifier_invalid.js:3:8
  │
3 │    let yield = 5;
  │        ^^^^^

--
error[SyntaxError]: Illegal use of `yield` as an identifier in strict mode
  ┌─ binding_identifier_invalid.js:3:8
  │
3 │    let yield = 5;
  │        ^^^^^

--
error[SyntaxError]: Illegal use of `eval` as an identifier in strict mode
  ┌─ binding_identifier_invalid.js:5:5
  │
5 │ let eval = 5;
  │     ^^^^

--
async () => { let await = 5; }
function *foo() {
   let yield = 5;
}
let eval = 5;
