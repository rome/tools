<<<<<<< HEAD
JS_MODULE@0..83
=======
MODULE@0..82
>>>>>>> 56d750195 (trim format_raw when formatter finds an error)
  LIST@0..82
    JS_EXPRESSION_STATEMENT@0..30
      ARROW_EXPR@0..30
        None ASYNC_KW@0..5 "async" Whitespace(1)
        PARAMETER_LIST@6..9
          None L_PAREN@6..7 "(" None
          LIST@7..7
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          R_PAREN@7..8 ")"
        WHITESPACE@8..9 " "
        FAT_ARROW@9..11 "=>"
        WHITESPACE@11..12 " "
        JS_BLOCK_STATEMENT@12..30
          L_CURLY@12..13 "{"
          WHITESPACE@13..14 " "
          LIST@14..28
            VAR_DECL@14..28
              IDENT@14..17 "let"
              WHITESPACE@17..18 " "
=======
           R_PAREN@7..9 ")" " "
         FAT_ARROW@9..12 "=>" " "
=======
          None R_PAREN@7..9 ")" Whitespace(1)
        None FAT_ARROW@9..12 "=>" Whitespace(1)
>>>>>>> 03257ad46 (greentoken slice contains everything from first leading to last trailing trivia)
=======
          None R_PAREN@7..8 ")" Whitespace(1)
        None FAT_ARROW@9..11 "=>" Whitespace(1)
>>>>>>> c96756449 (fixing text and text_with_trivia and ranges)
        BLOCK_STMT@12..30
          None L_CURLY@12..13 "{" Whitespace(1)
          LIST@14..29
            VAR_DECL@14..29
<<<<<<< HEAD
<<<<<<< HEAD
               IDENT@14..18 "let" " "
>>>>>>> 56d750195 (trim format_raw when formatter finds an error)
=======
              None IDENT@14..18 "let" Whitespace(1)
>>>>>>> 03257ad46 (greentoken slice contains everything from first leading to last trailing trivia)
=======
              None IDENT@14..17 "let" Whitespace(1)
>>>>>>> c96756449 (fixing text and text_with_trivia and ranges)
              LIST@18..27
                DECLARATOR@18..27
                  SINGLE_PATTERN@18..24
                    NAME@18..24
                      None IDENT@18..23 "await" Whitespace(1)
                  None EQ@24..25 "=" Whitespace(1)
                  LITERAL@26..27
                    None NUMBER@26..27 "5" None
              None SEMICOLON@27..28 ";" Whitespace(1)
          None R_CURLY@29..30 "}" None
    FN_DECL@30..68
      Whitespace(1) FUNCTION_KW@31..39 "function" Whitespace(1)
      None STAR@40..41 "*" None
      NAME@41..44
        None IDENT@41..44 "foo" None
      PARAMETER_LIST@44..47
        None L_PAREN@44..45 "(" None
        LIST@45..45
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        R_PAREN@45..46 ")"
      WHITESPACE@46..47 " "
      JS_BLOCK_STATEMENT@47..68
        L_CURLY@47..48 "{"
        WHITESPACE@48..52 "\n   "
        LIST@52..66
          VAR_DECL@52..66
            IDENT@52..55 "let"
            WHITESPACE@55..56 " "
=======
         R_PAREN@45..47 ")" " "
=======
        None R_PAREN@45..47 ")" Whitespace(1)
>>>>>>> 03257ad46 (greentoken slice contains everything from first leading to last trailing trivia)
=======
        None R_PAREN@45..46 ")" Whitespace(1)
>>>>>>> c96756449 (fixing text and text_with_trivia and ranges)
      BLOCK_STMT@47..68
        None L_CURLY@47..48 "{" None
        LIST@48..66
          VAR_DECL@48..66
<<<<<<< HEAD
<<<<<<< HEAD
            "\n   " IDENT@48..56 "let" " "
>>>>>>> 56d750195 (trim format_raw when formatter finds an error)
=======
            Whitespace(4) IDENT@48..56 "let" Whitespace(1)
>>>>>>> 03257ad46 (greentoken slice contains everything from first leading to last trailing trivia)
=======
            Whitespace(4) IDENT@52..55 "let" Whitespace(1)
>>>>>>> c96756449 (fixing text and text_with_trivia and ranges)
            LIST@56..65
              DECLARATOR@56..65
                SINGLE_PATTERN@56..62
                  NAME@56..62
                    None IDENT@56..61 "yield" Whitespace(1)
                None EQ@62..63 "=" Whitespace(1)
                LITERAL@64..65
                  None NUMBER@64..65 "5" None
            None SEMICOLON@65..66 ";" None
        Whitespace(1) R_CURLY@67..68 "}" None
    VAR_DECL@68..82
      Whitespace(1) IDENT@69..72 "let" Whitespace(1)
      LIST@73..81
        DECLARATOR@73..81
          SINGLE_PATTERN@73..78
            NAME@73..78
              None IDENT@73..77 "eval" Whitespace(1)
          None EQ@78..79 "=" Whitespace(1)
          LITERAL@80..81
            None NUMBER@80..81 "5" None
      None SEMICOLON@81..82 ";" None
--
error[SyntaxError]: Illegal use of `await` as an identifier in an async context
  ┌─ binding_identifier_invalid.js:1:19
  │
1 │ async () => { let await = 5; }
  │                   ^^^^^

--
error[SyntaxError]: Illegal use of `yield` as an identifier in generator function
  ┌─ binding_identifier_invalid.js:3:8
  │
3 │    let yield = 5;
  │        ^^^^^

--
error[SyntaxError]: Illegal use of `yield` as an identifier in strict mode
  ┌─ binding_identifier_invalid.js:3:8
  │
3 │    let yield = 5;
  │        ^^^^^

--
error[SyntaxError]: Illegal use of `eval` as an identifier in strict mode
  ┌─ binding_identifier_invalid.js:5:5
  │
5 │ let eval = 5;
  │     ^^^^

--
async () => { let await = 5; }
function *foo() {
   let yield = 5;
}
let eval = 5;
