JS_ROOT@0..93
  LIST@0..0
  LIST@0..92
    JS_VARIABLE_DECLARATION_STATEMENT@0..31
      JS_VARIABLE_DECLARATION@0..30
        LET_KW@0..3 "let"
        WHITESPACE@3..4 " "
        LIST@4..30
          JS_VARIABLE_DECLARATOR@4..30
            OBJECT_PATTERN@4..12
              L_CURLY@4..5 "{"
              WHITESPACE@5..6 " "
              LIST@6..10
                JS_UNKNOWN_BINDING@6..10
                  JS_UNKNOWN_BINDING@6..10
                    IDENT@6..10 "eval"
              WHITESPACE@10..11 " "
              R_CURLY@11..12 "}"
            WHITESPACE@12..13 " "
            JS_EQUAL_VALUE_CLAUSE@13..30
              EQ@13..14 "="
              WHITESPACE@14..15 " "
              JS_OBJECT_EXPRESSION@15..30
                L_CURLY@15..16 "{"
                WHITESPACE@16..17 " "
                LIST@17..28
                  JS_PROPERTY_OBJECT_MEMBER@17..28
                    JS_LITERAL_MEMBER_NAME@17..21
                      IDENT@17..21 "eval"
                    COLON@21..22 ":"
                    WHITESPACE@22..23 " "
                    JS_STRING_LITERAL@23..28
                      JS_STRING_LITERAL_TOKEN@23..28 "\"foo\""
                WHITESPACE@28..29 " "
                R_CURLY@29..30 "}"
      SEMICOLON@30..31 ";"
    WHITESPACE@31..32 "\n"
    JS_VARIABLE_DECLARATION_STATEMENT@32..63
      JS_VARIABLE_DECLARATION@32..62
        LET_KW@32..35 "let"
        WHITESPACE@35..36 " "
        LIST@36..62
          JS_VARIABLE_DECLARATOR@36..62
            OBJECT_PATTERN@36..44
              L_CURLY@36..37 "{"
              WHITESPACE@37..38 " "
              LIST@38..42
                JS_UNKNOWN_BINDING@38..39
                  JS_NUMBER_LITERAL@38..39
                    JS_NUMBER_LITERAL_TOKEN@38..39 "5"
                COMMA@39..40 ","
                WHITESPACE@40..41 " "
                JS_UNKNOWN_BINDING@41..42
                  JS_NUMBER_LITERAL@41..42
                    JS_NUMBER_LITERAL_TOKEN@41..42 "6"
              WHITESPACE@42..43 " "
              R_CURLY@43..44 "}"
            WHITESPACE@44..45 " "
            JS_EQUAL_VALUE_CLAUSE@45..62
              EQ@45..46 "="
              WHITESPACE@46..47 " "
              JS_OBJECT_EXPRESSION@47..62
                L_CURLY@47..48 "{"
                WHITESPACE@48..49 " "
                LIST@49..60
                  JS_PROPERTY_OBJECT_MEMBER@49..60
                    JS_LITERAL_MEMBER_NAME@49..53
                      IDENT@49..53 "eval"
                    COLON@53..54 ":"
                    WHITESPACE@54..55 " "
                    JS_STRING_LITERAL@55..60
                      JS_STRING_LITERAL_TOKEN@55..60 "\"foo\""
                WHITESPACE@60..61 " "
                R_CURLY@61..62 "}"
      SEMICOLON@62..63 ";"
    WHITESPACE@63..64 "\n"
    JS_VARIABLE_DECLARATION_STATEMENT@64..92
      JS_VARIABLE_DECLARATION@64..91
        LET_KW@64..67 "let"
        WHITESPACE@67..68 " "
        LIST@68..91
          JS_VARIABLE_DECLARATOR@68..91
            OBJECT_PATTERN@68..86
              L_CURLY@68..69 "{"
              WHITESPACE@69..70 " "
              LIST@70..84
                KEY_VALUE_PATTERN@70..80
                  NAME@70..77
                    IDENT@70..77 "default"
                  COLON@77..78 ":"
                  WHITESPACE@78..79 " "
                  JS_UNKNOWN_PATTERN@79..80
                    COMMA@79..80 ","
                WHITESPACE@80..81 " "
                SINGLE_PATTERN@81..84
                  NAME@81..84
                    IDENT@81..84 "bar"
              WHITESPACE@84..85 " "
              R_CURLY@85..86 "}"
            WHITESPACE@86..87 " "
            JS_EQUAL_VALUE_CLAUSE@87..91
              EQ@87..88 "="
              WHITESPACE@88..89 " "
              JS_OBJECT_EXPRESSION@89..91
                L_CURLY@89..90 "{"
                LIST@90..90
                R_CURLY@90..91 "}"
      SEMICOLON@91..92 ";"
  WHITESPACE@92..93 "\n"
--
error[SyntaxError]: Illegal use of `eval` as an identifier in strict mode
  ┌─ illigal_object_pattern.js:1:7
  │
1 │ let { eval } = { eval: "foo" };
  │       ^^^^

--
error[SyntaxError]: Expected an identifier for a pattern, but found none
  ┌─ illigal_object_pattern.js:1:7
  │
1 │ let { eval } = { eval: "foo" };
  │       ^^^^

--
error[SyntaxError]: Expected an identifier for a pattern, but found none
  ┌─ illigal_object_pattern.js:2:7
  │
2 │ let { 5, 6 } = { eval: "foo" };
  │       ^

--
error[SyntaxError]: Expected an identifier for a pattern, but found none
  ┌─ illigal_object_pattern.js:2:10
  │
2 │ let { 5, 6 } = { eval: "foo" };
  │          ^

--
error[SyntaxError]: Expected an identifier or pattern, but found none
  ┌─ illigal_object_pattern.js:3:16
  │
3 │ let { default: , bar } = {};
  │                ^

--
error[SyntaxError]: expected `,` but instead found `bar`
  ┌─ illigal_object_pattern.js:3:18
  │
3 │ let { default: , bar } = {};
  │                  ^^^ unexpected

--
let { eval } = { eval: "foo" };
let { 5, 6 } = { eval: "foo" };
let { default: , bar } = {};
