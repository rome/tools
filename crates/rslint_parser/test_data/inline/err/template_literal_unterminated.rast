JsModule {
    interpreter_token: missing (optional),
    directives: [],
    items: [
        JsVariableDeclarationStatement {
            declaration: JsVariableDeclaration {
                kind_token: LET_KW@0..4 "let" [] [Whitespace(" ")],
                declarators: [
                    JsVariableDeclarator {
                        id: JsIdentifierBinding {
                            name_token: IDENT@4..6 "a" [] [Whitespace(" ")],
                        },
                        init: JsEqualValueClause {
                            eq_token: EQ@6..8 "=" [] [Whitespace(" ")],
                            expression: Template {
                                backtick_token: BACKTICK@8..9 "`" [] [],
                            },
                        },
                    },
                ],
            },
            semicolon_token: missing (optional),
        },
    ],
}

0: JS_MODULE@0..20
  0: (empty)
  1: LIST@0..0
  2: LIST@0..20
    0: JS_VARIABLE_DECLARATION_STATEMENT@0..20
      0: JS_VARIABLE_DECLARATION@0..20
        0: LET_KW@0..4 "let" [] [Whitespace(" ")]
        1: LIST@4..20
          0: JS_VARIABLE_DECLARATOR@4..20
            0: JS_IDENTIFIER_BINDING@4..6
              0: IDENT@4..6 "a" [] [Whitespace(" ")]
            1: JS_EQUAL_VALUE_CLAUSE@6..20
              0: EQ@6..8 "=" [] [Whitespace(" ")]
              1: TEMPLATE@8..20
                0: BACKTICK@8..9 "`" [] []
                1: LIST@9..20
                  0: TEMPLATE_ELEMENT@9..15
                    0: DOLLARCURLY@9..11 "${" [] []
                    1: JS_IDENTIFIER_EXPRESSION@11..14
                      0: JS_REFERENCE_IDENTIFIER@11..14
                        0: IDENT@11..14 "foo" [] []
                    2: R_CURLY@14..15 "}" [] []
                  1: TEMPLATE_CHUNK@15..20 " bar\n" [] []
      1: (empty)
  3: EOF@20..20 "" [] []
--
error: unterminated template literal
  ┌─ template_literal_unterminated.js:2:1
  │
2 │ 
  │ ^

--
let a = `${foo} bar
