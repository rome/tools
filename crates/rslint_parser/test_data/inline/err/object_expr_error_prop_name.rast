JsModule {
    interpreter_token: missing (optional),
    directives: [],
    items: [
        JsVariableStatement {
            declaration_list: JsVariableDeclarationList {
                kind_token: LET_KW@0..4 "let" [] [Whitespace(" ")],
                declarations: [
                    JsVariableDeclaration {
                        id: JsIdentifierBinding {
                            name_token: IDENT@4..6 "a" [] [Whitespace(" ")],
                        },
                        excl_token: missing (optional),
                        type_annotation: missing (optional),
                        initializer: JsInitializerClause {
                            eq_token: EQ@6..8 "=" [] [Whitespace(" ")],
                            expression: JsObjectExpression {
                                l_curly_token: L_CURLY@8..10 "{" [] [Whitespace(" ")],
                                members: [
                                    JsPropertyObjectMember {
                                        name: missing (required),
                                        colon_token: COLON@17..19 ":" [] [Whitespace(" ")],
                                        value: JsRegexLiteralExpression {
                                            value_token: JS_REGEX_LITERAL@19..25 "/foo/" [] [Whitespace(" ")],
                                        },
                                    },
                                ],
                                r_curly_token: R_CURLY@25..26 "}" [] [],
                            },
                        },
                    },
                ],
            },
            semicolon_token: missing (optional),
        },
        JsVariableStatement {
            declaration_list: JsVariableDeclarationList {
                kind_token: LET_KW@26..31 "let" [Whitespace("\n")] [Whitespace(" ")],
                declarations: [
                    JsVariableDeclaration {
                        id: JsIdentifierBinding {
                            name_token: IDENT@31..33 "a" [] [Whitespace(" ")],
                        },
                        excl_token: missing (optional),
                        type_annotation: missing (optional),
                        initializer: JsInitializerClause {
                            eq_token: EQ@33..35 "=" [] [Whitespace(" ")],
                            expression: JsObjectExpression {
                                l_curly_token: L_CURLY@35..36 "{" [] [],
                                members: [
                                    JsUnknownMember {
                                        items: [
                                            L_CURLY@36..37 "{" [] [],
                                        ],
                                    },
                                ],
                                r_curly_token: R_CURLY@37..38 "}" [] [],
                            },
                        },
                    },
                ],
            },
            semicolon_token: missing (optional),
        },
        JsUnknownStatement {
            items: [
                R_CURLY@38..39 "}" [] [],
            ],
        },
    ],
    eof_token: EOF@39..40 "" [Whitespace("\n")] [],
}

0: JS_MODULE@0..40
  0: (empty)
  1: LIST@0..0
  2: LIST@0..39
    0: JS_VARIABLE_STATEMENT@0..26
      0: JS_VARIABLE_DECLARATION_LIST@0..26
        0: LET_KW@0..4 "let" [] [Whitespace(" ")]
        1: LIST@4..26
          0: JS_VARIABLE_DECLARATION@4..26
            0: JS_IDENTIFIER_BINDING@4..6
              0: IDENT@4..6 "a" [] [Whitespace(" ")]
            1: (empty)
            2: (empty)
            3: JS_INITIALIZER_CLAUSE@6..26
              0: EQ@6..8 "=" [] [Whitespace(" ")]
              1: JS_OBJECT_EXPRESSION@8..26
                0: L_CURLY@8..10 "{" [] [Whitespace(" ")]
                1: LIST@10..25
                  0: JS_PROPERTY_OBJECT_MEMBER@10..25
                    0: (empty)
                    1: ERROR@10..17
                      0: JS_REGEX_LITERAL@10..17 "/: 6, /" [] []
                    2: COLON@17..19 ":" [] [Whitespace(" ")]
                    3: JS_REGEX_LITERAL_EXPRESSION@19..25
                      0: JS_REGEX_LITERAL@19..25 "/foo/" [] [Whitespace(" ")]
                2: R_CURLY@25..26 "}" [] []
      1: (empty)
    1: JS_VARIABLE_STATEMENT@26..38
      0: JS_VARIABLE_DECLARATION_LIST@26..38
        0: LET_KW@26..31 "let" [Whitespace("\n")] [Whitespace(" ")]
        1: LIST@31..38
          0: JS_VARIABLE_DECLARATION@31..38
            0: JS_IDENTIFIER_BINDING@31..33
              0: IDENT@31..33 "a" [] [Whitespace(" ")]
            1: (empty)
            2: (empty)
            3: JS_INITIALIZER_CLAUSE@33..38
              0: EQ@33..35 "=" [] [Whitespace(" ")]
              1: JS_OBJECT_EXPRESSION@35..38
                0: L_CURLY@35..36 "{" [] []
                1: LIST@36..37
                  0: JS_UNKNOWN_MEMBER@36..37
                    0: L_CURLY@36..37 "{" [] []
                2: R_CURLY@37..38 "}" [] []
      1: (empty)
    2: JS_UNKNOWN_STATEMENT@38..39
      0: R_CURLY@38..39 "}" [] []
  3: EOF@39..40 "" [Whitespace("\n")] []
--
error[SyntaxError]: expected a property, a shorthand property, a getter, a setter, or a method but instead found '/: 6, /'
  ┌─ object_expr_error_prop_name.js:1:11
  │
1 │ let a = { /: 6, /: /foo/ }
  │           ^^^^^^^ Expected a property, a shorthand property, a getter, a setter, or a method here

--
error[SyntaxError]: expected a property, a shorthand property, a getter, a setter, or a method but instead found '{'
  ┌─ object_expr_error_prop_name.js:2:10
  │
2 │ let a = {{}}
  │          ^ Expected a property, a shorthand property, a getter, a setter, or a method here

--
error[SyntaxError]: expected a statement but instead found '}'
  ┌─ object_expr_error_prop_name.js:2:12
  │
2 │ let a = {{}}
  │            ^ Expected a statement here

--
let a = { /: 6, /: /foo/ }
let a = {{}}
