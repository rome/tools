JsModule {
    interpreter_token: missing (optional),
    directives: [],
    items: [
        JsClassDeclaration {
            class_token: CLASS_KW@0..6 "class" [] [Whitespace(" ")],
            id: missing (required),
            implements_clause: missing (optional),
            extends_clause: missing (optional),
            l_curly_token: L_CURLY@6..7 "{" [] [],
            members: [
                JsPropertyClassMember {
                    modifiers: missing (optional),
                    access_modifier: missing (optional),
                    abstract_token: missing (optional),
                    static_token: missing (optional),
                    name: JsComputedMemberName {
                        l_brack_token: L_BRACK@7..11 "[" [Whitespace("\n  ")] [],
                        expression: JsBinaryExpression {
                            left: JsNumberLiteralExpression {
                                value_token: JS_NUMBER_LITERAL@11..13 "1" [] [Whitespace(" ")],
                            },
                            operator: PLUS@13..15 "+" [] [Whitespace(" ")],
                            right: JsNumberLiteralExpression {
                                value_token: JS_NUMBER_LITERAL@15..16 "1" [] [],
                            },
                        },
                        r_brack_token: R_BRACK@16..18 "]" [] [Whitespace(" ")],
                    },
                    question_mark_token: missing (optional),
                    excl_token: missing (optional),
                    ty: missing (optional),
                    value: JsInitializerClause {
                        eq_token: EQ@18..20 "=" [] [Whitespace(" ")],
                        expression: JsArrowFunctionExpression {
                            async_token: missing (optional),
                            type_parameters: missing (optional),
                            parameter_list: JsParameterList {
                                l_paren_token: L_PAREN@20..21 "(" [] [],
                                parameters: [],
                                r_paren_token: R_PAREN@21..23 ")" [] [Whitespace(" ")],
                            },
                            return_type: missing (optional),
                            fat_arrow_token: FAT_ARROW@23..26 "=>" [] [Whitespace(" ")],
                            body: JsFunctionBody {
                                l_curly_token: L_CURLY@26..27 "{" [] [],
                                directives: [],
                                statements: [
                                    JsVariableStatement {
                                        declaration_list: JsVariableDeclarationList {
                                            kind_token: LET_KW@27..36 "let" [Whitespace("\n    ")] [Whitespace(" ")],
                                            declarations: [
                                                JsVariableDeclaration {
                                                    id: JsIdentifierBinding {
                                                        name_token: IDENT@36..37 "a" [] [],
                                                    },
                                                    excl_token: missing (optional),
                                                    type_annotation: missing (optional),
                                                    initializer: JsInitializerClause {
                                                        eq_token: EQ@37..38 "=" [] [],
                                                        expression: JsUnknownExpression {
                                                            items: [
                                                                SEMICOLON@38..39 ";" [] [],
                                                            ],
                                                        },
                                                    },
                                                },
                                            ],
                                        },
                                        semicolon_token: missing (optional),
                                    },
                                ],
                                r_curly_token: R_CURLY@39..43 "}" [Whitespace("\n  ")] [],
                            },
                        },
                    },
                    semicolon_token: SEMICOLON@43..44 ";" [] [],
                },
            ],
            r_curly_token: R_CURLY@44..46 "}" [Whitespace("\n")] [],
        },
        JsEmptyStatement {
            semicolon_token: SEMICOLON@46..47 ";" [] [],
        },
    ],
    eof_token: EOF@47..48 "" [Whitespace("\n")] [],
}

0: JS_MODULE@0..48
  0: (empty)
  1: LIST@0..0
  2: LIST@0..47
    0: JS_CLASS_DECLARATION@0..46
      0: CLASS_KW@0..6 "class" [] [Whitespace(" ")]
      1: (empty)
      2: (empty)
      3: (empty)
      4: L_CURLY@6..7 "{" [] []
      5: LIST@7..44
        0: JS_PROPERTY_CLASS_MEMBER@7..44
          0: (empty)
          1: (empty)
          2: (empty)
          3: (empty)
          4: JS_COMPUTED_MEMBER_NAME@7..18
            0: L_BRACK@7..11 "[" [Whitespace("\n  ")] []
            1: JS_BINARY_EXPRESSION@11..16
              0: JS_NUMBER_LITERAL_EXPRESSION@11..13
                0: JS_NUMBER_LITERAL@11..13 "1" [] [Whitespace(" ")]
              1: PLUS@13..15 "+" [] [Whitespace(" ")]
              2: JS_NUMBER_LITERAL_EXPRESSION@15..16
                0: JS_NUMBER_LITERAL@15..16 "1" [] []
            2: R_BRACK@16..18 "]" [] [Whitespace(" ")]
          5: (empty)
          6: JS_INITIALIZER_CLAUSE@18..43
            0: EQ@18..20 "=" [] [Whitespace(" ")]
            1: JS_ARROW_FUNCTION_EXPRESSION@20..43
              0: (empty)
              1: (empty)
              2: JS_PARAMETER_LIST@20..23
                0: L_PAREN@20..21 "(" [] []
                1: LIST@21..21
                2: R_PAREN@21..23 ")" [] [Whitespace(" ")]
              3: (empty)
              4: FAT_ARROW@23..26 "=>" [] [Whitespace(" ")]
              5: JS_FUNCTION_BODY@26..43
                0: L_CURLY@26..27 "{" [] []
                1: LIST@27..27
                2: LIST@27..39
                  0: JS_VARIABLE_STATEMENT@27..39
                    0: JS_VARIABLE_DECLARATION_LIST@27..39
                      0: LET_KW@27..36 "let" [Whitespace("\n    ")] [Whitespace(" ")]
                      1: LIST@36..39
                        0: JS_VARIABLE_DECLARATION@36..39
                          0: JS_IDENTIFIER_BINDING@36..37
                            0: IDENT@36..37 "a" [] []
                          1: (empty)
                          2: (empty)
                          3: JS_INITIALIZER_CLAUSE@37..39
                            0: EQ@37..38 "=" [] []
                            1: JS_UNKNOWN_EXPRESSION@38..39
                              0: SEMICOLON@38..39 ";" [] []
                    1: (empty)
                3: R_CURLY@39..43 "}" [Whitespace("\n  ")] []
          7: SEMICOLON@43..44 ";" [] []
      6: R_CURLY@44..46 "}" [Whitespace("\n")] []
    1: JS_EMPTY_STATEMENT@46..47
      0: SEMICOLON@46..47 ";" [] []
  3: EOF@47..48 "" [Whitespace("\n")] []
--
error[SyntaxError]: class declarations must have a name
  ┌─ invalid_method_recover.js:1:1
  │
1 │ class {
  │ ^^^^^^

--
error[SyntaxError]: Expected an expression, but found none
  ┌─ invalid_method_recover.js:3:11
  │
3 │     let a=;
  │           ^ Expected an expression here

--
class {
  [1 + 1] = () => {
    let a=;
  };
};
