<<<<<<< HEAD
JS_MODULE@0..48
=======
MODULE@0..47
>>>>>>> 56d750195 (trim format_raw when formatter finds an error)
  LIST@0..47
    CLASS_DECL@0..46
      None CLASS_KW@0..5 "class" Whitespace(1)
      CLASS_BODY@6..46
        None L_CURLY@6..7 "{" None
        LIST@7..44
          CLASS_PROP@7..44
            COMPUTED_PROPERTY_NAME@7..18
              Whitespace(3) L_BRACK@10..11 "[" None
              BIN_EXPR@11..16
                LITERAL@11..13
                  None NUMBER@11..12 "1" Whitespace(1)
                None PLUS@13..14 "+" Whitespace(1)
                LITERAL@15..16
                  None NUMBER@15..16 "1" None
              None R_BRACK@16..17 "]" Whitespace(1)
            None EQ@18..19 "=" Whitespace(1)
            ARROW_EXPR@20..43
              PARAMETER_LIST@20..23
                None L_PAREN@20..21 "(" None
                LIST@21..21
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
                R_PAREN@21..22 ")"
              WHITESPACE@22..23 " "
              FAT_ARROW@23..25 "=>"
              WHITESPACE@25..26 " "
              JS_BLOCK_STATEMENT@26..43
                L_CURLY@26..27 "{"
                WHITESPACE@27..32 "\n    "
                LIST@32..39
                  VAR_DECL@32..39
                    IDENT@32..35 "let"
                    WHITESPACE@35..36 " "
=======
                 R_PAREN@21..23 ")" " "
               FAT_ARROW@23..26 "=>" " "
=======
                None R_PAREN@21..23 ")" Whitespace(1)
              None FAT_ARROW@23..26 "=>" Whitespace(1)
>>>>>>> 03257ad46 (greentoken slice contains everything from first leading to last trailing trivia)
=======
                None R_PAREN@21..22 ")" Whitespace(1)
              None FAT_ARROW@23..25 "=>" Whitespace(1)
>>>>>>> c96756449 (fixing text and text_with_trivia and ranges)
              BLOCK_STMT@26..43
                None L_CURLY@26..27 "{" None
                LIST@27..39
                  VAR_DECL@27..39
<<<<<<< HEAD
<<<<<<< HEAD
                    "\n    " IDENT@27..36 "let" " "
>>>>>>> 56d750195 (trim format_raw when formatter finds an error)
=======
                    Whitespace(5) IDENT@27..36 "let" Whitespace(1)
>>>>>>> 03257ad46 (greentoken slice contains everything from first leading to last trailing trivia)
=======
                    Whitespace(5) IDENT@32..35 "let" Whitespace(1)
>>>>>>> c96756449 (fixing text and text_with_trivia and ranges)
                    LIST@36..39
                      DECLARATOR@36..39
                        SINGLE_PATTERN@36..37
                          NAME@36..37
                            None IDENT@36..37 "a" None
                        None EQ@37..38 "=" None
                        ERROR@38..39
<<<<<<< HEAD
<<<<<<< HEAD
                          SEMICOLON@38..39 ";"
                WHITESPACE@39..42 "\n  "
                R_CURLY@42..43 "}"
            SEMICOLON@43..44 ";"
        WHITESPACE@44..45 "\n"
        R_CURLY@45..46 "}"
    JS_EMPTY_STATEMENT@46..47
      SEMICOLON@46..47 ";"
  WHITESPACE@47..48 "\n"
=======
                           SEMICOLON@38..39 ";" 
                "\n  " R_CURLY@39..43 "}" 
             SEMICOLON@43..44 ";" 
        "\n" R_CURLY@44..46 "}" 
    EMPTY_STMT@46..47
       SEMICOLON@46..47 ";" 
>>>>>>> 56d750195 (trim format_raw when formatter finds an error)
=======
                          None SEMICOLON@38..39 ";" None
                Whitespace(3) R_CURLY@42..43 "}" None
            None SEMICOLON@43..44 ";" None
        Whitespace(1) R_CURLY@45..46 "}" None
    EMPTY_STMT@46..47
      None SEMICOLON@46..47 ";" None
>>>>>>> 03257ad46 (greentoken slice contains everything from first leading to last trailing trivia)
--
error[SyntaxError]: class declarations must have a name
  ┌─ invalid_method_recover.js:1:7
  │
1 │ class {
  │       ^

--
error[SyntaxError]: expected an expression, but found `;` instead
  ┌─ invalid_method_recover.js:3:11
  │
3 │     let a=;
  │           ^

--
error[SyntaxError]: class fields are unsupported
  ┌─ invalid_method_recover.js:2:3
  │  
2 │ ┌   [1 + 1] = () => {
3 │ │     let a=;
4 │ │   };
  │ └────^

--
class {
  [1 + 1] = () => {
    let a=;
  };
};
