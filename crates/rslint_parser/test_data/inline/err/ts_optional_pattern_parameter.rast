JsModule {
    interpreter_token: missing (optional),
    directives: JsDirectiveList [],
    items: JsModuleItemList [
        JsFunctionStatement {
            async_token: missing (optional),
            function_token: FUNCTION_KW@0..9 "function" [] [Whitespace(" ")],
            star_token: missing (optional),
            id: JsIdentifierBinding {
                name_token: IDENT@9..13 "test" [] [],
            },
            type_parameters: missing (optional),
            parameters: JsParameters {
                l_paren_token: L_PAREN@13..14 "(" [] [],
                items: JsParameterList [
                    JsUnknownParameter {
                        items: [
                            JsObjectBindingPattern {
                                l_curly_token: L_CURLY@14..15 "{" [] [],
                                properties: JsObjectBindingPatternPropertyList [
                                    JsObjectBindingPatternShorthandProperty {
                                        identifier: JsIdentifierBinding {
                                            name_token: IDENT@15..16 "a" [] [],
                                        },
                                        init: missing (optional),
                                    },
                                    COMMA@16..18 "," [] [Whitespace(" ")],
                                    JsObjectBindingPatternShorthandProperty {
                                        identifier: JsIdentifierBinding {
                                            name_token: IDENT@18..19 "b" [] [],
                                        },
                                        init: missing (optional),
                                    },
                                ],
                                r_curly_token: R_CURLY@19..20 "}" [] [],
                            },
                            QUESTION@20..21 "?" [] [],
                        ],
                    },
                ],
                r_paren_token: R_PAREN@21..23 ")" [] [Whitespace(" ")],
            },
            return_type_annotation: missing (optional),
            body: JsFunctionBody {
                l_curly_token: L_CURLY@23..24 "{" [] [],
                directives: JsDirectiveList [],
                statements: JsStatementList [],
                r_curly_token: R_CURLY@24..25 "}" [] [],
            },
        },
    ],
    eof_token: EOF@25..26 "" [Newline("\n")] [],
}

0: JS_MODULE@0..26
  0: (empty)
  1: JS_DIRECTIVE_LIST@0..0
  2: JS_MODULE_ITEM_LIST@0..25
    0: JS_FUNCTION_STATEMENT@0..25
      0: (empty)
      1: FUNCTION_KW@0..9 "function" [] [Whitespace(" ")]
      2: (empty)
      3: JS_IDENTIFIER_BINDING@9..13
        0: IDENT@9..13 "test" [] []
      4: (empty)
      5: JS_PARAMETERS@13..23
        0: L_PAREN@13..14 "(" [] []
        1: JS_PARAMETER_LIST@14..21
          0: JS_UNKNOWN_PARAMETER@14..21
            0: JS_OBJECT_BINDING_PATTERN@14..20
              0: L_CURLY@14..15 "{" [] []
              1: JS_OBJECT_BINDING_PATTERN_PROPERTY_LIST@15..19
                0: JS_OBJECT_BINDING_PATTERN_SHORTHAND_PROPERTY@15..16
                  0: JS_IDENTIFIER_BINDING@15..16
                    0: IDENT@15..16 "a" [] []
                  1: (empty)
                1: COMMA@16..18 "," [] [Whitespace(" ")]
                2: JS_OBJECT_BINDING_PATTERN_SHORTHAND_PROPERTY@18..19
                  0: JS_IDENTIFIER_BINDING@18..19
                    0: IDENT@18..19 "b" [] []
                  1: (empty)
              2: R_CURLY@19..20 "}" [] []
            1: QUESTION@20..21 "?" [] []
        2: R_PAREN@21..23 ")" [] [Whitespace(" ")]
      6: (empty)
      7: JS_FUNCTION_BODY@23..25
        0: L_CURLY@23..24 "{" [] []
        1: JS_DIRECTIVE_LIST@24..24
        2: JS_STATEMENT_LIST@24..24
        3: R_CURLY@24..25 "}" [] []
  3: EOF@25..26 "" [Newline("\n")] []
--
error[SyntaxError]: A binding pattern parameter cannot be optional in an implementation signature.
  ┌─ ts_optional_pattern_parameter.ts:1:15
  │
1 │ function test({a, b}?) {}
  │               ^^^^^^

--
function test({a, b}?) {}
