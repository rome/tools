<<<<<<< HEAD
JS_MODULE@0..18
=======
MODULE@0..17
>>>>>>> 56d750195 (trim format_raw when formatter finds an error)
  LIST@0..17
    VAR_DECL@0..11
      None IDENT@0..3 "let" Whitespace(1)
      LIST@4..9
        DECLARATOR@4..9
          SINGLE_PATTERN@4..6
            NAME@4..6
              None IDENT@4..5 "a" Whitespace(1)
          None EQ@6..7 "=" Whitespace(1)
          ERROR@8..9
<<<<<<< HEAD
<<<<<<< HEAD
            ERROR_TOKEN@8..9 "\\"
      SEMICOLON@9..10 ";"
    WHITESPACE@10..11 " "
    JS_EXPRESSION_STATEMENT@11..17
=======
             ERROR_TOKEN@8..9 "\\" 
       SEMICOLON@9..11 ";" " "
=======
            None ERROR_TOKEN@8..9 "\\" None
<<<<<<< HEAD
      None SEMICOLON@9..11 ";" Whitespace(1)
>>>>>>> 03257ad46 (greentoken slice contains everything from first leading to last trailing trivia)
=======
      None SEMICOLON@9..10 ";" Whitespace(1)
>>>>>>> c96756449 (fixing text and text_with_trivia and ranges)
    EXPR_STMT@11..17
>>>>>>> 56d750195 (trim format_raw when formatter finds an error)
      CALL_EXPR@11..16
        NAME_REF@11..14
          None IDENT@11..14 "foo" None
        ARG_LIST@14..16
          None L_PAREN@14..15 "(" None
          LIST@15..15
          None R_PAREN@15..16 ")" None
      None SEMICOLON@16..17 ";" None
--
error: unexpected token `\`
  ┌─ primary_expr_invalid_recovery.js:1:9
  │
1 │ let a = \; foo();
  │         ^

--
let a = \; foo();
