JsRoot {
    interpreter_token: missing (optional),
    directives: [],
    statements: [
        JsExpressionStatement {
            expression: JsComputedMemberExpression {
                object: JsReferenceIdentifierExpression {
                    name_token: IDENT@0..3 "foo" [] [],
                },
                optional_chain_token_token: missing (optional),
                l_brack_token: L_BRACK@3..4 "[" [] [],
                r_brack_token: R_BRACK@4..5 "]" [] [],
            },
            semicolon_token: missing (optional),
        },
        JsExpressionStatement {
            expression: JsComputedMemberExpression {
                object: JsReferenceIdentifierExpression {
                    name_token: IDENT@5..9 "foo" [Whitespace("\n")] [],
                },
                optional_chain_token_token: QUESTIONDOT@9..11 "?." [] [],
                l_brack_token: L_BRACK@11..12 "[" [] [],
                r_brack_token: R_BRACK@12..13 "]" [] [],
            },
            semicolon_token: missing (optional),
        },
        JsExpressionStatement {
            expression: JsComputedMemberExpression {
                object: JsReferenceIdentifierExpression {
                    name_token: IDENT@13..17 "foo" [Whitespace("\n")] [],
                },
                optional_chain_token_token: missing (optional),
                l_brack_token: L_BRACK@17..18 "[" [] [],
                r_brack_token: missing (required),
            },
            semicolon_token: missing (optional),
        },
    ],
}

0: JS_ROOT@0..19
  0: (empty)
  1: LIST@0..0
  2: LIST@0..18
    0: JS_EXPRESSION_STATEMENT@0..5
      0: JS_COMPUTED_MEMBER_EXPRESSION@0..5
        0: JS_REFERENCE_IDENTIFIER_EXPRESSION@0..3
          0: IDENT@0..3 "foo" [] []
        1: L_BRACK@3..4 "[" [] []
        2: R_BRACK@4..5 "]" [] []
      1: (empty)
    1: JS_EXPRESSION_STATEMENT@5..13
      0: JS_COMPUTED_MEMBER_EXPRESSION@5..13
        0: JS_REFERENCE_IDENTIFIER_EXPRESSION@5..9
          0: IDENT@5..9 "foo" [Whitespace("\n")] []
        1: QUESTIONDOT@9..11 "?." [] []
        2: L_BRACK@11..12 "[" [] []
        3: R_BRACK@12..13 "]" [] []
      1: (empty)
    2: JS_EXPRESSION_STATEMENT@13..18
      0: JS_COMPUTED_MEMBER_EXPRESSION@13..18
        0: JS_REFERENCE_IDENTIFIER_EXPRESSION@13..17
          0: IDENT@13..17 "foo" [Whitespace("\n")] []
        1: L_BRACK@17..18 "[" [] []
        2: (empty)
      1: (empty)
  3: EOF@18..19 "" [Whitespace("\n")] []
--
error[SyntaxError]: Expected an expression, but found none
  ┌─ bracket_expr_err.js:1:5
  │
1 │ foo[]
  │     ^ Expected an expression here

--
error[SyntaxError]: Expected an expression, but found none
  ┌─ bracket_expr_err.js:2:7
  │
2 │ foo?.[]
  │       ^ Expected an expression here

--
error[SyntaxError]: Expected an expression, but found none
  ┌─ bracket_expr_err.js:4:1
  │
4 │ 
  │ ^ Expected an expression here

--
error[SyntaxError]: expected `']'` but instead the file ends
  ┌─ bracket_expr_err.js:4:1
  │
4 │ 
  │ ^ the file ends here

--
foo[]
foo?.[]
foo[
