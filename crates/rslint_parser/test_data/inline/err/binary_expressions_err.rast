<<<<<<< HEAD
JS_MODULE@0..35
=======
MODULE@0..34
>>>>>>> 56d750195 (trim format_raw when formatter finds an error)
  LIST@0..34
    JS_EXPRESSION_STATEMENT@0..11
      CALL_EXPR@0..10
        NAME_REF@0..3
          None IDENT@0..3 "foo" None
        ARG_LIST@3..10
          None L_PAREN@3..4 "(" None
          LIST@4..9
            BIN_EXPR@4..9
<<<<<<< HEAD
              NAME_REF@4..7
                IDENT@4..7 "foo"
              WHITESPACE@7..8 " "
              PLUS@8..9 "+"
          R_PAREN@9..10 ")"
      SEMICOLON@10..11 ";"
    WHITESPACE@11..12 "\n"
    JS_EXPRESSION_STATEMENT@12..22
      BIN_EXPR@12..21
        NAME_REF@12..15
          IDENT@12..15 "foo"
        WHITESPACE@15..16 " "
        PLUS@16..17 "+"
        WHITESPACE@17..18 " "
=======
              NAME_REF@4..8
                None IDENT@4..7 "foo" Whitespace(1)
              None PLUS@8..9 "+" None
          None R_PAREN@9..10 ")" None
      None SEMICOLON@10..11 ";" None
    EXPR_STMT@11..22
      BIN_EXPR@11..21
        NAME_REF@11..16
<<<<<<< HEAD
<<<<<<< HEAD
          "\n" IDENT@11..16 "foo" " "
         PLUS@16..18 "+" " "
>>>>>>> 56d750195 (trim format_raw when formatter finds an error)
=======
          Whitespace(1) IDENT@11..16 "foo" Whitespace(1)
        None PLUS@16..18 "+" Whitespace(1)
>>>>>>> 03257ad46 (greentoken slice contains everything from first leading to last trailing trivia)
=======
          Whitespace(1) IDENT@12..15 "foo" Whitespace(1)
        None PLUS@16..17 "+" Whitespace(1)
>>>>>>> c96756449 (fixing text and text_with_trivia and ranges)
        BIN_EXPR@18..21
          None STAR@18..19 "*" Whitespace(1)
          LITERAL@20..21
<<<<<<< HEAD
<<<<<<< HEAD
            NUMBER@20..21 "2"
      SEMICOLON@21..22 ";"
    WHITESPACE@22..23 "\n"
    JS_EXPRESSION_STATEMENT@23..34
      BIN_EXPR@23..33
        UNARY_EXPR@23..27
          BANG@23..24 "!"
          NAME_REF@24..27
            IDENT@24..27 "foo"
        WHITESPACE@27..28 " "
        STAR@28..29 "*"
        WHITESPACE@29..30 " "
=======
             NUMBER@20..21 "2" 
       SEMICOLON@21..22 ";" 
=======
            None NUMBER@20..21 "2" None
      None SEMICOLON@21..22 ";" None
>>>>>>> 03257ad46 (greentoken slice contains everything from first leading to last trailing trivia)
    EXPR_STMT@22..34
      BIN_EXPR@22..33
        UNARY_EXPR@22..28
          Whitespace(1) BANG@23..24 "!" None
          NAME_REF@24..28
<<<<<<< HEAD
<<<<<<< HEAD
             IDENT@24..28 "foo" " "
         STAR@28..30 "*" " "
>>>>>>> 56d750195 (trim format_raw when formatter finds an error)
=======
            None IDENT@24..28 "foo" Whitespace(1)
        None STAR@28..30 "*" Whitespace(1)
>>>>>>> 03257ad46 (greentoken slice contains everything from first leading to last trailing trivia)
=======
            None IDENT@24..27 "foo" Whitespace(1)
        None STAR@28..29 "*" Whitespace(1)
>>>>>>> c96756449 (fixing text and text_with_trivia and ranges)
        NAME_REF@30..33
          None IDENT@30..33 "bar" None
      None SEMICOLON@33..34 ";" None
--
error[SyntaxError]: Expected an expression, but found none
  ┌─ binary_expressions_err.js:1:10
  │
1 │ foo(foo +);
  │          ^ Expected an expression here

--
error[SyntaxError]: Expected an expression for the right hand side of a `+`, but found an operator instead
  ┌─ binary_expressions_err.js:2:7
  │
2 │ foo + * 2;
  │     - ^ But this operator was encountered instead
  │     │  
  │     This operator requires a right hand side value

--
foo(foo +);
foo + * 2;
!foo * bar;
