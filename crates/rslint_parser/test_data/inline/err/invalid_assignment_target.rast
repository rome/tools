JsRoot {
    interpreter_token: missing (optional),
    directives: [],
    statements: [
        JsExpressionStatement {
            expression: JsAssignmentExpression {
                left: JsUnknownAssignment {
                    items: [
                        Token(
                            PLUS2@0..2 "++" [] [],
                        ),
                        Token(
                            IDENT@2..4 "a" [] [Whitespace(" ")],
                        ),
                    ],
                },
                operator_token: EQ@4..6 "=" [] [Whitespace(" ")],
                right: JsReferenceIdentifierExpression {
                    name_token: IDENT@6..7 "b" [] [],
                },
            },
            semicolon_token: SEMICOLON@7..8 ";" [] [],
        },
        JsExpressionStatement {
            expression: JsAssignmentExpression {
                left: JsParenthesizedAssignment {
                    l_paren_token: L_PAREN@8..10 "(" [Whitespace("\n")] [],
                    assignment: JsUnknownAssignment {
                        items: [
                            Token(
                                PLUS2@10..12 "++" [] [],
                            ),
                            Token(
                                IDENT@12..13 "a" [] [],
                            ),
                        ],
                    },
                    r_paren_token: R_PAREN@13..15 ")" [] [Whitespace(" ")],
                },
                operator_token: EQ@15..17 "=" [] [Whitespace(" ")],
                right: JsReferenceIdentifierExpression {
                    name_token: IDENT@17..18 "b" [] [],
                },
            },
            semicolon_token: SEMICOLON@18..19 ";" [] [],
        },
        JsExpressionStatement {
            expression: JsParenthesizedExpression {
                l_paren_token: L_PAREN@19..21 "(" [Whitespace("\n")] [],
                expression: JsAssignmentExpression {
                    left: JsIdentifierAssignment {
                        name_token: IDENT@21..23 "a" [] [Whitespace(" ")],
                    },
                    operator_token: EQ@23..25 "=" [] [Whitespace(" ")],
                    right: JsReferenceIdentifierExpression {
                        name_token: IDENT@25..26 "b" [] [],
                    },
                },
                r_paren_token: missing (required),
            },
            semicolon_token: SEMICOLON@26..27 ";" [] [],
        },
    ],
}

0: JS_ROOT@0..28
  0: (empty)
  1: LIST@0..0
  2: LIST@0..27
    0: JS_EXPRESSION_STATEMENT@0..8
      0: JS_ASSIGNMENT_EXPRESSION@0..7
        0: JS_UNKNOWN_ASSIGNMENT@0..4
          0: PLUS2@0..2 "++" [] []
          1: IDENT@2..4 "a" [] [Whitespace(" ")]
        1: EQ@4..6 "=" [] [Whitespace(" ")]
        2: JS_REFERENCE_IDENTIFIER_EXPRESSION@6..7
          0: IDENT@6..7 "b" [] []
      1: SEMICOLON@7..8 ";" [] []
    1: JS_EXPRESSION_STATEMENT@8..19
      0: JS_ASSIGNMENT_EXPRESSION@8..18
        0: JS_PARENTHESIZED_ASSIGNMENT@8..15
          0: L_PAREN@8..10 "(" [Whitespace("\n")] []
          1: JS_UNKNOWN_ASSIGNMENT@10..13
            0: PLUS2@10..12 "++" [] []
            1: IDENT@12..13 "a" [] []
          2: R_PAREN@13..15 ")" [] [Whitespace(" ")]
        1: EQ@15..17 "=" [] [Whitespace(" ")]
        2: JS_REFERENCE_IDENTIFIER_EXPRESSION@17..18
          0: IDENT@17..18 "b" [] []
      1: SEMICOLON@18..19 ";" [] []
    2: JS_EXPRESSION_STATEMENT@19..27
      0: JS_PARENTHESIZED_EXPRESSION@19..26
        0: L_PAREN@19..21 "(" [Whitespace("\n")] []
        1: JS_ASSIGNMENT_EXPRESSION@21..26
          0: JS_IDENTIFIER_ASSIGNMENT@21..23
            0: IDENT@21..23 "a" [] [Whitespace(" ")]
          1: EQ@23..25 "=" [] [Whitespace(" ")]
          2: JS_REFERENCE_IDENTIFIER_EXPRESSION@25..26
            0: IDENT@25..26 "b" [] []
        2: (empty)
      1: SEMICOLON@26..27 ";" [] []
  3: EOF@27..28 "" [Whitespace("\n")] []
--
error[SyntaxError]: Invalid assignment to `++a`
  ┌─ invalid_assignment_target.js:1:1
  │
1 │ ++a = b;
  │ ^^^ This expression cannot be assigned to

--
error[SyntaxError]: Invalid assignment to `++a`
  ┌─ invalid_assignment_target.js:2:2
  │
2 │ (++a) = b;
  │  ^^^ This expression cannot be assigned to

--
error[SyntaxError]: expected `')'` but instead found `;`
  ┌─ invalid_assignment_target.js:3:7
  │
3 │ (a = b;
  │       ^ unexpected

--
++a = b;
(++a) = b;
(a = b;
