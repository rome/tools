JsModule {
    interpreter_token: missing (optional),
    directives: [],
    items: [
        JsVariableStatement {
            declarations: JsVariableDeclarations {
                kind_token: LET_KW@0..4 "let" [] [Whitespace(" ")],
                items: [
                    JsVariableDeclaration {
                        id: JsIdentifierBinding {
                            name_token: IDENT@4..6 "a" [] [Whitespace(" ")],
                        },
                        excl_token: missing (optional),
                        type_annotation: missing (optional),
                        initializer: JsInitializerClause {
                            eq_token: EQ@6..8 "=" [] [Whitespace(" ")],
                            expression: JsObjectExpression {
                                l_curly_token: L_CURLY@8..9 "{" [] [],
                                members: [
                                    missing element,
                                    COMMA@9..11 "," [] [Whitespace(" ")],
                                    JsShorthandPropertyObjectMember {
                                        name: JsReferenceIdentifier {
                                            value_token: IDENT@11..14 "foo" [] [],
                                        },
                                    },
                                ],
                                r_curly_token: R_CURLY@14..15 "}" [] [],
                            },
                        },
                    },
                ],
            },
            semicolon_token: missing (optional),
        },
        JsVariableStatement {
            declarations: JsVariableDeclarations {
                kind_token: LET_KW@15..20 "let" [Whitespace("\n")] [Whitespace(" ")],
                items: [
                    JsVariableDeclaration {
                        id: JsIdentifierBinding {
                            name_token: IDENT@20..22 "b" [] [Whitespace(" ")],
                        },
                        excl_token: missing (optional),
                        type_annotation: missing (optional),
                        initializer: JsInitializerClause {
                            eq_token: EQ@22..24 "=" [] [Whitespace(" ")],
                            expression: JsObjectExpression {
                                l_curly_token: L_CURLY@24..26 "{" [] [Whitespace(" ")],
                                members: [
                                    JsPropertyObjectMember {
                                        name: JsLiteralMemberName {
                                            value: IDENT@26..30 "foo" [] [Whitespace(" ")],
                                        },
                                        colon_token: missing (required),
                                        value: JsIdentifierExpression {
                                            name: JsReferenceIdentifier {
                                                value_token: IDENT@30..34 "bar" [] [Whitespace(" ")],
                                            },
                                        },
                                    },
                                ],
                                r_curly_token: R_CURLY@34..35 "}" [] [],
                            },
                        },
                    },
                ],
            },
            semicolon_token: missing (optional),
        },
    ],
    eof_token: EOF@35..36 "" [Whitespace("\n")] [],
}

0: JS_MODULE@0..36
  0: (empty)
  1: JS_DIRECTIVE_LIST@0..0
  2: JS_MODULE_ITEM_LIST@0..35
    0: JS_VARIABLE_STATEMENT@0..15
      0: JS_VARIABLE_DECLARATIONS@0..15
        0: LET_KW@0..4 "let" [] [Whitespace(" ")]
        1: JS_VARIABLE_DECLARATION_LIST@4..15
          0: JS_VARIABLE_DECLARATION@4..15
            0: JS_IDENTIFIER_BINDING@4..6
              0: IDENT@4..6 "a" [] [Whitespace(" ")]
            1: (empty)
            2: (empty)
            3: JS_INITIALIZER_CLAUSE@6..15
              0: EQ@6..8 "=" [] [Whitespace(" ")]
              1: JS_OBJECT_EXPRESSION@8..15
                0: L_CURLY@8..9 "{" [] []
                1: JS_OBJECT_MEMBER_LIST@9..14
                  0: (empty)
                  1: COMMA@9..11 "," [] [Whitespace(" ")]
                  2: JS_SHORTHAND_PROPERTY_OBJECT_MEMBER@11..14
                    0: JS_REFERENCE_IDENTIFIER@11..14
                      0: IDENT@11..14 "foo" [] []
                2: R_CURLY@14..15 "}" [] []
      1: (empty)
    1: JS_VARIABLE_STATEMENT@15..35
      0: JS_VARIABLE_DECLARATIONS@15..35
        0: LET_KW@15..20 "let" [Whitespace("\n")] [Whitespace(" ")]
        1: JS_VARIABLE_DECLARATION_LIST@20..35
          0: JS_VARIABLE_DECLARATION@20..35
            0: JS_IDENTIFIER_BINDING@20..22
              0: IDENT@20..22 "b" [] [Whitespace(" ")]
            1: (empty)
            2: (empty)
            3: JS_INITIALIZER_CLAUSE@22..35
              0: EQ@22..24 "=" [] [Whitespace(" ")]
              1: JS_OBJECT_EXPRESSION@24..35
                0: L_CURLY@24..26 "{" [] [Whitespace(" ")]
                1: JS_OBJECT_MEMBER_LIST@26..34
                  0: JS_PROPERTY_OBJECT_MEMBER@26..34
                    0: JS_LITERAL_MEMBER_NAME@26..30
                      0: IDENT@26..30 "foo" [] [Whitespace(" ")]
                    1: (empty)
                    2: JS_IDENTIFIER_EXPRESSION@30..34
                      0: JS_REFERENCE_IDENTIFIER@30..34
                        0: IDENT@30..34 "bar" [] [Whitespace(" ")]
                2: R_CURLY@34..35 "}" [] []
      1: (empty)
  3: EOF@35..36 "" [Whitespace("\n")] []
--
error[SyntaxError]: expected `:` but instead found `bar`
  ┌─ object_expr_err.js:2:15
  │
2 │ let b = { foo bar }
  │               ^^^ unexpected

--
let a = {, foo}
let b = { foo bar }
