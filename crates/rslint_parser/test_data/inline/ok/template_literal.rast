JsRoot {
    interpreter_token: None,
    directives: [],
    statements: [
        JsVariableDeclarationStatement(
            JsVariableDeclarationStatement {
                declaration: Ok(
                    JsVariableDeclaration {
                        kind_token: Ok(
                            LET_KW@0..4 "let" [] [Whitespace(" ")],
                        ),
                        declarators: [
                            AstSeparatedElement {
                                node: JsVariableDeclarator {
                                    id: Ok(
                                        SinglePattern(
                                            SinglePattern {
                                                name: Ok(
                                                    Name {
                                                        ident_token: Ok(
                                                            IDENT@4..6 "a" [] [Whitespace(" ")],
                                                        ),
                                                    },
                                                ),
                                                question_mark_token: None,
                                                excl_token: None,
                                                ty: None,
                                            },
                                        ),
                                    ),
                                    init: Some(
                                        JsEqualValueClause {
                                            eq_token: Ok(
                                                EQ@6..8 "=" [] [Whitespace(" ")],
                                            ),
                                            expression: Ok(
                                                Template(
                                                    Template {
                                                        backtick_token: Ok(
                                                            BACKTICK@8..9 "`" [] [],
                                                        ),
                                                    },
                                                ),
                                            ),
                                        },
                                    ),
                                },
                                trailing_separator: None,
                            },
                        ],
                    },
                ),
                semicolon_token: Some(
                    SEMICOLON@20..21 ";" [] [],
                ),
            },
        ),
        JsVariableDeclarationStatement(
            JsVariableDeclarationStatement {
                declaration: Ok(
                    JsVariableDeclaration {
                        kind_token: Ok(
                            LET_KW@21..26 "let" [Whitespace("\n")] [Whitespace(" ")],
                        ),
                        declarators: [
                            AstSeparatedElement {
                                node: JsVariableDeclarator {
                                    id: Ok(
                                        SinglePattern(
                                            SinglePattern {
                                                name: Ok(
                                                    Name {
                                                        ident_token: Ok(
                                                            IDENT@26..28 "a" [] [Whitespace(" ")],
                                                        ),
                                                    },
                                                ),
                                                question_mark_token: None,
                                                excl_token: None,
                                                ty: None,
                                            },
                                        ),
                                    ),
                                    init: Some(
                                        JsEqualValueClause {
                                            eq_token: Ok(
                                                EQ@28..30 "=" [] [Whitespace(" ")],
                                            ),
                                            expression: Ok(
                                                Template(
                                                    Template {
                                                        backtick_token: Ok(
                                                            BACKTICK@30..31 "`" [] [],
                                                        ),
                                                    },
                                                ),
                                            ),
                                        },
                                    ),
                                },
                                trailing_separator: None,
                            },
                        ],
                    },
                ),
                semicolon_token: Some(
                    SEMICOLON@32..33 ";" [] [],
                ),
            },
        ),
        JsVariableDeclarationStatement(
            JsVariableDeclarationStatement {
                declaration: Ok(
                    JsVariableDeclaration {
                        kind_token: Ok(
                            LET_KW@33..38 "let" [Whitespace("\n")] [Whitespace(" ")],
                        ),
                        declarators: [
                            AstSeparatedElement {
                                node: JsVariableDeclarator {
                                    id: Ok(
                                        SinglePattern(
                                            SinglePattern {
                                                name: Ok(
                                                    Name {
                                                        ident_token: Ok(
                                                            IDENT@38..40 "a" [] [Whitespace(" ")],
                                                        ),
                                                    },
                                                ),
                                                question_mark_token: None,
                                                excl_token: None,
                                                ty: None,
                                            },
                                        ),
                                    ),
                                    init: Some(
                                        JsEqualValueClause {
                                            eq_token: Ok(
                                                EQ@40..42 "=" [] [Whitespace(" ")],
                                            ),
                                            expression: Ok(
                                                Template(
                                                    Template {
                                                        backtick_token: Ok(
                                                            BACKTICK@42..43 "`" [] [],
                                                        ),
                                                    },
                                                ),
                                            ),
                                        },
                                    ),
                                },
                                trailing_separator: None,
                            },
                        ],
                    },
                ),
                semicolon_token: Some(
                    SEMICOLON@50..51 ";" [] [],
                ),
            },
        ),
        JsVariableDeclarationStatement(
            JsVariableDeclarationStatement {
                declaration: Ok(
                    JsVariableDeclaration {
                        kind_token: Ok(
                            LET_KW@51..56 "let" [Whitespace("\n")] [Whitespace(" ")],
                        ),
                        declarators: [
                            AstSeparatedElement {
                                node: JsVariableDeclarator {
                                    id: Ok(
                                        SinglePattern(
                                            SinglePattern {
                                                name: Ok(
                                                    Name {
                                                        ident_token: Ok(
                                                            IDENT@56..58 "a" [] [Whitespace(" ")],
                                                        ),
                                                    },
                                                ),
                                                question_mark_token: None,
                                                excl_token: None,
                                                ty: None,
                                            },
                                        ),
                                    ),
                                    init: Some(
                                        JsEqualValueClause {
                                            eq_token: Ok(
                                                EQ@58..60 "=" [] [Whitespace(" ")],
                                            ),
                                            expression: Ok(
                                                Template(
                                                    Template {
                                                        backtick_token: Ok(
                                                            BACKTICK@60..61 "`" [] [],
                                                        ),
                                                    },
                                                ),
                                            ),
                                        },
                                    ),
                                },
                                trailing_separator: None,
                            },
                        ],
                    },
                ),
                semicolon_token: Some(
                    SEMICOLON@65..66 ";" [] [],
                ),
            },
        ),
    ],
}

0: JS_ROOT@0..67
  0: (empty)
  1: LIST@0..0
  2: LIST@0..66
    0: JS_VARIABLE_DECLARATION_STATEMENT@0..21
      0: JS_VARIABLE_DECLARATION@0..20
        0: LET_KW@0..4 "let" [] [Whitespace(" ")]
        1: LIST@4..20
          0: JS_VARIABLE_DECLARATOR@4..20
            0: SINGLE_PATTERN@4..6
              0: NAME@4..6
                0: IDENT@4..6 "a" [] [Whitespace(" ")]
            1: JS_EQUAL_VALUE_CLAUSE@6..20
              0: EQ@6..8 "=" [] [Whitespace(" ")]
              1: TEMPLATE@8..20
                0: BACKTICK@8..9 "`" [] []
                1: LIST@9..19
                  0: TEMPLATE_CHUNK@9..13 "foo " [] []
                  1: TEMPLATE_ELEMENT@13..19
                    0: DOLLARCURLY@13..15 "${" [] []
                    1: JS_REFERENCE_IDENTIFIER_EXPRESSION@15..18
                      0: IDENT@15..18 "bar" [] []
                    2: R_CURLY@18..19 "}" [] []
                2: BACKTICK@19..20 "`" [] []
      1: SEMICOLON@20..21 ";" [] []
    1: JS_VARIABLE_DECLARATION_STATEMENT@21..33
      0: JS_VARIABLE_DECLARATION@21..32
        0: LET_KW@21..26 "let" [Whitespace("\n")] [Whitespace(" ")]
        1: LIST@26..32
          0: JS_VARIABLE_DECLARATOR@26..32
            0: SINGLE_PATTERN@26..28
              0: NAME@26..28
                0: IDENT@26..28 "a" [] [Whitespace(" ")]
            1: JS_EQUAL_VALUE_CLAUSE@28..32
              0: EQ@28..30 "=" [] [Whitespace(" ")]
              1: TEMPLATE@30..32
                0: BACKTICK@30..31 "`" [] []
                1: LIST@31..31
                2: BACKTICK@31..32 "`" [] []
      1: SEMICOLON@32..33 ";" [] []
    2: JS_VARIABLE_DECLARATION_STATEMENT@33..51
      0: JS_VARIABLE_DECLARATION@33..50
        0: LET_KW@33..38 "let" [Whitespace("\n")] [Whitespace(" ")]
        1: LIST@38..50
          0: JS_VARIABLE_DECLARATOR@38..50
            0: SINGLE_PATTERN@38..40
              0: NAME@38..40
                0: IDENT@38..40 "a" [] [Whitespace(" ")]
            1: JS_EQUAL_VALUE_CLAUSE@40..50
              0: EQ@40..42 "=" [] [Whitespace(" ")]
              1: TEMPLATE@42..50
                0: BACKTICK@42..43 "`" [] []
                1: LIST@43..49
                  0: TEMPLATE_ELEMENT@43..49
                    0: DOLLARCURLY@43..45 "${" [] []
                    1: JS_REFERENCE_IDENTIFIER_EXPRESSION@45..48
                      0: IDENT@45..48 "foo" [] []
                    2: R_CURLY@48..49 "}" [] []
                2: BACKTICK@49..50 "`" [] []
      1: SEMICOLON@50..51 ";" [] []
    3: JS_VARIABLE_DECLARATION_STATEMENT@51..66
      0: JS_VARIABLE_DECLARATION@51..65
        0: LET_KW@51..56 "let" [Whitespace("\n")] [Whitespace(" ")]
        1: LIST@56..65
          0: JS_VARIABLE_DECLARATOR@56..65
            0: SINGLE_PATTERN@56..58
              0: NAME@56..58
                0: IDENT@56..58 "a" [] [Whitespace(" ")]
            1: JS_EQUAL_VALUE_CLAUSE@58..65
              0: EQ@58..60 "=" [] [Whitespace(" ")]
              1: TEMPLATE@60..65
                0: BACKTICK@60..61 "`" [] []
                1: LIST@61..64
                  0: TEMPLATE_CHUNK@61..64 "foo" [] []
                2: BACKTICK@64..65 "`" [] []
      1: SEMICOLON@65..66 ";" [] []
  3: EOF@66..67 "" [Whitespace("\n")] []
