JsRoot {
    interpreter_token: missing (optional),
    directives: [],
    statements: [
        JsExpressionStatement {
            expression: JsStaticMemberExpression {
                object: JsReferenceIdentifierExpression {
                    name_token: IDENT@0..3 "foo" [] [],
                },
                operator: DOT@3..4 "." [] [],
                member: JsReferenceIdentifierMember {
                    name_token: IDENT@4..7 "bar" [] [],
                },
            },
            semicolon_token: missing (optional),
        },
        JsExpressionStatement {
            expression: JsStaticMemberExpression {
                object: JsReferenceIdentifierExpression {
                    name_token: IDENT@7..11 "foo" [Whitespace("\n")] [],
                },
                operator: DOT@11..12 "." [] [],
                member: JsReferenceIdentifierMember {
                    name_token: IDENT@12..17 "await" [] [],
                },
            },
            semicolon_token: missing (optional),
        },
        JsExpressionStatement {
            expression: JsStaticMemberExpression {
                object: JsReferenceIdentifierExpression {
                    name_token: IDENT@17..21 "foo" [Whitespace("\n")] [],
                },
                operator: DOT@21..22 "." [] [],
                member: JsReferenceIdentifierMember {
                    name_token: IDENT@22..27 "yield" [] [],
                },
            },
            semicolon_token: missing (optional),
        },
        JsExpressionStatement {
            expression: JsStaticMemberExpression {
                object: JsReferenceIdentifierExpression {
                    name_token: IDENT@27..31 "foo" [Whitespace("\n")] [],
                },
                operator: DOT@31..32 "." [] [],
                member: JsReferenceIdentifierMember {
                    name_token: IDENT@32..35 "for" [] [],
                },
            },
            semicolon_token: missing (optional),
        },
        JsExpressionStatement {
            expression: JsStaticMemberExpression {
                object: JsReferenceIdentifierExpression {
                    name_token: IDENT@35..39 "foo" [Whitespace("\n")] [],
                },
                operator: QUESTIONDOT@39..41 "?." [] [],
                member: JsReferenceIdentifierMember {
                    name_token: IDENT@41..44 "for" [] [],
                },
            },
            semicolon_token: missing (optional),
        },
        JsExpressionStatement {
            expression: JsStaticMemberExpression {
                object: JsReferenceIdentifierExpression {
                    name_token: IDENT@44..48 "foo" [Whitespace("\n")] [],
                },
                operator: QUESTIONDOT@48..50 "?." [] [],
                member: JsReferenceIdentifierMember {
                    name_token: IDENT@50..53 "bar" [] [],
                },
            },
            semicolon_token: missing (optional),
        },
    ],
}

0: JS_ROOT@0..54
  0: (empty)
  1: LIST@0..0
  2: LIST@0..53
    0: JS_EXPRESSION_STATEMENT@0..7
      0: JS_STATIC_MEMBER_EXPRESSION@0..7
        0: JS_REFERENCE_IDENTIFIER_EXPRESSION@0..3
          0: IDENT@0..3 "foo" [] []
        1: DOT@3..4 "." [] []
        2: JS_REFERENCE_IDENTIFIER_MEMBER@4..7
          0: IDENT@4..7 "bar" [] []
      1: (empty)
    1: JS_EXPRESSION_STATEMENT@7..17
      0: JS_STATIC_MEMBER_EXPRESSION@7..17
        0: JS_REFERENCE_IDENTIFIER_EXPRESSION@7..11
          0: IDENT@7..11 "foo" [Whitespace("\n")] []
        1: DOT@11..12 "." [] []
        2: JS_REFERENCE_IDENTIFIER_MEMBER@12..17
          0: IDENT@12..17 "await" [] []
      1: (empty)
    2: JS_EXPRESSION_STATEMENT@17..27
      0: JS_STATIC_MEMBER_EXPRESSION@17..27
        0: JS_REFERENCE_IDENTIFIER_EXPRESSION@17..21
          0: IDENT@17..21 "foo" [Whitespace("\n")] []
        1: DOT@21..22 "." [] []
        2: JS_REFERENCE_IDENTIFIER_MEMBER@22..27
          0: IDENT@22..27 "yield" [] []
      1: (empty)
    3: JS_EXPRESSION_STATEMENT@27..35
      0: JS_STATIC_MEMBER_EXPRESSION@27..35
        0: JS_REFERENCE_IDENTIFIER_EXPRESSION@27..31
          0: IDENT@27..31 "foo" [Whitespace("\n")] []
        1: DOT@31..32 "." [] []
        2: JS_REFERENCE_IDENTIFIER_MEMBER@32..35
          0: IDENT@32..35 "for" [] []
      1: (empty)
    4: JS_EXPRESSION_STATEMENT@35..44
      0: JS_STATIC_MEMBER_EXPRESSION@35..44
        0: JS_REFERENCE_IDENTIFIER_EXPRESSION@35..39
          0: IDENT@35..39 "foo" [Whitespace("\n")] []
        1: QUESTIONDOT@39..41 "?." [] []
        2: JS_REFERENCE_IDENTIFIER_MEMBER@41..44
          0: IDENT@41..44 "for" [] []
      1: (empty)
    5: JS_EXPRESSION_STATEMENT@44..53
      0: JS_STATIC_MEMBER_EXPRESSION@44..53
        0: JS_REFERENCE_IDENTIFIER_EXPRESSION@44..48
          0: IDENT@44..48 "foo" [Whitespace("\n")] []
        1: QUESTIONDOT@48..50 "?." [] []
        2: JS_REFERENCE_IDENTIFIER_MEMBER@50..53
          0: IDENT@50..53 "bar" [] []
      1: (empty)
  3: EOF@53..54 "" [Whitespace("\n")] []
