JsRoot {
    interpreter_token: missing (optional),
    directives: [],
    statements: [
        JsVariableDeclarationStatement {
            declaration: JsVariableDeclaration {
                kind_token: LET_KW@0..4 "let" [] [Whitespace(" ")],
                declarators: [
                    JsVariableDeclarator {
                        id: SinglePattern {
                            name: Name {
                                ident_token: IDENT@4..6 "a" [] [Whitespace(" ")],
                            },
                            question_mark_token: missing (optional),
                            excl_token: missing (optional),
                            ty: missing (optional),
                        },
                        init: JsEqualValueClause {
                            eq_token: EQ@6..8 "=" [] [Whitespace(" ")],
                            expression: JsReferenceIdentifierExpression {
                                name_token: IDENT@8..13 "async" [] [],
                            },
                        },
                    },
                ],
            },
            semicolon_token: SEMICOLON@13..14 ";" [] [],
        },
    ],
}

0: JS_ROOT@0..15
  0: (empty)
  1: LIST@0..0
  2: LIST@0..14
    0: JS_VARIABLE_DECLARATION_STATEMENT@0..14
      0: JS_VARIABLE_DECLARATION@0..13
        0: LET_KW@0..4 "let" [] [Whitespace(" ")]
        1: LIST@4..13
          0: JS_VARIABLE_DECLARATOR@4..13
            0: JS_IDENTIFIER_BINDING@4..6
              0: IDENT@4..6 "a" [] [Whitespace(" ")]
            1: JS_EQUAL_VALUE_CLAUSE@6..13
              0: EQ@6..8 "=" [] [Whitespace(" ")]
              1: JS_REFERENCE_IDENTIFIER_EXPRESSION@8..13
                0: IDENT@8..13 "async" [] []
      1: SEMICOLON@13..14 ";" [] []
  3: EOF@14..15 "" [Whitespace("\n")] []
