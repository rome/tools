JsRoot {
    interpreter_token: None,
    directives: [],
    statements: [
        ForStmt(
            ForStmt {
                for_token: Ok(
                    FOR_KW@0..4 "for" [] [Whitespace(" ")],
                ),
                l_paren_token: Ok(
                    L_PAREN@4..5 "(" [] [],
                ),
                init: Some(
                    ForStmtInit {
                        inner: Ok(
                            JsVariableDeclaration(
                                JsVariableDeclaration {
                                    kind_token: Ok(
                                        LET_KW@5..9 "let" [] [Whitespace(" ")],
                                    ),
                                    declarators: [
                                        AstSeparatedElement {
                                            node: JsVariableDeclarator {
                                                id: Ok(
                                                    SinglePattern(
                                                        SinglePattern {
                                                            name: Ok(
                                                                Name {
                                                                    ident_token: Ok(
                                                                        IDENT@9..11 "i" [] [Whitespace(" ")],
                                                                    ),
                                                                },
                                                            ),
                                                            question_mark_token: None,
                                                            excl_token: None,
                                                            ty: None,
                                                        },
                                                    ),
                                                ),
                                                init: Some(
                                                    JsEqualValueClause {
                                                        eq_token: Ok(
                                                            EQ@11..13 "=" [] [Whitespace(" ")],
                                                        ),
                                                        expression: Ok(
                                                            JsAnyLiteralExpression(
                                                                JsNumberLiteralExpression(
                                                                    JsNumberLiteralExpression {
                                                                        value_token: Ok(
                                                                            JS_NUMBER_LITERAL@13..14 "5" [] [],
                                                                        ),
                                                                    },
                                                                ),
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            },
                                            trailing_separator: None,
                                        },
                                    ],
                                },
                            ),
                        ),
                        semicolon_token: Err(
                            MissingRequiredChild(
                                2: FOR_STMT_INIT@5..14
                                  0: JS_VARIABLE_DECLARATION@5..14
                                    0: LET_KW@5..9 "let" [] [Whitespace(" ")]
                                    1: LIST@9..14
                                      0: JS_VARIABLE_DECLARATOR@9..14
                                        0: SINGLE_PATTERN@9..11
                                          0: NAME@9..11
                                            0: IDENT@9..11 "i" [] [Whitespace(" ")]
                                        1: JS_EQUAL_VALUE_CLAUSE@11..14
                                          0: EQ@11..13 "=" [] [Whitespace(" ")]
                                          1: JS_NUMBER_LITERAL_EXPRESSION@13..14
                                            0: JS_NUMBER_LITERAL@13..14 "5" [] []
                                ,
                            ),
                        ),
                    },
                ),
                test: Some(
                    ForStmtTest {
                        expr: Ok(
                            JsBinaryExpression(
                                JsBinaryExpression {
                                    left: Ok(
                                        JsReferenceIdentifierExpression(
                                            JsReferenceIdentifierExpression {
                                                name_token: Ok(
                                                    IDENT@16..18 "i" [] [Whitespace(" ")],
                                                ),
                                            },
                                        ),
                                    ),
                                    operator: Ok(
                                        L_ANGLE@18..20 "<" [] [Whitespace(" ")],
                                    ),
                                },
                            ),
                        ),
                        semicolon_token: Err(
                            MissingRequiredChild(
                                4: FOR_STMT_TEST@16..22
                                  0: JS_BINARY_EXPRESSION@16..22
                                    0: JS_REFERENCE_IDENTIFIER_EXPRESSION@16..18
                                      0: IDENT@16..18 "i" [] [Whitespace(" ")]
                                    1: L_ANGLE@18..20 "<" [] [Whitespace(" ")]
                                    2: JS_NUMBER_LITERAL_EXPRESSION@20..22
                                      0: JS_NUMBER_LITERAL@20..22 "10" [] []
                                ,
                            ),
                        ),
                    },
                ),
                update: Some(
                    ForStmtUpdate {
                        expr: Ok(
                            JsPostUpdateExpression(
                                JsPostUpdateExpression {
                                    operand: Ok(
                                        JsReferenceIdentifierExpression(
                                            JsReferenceIdentifierExpression {
                                                name_token: Ok(
                                                    IDENT@24..25 "i" [] [],
                                                ),
                                            },
                                        ),
                                    ),
                                    operator: Ok(
                                        PLUS2@25..27 "++" [] [],
                                    ),
                                },
                            ),
                        ),
                    },
                ),
                r_paren_token: Ok(
                    R_PAREN@27..29 ")" [] [Whitespace(" ")],
                ),
                cons: Ok(
                    JsBlockStatement(
                        JsBlockStatement {
                            l_curly_token: Ok(
                                L_CURLY@29..30 "{" [] [],
                            ),
                            statements: [],
                            r_curly_token: Ok(
                                R_CURLY@30..31 "}" [] [],
                            ),
                        },
                    ),
                ),
            },
        ),
        ForOfStmt(
            ForOfStmt {
                for_token: Ok(
                    FOR_KW@31..36 "for" [Whitespace("\n")] [Whitespace(" ")],
                ),
                l_paren_token: Ok(
                    L_PAREN@36..37 "(" [] [],
                ),
                left: Ok(
                    ForStmtInit {
                        inner: Ok(
                            JsVariableDeclaration(
                                JsVariableDeclaration {
                                    kind_token: Ok(
                                        LET_KW@37..41 "let" [] [Whitespace(" ")],
                                    ),
                                    declarators: [
                                        AstSeparatedElement {
                                            node: JsVariableDeclarator {
                                                id: Ok(
                                                    ObjectPattern(
                                                        ObjectPattern {
                                                            l_curly_token: Ok(
                                                                L_CURLY@41..43 "{" [] [Whitespace(" ")],
                                                            ),
                                                            elements: [
                                                                AstSeparatedElement {
                                                                    node: SinglePattern(
                                                                        SinglePattern {
                                                                            name: Ok(
                                                                                Name {
                                                                                    ident_token: Ok(
                                                                                        IDENT@43..46 "foo" [] [],
                                                                                    ),
                                                                                },
                                                                            ),
                                                                            question_mark_token: None,
                                                                            excl_token: None,
                                                                            ty: None,
                                                                        },
                                                                    ),
                                                                    trailing_separator: Some(
                                                                        COMMA@46..48 "," [] [Whitespace(" ")],
                                                                    ),
                                                                },
                                                                AstSeparatedElement {
                                                                    node: SinglePattern(
                                                                        SinglePattern {
                                                                            name: Ok(
                                                                                Name {
                                                                                    ident_token: Ok(
                                                                                        IDENT@48..52 "bar" [] [Whitespace(" ")],
                                                                                    ),
                                                                                },
                                                                            ),
                                                                            question_mark_token: None,
                                                                            excl_token: None,
                                                                            ty: None,
                                                                        },
                                                                    ),
                                                                    trailing_separator: None,
                                                                },
                                                            ],
                                                            r_curly_token: Ok(
                                                                R_CURLY@52..54 "}" [] [Whitespace(" ")],
                                                            ),
                                                        },
                                                    ),
                                                ),
                                                init: None,
                                            },
                                            trailing_separator: None,
                                        },
                                    ],
                                },
                            ),
                        ),
                        semicolon_token: Err(
                            MissingRequiredChild(
                                2: FOR_STMT_INIT@37..54
                                  0: JS_VARIABLE_DECLARATION@37..54
                                    0: LET_KW@37..41 "let" [] [Whitespace(" ")]
                                    1: LIST@41..54
                                      0: JS_VARIABLE_DECLARATOR@41..54
                                        0: OBJECT_PATTERN@41..54
                                          0: L_CURLY@41..43 "{" [] [Whitespace(" ")]
                                          1: LIST@43..52
                                            0: SINGLE_PATTERN@43..46
                                              0: NAME@43..46
                                                0: IDENT@43..46 "foo" [] []
                                            1: COMMA@46..48 "," [] [Whitespace(" ")]
                                            2: SINGLE_PATTERN@48..52
                                              0: NAME@48..52
                                                0: IDENT@48..52 "bar" [] [Whitespace(" ")]
                                          2: R_CURLY@52..54 "}" [] [Whitespace(" ")]
                                ,
                            ),
                        ),
                    },
                ),
                of_token: Err(
                    MissingRequiredChild(
                        1: FOR_OF_STMT@31..63
                          0: FOR_KW@31..36 "for" [Whitespace("\n")] [Whitespace(" ")]
                          1: L_PAREN@36..37 "(" [] []
                          2: FOR_STMT_INIT@37..54
                            0: JS_VARIABLE_DECLARATION@37..54
                              0: LET_KW@37..41 "let" [] [Whitespace(" ")]
                              1: LIST@41..54
                                0: JS_VARIABLE_DECLARATOR@41..54
                                  0: OBJECT_PATTERN@41..54
                                    0: L_CURLY@41..43 "{" [] [Whitespace(" ")]
                                    1: LIST@43..52
                                      0: SINGLE_PATTERN@43..46
                                        0: NAME@43..46
                                          0: IDENT@43..46 "foo" [] []
                                      1: COMMA@46..48 "," [] [Whitespace(" ")]
                                      2: SINGLE_PATTERN@48..52
                                        0: NAME@48..52
                                          0: IDENT@48..52 "bar" [] [Whitespace(" ")]
                                    2: R_CURLY@52..54 "}" [] [Whitespace(" ")]
                          3: IDENT@54..57 "of" [] [Whitespace(" ")]
                          4: JS_OBJECT_EXPRESSION@57..59
                            0: L_CURLY@57..58 "{" [] []
                            1: LIST@58..58
                            2: R_CURLY@58..59 "}" [] []
                          5: R_PAREN@59..61 ")" [] [Whitespace(" ")]
                          6: JS_BLOCK_STATEMENT@61..63
                            0: L_CURLY@61..62 "{" [] []
                            1: LIST@62..62
                            2: R_CURLY@62..63 "}" [] []
                        ,
                    ),
                ),
                right: Ok(
                    JsObjectExpression(
                        JsObjectExpression {
                            l_curly_token: Ok(
                                L_CURLY@57..58 "{" [] [],
                            ),
                            members: [],
                            r_curly_token: Ok(
                                R_CURLY@58..59 "}" [] [],
                            ),
                        },
                    ),
                ),
                r_paren_token: Ok(
                    R_PAREN@59..61 ")" [] [Whitespace(" ")],
                ),
                cons: Ok(
                    JsBlockStatement(
                        JsBlockStatement {
                            l_curly_token: Ok(
                                L_CURLY@61..62 "{" [] [],
                            ),
                            statements: [],
                            r_curly_token: Ok(
                                R_CURLY@62..63 "}" [] [],
                            ),
                        },
                    ),
                ),
            },
        ),
        ForInStmt(
            ForInStmt {
                for_token: Ok(
                    FOR_KW@63..68 "for" [Whitespace("\n")] [Whitespace(" ")],
                ),
                l_paren_token: Ok(
                    L_PAREN@68..69 "(" [] [],
                ),
                left: Ok(
                    ForStmtInit {
                        inner: Ok(
                            JsAnyExpression(
                                JsReferenceIdentifierExpression(
                                    JsReferenceIdentifierExpression {
                                        name_token: Ok(
                                            IDENT@69..73 "foo" [] [Whitespace(" ")],
                                        ),
                                    },
                                ),
                            ),
                        ),
                        semicolon_token: Err(
                            MissingRequiredChild(
                                2: FOR_STMT_INIT@69..73
                                  0: JS_REFERENCE_IDENTIFIER_EXPRESSION@69..73
                                    0: IDENT@69..73 "foo" [] [Whitespace(" ")]
                                ,
                            ),
                        ),
                    },
                ),
                in_token: Ok(
                    IN_KW@73..76 "in" [] [Whitespace(" ")],
                ),
                right: Ok(
                    JsObjectExpression(
                        JsObjectExpression {
                            l_curly_token: Ok(
                                L_CURLY@76..77 "{" [] [],
                            ),
                            members: [],
                            r_curly_token: Ok(
                                R_CURLY@77..78 "}" [] [],
                            ),
                        },
                    ),
                ),
                r_paren_token: Ok(
                    R_PAREN@78..80 ")" [] [Whitespace(" ")],
                ),
                cons: Ok(
                    JsBlockStatement(
                        JsBlockStatement {
                            l_curly_token: Ok(
                                L_CURLY@80..81 "{" [] [],
                            ),
                            statements: [],
                            r_curly_token: Ok(
                                R_CURLY@81..82 "}" [] [],
                            ),
                        },
                    ),
                ),
            },
        ),
        ForStmt(
            ForStmt {
                for_token: Ok(
                    FOR_KW@82..87 "for" [Whitespace("\n")] [Whitespace(" ")],
                ),
                l_paren_token: Ok(
                    L_PAREN@87..88 "(" [] [],
                ),
                init: None,
                test: None,
                update: None,
                r_paren_token: Ok(
                    R_PAREN@90..92 ")" [] [Whitespace(" ")],
                ),
                cons: Ok(
                    JsBlockStatement(
                        JsBlockStatement {
                            l_curly_token: Ok(
                                L_CURLY@92..93 "{" [] [],
                            ),
                            statements: [],
                            r_curly_token: Ok(
                                R_CURLY@93..94 "}" [] [],
                            ),
                        },
                    ),
                ),
            },
        ),
    ],
}

0: JS_ROOT@0..95
  0: (empty)
  1: LIST@0..0
  2: LIST@0..94
    0: FOR_STMT@0..31
      0: FOR_KW@0..4 "for" [] [Whitespace(" ")]
      1: L_PAREN@4..5 "(" [] []
      2: FOR_STMT_INIT@5..14
        0: JS_VARIABLE_DECLARATION@5..14
          0: LET_KW@5..9 "let" [] [Whitespace(" ")]
          1: LIST@9..14
            0: JS_VARIABLE_DECLARATOR@9..14
              0: SINGLE_PATTERN@9..11
                0: NAME@9..11
                  0: IDENT@9..11 "i" [] [Whitespace(" ")]
              1: JS_EQUAL_VALUE_CLAUSE@11..14
                0: EQ@11..13 "=" [] [Whitespace(" ")]
                1: JS_NUMBER_LITERAL_EXPRESSION@13..14
                  0: JS_NUMBER_LITERAL@13..14 "5" [] []
      3: SEMICOLON@14..16 ";" [] [Whitespace(" ")]
      4: FOR_STMT_TEST@16..22
        0: JS_BINARY_EXPRESSION@16..22
          0: JS_REFERENCE_IDENTIFIER_EXPRESSION@16..18
            0: IDENT@16..18 "i" [] [Whitespace(" ")]
          1: L_ANGLE@18..20 "<" [] [Whitespace(" ")]
          2: JS_NUMBER_LITERAL_EXPRESSION@20..22
            0: JS_NUMBER_LITERAL@20..22 "10" [] []
      5: SEMICOLON@22..24 ";" [] [Whitespace(" ")]
      6: FOR_STMT_UPDATE@24..27
        0: JS_POST_UPDATE_EXPRESSION@24..27
          0: JS_REFERENCE_IDENTIFIER_EXPRESSION@24..25
            0: IDENT@24..25 "i" [] []
          1: PLUS2@25..27 "++" [] []
      7: R_PAREN@27..29 ")" [] [Whitespace(" ")]
      8: JS_BLOCK_STATEMENT@29..31
        0: L_CURLY@29..30 "{" [] []
        1: LIST@30..30
        2: R_CURLY@30..31 "}" [] []
    1: FOR_OF_STMT@31..63
      0: FOR_KW@31..36 "for" [Whitespace("\n")] [Whitespace(" ")]
      1: L_PAREN@36..37 "(" [] []
      2: FOR_STMT_INIT@37..54
        0: JS_VARIABLE_DECLARATION@37..54
          0: LET_KW@37..41 "let" [] [Whitespace(" ")]
          1: LIST@41..54
            0: JS_VARIABLE_DECLARATOR@41..54
              0: OBJECT_PATTERN@41..54
                0: L_CURLY@41..43 "{" [] [Whitespace(" ")]
                1: LIST@43..52
                  0: SINGLE_PATTERN@43..46
                    0: NAME@43..46
                      0: IDENT@43..46 "foo" [] []
                  1: COMMA@46..48 "," [] [Whitespace(" ")]
                  2: SINGLE_PATTERN@48..52
                    0: NAME@48..52
                      0: IDENT@48..52 "bar" [] [Whitespace(" ")]
                2: R_CURLY@52..54 "}" [] [Whitespace(" ")]
      3: IDENT@54..57 "of" [] [Whitespace(" ")]
      4: JS_OBJECT_EXPRESSION@57..59
        0: L_CURLY@57..58 "{" [] []
        1: LIST@58..58
        2: R_CURLY@58..59 "}" [] []
      5: R_PAREN@59..61 ")" [] [Whitespace(" ")]
      6: JS_BLOCK_STATEMENT@61..63
        0: L_CURLY@61..62 "{" [] []
        1: LIST@62..62
        2: R_CURLY@62..63 "}" [] []
    2: FOR_IN_STMT@63..82
      0: FOR_KW@63..68 "for" [Whitespace("\n")] [Whitespace(" ")]
      1: L_PAREN@68..69 "(" [] []
      2: FOR_STMT_INIT@69..73
        0: JS_REFERENCE_IDENTIFIER_EXPRESSION@69..73
          0: IDENT@69..73 "foo" [] [Whitespace(" ")]
      3: IN_KW@73..76 "in" [] [Whitespace(" ")]
      4: JS_OBJECT_EXPRESSION@76..78
        0: L_CURLY@76..77 "{" [] []
        1: LIST@77..77
        2: R_CURLY@77..78 "}" [] []
      5: R_PAREN@78..80 ")" [] [Whitespace(" ")]
      6: JS_BLOCK_STATEMENT@80..82
        0: L_CURLY@80..81 "{" [] []
        1: LIST@81..81
        2: R_CURLY@81..82 "}" [] []
    3: FOR_STMT@82..94
      0: FOR_KW@82..87 "for" [Whitespace("\n")] [Whitespace(" ")]
      1: L_PAREN@87..88 "(" [] []
      2: SEMICOLON@88..89 ";" [] []
      3: SEMICOLON@89..90 ";" [] []
      4: R_PAREN@90..92 ")" [] [Whitespace(" ")]
      5: JS_BLOCK_STATEMENT@92..94
        0: L_CURLY@92..93 "{" [] []
        1: LIST@93..93
        2: R_CURLY@93..94 "}" [] []
  3: EOF@94..95 "" [Whitespace("\n")] []
