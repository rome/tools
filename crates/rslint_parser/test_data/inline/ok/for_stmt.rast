<<<<<<< HEAD
JS_MODULE@0..95
=======
MODULE@0..94
>>>>>>> 56d750195 (trim format_raw when formatter finds an error)
  LIST@0..94
    FOR_STMT@0..31
       FOR_KW@0..4 "for" " "
       L_PAREN@4..5 "(" 
      FOR_STMT_INIT@5..14
        VAR_DECL@5..14
           IDENT@5..9 "let" " "
          LIST@9..14
            DECLARATOR@9..14
              SINGLE_PATTERN@9..11
                NAME@9..11
                   IDENT@9..11 "i" " "
               EQ@11..13 "=" " "
              LITERAL@13..14
                 NUMBER@13..14 "5" 
       SEMICOLON@14..16 ";" " "
      FOR_STMT_TEST@16..22
        BIN_EXPR@16..22
          NAME_REF@16..18
             IDENT@16..18 "i" " "
           L_ANGLE@18..20 "<" " "
          LITERAL@20..22
             NUMBER@20..22 "10" 
       SEMICOLON@22..24 ";" " "
      FOR_STMT_UPDATE@24..27
        POST_UPDATE_EXPRESSION@24..27
          NAME_REF@24..25
<<<<<<< HEAD
            IDENT@24..25 "i"
          PLUS2@25..27 "++"
      R_PAREN@27..28 ")"
      WHITESPACE@28..29 " "
      JS_BLOCK_STATEMENT@29..31
        L_CURLY@29..30 "{"
=======
             IDENT@24..25 "i" 
           PLUS2@25..27 "++" 
       R_PAREN@27..29 ")" " "
      BLOCK_STMT@29..31
         L_CURLY@29..30 "{" 
>>>>>>> 56d750195 (trim format_raw when formatter finds an error)
        LIST@30..30
         R_CURLY@30..31 "}" 
    FOR_OF_STMT@31..63
      "\n" FOR_KW@31..36 "for" " "
       L_PAREN@36..37 "(" 
      FOR_STMT_INIT@37..54
        VAR_DECL@37..54
           IDENT@37..41 "let" " "
          LIST@41..54
            DECLARATOR@41..54
              OBJECT_PATTERN@41..54
                 L_CURLY@41..43 "{" " "
                LIST@43..52
                  SINGLE_PATTERN@43..46
                    NAME@43..46
                       IDENT@43..46 "foo" 
                   COMMA@46..48 "," " "
                  SINGLE_PATTERN@48..52
                    NAME@48..52
                       IDENT@48..52 "bar" " "
                 R_CURLY@52..54 "}" " "
       IDENT@54..57 "of" " "
      OBJECT_EXPR@57..59
         L_CURLY@57..58 "{" 
        LIST@58..58
<<<<<<< HEAD
        R_CURLY@58..59 "}"
      R_PAREN@59..60 ")"
      WHITESPACE@60..61 " "
      JS_BLOCK_STATEMENT@61..63
        L_CURLY@61..62 "{"
=======
         R_CURLY@58..59 "}" 
       R_PAREN@59..61 ")" " "
      BLOCK_STMT@61..63
         L_CURLY@61..62 "{" 
>>>>>>> 56d750195 (trim format_raw when formatter finds an error)
        LIST@62..62
         R_CURLY@62..63 "}" 
    FOR_IN_STMT@63..82
      "\n" FOR_KW@63..68 "for" " "
       L_PAREN@68..69 "(" 
      FOR_STMT_INIT@69..73
        NAME_REF@69..73
           IDENT@69..73 "foo" " "
       IN_KW@73..76 "in" " "
      OBJECT_EXPR@76..78
         L_CURLY@76..77 "{" 
        LIST@77..77
<<<<<<< HEAD
        R_CURLY@77..78 "}"
      R_PAREN@78..79 ")"
      WHITESPACE@79..80 " "
      JS_BLOCK_STATEMENT@80..82
        L_CURLY@80..81 "{"
        LIST@81..81
        R_CURLY@81..82 "}"
    WHITESPACE@82..83 "\n"
    FOR_STMT@83..94
      FOR_KW@83..86 "for"
      WHITESPACE@86..87 " "
      L_PAREN@87..88 "("
      SEMICOLON@88..89 ";"
      SEMICOLON@89..90 ";"
      R_PAREN@90..91 ")"
      WHITESPACE@91..92 " "
      JS_BLOCK_STATEMENT@92..94
        L_CURLY@92..93 "{"
=======
         R_CURLY@77..78 "}" 
       R_PAREN@78..80 ")" " "
      BLOCK_STMT@80..82
         L_CURLY@80..81 "{" 
        LIST@81..81
         R_CURLY@81..82 "}" 
    FOR_STMT@82..94
      "\n" FOR_KW@82..87 "for" " "
       L_PAREN@87..88 "(" 
       SEMICOLON@88..89 ";" 
       SEMICOLON@89..90 ";" 
       R_PAREN@90..92 ")" " "
      BLOCK_STMT@92..94
         L_CURLY@92..93 "{" 
>>>>>>> 56d750195 (trim format_raw when formatter finds an error)
        LIST@93..93
         R_CURLY@93..94 "}" 
