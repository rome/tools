JsModule {
    interpreter_token: missing (optional),
    directives: JsDirectiveList [],
    items: JsModuleItemList [
        TsTypeAliasDeclaration {
            type_token: TYPE_KW@0..5 "type" [] [Whitespace(" ")],
            binding_identifier: TsIdentifierBinding {
                name_token: IDENT@5..7 "A" [] [Whitespace(" ")],
            },
            type_parameters: missing (optional),
            eq_token: EQ@7..9 "=" [] [Whitespace(" ")],
            ty: TsUnionType {
                leading_separator_token: missing (optional),
                types: TsUnionTypeVariantList [
                    TsStringType {
                        string_token: STRING_KW@9..16 "string" [] [Whitespace(" ")],
                    },
                    PIPE@16..18 "|" [] [Whitespace(" ")],
                    TsNumberType {
                        number_token: NUMBER_KW@18..24 "number" [] [],
                    },
                ],
            },
            semicolon_token: SEMICOLON@24..25 ";" [] [],
        },
        TsTypeAliasDeclaration {
            type_token: TYPE_KW@25..31 "type" [Newline("\n")] [Whitespace(" ")],
            binding_identifier: TsIdentifierBinding {
                name_token: IDENT@31..33 "B" [] [Whitespace(" ")],
            },
            type_parameters: missing (optional),
            eq_token: EQ@33..35 "=" [] [Whitespace(" ")],
            ty: TsUnionType {
                leading_separator_token: PIPE@35..37 "|" [] [Whitespace(" ")],
                types: TsUnionTypeVariantList [
                    TsReferenceType {
                        name: JsReferenceIdentifier {
                            value_token: IDENT@37..39 "A" [] [Whitespace(" ")],
                        },
                        type_arguments: missing (optional),
                    },
                    PIPE@39..41 "|" [] [Whitespace(" ")],
                    TsVoidType {
                        void_token: VOID_KW@41..46 "void" [] [Whitespace(" ")],
                    },
                    PIPE@46..48 "|" [] [Whitespace(" ")],
                    TsNullLiteralType {
                        literal_token: NULL_KW@48..52 "null" [] [],
                    },
                ],
            },
            semicolon_token: SEMICOLON@52..53 ";" [] [],
        },
        TsTypeAliasDeclaration {
            type_token: TYPE_KW@53..59 "type" [Newline("\n")] [Whitespace(" ")],
            binding_identifier: TsIdentifierBinding {
                name_token: IDENT@59..61 "C" [] [Whitespace(" ")],
            },
            type_parameters: missing (optional),
            eq_token: EQ@61..63 "=" [] [Whitespace(" ")],
            ty: TsUnionType {
                leading_separator_token: missing (optional),
                types: TsUnionTypeVariantList [
                    TsIntersectionType {
                        leading_separator_token: missing (optional),
                        types: TsIntersectionTypeElementList [
                            TsReferenceType {
                                name: JsReferenceIdentifier {
                                    value_token: IDENT@63..65 "A" [] [Whitespace(" ")],
                                },
                                type_arguments: missing (optional),
                            },
                            AMP@65..67 "&" [] [Whitespace(" ")],
                            TsReferenceType {
                                name: JsReferenceIdentifier {
                                    value_token: IDENT@67..69 "C" [] [Whitespace(" ")],
                                },
                                type_arguments: missing (optional),
                            },
                        ],
                    },
                    PIPE@69..71 "|" [] [Whitespace(" ")],
                    TsReferenceType {
                        name: JsReferenceIdentifier {
                            value_token: IDENT@71..72 "C" [] [],
                        },
                        type_arguments: missing (optional),
                    },
                ],
            },
            semicolon_token: SEMICOLON@72..73 ";" [] [],
        },
    ],
    eof_token: EOF@73..74 "" [Newline("\n")] [],
}

0: JS_MODULE@0..74
  0: (empty)
  1: JS_DIRECTIVE_LIST@0..0
  2: JS_MODULE_ITEM_LIST@0..73
    0: TS_TYPE_ALIAS_DECLARATION@0..25
      0: TYPE_KW@0..5 "type" [] [Whitespace(" ")]
      1: TS_IDENTIFIER_BINDING@5..7
        0: IDENT@5..7 "A" [] [Whitespace(" ")]
      2: (empty)
      3: EQ@7..9 "=" [] [Whitespace(" ")]
      4: TS_UNION_TYPE@9..24
        0: (empty)
        1: TS_UNION_TYPE_VARIANT_LIST@9..24
          0: TS_STRING_TYPE@9..16
            0: STRING_KW@9..16 "string" [] [Whitespace(" ")]
          1: PIPE@16..18 "|" [] [Whitespace(" ")]
          2: TS_NUMBER_TYPE@18..24
            0: NUMBER_KW@18..24 "number" [] []
      5: SEMICOLON@24..25 ";" [] []
    1: TS_TYPE_ALIAS_DECLARATION@25..53
      0: TYPE_KW@25..31 "type" [Newline("\n")] [Whitespace(" ")]
      1: TS_IDENTIFIER_BINDING@31..33
        0: IDENT@31..33 "B" [] [Whitespace(" ")]
      2: (empty)
      3: EQ@33..35 "=" [] [Whitespace(" ")]
      4: TS_UNION_TYPE@35..52
        0: PIPE@35..37 "|" [] [Whitespace(" ")]
        1: TS_UNION_TYPE_VARIANT_LIST@37..52
          0: TS_REFERENCE_TYPE@37..39
            0: JS_REFERENCE_IDENTIFIER@37..39
              0: IDENT@37..39 "A" [] [Whitespace(" ")]
            1: (empty)
          1: PIPE@39..41 "|" [] [Whitespace(" ")]
          2: TS_VOID_TYPE@41..46
            0: VOID_KW@41..46 "void" [] [Whitespace(" ")]
          3: PIPE@46..48 "|" [] [Whitespace(" ")]
          4: TS_NULL_LITERAL_TYPE@48..52
            0: NULL_KW@48..52 "null" [] []
      5: SEMICOLON@52..53 ";" [] []
    2: TS_TYPE_ALIAS_DECLARATION@53..73
      0: TYPE_KW@53..59 "type" [Newline("\n")] [Whitespace(" ")]
      1: TS_IDENTIFIER_BINDING@59..61
        0: IDENT@59..61 "C" [] [Whitespace(" ")]
      2: (empty)
      3: EQ@61..63 "=" [] [Whitespace(" ")]
      4: TS_UNION_TYPE@63..72
        0: (empty)
        1: TS_UNION_TYPE_VARIANT_LIST@63..72
          0: TS_INTERSECTION_TYPE@63..69
            0: (empty)
            1: TS_INTERSECTION_TYPE_ELEMENT_LIST@63..69
              0: TS_REFERENCE_TYPE@63..65
                0: JS_REFERENCE_IDENTIFIER@63..65
                  0: IDENT@63..65 "A" [] [Whitespace(" ")]
                1: (empty)
              1: AMP@65..67 "&" [] [Whitespace(" ")]
              2: TS_REFERENCE_TYPE@67..69
                0: JS_REFERENCE_IDENTIFIER@67..69
                  0: IDENT@67..69 "C" [] [Whitespace(" ")]
                1: (empty)
          1: PIPE@69..71 "|" [] [Whitespace(" ")]
          2: TS_REFERENCE_TYPE@71..72
            0: JS_REFERENCE_IDENTIFIER@71..72
              0: IDENT@71..72 "C" [] []
            1: (empty)
      5: SEMICOLON@72..73 ";" [] []
  3: EOF@73..74 "" [Newline("\n")] []
