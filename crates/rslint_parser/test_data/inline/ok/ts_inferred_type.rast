JsModule {
    interpreter_token: missing (optional),
    directives: JsDirectiveList [],
    items: JsModuleItemList [
        TsTypeAlias {
            type_token: TYPE_KW@0..19 "type" [Comments("// TYPESCRIPT"), Newline("\n")] [Whitespace(" ")],
            binding_identifier: TsIdentifierBinding {
                name_token: IDENT@19..21 "A" [] [Whitespace(" ")],
            },
            type_parameters: missing (required),
            eq_token: EQ@21..23 "=" [] [Whitespace(" ")],
            ty: TsInferredType {
                infer_token: INFER_KW@23..29 "infer" [] [Whitespace(" ")],
                type_parameter: TsTypeParameterName {
                    ident_token: IDENT@29..30 "B" [] [],
                },
            },
            semicolon_token: SEMICOLON@30..31 ";" [] [],
        },
        TsTypeAlias {
            type_token: TYPE_KW@31..37 "type" [Newline("\n")] [Whitespace(" ")],
            binding_identifier: TsIdentifierBinding {
                name_token: IDENT@37..39 "B" [] [Whitespace(" ")],
            },
            type_parameters: missing (required),
            eq_token: EQ@39..41 "=" [] [Whitespace(" ")],
            ty: TsObjectType {
                l_curly_token: L_CURLY@41..43 "{" [] [Whitespace(" ")],
                members: TsObjectTypeMemberList [
                    TsPropertySignatureObjectTypeMember {
                        readonly_token: missing (optional),
                        name: JsLiteralMemberName {
                            value: IDENT@43..44 "a" [] [],
                        },
                        optional_token_token: missing (optional),
                        type_annotation: TsTypeAnnotation {
                            colon_token: COLON@44..46 ":" [] [Whitespace(" ")],
                            ty: TsInferredType {
                                infer_token: INFER_KW@46..52 "infer" [] [Whitespace(" ")],
                                type_parameter: TsTypeParameterName {
                                    ident_token: IDENT@52..53 "U" [] [],
                                },
                            },
                        },
                    },
                    SEMICOLON@53..55 ";" [] [Whitespace(" ")],
                    TsPropertySignatureObjectTypeMember {
                        readonly_token: missing (optional),
                        name: JsLiteralMemberName {
                            value: IDENT@55..56 "b" [] [],
                        },
                        optional_token_token: missing (optional),
                        type_annotation: TsTypeAnnotation {
                            colon_token: COLON@56..58 ":" [] [Whitespace(" ")],
                            ty: TsInferredType {
                                infer_token: INFER_KW@58..64 "infer" [] [Whitespace(" ")],
                                type_parameter: TsTypeParameterName {
                                    ident_token: IDENT@64..65 "U" [] [],
                                },
                            },
                        },
                    },
                ],
                r_curly_token: R_CURLY@65..66 "}" [] [],
            },
            semicolon_token: SEMICOLON@66..67 ";" [] [],
        },
    ],
    eof_token: EOF@67..68 "" [Newline("\n")] [],
}

0: JS_MODULE@0..68
  0: (empty)
  1: JS_DIRECTIVE_LIST@0..0
  2: JS_MODULE_ITEM_LIST@0..67
    0: TS_TYPE_ALIAS@0..31
      0: TYPE_KW@0..19 "type" [Comments("// TYPESCRIPT"), Newline("\n")] [Whitespace(" ")]
      1: TS_IDENTIFIER_BINDING@19..21
        0: IDENT@19..21 "A" [] [Whitespace(" ")]
      2: (empty)
      3: EQ@21..23 "=" [] [Whitespace(" ")]
      4: TS_INFERRED_TYPE@23..30
        0: INFER_KW@23..29 "infer" [] [Whitespace(" ")]
        1: TS_TYPE_PARAMETER_NAME@29..30
          0: IDENT@29..30 "B" [] []
      5: SEMICOLON@30..31 ";" [] []
    1: TS_TYPE_ALIAS@31..67
      0: TYPE_KW@31..37 "type" [Newline("\n")] [Whitespace(" ")]
      1: TS_IDENTIFIER_BINDING@37..39
        0: IDENT@37..39 "B" [] [Whitespace(" ")]
      2: (empty)
      3: EQ@39..41 "=" [] [Whitespace(" ")]
      4: TS_OBJECT_TYPE@41..66
        0: L_CURLY@41..43 "{" [] [Whitespace(" ")]
        1: TS_OBJECT_TYPE_MEMBER_LIST@43..65
          0: TS_PROPERTY_SIGNATURE_OBJECT_TYPE_MEMBER@43..53
            0: (empty)
            1: JS_LITERAL_MEMBER_NAME@43..44
              0: IDENT@43..44 "a" [] []
            2: (empty)
            3: TS_TYPE_ANNOTATION@44..53
              0: COLON@44..46 ":" [] [Whitespace(" ")]
              1: TS_INFERRED_TYPE@46..53
                0: INFER_KW@46..52 "infer" [] [Whitespace(" ")]
                1: TS_TYPE_PARAMETER_NAME@52..53
                  0: IDENT@52..53 "U" [] []
          1: SEMICOLON@53..55 ";" [] [Whitespace(" ")]
          2: TS_PROPERTY_SIGNATURE_OBJECT_TYPE_MEMBER@55..65
            0: (empty)
            1: JS_LITERAL_MEMBER_NAME@55..56
              0: IDENT@55..56 "b" [] []
            2: (empty)
            3: TS_TYPE_ANNOTATION@56..65
              0: COLON@56..58 ":" [] [Whitespace(" ")]
              1: TS_INFERRED_TYPE@58..65
                0: INFER_KW@58..64 "infer" [] [Whitespace(" ")]
                1: TS_TYPE_PARAMETER_NAME@64..65
                  0: IDENT@64..65 "U" [] []
        2: R_CURLY@65..66 "}" [] []
      5: SEMICOLON@66..67 ";" [] []
  3: EOF@67..68 "" [Newline("\n")] []
