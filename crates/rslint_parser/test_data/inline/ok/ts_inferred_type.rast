JsModule {
    interpreter_token: missing (optional),
    directives: JsDirectiveList [],
    items: JsModuleItemList [
        TsTypeAliasDeclaration {
            declare_token: missing (optional),
            type_token: TYPE_KW@0..5 "type" [] [Whitespace(" ")],
            binding_identifier: TsIdentifierBinding {
                name_token: IDENT@5..7 "A" [] [Whitespace(" ")],
            },
            type_parameters: missing (optional),
            eq_token: EQ@7..9 "=" [] [Whitespace(" ")],
            ty: TsInferType {
                infer_token: INFER_KW@9..15 "infer" [] [Whitespace(" ")],
                type_parameter: TsTypeParameterName {
                    ident_token: IDENT@15..16 "B" [] [],
                },
            },
            semicolon_token: SEMICOLON@16..17 ";" [] [],
        },
        TsTypeAliasDeclaration {
            declare_token: missing (optional),
            type_token: TYPE_KW@17..23 "type" [Newline("\n")] [Whitespace(" ")],
            binding_identifier: TsIdentifierBinding {
                name_token: IDENT@23..25 "B" [] [Whitespace(" ")],
            },
            type_parameters: missing (optional),
            eq_token: EQ@25..27 "=" [] [Whitespace(" ")],
            ty: TsObjectType {
                l_curly_token: L_CURLY@27..29 "{" [] [Whitespace(" ")],
                members: TsTypeMemberList [
                    TsPropertySignatureTypeMember {
                        readonly_token: missing (optional),
                        name: JsLiteralMemberName {
                            value: IDENT@29..30 "a" [] [],
                        },
                        optional_token: missing (optional),
                        type_annotation: TsTypeAnnotation {
                            colon_token: COLON@30..32 ":" [] [Whitespace(" ")],
                            ty: TsInferType {
                                infer_token: INFER_KW@32..38 "infer" [] [Whitespace(" ")],
                                type_parameter: TsTypeParameterName {
                                    ident_token: IDENT@38..39 "U" [] [],
                                },
                            },
                        },
                        separator_token: SEMICOLON@39..41 ";" [] [Whitespace(" ")],
                    },
                    TsPropertySignatureTypeMember {
                        readonly_token: missing (optional),
                        name: JsLiteralMemberName {
                            value: IDENT@41..42 "b" [] [],
                        },
                        optional_token: missing (optional),
                        type_annotation: TsTypeAnnotation {
                            colon_token: COLON@42..44 ":" [] [Whitespace(" ")],
                            ty: TsInferType {
                                infer_token: INFER_KW@44..50 "infer" [] [Whitespace(" ")],
                                type_parameter: TsTypeParameterName {
                                    ident_token: IDENT@50..51 "U" [] [],
                                },
                            },
                        },
                        separator_token: missing (optional),
                    },
                ],
                r_curly_token: R_CURLY@51..52 "}" [] [],
            },
            semicolon_token: SEMICOLON@52..53 ";" [] [],
        },
    ],
    eof_token: EOF@53..54 "" [Newline("\n")] [],
}

0: JS_MODULE@0..54
  0: (empty)
  1: JS_DIRECTIVE_LIST@0..0
  2: JS_MODULE_ITEM_LIST@0..53
    0: TS_TYPE_ALIAS_DECLARATION@0..17
      0: (empty)
      1: TYPE_KW@0..5 "type" [] [Whitespace(" ")]
      2: TS_IDENTIFIER_BINDING@5..7
        0: IDENT@5..7 "A" [] [Whitespace(" ")]
      3: (empty)
      4: EQ@7..9 "=" [] [Whitespace(" ")]
      5: TS_INFER_TYPE@9..16
        0: INFER_KW@9..15 "infer" [] [Whitespace(" ")]
        1: TS_TYPE_PARAMETER_NAME@15..16
          0: IDENT@15..16 "B" [] []
      6: SEMICOLON@16..17 ";" [] []
    1: TS_TYPE_ALIAS_DECLARATION@17..53
      0: (empty)
      1: TYPE_KW@17..23 "type" [Newline("\n")] [Whitespace(" ")]
      2: TS_IDENTIFIER_BINDING@23..25
        0: IDENT@23..25 "B" [] [Whitespace(" ")]
      3: (empty)
      4: EQ@25..27 "=" [] [Whitespace(" ")]
      5: TS_OBJECT_TYPE@27..52
        0: L_CURLY@27..29 "{" [] [Whitespace(" ")]
        1: TS_TYPE_MEMBER_LIST@29..51
          0: TS_PROPERTY_SIGNATURE_TYPE_MEMBER@29..41
            0: (empty)
            1: JS_LITERAL_MEMBER_NAME@29..30
              0: IDENT@29..30 "a" [] []
            2: (empty)
            3: TS_TYPE_ANNOTATION@30..39
              0: COLON@30..32 ":" [] [Whitespace(" ")]
              1: TS_INFER_TYPE@32..39
                0: INFER_KW@32..38 "infer" [] [Whitespace(" ")]
                1: TS_TYPE_PARAMETER_NAME@38..39
                  0: IDENT@38..39 "U" [] []
            4: SEMICOLON@39..41 ";" [] [Whitespace(" ")]
          1: TS_PROPERTY_SIGNATURE_TYPE_MEMBER@41..51
            0: (empty)
            1: JS_LITERAL_MEMBER_NAME@41..42
              0: IDENT@41..42 "b" [] []
            2: (empty)
            3: TS_TYPE_ANNOTATION@42..51
              0: COLON@42..44 ":" [] [Whitespace(" ")]
              1: TS_INFER_TYPE@44..51
                0: INFER_KW@44..50 "infer" [] [Whitespace(" ")]
                1: TS_TYPE_PARAMETER_NAME@50..51
                  0: IDENT@50..51 "U" [] []
            4: (empty)
        2: R_CURLY@51..52 "}" [] []
      6: SEMICOLON@52..53 ";" [] []
  3: EOF@53..54 "" [Newline("\n")] []
