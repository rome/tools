JsModule {
    interpreter_token: missing (optional),
    directives: JsDirectiveList [],
    items: JsModuleItemList [
        JsClassStatement {
            class_token: CLASS_KW@0..6 "class" [] [Whitespace(" ")],
            id: JsIdentifierBinding {
                name_token: IDENT@6..11 "Test" [] [Whitespace(" ")],
            },
            extends_clause: JsExtendsClause {
                extends_token: EXTENDS_KW@11..19 "extends" [] [Whitespace(" ")],
                super_class: JsIdentifierExpression {
                    name: JsReferenceIdentifier {
                        value_token: IDENT@19..21 "B" [] [Whitespace(" ")],
                    },
                },
            },
            implements_clause: missing (optional),
            l_curly_token: L_CURLY@21..22 "{" [] [],
            members: JsClassMemberList [
                JsConstructorClassMember {
                    access_modifier: missing (optional),
                    name: JsLiteralMemberName {
                        value: IDENT@22..35 "constructor" [Whitespace("\n"), Whitespace("\t")] [],
                    },
                    type_parameters: missing (optional),
                    parameters: JsConstructorParameters {
                        l_paren_token: L_PAREN@35..36 "(" [] [],
                        parameters: JsConstructorParameterList [],
                        r_paren_token: R_PAREN@36..38 ")" [] [Whitespace(" ")],
                    },
                    body: JsFunctionBody {
                        l_curly_token: L_CURLY@38..39 "{" [] [],
                        directives: JsDirectiveList [],
                        statements: JsStatementList [
                            JsExpressionStatement {
                                expression: JsCallExpression {
                                    callee: JsSuperExpression {
                                        super_token: SUPER_KW@39..47 "super" [Whitespace("\n"), Whitespace("\t\t")] [],
                                    },
                                    optional_chain_token_token: missing (optional),
                                    type_args: missing (optional),
                                    arguments: JsCallArguments {
                                        l_paren_token: L_PAREN@47..48 "(" [] [],
                                        args: JsCallArgumentList [],
                                        r_paren_token: R_PAREN@48..49 ")" [] [],
                                    },
                                },
                                semicolon_token: SEMICOLON@49..50 ";" [] [],
                            },
                        ],
                        r_curly_token: R_CURLY@50..53 "}" [Whitespace("\n"), Whitespace("\t")] [],
                    },
                },
                JsMethodClassMember {
                    access_modifier: missing (optional),
                    static_token: missing (optional),
                    abstract_token: missing (optional),
                    async_token: missing (optional),
                    star_token: missing (optional),
                    name: JsLiteralMemberName {
                        value: IDENT@53..59 "test" [Whitespace("\n"), Whitespace("\t")] [],
                    },
                    type_parameters: missing (optional),
                    parameters: JsParameters {
                        l_paren_token: L_PAREN@59..60 "(" [] [],
                        items: JsParameterList [],
                        r_paren_token: R_PAREN@60..62 ")" [] [Whitespace(" ")],
                    },
                    return_type: missing (optional),
                    body: JsFunctionBody {
                        l_curly_token: L_CURLY@62..63 "{" [] [],
                        directives: JsDirectiveList [],
                        statements: JsStatementList [
                            JsExpressionStatement {
                                expression: JsCallExpression {
                                    callee: JsStaticMemberExpression {
                                        object: JsSuperExpression {
                                            super_token: SUPER_KW@63..71 "super" [Whitespace("\n"), Whitespace("\t\t")] [],
                                        },
                                        operator: DOT@71..72 "." [] [],
                                        member: JsName {
                                            value_token: IDENT@72..76 "test" [] [],
                                        },
                                    },
                                    optional_chain_token_token: missing (optional),
                                    type_args: missing (optional),
                                    arguments: JsCallArguments {
                                        l_paren_token: L_PAREN@76..77 "(" [] [],
                                        args: JsCallArgumentList [
                                            JsIdentifierExpression {
                                                name: JsReferenceIdentifier {
                                                    value_token: IDENT@77..78 "a" [] [],
                                                },
                                            },
                                            COMMA@78..80 "," [] [Whitespace(" ")],
                                            JsIdentifierExpression {
                                                name: JsReferenceIdentifier {
                                                    value_token: IDENT@80..81 "b" [] [],
                                                },
                                            },
                                        ],
                                        r_paren_token: R_PAREN@81..82 ")" [] [],
                                    },
                                },
                                semicolon_token: SEMICOLON@82..83 ";" [] [],
                            },
                            JsExpressionStatement {
                                expression: JsComputedMemberExpression {
                                    object: JsSuperExpression {
                                        super_token: SUPER_KW@83..91 "super" [Whitespace("\n"), Whitespace("\t\t")] [],
                                    },
                                    optional_chain_token: missing (optional),
                                    l_brack_token: L_BRACK@91..92 "[" [] [],
                                    member: JsNumberLiteralExpression {
                                        value_token: JS_NUMBER_LITERAL@92..93 "1" [] [],
                                    },
                                    r_brack_token: R_BRACK@93..94 "]" [] [],
                                },
                                semicolon_token: SEMICOLON@94..95 ";" [] [],
                            },
                        ],
                        r_curly_token: R_CURLY@95..98 "}" [Whitespace("\n"), Whitespace("\t")] [],
                    },
                },
            ],
            r_curly_token: R_CURLY@98..100 "}" [Whitespace("\n")] [],
        },
    ],
    eof_token: EOF@100..101 "" [Whitespace("\n")] [],
}

0: JS_MODULE@0..101
  0: (empty)
  1: JS_DIRECTIVE_LIST@0..0
  2: JS_MODULE_ITEM_LIST@0..100
    0: JS_CLASS_STATEMENT@0..100
      0: CLASS_KW@0..6 "class" [] [Whitespace(" ")]
      1: JS_IDENTIFIER_BINDING@6..11
        0: IDENT@6..11 "Test" [] [Whitespace(" ")]
      2: JS_EXTENDS_CLAUSE@11..21
        0: EXTENDS_KW@11..19 "extends" [] [Whitespace(" ")]
        1: JS_IDENTIFIER_EXPRESSION@19..21
          0: JS_REFERENCE_IDENTIFIER@19..21
            0: IDENT@19..21 "B" [] [Whitespace(" ")]
      3: (empty)
      4: L_CURLY@21..22 "{" [] []
      5: JS_CLASS_MEMBER_LIST@22..98
        0: JS_CONSTRUCTOR_CLASS_MEMBER@22..53
          0: (empty)
          1: JS_LITERAL_MEMBER_NAME@22..35
            0: IDENT@22..35 "constructor" [Whitespace("\n"), Whitespace("\t")] []
          2: (empty)
          3: JS_CONSTRUCTOR_PARAMETERS@35..38
            0: L_PAREN@35..36 "(" [] []
            1: JS_CONSTRUCTOR_PARAMETER_LIST@36..36
            2: R_PAREN@36..38 ")" [] [Whitespace(" ")]
          4: JS_FUNCTION_BODY@38..53
            0: L_CURLY@38..39 "{" [] []
            1: JS_DIRECTIVE_LIST@39..39
            2: JS_STATEMENT_LIST@39..50
              0: JS_EXPRESSION_STATEMENT@39..50
                0: JS_CALL_EXPRESSION@39..49
                  0: JS_SUPER_EXPRESSION@39..47
                    0: SUPER_KW@39..47 "super" [Whitespace("\n"), Whitespace("\t\t")] []
                  1: (empty)
                  2: (empty)
                  3: JS_CALL_ARGUMENTS@47..49
                    0: L_PAREN@47..48 "(" [] []
                    1: JS_CALL_ARGUMENT_LIST@48..48
                    2: R_PAREN@48..49 ")" [] []
                1: SEMICOLON@49..50 ";" [] []
            3: R_CURLY@50..53 "}" [Whitespace("\n"), Whitespace("\t")] []
        1: JS_METHOD_CLASS_MEMBER@53..98
          0: (empty)
          1: (empty)
          2: (empty)
          3: (empty)
          4: (empty)
          5: JS_LITERAL_MEMBER_NAME@53..59
            0: IDENT@53..59 "test" [Whitespace("\n"), Whitespace("\t")] []
          6: (empty)
          7: JS_PARAMETERS@59..62
            0: L_PAREN@59..60 "(" [] []
            1: JS_PARAMETER_LIST@60..60
            2: R_PAREN@60..62 ")" [] [Whitespace(" ")]
          8: (empty)
          9: JS_FUNCTION_BODY@62..98
            0: L_CURLY@62..63 "{" [] []
            1: JS_DIRECTIVE_LIST@63..63
            2: JS_STATEMENT_LIST@63..95
              0: JS_EXPRESSION_STATEMENT@63..83
                0: JS_CALL_EXPRESSION@63..82
                  0: JS_STATIC_MEMBER_EXPRESSION@63..76
                    0: JS_SUPER_EXPRESSION@63..71
                      0: SUPER_KW@63..71 "super" [Whitespace("\n"), Whitespace("\t\t")] []
                    1: DOT@71..72 "." [] []
                    2: JS_NAME@72..76
                      0: IDENT@72..76 "test" [] []
                  1: (empty)
                  2: (empty)
                  3: JS_CALL_ARGUMENTS@76..82
                    0: L_PAREN@76..77 "(" [] []
                    1: JS_CALL_ARGUMENT_LIST@77..81
                      0: JS_IDENTIFIER_EXPRESSION@77..78
                        0: JS_REFERENCE_IDENTIFIER@77..78
                          0: IDENT@77..78 "a" [] []
                      1: COMMA@78..80 "," [] [Whitespace(" ")]
                      2: JS_IDENTIFIER_EXPRESSION@80..81
                        0: JS_REFERENCE_IDENTIFIER@80..81
                          0: IDENT@80..81 "b" [] []
                    2: R_PAREN@81..82 ")" [] []
                1: SEMICOLON@82..83 ";" [] []
              1: JS_EXPRESSION_STATEMENT@83..95
                0: JS_COMPUTED_MEMBER_EXPRESSION@83..94
                  0: JS_SUPER_EXPRESSION@83..91
                    0: SUPER_KW@83..91 "super" [Whitespace("\n"), Whitespace("\t\t")] []
                  1: (empty)
                  2: L_BRACK@91..92 "[" [] []
                  3: JS_NUMBER_LITERAL_EXPRESSION@92..93
                    0: JS_NUMBER_LITERAL@92..93 "1" [] []
                  4: R_BRACK@93..94 "]" [] []
                1: SEMICOLON@94..95 ";" [] []
            3: R_CURLY@95..98 "}" [Whitespace("\n"), Whitespace("\t")] []
      6: R_CURLY@98..100 "}" [Whitespace("\n")] []
  3: EOF@100..101 "" [Whitespace("\n")] []
