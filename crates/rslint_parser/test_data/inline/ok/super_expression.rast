JsModule {
    interpreter_token: missing (optional),
    directives: [],
    items: [
        JsClassDeclaration {
            class_token: CLASS_KW@0..6 "class" [] [Whitespace(" ")],
            id: JsIdentifierBinding {
                name_token: IDENT@6..11 "Test" [] [Whitespace(" ")],
            },
            implements_clause: missing (optional),
            extends_clause: JsExtendsClause {
                extends_token: EXTENDS_KW@11..19 "extends" [] [Whitespace(" ")],
                super_class: JsIdentifierExpression {
                    name: JsReferenceIdentifier {
                        value_token: IDENT@19..21 "B" [] [Whitespace(" ")],
                    },
                },
            },
            l_curly_token: L_CURLY@21..22 "{" [] [],
            members: [
                JsConstructorClassMember {
                    access_modifier: missing (optional),
                    name: JsLiteralMemberName {
                        value: IDENT@22..35 "constructor" [Whitespace("\n\t")] [],
                    },
                    parameter_list: JsConstructorParameterList {
                        l_paren_token: L_PAREN@35..36 "(" [] [],
                        parameters: [],
                        r_paren_token: R_PAREN@36..38 ")" [] [Whitespace(" ")],
                    },
                    body: JsFunctionBody {
                        l_curly_token: L_CURLY@38..39 "{" [] [],
                        directives: [],
                        statements: [
                            JsExpressionStatement {
                                expression: CallExpr {
                                    type_args: missing (optional),
                                    callee: JsSuperExpression {
                                        super_token: SUPER_KW@39..47 "super" [Whitespace("\n\t\t")] [],
                                    },
                                    arguments: ArgList {
                                        l_paren_token: L_PAREN@47..48 "(" [] [],
                                        args: [],
                                        r_paren_token: R_PAREN@48..49 ")" [] [],
                                    },
                                },
                                semicolon_token: SEMICOLON@49..50 ";" [] [],
                            },
                        ],
                        r_curly_token: R_CURLY@50..53 "}" [Whitespace("\n\t")] [],
                    },
                },
                JsMethodClassMember {
                    access_modifier: missing (optional),
                    static_token: missing (optional),
                    abstract_token: missing (optional),
                    async_token: missing (optional),
                    star_token: missing (optional),
                    name: JsLiteralMemberName {
                        value: IDENT@53..60 "test" [Whitespace("\n\n\t")] [],
                    },
                    type_parameters: missing (optional),
                    parameter_list: JsParameterList {
                        l_paren_token: L_PAREN@60..61 "(" [] [],
                        parameters: [],
                        r_paren_token: R_PAREN@61..63 ")" [] [Whitespace(" ")],
                    },
                    return_type: missing (optional),
                    body: JsFunctionBody {
                        l_curly_token: L_CURLY@63..64 "{" [] [],
                        directives: [],
                        statements: [
                            JsExpressionStatement {
                                expression: CallExpr {
                                    type_args: missing (optional),
                                    callee: JsStaticMemberExpression {
                                        object: JsSuperExpression {
                                            super_token: SUPER_KW@64..72 "super" [Whitespace("\n\t\t")] [],
                                        },
                                        operator: DOT@72..73 "." [] [],
                                        member: JsName {
                                            value_token: IDENT@73..77 "test" [] [],
                                        },
                                    },
                                    arguments: ArgList {
                                        l_paren_token: L_PAREN@77..78 "(" [] [],
                                        args: [
                                            JsIdentifierExpression {
                                                name: JsReferenceIdentifier {
                                                    value_token: IDENT@78..79 "a" [] [],
                                                },
                                            },
                                            COMMA@79..81 "," [] [Whitespace(" ")],
                                            JsIdentifierExpression {
                                                name: JsReferenceIdentifier {
                                                    value_token: IDENT@81..82 "b" [] [],
                                                },
                                            },
                                        ],
                                        r_paren_token: R_PAREN@82..83 ")" [] [],
                                    },
                                },
                                semicolon_token: SEMICOLON@83..84 ";" [] [],
                            },
                            JsExpressionStatement {
                                expression: JsComputedMemberExpression {
                                    object: JsSuperExpression {
                                        super_token: SUPER_KW@84..92 "super" [Whitespace("\n\t\t")] [],
                                    },
                                    optional_chain_token_token: missing (optional),
                                    l_brack_token: L_BRACK@92..93 "[" [] [],
                                    member: JsNumberLiteralExpression {
                                        value_token: JS_NUMBER_LITERAL@93..94 "1" [] [],
                                    },
                                    r_brack_token: R_BRACK@94..95 "]" [] [],
                                },
                                semicolon_token: SEMICOLON@95..96 ";" [] [],
                            },
                        ],
                        r_curly_token: R_CURLY@96..99 "}" [Whitespace("\n\t")] [],
                    },
                },
            ],
            r_curly_token: R_CURLY@99..101 "}" [Whitespace("\n")] [],
        },
    ],
}

0: JS_MODULE@0..102
  0: (empty)
  1: LIST@0..0
  2: LIST@0..101
    0: JS_CLASS_DECLARATION@0..101
      0: CLASS_KW@0..6 "class" [] [Whitespace(" ")]
      1: JS_IDENTIFIER_BINDING@6..11
        0: IDENT@6..11 "Test" [] [Whitespace(" ")]
      2: JS_EXTENDS_CLAUSE@11..21
        0: EXTENDS_KW@11..19 "extends" [] [Whitespace(" ")]
        1: JS_IDENTIFIER_EXPRESSION@19..21
          0: JS_REFERENCE_IDENTIFIER@19..21
            0: IDENT@19..21 "B" [] [Whitespace(" ")]
      3: L_CURLY@21..22 "{" [] []
      4: LIST@22..99
        0: JS_CONSTRUCTOR_CLASS_MEMBER@22..53
          0: JS_LITERAL_MEMBER_NAME@22..35
            0: IDENT@22..35 "constructor" [Whitespace("\n\t")] []
          1: JS_CONSTRUCTOR_PARAMETER_LIST@35..38
            0: L_PAREN@35..36 "(" [] []
            1: LIST@36..36
            2: R_PAREN@36..38 ")" [] [Whitespace(" ")]
          2: JS_FUNCTION_BODY@38..53
            0: L_CURLY@38..39 "{" [] []
            1: LIST@39..39
            2: LIST@39..50
              0: JS_EXPRESSION_STATEMENT@39..50
                0: CALL_EXPR@39..49
                  0: JS_SUPER_EXPRESSION@39..47
                    0: SUPER_KW@39..47 "super" [Whitespace("\n\t\t")] []
                  1: ARG_LIST@47..49
                    0: L_PAREN@47..48 "(" [] []
                    1: (empty)
                    2: R_PAREN@48..49 ")" [] []
                1: SEMICOLON@49..50 ";" [] []
            3: R_CURLY@50..53 "}" [Whitespace("\n\t")] []
        1: JS_METHOD_CLASS_MEMBER@53..99
          0: JS_LITERAL_MEMBER_NAME@53..60
            0: IDENT@53..60 "test" [Whitespace("\n\n\t")] []
          1: JS_PARAMETER_LIST@60..63
            0: L_PAREN@60..61 "(" [] []
            1: LIST@61..61
            2: R_PAREN@61..63 ")" [] [Whitespace(" ")]
          2: JS_FUNCTION_BODY@63..99
            0: L_CURLY@63..64 "{" [] []
            1: LIST@64..64
            2: LIST@64..96
              0: JS_EXPRESSION_STATEMENT@64..84
                0: CALL_EXPR@64..83
                  0: JS_STATIC_MEMBER_EXPRESSION@64..77
                    0: JS_SUPER_EXPRESSION@64..72
                      0: SUPER_KW@64..72 "super" [Whitespace("\n\t\t")] []
                    1: DOT@72..73 "." [] []
                    2: JS_NAME@73..77
                      0: IDENT@73..77 "test" [] []
                  1: ARG_LIST@77..83
                    0: L_PAREN@77..78 "(" [] []
                    1: LIST@78..82
                      0: JS_IDENTIFIER_EXPRESSION@78..79
                        0: JS_REFERENCE_IDENTIFIER@78..79
                          0: IDENT@78..79 "a" [] []
                      1: COMMA@79..81 "," [] [Whitespace(" ")]
                      2: JS_IDENTIFIER_EXPRESSION@81..82
                        0: JS_REFERENCE_IDENTIFIER@81..82
                          0: IDENT@81..82 "b" [] []
                    2: R_PAREN@82..83 ")" [] []
                1: SEMICOLON@83..84 ";" [] []
              1: JS_EXPRESSION_STATEMENT@84..96
                0: JS_COMPUTED_MEMBER_EXPRESSION@84..95
                  0: JS_SUPER_EXPRESSION@84..92
                    0: SUPER_KW@84..92 "super" [Whitespace("\n\t\t")] []
                  1: L_BRACK@92..93 "[" [] []
                  2: JS_NUMBER_LITERAL_EXPRESSION@93..94
                    0: JS_NUMBER_LITERAL@93..94 "1" [] []
                  3: R_BRACK@94..95 "]" [] []
                1: SEMICOLON@95..96 ";" [] []
            3: R_CURLY@96..99 "}" [Whitespace("\n\t")] []
      5: R_CURLY@99..101 "}" [Whitespace("\n")] []
  3: EOF@101..102 "" [Whitespace("\n")] []
