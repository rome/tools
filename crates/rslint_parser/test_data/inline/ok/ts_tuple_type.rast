JsModule {
    interpreter_token: missing (optional),
    directives: JsDirectiveList [],
    items: JsModuleItemList [
        TsTypeAliasDeclaration {
            type_token: TYPE_KW@0..5 "type" [] [Whitespace(" ")],
            binding_identifier: TsIdentifierBinding {
                name_token: IDENT@5..7 "A" [] [Whitespace(" ")],
            },
            type_parameters: missing (optional),
            eq_token: EQ@7..9 "=" [] [Whitespace(" ")],
            ty: TsTupleType {
                l_brack_token: L_BRACK@9..10 "[" [] [],
                elements: TsTupleTypeElementList [
                    TsStringType {
                        string_token: STRING_KW@10..16 "string" [] [],
                    },
                    COMMA@16..18 "," [] [Whitespace(" ")],
                    TsNumberType {
                        number_token: NUMBER_KW@18..24 "number" [] [],
                    },
                    COMMA@24..26 "," [] [Whitespace(" ")],
                    TsAnyType {
                        any_token: ANY_KW@26..29 "any" [] [],
                    },
                ],
                r_brack_token: R_BRACK@29..30 "]" [] [],
            },
            semicolon_token: missing (optional),
        },
        TsTypeAliasDeclaration {
            type_token: TYPE_KW@30..36 "type" [Newline("\n")] [Whitespace(" ")],
            binding_identifier: TsIdentifierBinding {
                name_token: IDENT@36..38 "B" [] [Whitespace(" ")],
            },
            type_parameters: missing (optional),
            eq_token: EQ@38..40 "=" [] [Whitespace(" ")],
            ty: TsTupleType {
                l_brack_token: L_BRACK@40..41 "[" [] [],
                elements: TsTupleTypeElementList [
                    TsNamedTupleTypeElement {
                        dotdotdot_token: missing (optional),
                        name: JsName {
                            value_token: IDENT@41..42 "a" [] [],
                        },
                        question_mark_token: missing (optional),
                        colon_token: COLON@42..44 ":" [] [Whitespace(" ")],
                        ty: TsStringType {
                            string_token: STRING_KW@44..50 "string" [] [],
                        },
                    },
                    COMMA@50..52 "," [] [Whitespace(" ")],
                    TsNamedTupleTypeElement {
                        dotdotdot_token: missing (optional),
                        name: JsName {
                            value_token: IDENT@52..53 "b" [] [],
                        },
                        question_mark_token: missing (optional),
                        colon_token: COLON@53..55 ":" [] [Whitespace(" ")],
                        ty: TsNumberType {
                            number_token: NUMBER_KW@55..61 "number" [] [],
                        },
                    },
                    COMMA@61..63 "," [] [Whitespace(" ")],
                    TsNamedTupleTypeElement {
                        dotdotdot_token: missing (optional),
                        name: JsName {
                            value_token: IDENT@63..64 "c" [] [],
                        },
                        question_mark_token: missing (optional),
                        colon_token: COLON@64..66 ":" [] [Whitespace(" ")],
                        ty: TsAnyType {
                            any_token: ANY_KW@66..69 "any" [] [],
                        },
                    },
                ],
                r_brack_token: R_BRACK@69..70 "]" [] [],
            },
            semicolon_token: missing (optional),
        },
        TsTypeAliasDeclaration {
            type_token: TYPE_KW@70..76 "type" [Newline("\n")] [Whitespace(" ")],
            binding_identifier: TsIdentifierBinding {
                name_token: IDENT@76..78 "C" [] [Whitespace(" ")],
            },
            type_parameters: missing (optional),
            eq_token: EQ@78..80 "=" [] [Whitespace(" ")],
            ty: TsTupleType {
                l_brack_token: L_BRACK@80..81 "[" [] [],
                elements: TsTupleTypeElementList [
                    TsNamedTupleTypeElement {
                        dotdotdot_token: missing (optional),
                        name: JsName {
                            value_token: IDENT@81..82 "a" [] [],
                        },
                        question_mark_token: missing (optional),
                        colon_token: COLON@82..84 ":" [] [Whitespace(" ")],
                        ty: TsStringType {
                            string_token: STRING_KW@84..90 "string" [] [],
                        },
                    },
                    COMMA@90..92 "," [] [Whitespace(" ")],
                    TsNamedTupleTypeElement {
                        dotdotdot_token: missing (optional),
                        name: JsName {
                            value_token: IDENT@92..93 "b" [] [],
                        },
                        question_mark_token: missing (optional),
                        colon_token: COLON@93..95 ":" [] [Whitespace(" ")],
                        ty: TsNumberType {
                            number_token: NUMBER_KW@95..101 "number" [] [],
                        },
                    },
                    COMMA@101..103 "," [] [Whitespace(" ")],
                    TsNamedTupleTypeElement {
                        dotdotdot_token: DOT2@103..106 "..." [] [],
                        name: JsName {
                            value_token: IDENT@106..107 "c" [] [],
                        },
                        question_mark_token: missing (optional),
                        colon_token: COLON@107..109 ":" [] [Whitespace(" ")],
                        ty: TsArrayType {
                            element_type: TsAnyType {
                                any_token: ANY_KW@109..112 "any" [] [],
                            },
                            l_brack_token: L_BRACK@112..113 "[" [] [],
                            r_brack_token: R_BRACK@113..114 "]" [] [],
                        },
                    },
                ],
                r_brack_token: R_BRACK@114..115 "]" [] [],
            },
            semicolon_token: missing (optional),
        },
        TsTypeAliasDeclaration {
            type_token: TYPE_KW@115..121 "type" [Newline("\n")] [Whitespace(" ")],
            binding_identifier: TsIdentifierBinding {
                name_token: IDENT@121..123 "D" [] [Whitespace(" ")],
            },
            type_parameters: missing (optional),
            eq_token: EQ@123..125 "=" [] [Whitespace(" ")],
            ty: TsTupleType {
                l_brack_token: L_BRACK@125..126 "[" [] [],
                elements: TsTupleTypeElementList [
                    TsNamedTupleTypeElement {
                        dotdotdot_token: missing (optional),
                        name: JsName {
                            value_token: IDENT@126..127 "a" [] [],
                        },
                        question_mark_token: QUESTION@127..128 "?" [] [],
                        colon_token: COLON@128..130 ":" [] [Whitespace(" ")],
                        ty: TsStringType {
                            string_token: STRING_KW@130..136 "string" [] [],
                        },
                    },
                ],
                r_brack_token: R_BRACK@136..137 "]" [] [],
            },
            semicolon_token: missing (optional),
        },
        TsTypeAliasDeclaration {
            type_token: TYPE_KW@137..143 "type" [Newline("\n")] [Whitespace(" ")],
            binding_identifier: TsIdentifierBinding {
                name_token: IDENT@143..145 "E" [] [Whitespace(" ")],
            },
            type_parameters: missing (optional),
            eq_token: EQ@145..147 "=" [] [Whitespace(" ")],
            ty: TsTupleType {
                l_brack_token: L_BRACK@147..148 "[" [] [],
                elements: TsTupleTypeElementList [
                    TsRestTupleTypeElement {
                        dotdotdot_token: DOT2@148..151 "..." [] [],
                        ty: TsArrayType {
                            element_type: TsStringType {
                                string_token: STRING_KW@151..157 "string" [] [],
                            },
                            l_brack_token: L_BRACK@157..158 "[" [] [],
                            r_brack_token: R_BRACK@158..159 "]" [] [],
                        },
                    },
                ],
                r_brack_token: R_BRACK@159..160 "]" [] [],
            },
            semicolon_token: missing (optional),
        },
        TsTypeAliasDeclaration {
            type_token: TYPE_KW@160..166 "type" [Newline("\n")] [Whitespace(" ")],
            binding_identifier: TsIdentifierBinding {
                name_token: IDENT@166..168 "F" [] [Whitespace(" ")],
            },
            type_parameters: missing (optional),
            eq_token: EQ@168..170 "=" [] [Whitespace(" ")],
            ty: TsTupleType {
                l_brack_token: L_BRACK@170..171 "[" [] [],
                elements: TsTupleTypeElementList [
                    TsOptionalTupleTypeElement {
                        ty: TsStringType {
                            string_token: STRING_KW@171..177 "string" [] [],
                        },
                        question_mark_token: QUESTION@177..178 "?" [] [],
                    },
                ],
                r_brack_token: R_BRACK@178..179 "]" [] [],
            },
            semicolon_token: missing (optional),
        },
        JsExport {
            export_token: EXPORT_KW@179..189 "export" [Newline("\n"), Newline("\n"), Newline("\n")] [Whitespace(" ")],
            export_clause: TsTypeAliasDeclaration {
                type_token: TYPE_KW@189..194 "type" [] [Whitespace(" ")],
                binding_identifier: TsIdentifierBinding {
                    name_token: IDENT@194..212 "ThunkMiddlewareFor" [] [],
                },
                type_parameters: TsTypeParameters {
                    l_angle_token: L_ANGLE@212..213 "<" [] [],
                    items: TsTypeParameterList [
                        TsTypeParameter {
                            name: TsTypeParameterName {
                                ident_token: IDENT@213..219 "S" [Newline("\n"), Whitespace("    ")] [],
                            },
                            constraint: missing (optional),
                            default: missing (optional),
                        },
                        COMMA@219..220 "," [] [],
                        TsTypeParameter {
                            name: TsTypeParameterName {
                                ident_token: IDENT@220..227 "O" [Newline("\n"), Whitespace("    ")] [Whitespace(" ")],
                            },
                            constraint: TsTypeConstraintClause {
                                extends_token: EXTENDS_KW@227..235 "extends" [] [Whitespace(" ")],
                                ty: TsReferenceType {
                                    name: JsReferenceIdentifier {
                                        value_token: IDENT@235..263 "GetDefaultMiddlewareOptions" [] [Whitespace(" ")],
                                    },
                                    type_arguments: missing (optional),
                                },
                            },
                            default: TsDefaultTypeClause {
                                eq_token: EQ@263..265 "=" [] [Whitespace(" ")],
                                ty: TsObjectType {
                                    l_curly_token: L_CURLY@265..266 "{" [] [],
                                    members: TsTypeMemberList [],
                                    r_curly_token: R_CURLY@266..267 "}" [] [],
                                },
                            },
                        },
                    ],
                    r_angle_token: R_ANGLE@267..274 ">" [Newline("\n"), Whitespace("    ")] [Whitespace(" ")],
                },
                eq_token: EQ@274..276 "=" [] [Whitespace(" ")],
                ty: TsConditionalType {
                    check_type: TsReferenceType {
                        name: JsReferenceIdentifier {
                            value_token: IDENT@276..278 "O" [] [Whitespace(" ")],
                        },
                        type_arguments: missing (optional),
                    },
                    extends_token: EXTENDS_KW@278..286 "extends" [] [Whitespace(" ")],
                    extends_type: TsObjectType {
                        l_curly_token: L_CURLY@286..287 "{" [] [],
                        members: TsTypeMemberList [
                            TsPropertySignatureTypeMember {
                                readonly_token: missing (optional),
                                name: JsLiteralMemberName {
                                    value: IDENT@287..301 "thunk" [Newline("\n"), Whitespace("        ")] [],
                                },
                                optional_token: missing (optional),
                                type_annotation: TsTypeAnnotation {
                                    colon_token: COLON@301..303 ":" [] [Whitespace(" ")],
                                    ty: TsBooleanLiteralType {
                                        literal: FALSE_KW@303..308 "false" [] [],
                                    },
                                },
                                separator_token: missing (optional),
                            },
                        ],
                        r_curly_token: R_CURLY@308..314 "}" [Newline("\n"), Whitespace("    ")] [],
                    },
                    question_mark_token: QUESTION@314..321 "?" [Newline("\n"), Whitespace("    ")] [Whitespace(" ")],
                    true_type: TsNeverType {
                        never_token: NEVER_KW@321..326 "never" [] [],
                    },
                    colon_token: COLON@326..333 ":" [Newline("\n"), Whitespace("    ")] [Whitespace(" ")],
                    false_type: TsConditionalType {
                        check_type: TsReferenceType {
                            name: JsReferenceIdentifier {
                                value_token: IDENT@333..335 "O" [] [Whitespace(" ")],
                            },
                            type_arguments: missing (optional),
                        },
                        extends_token: EXTENDS_KW@335..343 "extends" [] [Whitespace(" ")],
                        extends_type: TsObjectType {
                            l_curly_token: L_CURLY@343..345 "{" [] [Whitespace(" ")],
                            members: TsTypeMemberList [
                                TsPropertySignatureTypeMember {
                                    readonly_token: missing (optional),
                                    name: JsLiteralMemberName {
                                        value: IDENT@345..350 "thunk" [] [],
                                    },
                                    optional_token: missing (optional),
                                    type_annotation: TsTypeAnnotation {
                                        colon_token: COLON@350..352 ":" [] [Whitespace(" ")],
                                        ty: TsObjectType {
                                            l_curly_token: L_CURLY@352..354 "{" [] [Whitespace(" ")],
                                            members: TsTypeMemberList [
                                                TsPropertySignatureTypeMember {
                                                    readonly_token: missing (optional),
                                                    name: JsLiteralMemberName {
                                                        value: IDENT@354..367 "extraArgument" [] [],
                                                    },
                                                    optional_token: missing (optional),
                                                    type_annotation: TsTypeAnnotation {
                                                        colon_token: COLON@367..369 ":" [] [Whitespace(" ")],
                                                        ty: TsInferType {
                                                            infer_token: INFER_KW@369..375 "infer" [] [Whitespace(" ")],
                                                            type_parameter: TsTypeParameterName {
                                                                ident_token: IDENT@375..377 "E" [] [Whitespace(" ")],
                                                            },
                                                        },
                                                    },
                                                    separator_token: missing (optional),
                                                },
                                            ],
                                            r_curly_token: R_CURLY@377..379 "}" [] [Whitespace(" ")],
                                        },
                                    },
                                    separator_token: missing (optional),
                                },
                            ],
                            r_curly_token: R_CURLY@379..380 "}" [] [],
                        },
                        question_mark_token: QUESTION@380..391 "?" [Newline("\n"), Whitespace("        ")] [Whitespace(" ")],
                        true_type: TsReferenceType {
                            name: JsReferenceIdentifier {
                                value_token: IDENT@391..406 "ThunkMiddleware" [] [],
                            },
                            type_arguments: TsTypeArguments {
                                l_angle_token: L_ANGLE@406..407 "<" [] [],
                                ts_type_argument_list: TsTypeArgumentList [
                                    TsReferenceType {
                                        name: JsReferenceIdentifier {
                                            value_token: IDENT@407..408 "S" [] [],
                                        },
                                        type_arguments: missing (optional),
                                    },
                                    COMMA@408..410 "," [] [Whitespace(" ")],
                                    TsReferenceType {
                                        name: JsReferenceIdentifier {
                                            value_token: IDENT@410..419 "AnyAction" [] [],
                                        },
                                        type_arguments: missing (optional),
                                    },
                                    COMMA@419..421 "," [] [Whitespace(" ")],
                                    TsReferenceType {
                                        name: JsReferenceIdentifier {
                                            value_token: IDENT@421..422 "E" [] [],
                                        },
                                        type_arguments: missing (optional),
                                    },
                                ],
                                r_angle_token: R_ANGLE@422..423 ">" [] [],
                            },
                        },
                        colon_token: COLON@423..433 ":" [Newline("\n"), Whitespace("        ")] [],
                        false_type: TsUnionType {
                            leading_separator_token_token: PIPE@433..444 "|" [Newline("\n"), Whitespace("        ")] [Whitespace(" ")],
                            types: TsUnionTypeVariantList [
                                TsReferenceType {
                                    name: JsReferenceIdentifier {
                                        value_token: IDENT@444..459 "ThunkMiddleware" [] [],
                                    },
                                    type_arguments: TsTypeArguments {
                                        l_angle_token: L_ANGLE@459..460 "<" [] [],
                                        ts_type_argument_list: TsTypeArgumentList [
                                            TsReferenceType {
                                                name: JsReferenceIdentifier {
                                                    value_token: IDENT@460..461 "S" [] [],
                                                },
                                                type_arguments: missing (optional),
                                            },
                                            COMMA@461..463 "," [] [Whitespace(" ")],
                                            TsReferenceType {
                                                name: JsReferenceIdentifier {
                                                    value_token: IDENT@463..472 "AnyAction" [] [],
                                                },
                                                type_arguments: missing (optional),
                                            },
                                            COMMA@472..474 "," [] [Whitespace(" ")],
                                            TsNullLiteralType {
                                                literal_token: NULL_KW@474..478 "null" [] [],
                                            },
                                        ],
                                        r_angle_token: R_ANGLE@478..573 ">" [] [Whitespace(" "), Comments("//The ThunkMiddleware ...")],
                                    },
                                },
                                PIPE@573..584 "|" [Newline("\n"), Whitespace("        ")] [Whitespace(" ")],
                                TsReferenceType {
                                    name: JsReferenceIdentifier {
                                        value_token: IDENT@584..599 "ThunkMiddleware" [] [],
                                    },
                                    type_arguments: TsTypeArguments {
                                        l_angle_token: L_ANGLE@599..600 "<" [] [],
                                        ts_type_argument_list: TsTypeArgumentList [
                                            TsReferenceType {
                                                name: JsReferenceIdentifier {
                                                    value_token: IDENT@600..601 "S" [] [],
                                                },
                                                type_arguments: missing (optional),
                                            },
                                            COMMA@601..603 "," [] [Whitespace(" ")],
                                            TsReferenceType {
                                                name: JsReferenceIdentifier {
                                                    value_token: IDENT@603..612 "AnyAction" [] [],
                                                },
                                                type_arguments: missing (optional),
                                            },
                                        ],
                                        r_angle_token: R_ANGLE@612..613 ">" [] [],
                                    },
                                },
                            ],
                        },
                    },
                },
                semicolon_token: missing (optional),
            },
        },
    ],
    eof_token: EOF@613..613 "" [] [],
}

0: JS_MODULE@0..613
  0: (empty)
  1: JS_DIRECTIVE_LIST@0..0
  2: JS_MODULE_ITEM_LIST@0..613
    0: TS_TYPE_ALIAS_DECLARATION@0..30
      0: TYPE_KW@0..5 "type" [] [Whitespace(" ")]
      1: TS_IDENTIFIER_BINDING@5..7
        0: IDENT@5..7 "A" [] [Whitespace(" ")]
      2: (empty)
      3: EQ@7..9 "=" [] [Whitespace(" ")]
      4: TS_TUPLE_TYPE@9..30
        0: L_BRACK@9..10 "[" [] []
        1: TS_TUPLE_TYPE_ELEMENT_LIST@10..29
          0: TS_STRING_TYPE@10..16
            0: STRING_KW@10..16 "string" [] []
          1: COMMA@16..18 "," [] [Whitespace(" ")]
          2: TS_NUMBER_TYPE@18..24
            0: NUMBER_KW@18..24 "number" [] []
          3: COMMA@24..26 "," [] [Whitespace(" ")]
          4: TS_ANY_TYPE@26..29
            0: ANY_KW@26..29 "any" [] []
        2: R_BRACK@29..30 "]" [] []
      5: (empty)
    1: TS_TYPE_ALIAS_DECLARATION@30..70
      0: TYPE_KW@30..36 "type" [Newline("\n")] [Whitespace(" ")]
      1: TS_IDENTIFIER_BINDING@36..38
        0: IDENT@36..38 "B" [] [Whitespace(" ")]
      2: (empty)
      3: EQ@38..40 "=" [] [Whitespace(" ")]
      4: TS_TUPLE_TYPE@40..70
        0: L_BRACK@40..41 "[" [] []
        1: TS_TUPLE_TYPE_ELEMENT_LIST@41..69
          0: TS_NAMED_TUPLE_TYPE_ELEMENT@41..50
            0: (empty)
            1: JS_NAME@41..42
              0: IDENT@41..42 "a" [] []
            2: (empty)
            3: COLON@42..44 ":" [] [Whitespace(" ")]
            4: TS_STRING_TYPE@44..50
              0: STRING_KW@44..50 "string" [] []
          1: COMMA@50..52 "," [] [Whitespace(" ")]
          2: TS_NAMED_TUPLE_TYPE_ELEMENT@52..61
            0: (empty)
            1: JS_NAME@52..53
              0: IDENT@52..53 "b" [] []
            2: (empty)
            3: COLON@53..55 ":" [] [Whitespace(" ")]
            4: TS_NUMBER_TYPE@55..61
              0: NUMBER_KW@55..61 "number" [] []
          3: COMMA@61..63 "," [] [Whitespace(" ")]
          4: TS_NAMED_TUPLE_TYPE_ELEMENT@63..69
            0: (empty)
            1: JS_NAME@63..64
              0: IDENT@63..64 "c" [] []
            2: (empty)
            3: COLON@64..66 ":" [] [Whitespace(" ")]
            4: TS_ANY_TYPE@66..69
              0: ANY_KW@66..69 "any" [] []
        2: R_BRACK@69..70 "]" [] []
      5: (empty)
    2: TS_TYPE_ALIAS_DECLARATION@70..115
      0: TYPE_KW@70..76 "type" [Newline("\n")] [Whitespace(" ")]
      1: TS_IDENTIFIER_BINDING@76..78
        0: IDENT@76..78 "C" [] [Whitespace(" ")]
      2: (empty)
      3: EQ@78..80 "=" [] [Whitespace(" ")]
      4: TS_TUPLE_TYPE@80..115
        0: L_BRACK@80..81 "[" [] []
        1: TS_TUPLE_TYPE_ELEMENT_LIST@81..114
          0: TS_NAMED_TUPLE_TYPE_ELEMENT@81..90
            0: (empty)
            1: JS_NAME@81..82
              0: IDENT@81..82 "a" [] []
            2: (empty)
            3: COLON@82..84 ":" [] [Whitespace(" ")]
            4: TS_STRING_TYPE@84..90
              0: STRING_KW@84..90 "string" [] []
          1: COMMA@90..92 "," [] [Whitespace(" ")]
          2: TS_NAMED_TUPLE_TYPE_ELEMENT@92..101
            0: (empty)
            1: JS_NAME@92..93
              0: IDENT@92..93 "b" [] []
            2: (empty)
            3: COLON@93..95 ":" [] [Whitespace(" ")]
            4: TS_NUMBER_TYPE@95..101
              0: NUMBER_KW@95..101 "number" [] []
          3: COMMA@101..103 "," [] [Whitespace(" ")]
          4: TS_NAMED_TUPLE_TYPE_ELEMENT@103..114
            0: DOT2@103..106 "..." [] []
            1: JS_NAME@106..107
              0: IDENT@106..107 "c" [] []
            2: (empty)
            3: COLON@107..109 ":" [] [Whitespace(" ")]
            4: TS_ARRAY_TYPE@109..114
              0: TS_ANY_TYPE@109..112
                0: ANY_KW@109..112 "any" [] []
              1: L_BRACK@112..113 "[" [] []
              2: R_BRACK@113..114 "]" [] []
        2: R_BRACK@114..115 "]" [] []
      5: (empty)
    3: TS_TYPE_ALIAS_DECLARATION@115..137
      0: TYPE_KW@115..121 "type" [Newline("\n")] [Whitespace(" ")]
      1: TS_IDENTIFIER_BINDING@121..123
        0: IDENT@121..123 "D" [] [Whitespace(" ")]
      2: (empty)
      3: EQ@123..125 "=" [] [Whitespace(" ")]
      4: TS_TUPLE_TYPE@125..137
        0: L_BRACK@125..126 "[" [] []
        1: TS_TUPLE_TYPE_ELEMENT_LIST@126..136
          0: TS_NAMED_TUPLE_TYPE_ELEMENT@126..136
            0: (empty)
            1: JS_NAME@126..127
              0: IDENT@126..127 "a" [] []
            2: QUESTION@127..128 "?" [] []
            3: COLON@128..130 ":" [] [Whitespace(" ")]
            4: TS_STRING_TYPE@130..136
              0: STRING_KW@130..136 "string" [] []
        2: R_BRACK@136..137 "]" [] []
      5: (empty)
    4: TS_TYPE_ALIAS_DECLARATION@137..160
      0: TYPE_KW@137..143 "type" [Newline("\n")] [Whitespace(" ")]
      1: TS_IDENTIFIER_BINDING@143..145
        0: IDENT@143..145 "E" [] [Whitespace(" ")]
      2: (empty)
      3: EQ@145..147 "=" [] [Whitespace(" ")]
      4: TS_TUPLE_TYPE@147..160
        0: L_BRACK@147..148 "[" [] []
        1: TS_TUPLE_TYPE_ELEMENT_LIST@148..159
          0: TS_REST_TUPLE_TYPE_ELEMENT@148..159
            0: DOT2@148..151 "..." [] []
            1: TS_ARRAY_TYPE@151..159
              0: TS_STRING_TYPE@151..157
                0: STRING_KW@151..157 "string" [] []
              1: L_BRACK@157..158 "[" [] []
              2: R_BRACK@158..159 "]" [] []
        2: R_BRACK@159..160 "]" [] []
      5: (empty)
    5: TS_TYPE_ALIAS_DECLARATION@160..179
      0: TYPE_KW@160..166 "type" [Newline("\n")] [Whitespace(" ")]
      1: TS_IDENTIFIER_BINDING@166..168
        0: IDENT@166..168 "F" [] [Whitespace(" ")]
      2: (empty)
      3: EQ@168..170 "=" [] [Whitespace(" ")]
      4: TS_TUPLE_TYPE@170..179
        0: L_BRACK@170..171 "[" [] []
        1: TS_TUPLE_TYPE_ELEMENT_LIST@171..178
          0: TS_OPTIONAL_TUPLE_TYPE_ELEMENT@171..178
            0: TS_STRING_TYPE@171..177
              0: STRING_KW@171..177 "string" [] []
            1: QUESTION@177..178 "?" [] []
        2: R_BRACK@178..179 "]" [] []
      5: (empty)
  3: EOF@179..180 "" [Newline("\n")] []
