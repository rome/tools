JsModule {
    interpreter_token: missing (optional),
    directives: JsDirectiveList [],
    items: JsModuleItemList [
        TsTypeAliasStatement {
            type_token: TYPE_KW@0..19 "type" [Comments("// TYPESCRIPT"), Newline("\n")] [Whitespace(" ")],
            binding_identifier: TsIdentifierBinding {
                name_token: IDENT@19..21 "A" [] [Whitespace(" ")],
            },
            type_parameters: missing (required),
            eq_token: EQ@21..23 "=" [] [Whitespace(" ")],
            ty: TsTupleType {
                l_brack_token: L_BRACK@23..24 "[" [] [],
                elements: TsTupleTypeElementList [
                    TsStringType {
                        string_token: STRING_KW@24..30 "string" [] [],
                    },
                    COMMA@30..32 "," [] [Whitespace(" ")],
                    TsNumberType {
                        number_token: NUMBER_KW@32..38 "number" [] [],
                    },
                    COMMA@38..40 "," [] [Whitespace(" ")],
                    TsAnyType {
                        any_token: ANY_KW@40..43 "any" [] [],
                    },
                ],
                r_brack_token: R_BRACK@43..44 "]" [] [],
            },
            semicolon_token: missing (optional),
        },
        TsTypeAliasStatement {
            type_token: TYPE_KW@44..50 "type" [Newline("\n")] [Whitespace(" ")],
            binding_identifier: TsIdentifierBinding {
                name_token: IDENT@50..52 "B" [] [Whitespace(" ")],
            },
            type_parameters: missing (required),
            eq_token: EQ@52..54 "=" [] [Whitespace(" ")],
            ty: TsTupleType {
                l_brack_token: L_BRACK@54..55 "[" [] [],
                elements: TsTupleTypeElementList [
                    TsNamedTupleTypeElement {
                        dotdotdot_token: missing (optional),
                        name: JsName {
                            value_token: IDENT@55..56 "a" [] [],
                        },
                        question_mark_token: missing (optional),
                        colon_token: COLON@56..58 ":" [] [Whitespace(" ")],
                        ty: TsStringType {
                            string_token: STRING_KW@58..64 "string" [] [],
                        },
                    },
                    COMMA@64..66 "," [] [Whitespace(" ")],
                    TsNamedTupleTypeElement {
                        dotdotdot_token: missing (optional),
                        name: JsName {
                            value_token: IDENT@66..67 "b" [] [],
                        },
                        question_mark_token: missing (optional),
                        colon_token: COLON@67..69 ":" [] [Whitespace(" ")],
                        ty: TsNumberType {
                            number_token: NUMBER_KW@69..75 "number" [] [],
                        },
                    },
                    COMMA@75..77 "," [] [Whitespace(" ")],
                    TsNamedTupleTypeElement {
                        dotdotdot_token: missing (optional),
                        name: JsName {
                            value_token: IDENT@77..78 "c" [] [],
                        },
                        question_mark_token: missing (optional),
                        colon_token: COLON@78..80 ":" [] [Whitespace(" ")],
                        ty: TsAnyType {
                            any_token: ANY_KW@80..83 "any" [] [],
                        },
                    },
                ],
                r_brack_token: R_BRACK@83..84 "]" [] [],
            },
            semicolon_token: missing (optional),
        },
        TsTypeAliasStatement {
            type_token: TYPE_KW@84..90 "type" [Newline("\n")] [Whitespace(" ")],
            binding_identifier: TsIdentifierBinding {
                name_token: IDENT@90..92 "C" [] [Whitespace(" ")],
            },
            type_parameters: missing (required),
            eq_token: EQ@92..94 "=" [] [Whitespace(" ")],
            ty: TsTupleType {
                l_brack_token: L_BRACK@94..95 "[" [] [],
                elements: TsTupleTypeElementList [
                    TsNamedTupleTypeElement {
                        dotdotdot_token: missing (optional),
                        name: JsName {
                            value_token: IDENT@95..96 "a" [] [],
                        },
                        question_mark_token: missing (optional),
                        colon_token: COLON@96..98 ":" [] [Whitespace(" ")],
                        ty: TsStringType {
                            string_token: STRING_KW@98..104 "string" [] [],
                        },
                    },
                    COMMA@104..106 "," [] [Whitespace(" ")],
                    TsNamedTupleTypeElement {
                        dotdotdot_token: missing (optional),
                        name: JsName {
                            value_token: IDENT@106..107 "b" [] [],
                        },
                        question_mark_token: missing (optional),
                        colon_token: COLON@107..109 ":" [] [Whitespace(" ")],
                        ty: TsNumberType {
                            number_token: NUMBER_KW@109..115 "number" [] [],
                        },
                    },
                    COMMA@115..117 "," [] [Whitespace(" ")],
                    TsNamedTupleTypeElement {
                        dotdotdot_token: DOT2@117..120 "..." [] [],
                        name: JsName {
                            value_token: IDENT@120..121 "c" [] [],
                        },
                        question_mark_token: missing (optional),
                        colon_token: COLON@121..123 ":" [] [Whitespace(" ")],
                        ty: TsArrayType {
                            element_type: TsAnyType {
                                any_token: ANY_KW@123..126 "any" [] [],
                            },
                            l_brack_token: L_BRACK@126..127 "[" [] [],
                            r_brack_token: R_BRACK@127..128 "]" [] [],
                        },
                    },
                ],
                r_brack_token: R_BRACK@128..129 "]" [] [],
            },
            semicolon_token: missing (optional),
        },
        TsTypeAliasStatement {
            type_token: TYPE_KW@129..135 "type" [Newline("\n")] [Whitespace(" ")],
            binding_identifier: TsIdentifierBinding {
                name_token: IDENT@135..137 "D" [] [Whitespace(" ")],
            },
            type_parameters: missing (required),
            eq_token: EQ@137..139 "=" [] [Whitespace(" ")],
            ty: TsTupleType {
                l_brack_token: L_BRACK@139..140 "[" [] [],
                elements: TsTupleTypeElementList [
                    TsNamedTupleTypeElement {
                        dotdotdot_token: missing (optional),
                        name: JsName {
                            value_token: IDENT@140..141 "a" [] [],
                        },
                        question_mark_token: QUESTION@141..142 "?" [] [],
                        colon_token: COLON@142..144 ":" [] [Whitespace(" ")],
                        ty: TsStringType {
                            string_token: STRING_KW@144..150 "string" [] [],
                        },
                    },
                ],
                r_brack_token: R_BRACK@150..151 "]" [] [],
            },
            semicolon_token: missing (optional),
        },
        TsTypeAliasStatement {
            type_token: TYPE_KW@151..157 "type" [Newline("\n")] [Whitespace(" ")],
            binding_identifier: TsIdentifierBinding {
                name_token: IDENT@157..159 "E" [] [Whitespace(" ")],
            },
            type_parameters: missing (required),
            eq_token: EQ@159..161 "=" [] [Whitespace(" ")],
            ty: TsTupleType {
                l_brack_token: L_BRACK@161..162 "[" [] [],
                elements: TsTupleTypeElementList [
                    TsRestTupleTypeElement {
                        dotdotdot_token: DOT2@162..165 "..." [] [],
                        ty: TsArrayType {
                            element_type: TsStringType {
                                string_token: STRING_KW@165..171 "string" [] [],
                            },
                            l_brack_token: L_BRACK@171..172 "[" [] [],
                            r_brack_token: R_BRACK@172..173 "]" [] [],
                        },
                    },
                ],
                r_brack_token: R_BRACK@173..174 "]" [] [],
            },
            semicolon_token: missing (optional),
        },
        TsTypeAliasStatement {
            type_token: TYPE_KW@174..180 "type" [Newline("\n")] [Whitespace(" ")],
            binding_identifier: TsIdentifierBinding {
                name_token: IDENT@180..182 "F" [] [Whitespace(" ")],
            },
            type_parameters: missing (required),
            eq_token: EQ@182..184 "=" [] [Whitespace(" ")],
            ty: TsTupleType {
                l_brack_token: L_BRACK@184..185 "[" [] [],
                elements: TsTupleTypeElementList [
                    TsOptionalTupleTypeElement {
                        ty: TsStringType {
                            string_token: STRING_KW@185..191 "string" [] [],
                        },
                        question_mark_token: QUESTION@191..192 "?" [] [],
                    },
                ],
                r_brack_token: R_BRACK@192..193 "]" [] [],
            },
            semicolon_token: missing (optional),
        },
    ],
    eof_token: EOF@193..194 "" [Newline("\n")] [],
}

0: JS_MODULE@0..194
  0: (empty)
  1: JS_DIRECTIVE_LIST@0..0
  2: JS_MODULE_ITEM_LIST@0..193
    0: TS_TYPE_ALIAS_STATEMENT@0..44
      0: TYPE_KW@0..19 "type" [Comments("// TYPESCRIPT"), Newline("\n")] [Whitespace(" ")]
      1: TS_IDENTIFIER_BINDING@19..21
        0: IDENT@19..21 "A" [] [Whitespace(" ")]
      2: (empty)
      3: EQ@21..23 "=" [] [Whitespace(" ")]
      4: TS_TUPLE_TYPE@23..44
        0: L_BRACK@23..24 "[" [] []
        1: TS_TUPLE_TYPE_ELEMENT_LIST@24..43
          0: TS_STRING_TYPE@24..30
            0: STRING_KW@24..30 "string" [] []
          1: COMMA@30..32 "," [] [Whitespace(" ")]
          2: TS_NUMBER_TYPE@32..38
            0: NUMBER_KW@32..38 "number" [] []
          3: COMMA@38..40 "," [] [Whitespace(" ")]
          4: TS_ANY_TYPE@40..43
            0: ANY_KW@40..43 "any" [] []
        2: R_BRACK@43..44 "]" [] []
      5: (empty)
    1: TS_TYPE_ALIAS_STATEMENT@44..84
      0: TYPE_KW@44..50 "type" [Newline("\n")] [Whitespace(" ")]
      1: TS_IDENTIFIER_BINDING@50..52
        0: IDENT@50..52 "B" [] [Whitespace(" ")]
      2: (empty)
      3: EQ@52..54 "=" [] [Whitespace(" ")]
      4: TS_TUPLE_TYPE@54..84
        0: L_BRACK@54..55 "[" [] []
        1: TS_TUPLE_TYPE_ELEMENT_LIST@55..83
          0: TS_NAMED_TUPLE_TYPE_ELEMENT@55..64
            0: (empty)
            1: JS_NAME@55..56
              0: IDENT@55..56 "a" [] []
            2: (empty)
            3: COLON@56..58 ":" [] [Whitespace(" ")]
            4: TS_STRING_TYPE@58..64
              0: STRING_KW@58..64 "string" [] []
          1: COMMA@64..66 "," [] [Whitespace(" ")]
          2: TS_NAMED_TUPLE_TYPE_ELEMENT@66..75
            0: (empty)
            1: JS_NAME@66..67
              0: IDENT@66..67 "b" [] []
            2: (empty)
            3: COLON@67..69 ":" [] [Whitespace(" ")]
            4: TS_NUMBER_TYPE@69..75
              0: NUMBER_KW@69..75 "number" [] []
          3: COMMA@75..77 "," [] [Whitespace(" ")]
          4: TS_NAMED_TUPLE_TYPE_ELEMENT@77..83
            0: (empty)
            1: JS_NAME@77..78
              0: IDENT@77..78 "c" [] []
            2: (empty)
            3: COLON@78..80 ":" [] [Whitespace(" ")]
            4: TS_ANY_TYPE@80..83
              0: ANY_KW@80..83 "any" [] []
        2: R_BRACK@83..84 "]" [] []
      5: (empty)
    2: TS_TYPE_ALIAS_STATEMENT@84..129
      0: TYPE_KW@84..90 "type" [Newline("\n")] [Whitespace(" ")]
      1: TS_IDENTIFIER_BINDING@90..92
        0: IDENT@90..92 "C" [] [Whitespace(" ")]
      2: (empty)
      3: EQ@92..94 "=" [] [Whitespace(" ")]
      4: TS_TUPLE_TYPE@94..129
        0: L_BRACK@94..95 "[" [] []
        1: TS_TUPLE_TYPE_ELEMENT_LIST@95..128
          0: TS_NAMED_TUPLE_TYPE_ELEMENT@95..104
            0: (empty)
            1: JS_NAME@95..96
              0: IDENT@95..96 "a" [] []
            2: (empty)
            3: COLON@96..98 ":" [] [Whitespace(" ")]
            4: TS_STRING_TYPE@98..104
              0: STRING_KW@98..104 "string" [] []
          1: COMMA@104..106 "," [] [Whitespace(" ")]
          2: TS_NAMED_TUPLE_TYPE_ELEMENT@106..115
            0: (empty)
            1: JS_NAME@106..107
              0: IDENT@106..107 "b" [] []
            2: (empty)
            3: COLON@107..109 ":" [] [Whitespace(" ")]
            4: TS_NUMBER_TYPE@109..115
              0: NUMBER_KW@109..115 "number" [] []
          3: COMMA@115..117 "," [] [Whitespace(" ")]
          4: TS_NAMED_TUPLE_TYPE_ELEMENT@117..128
            0: DOT2@117..120 "..." [] []
            1: JS_NAME@120..121
              0: IDENT@120..121 "c" [] []
            2: (empty)
            3: COLON@121..123 ":" [] [Whitespace(" ")]
            4: TS_ARRAY_TYPE@123..128
              0: TS_ANY_TYPE@123..126
                0: ANY_KW@123..126 "any" [] []
              1: L_BRACK@126..127 "[" [] []
              2: R_BRACK@127..128 "]" [] []
        2: R_BRACK@128..129 "]" [] []
      5: (empty)
    3: TS_TYPE_ALIAS_STATEMENT@129..151
      0: TYPE_KW@129..135 "type" [Newline("\n")] [Whitespace(" ")]
      1: TS_IDENTIFIER_BINDING@135..137
        0: IDENT@135..137 "D" [] [Whitespace(" ")]
      2: (empty)
      3: EQ@137..139 "=" [] [Whitespace(" ")]
      4: TS_TUPLE_TYPE@139..151
        0: L_BRACK@139..140 "[" [] []
        1: TS_TUPLE_TYPE_ELEMENT_LIST@140..150
          0: TS_NAMED_TUPLE_TYPE_ELEMENT@140..150
            0: (empty)
            1: JS_NAME@140..141
              0: IDENT@140..141 "a" [] []
            2: QUESTION@141..142 "?" [] []
            3: COLON@142..144 ":" [] [Whitespace(" ")]
            4: TS_STRING_TYPE@144..150
              0: STRING_KW@144..150 "string" [] []
        2: R_BRACK@150..151 "]" [] []
      5: (empty)
    4: TS_TYPE_ALIAS_STATEMENT@151..174
      0: TYPE_KW@151..157 "type" [Newline("\n")] [Whitespace(" ")]
      1: TS_IDENTIFIER_BINDING@157..159
        0: IDENT@157..159 "E" [] [Whitespace(" ")]
      2: (empty)
      3: EQ@159..161 "=" [] [Whitespace(" ")]
      4: TS_TUPLE_TYPE@161..174
        0: L_BRACK@161..162 "[" [] []
        1: TS_TUPLE_TYPE_ELEMENT_LIST@162..173
          0: TS_REST_TUPLE_TYPE_ELEMENT@162..173
            0: DOT2@162..165 "..." [] []
            1: TS_ARRAY_TYPE@165..173
              0: TS_STRING_TYPE@165..171
                0: STRING_KW@165..171 "string" [] []
              1: L_BRACK@171..172 "[" [] []
              2: R_BRACK@172..173 "]" [] []
        2: R_BRACK@173..174 "]" [] []
      5: (empty)
    5: TS_TYPE_ALIAS_STATEMENT@174..193
      0: TYPE_KW@174..180 "type" [Newline("\n")] [Whitespace(" ")]
      1: TS_IDENTIFIER_BINDING@180..182
        0: IDENT@180..182 "F" [] [Whitespace(" ")]
      2: (empty)
      3: EQ@182..184 "=" [] [Whitespace(" ")]
      4: TS_TUPLE_TYPE@184..193
        0: L_BRACK@184..185 "[" [] []
        1: TS_TUPLE_TYPE_ELEMENT_LIST@185..192
          0: TS_OPTIONAL_TUPLE_TYPE_ELEMENT@185..192
            0: TS_STRING_TYPE@185..191
              0: STRING_KW@185..191 "string" [] []
            1: QUESTION@191..192 "?" [] []
        2: R_BRACK@192..193 "]" [] []
      5: (empty)
  3: EOF@193..194 "" [Newline("\n")] []
