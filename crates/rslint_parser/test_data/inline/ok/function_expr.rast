JsRoot {
    interpreter_token: missing (optional),
    directives: [],
    statements: [
        JsVariableDeclarationStatement {
            declaration: JsVariableDeclaration {
                kind_token: LET_KW@0..4 "let" [] [Whitespace(" ")],
                declarators: [
                    JsVariableDeclarator {
                        id: SinglePattern {
                            name: Name {
                                ident_token: IDENT@4..6 "a" [] [Whitespace(" ")],
                            },
                            question_mark_token: missing (optional),
                            excl_token: missing (optional),
                            ty: missing (optional),
                        },
                        init: JsEqualValueClause {
                            eq_token: EQ@6..8 "=" [] [Whitespace(" ")],
                            expression: JsFunctionExpression {
                                async_token: missing (optional),
                                function_token: FUNCTION_KW@8..16 "function" [] [],
                                star_token: missing (optional),
                                id: missing (optional),
                                type_parameters: missing (optional),
                                parameters: JsParameterList {
                                    l_paren_token: L_PAREN@16..17 "(" [] [],
                                    parameters: [],
                                    r_paren_token: R_PAREN@17..19 ")" [] [Whitespace(" ")],
                                },
                                return_type: missing (optional),
                                body: JsFunctionBody {
                                    l_curly_token: L_CURLY@19..20 "{" [] [],
                                    directives: [],
                                    statements: [],
                                    r_curly_token: R_CURLY@20..21 "}" [] [],
                                },
                            },
                        },
                    },
                ],
            },
            semicolon_token: missing (optional),
        },
        JsVariableDeclarationStatement {
            declaration: JsVariableDeclaration {
                kind_token: LET_KW@21..26 "let" [Whitespace("\n")] [Whitespace(" ")],
                declarators: [
                    JsVariableDeclarator {
                        id: SinglePattern {
                            name: Name {
                                ident_token: IDENT@26..28 "b" [] [Whitespace(" ")],
                            },
                            question_mark_token: missing (optional),
                            excl_token: missing (optional),
                            ty: missing (optional),
                        },
                        init: JsEqualValueClause {
                            eq_token: EQ@28..30 "=" [] [Whitespace(" ")],
                            expression: JsFunctionExpression {
                                async_token: missing (optional),
                                function_token: FUNCTION_KW@30..39 "function" [] [Whitespace(" ")],
                                star_token: missing (optional),
                                id: JsIdentifierBinding {
                                    name_token: IDENT@39..42 "foo" [] [],
                                },
                                type_parameters: missing (optional),
                                parameters: JsParameterList {
                                    l_paren_token: L_PAREN@42..43 "(" [] [],
                                    parameters: [],
                                    r_paren_token: R_PAREN@43..45 ")" [] [Whitespace(" ")],
                                },
                                return_type: missing (optional),
                                body: JsFunctionBody {
                                    l_curly_token: L_CURLY@45..46 "{" [] [],
                                    directives: [],
                                    statements: [],
                                    r_curly_token: R_CURLY@46..47 "}" [] [],
                                },
                            },
                        },
                    },
                ],
            },
            semicolon_token: missing (optional),
        },
    ],
}

0: JS_ROOT@0..48
  0: (empty)
  1: LIST@0..0
  2: LIST@0..47
    0: JS_VARIABLE_DECLARATION_STATEMENT@0..21
      0: JS_VARIABLE_DECLARATION@0..21
        0: LET_KW@0..4 "let" [] [Whitespace(" ")]
        1: LIST@4..21
          0: JS_VARIABLE_DECLARATOR@4..21
            0: SINGLE_PATTERN@4..6
              0: NAME@4..6
                0: IDENT@4..6 "a" [] [Whitespace(" ")]
            1: JS_EQUAL_VALUE_CLAUSE@6..21
              0: EQ@6..8 "=" [] [Whitespace(" ")]
              1: JS_FUNCTION_EXPRESSION@8..21
                0: FUNCTION_KW@8..16 "function" [] []
                1: (empty)
                2: JS_PARAMETER_LIST@16..19
                  0: L_PAREN@16..17 "(" [] []
                  1: LIST@17..17
                  2: R_PAREN@17..19 ")" [] [Whitespace(" ")]
                3: JS_FUNCTION_BODY@19..21
                  0: L_CURLY@19..20 "{" [] []
                  1: LIST@20..20
                  2: LIST@20..20
                  3: R_CURLY@20..21 "}" [] []
      1: (empty)
    1: JS_VARIABLE_DECLARATION_STATEMENT@21..47
      0: JS_VARIABLE_DECLARATION@21..47
        0: LET_KW@21..26 "let" [Whitespace("\n")] [Whitespace(" ")]
        1: LIST@26..47
          0: JS_VARIABLE_DECLARATOR@26..47
            0: SINGLE_PATTERN@26..28
              0: NAME@26..28
                0: IDENT@26..28 "b" [] [Whitespace(" ")]
            1: JS_EQUAL_VALUE_CLAUSE@28..47
              0: EQ@28..30 "=" [] [Whitespace(" ")]
              1: JS_FUNCTION_EXPRESSION@30..47
                0: FUNCTION_KW@30..39 "function" [] [Whitespace(" ")]
                1: JS_IDENTIFIER_BINDING@39..42
                  0: IDENT@39..42 "foo" [] []
                2: JS_PARAMETER_LIST@42..45
                  0: L_PAREN@42..43 "(" [] []
                  1: LIST@43..43
                  2: R_PAREN@43..45 ")" [] [Whitespace(" ")]
                3: JS_FUNCTION_BODY@45..47
                  0: L_CURLY@45..46 "{" [] []
                  1: LIST@46..46
                  2: LIST@46..46
                  3: R_CURLY@46..47 "}" [] []
      1: (empty)
  3: EOF@47..48 "" [Whitespace("\n")] []
