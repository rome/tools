JsModule {
    interpreter_token: missing (optional),
    directives: [],
    statements: [
        JsVariableDeclarationStatement {
            declaration: JsVariableDeclaration {
                kind_token: LET_KW@0..4 "let" [] [Whitespace(" ")],
                declarators: [
                    JsVariableDeclarator {
                        id: JsIdentifierBinding {
                            name_token: IDENT@4..6 "a" [] [Whitespace(" ")],
                        },
                        init: JsEqualValueClause {
                            eq_token: EQ@6..8 "=" [] [Whitespace(" ")],
                            expression: JsObjectExpression {
                                l_curly_token: L_CURLY@8..9 "{" [] [],
                                members: [
                                    JsSpread {
                                        dotdotdot_token: DOT2@9..12 "..." [] [],
                                        argument: JsIdentifierExpression {
                                            name: JsReferenceIdentifier {
                                                value_token: IDENT@12..15 "foo" [] [],
                                            },
                                        },
                                    },
                                ],
                                r_curly_token: R_CURLY@15..16 "}" [] [],
                            },
                        },
                    },
                ],
            },
            semicolon_token: missing (optional),
        },
    ],
}

0: JS_MODULE@0..17
  0: (empty)
  1: LIST@0..0
  2: LIST@0..16
    0: JS_VARIABLE_DECLARATION_STATEMENT@0..16
      0: JS_VARIABLE_DECLARATION@0..16
        0: LET_KW@0..4 "let" [] [Whitespace(" ")]
        1: LIST@4..16
          0: JS_VARIABLE_DECLARATOR@4..16
            0: JS_IDENTIFIER_BINDING@4..6
              0: IDENT@4..6 "a" [] [Whitespace(" ")]
            1: JS_EQUAL_VALUE_CLAUSE@6..16
              0: EQ@6..8 "=" [] [Whitespace(" ")]
              1: JS_OBJECT_EXPRESSION@8..16
                0: L_CURLY@8..9 "{" [] []
                1: LIST@9..15
                  0: JS_SPREAD@9..15
                    0: DOT2@9..12 "..." [] []
                    1: JS_IDENTIFIER_EXPRESSION@12..15
                      0: JS_REFERENCE_IDENTIFIER@12..15
                        0: IDENT@12..15 "foo" [] []
                2: R_CURLY@15..16 "}" [] []
      1: (empty)
  3: EOF@16..17 "" [Whitespace("\n")] []
