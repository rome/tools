JsRoot {
    interpreter_token: missing (optional),
    directives: [],
    statements: [
        JsVariableDeclarationStatement {
            declaration: JsVariableDeclaration {
                kind_token: LET_KW@0..4 "let" [] [Whitespace(" ")],
                declarators: [
                    JsVariableDeclarator {
                        id: SinglePattern {
                            name: Name {
                                ident_token: IDENT@4..6 "a" [] [Whitespace(" ")],
                            },
                            question_mark_token: missing (optional),
                            excl_token: missing (optional),
                            ty: missing (optional),
                        },
                        init: JsEqualValueClause {
                            eq_token: EQ@6..8 "=" [] [Whitespace(" ")],
                            expression: JsArrowFunctionExpression {
                                async_token: ASYNC_KW@8..14 "async" [] [Whitespace(" ")],
                                type_parameters: missing (optional),
                                parameter_list: JsIdentifierBinding {
                                    name_token: IDENT@14..18 "foo" [] [Whitespace(" ")],
                                },
                                fat_arrow_token: FAT_ARROW@18..21 "=>" [] [Whitespace(" ")],
                                return_type: missing (optional),
                            },
                        },
                    },
                ],
            },
            semicolon_token: missing (optional),
        },
        JsVariableDeclarationStatement {
            declaration: JsVariableDeclaration {
                kind_token: LET_KW@23..28 "let" [Whitespace("\n")] [Whitespace(" ")],
                declarators: [
                    JsVariableDeclarator {
                        id: SinglePattern {
                            name: Name {
                                ident_token: IDENT@28..30 "b" [] [Whitespace(" ")],
                            },
                            question_mark_token: missing (optional),
                            excl_token: missing (optional),
                            ty: missing (optional),
                        },
                        init: JsEqualValueClause {
                            eq_token: EQ@30..32 "=" [] [Whitespace(" ")],
                            expression: JsArrowFunctionExpression {
                                async_token: ASYNC_KW@32..38 "async" [] [Whitespace(" ")],
                                type_parameters: missing (optional),
                                parameter_list: JsParameterList {
                                    l_paren_token: L_PAREN@38..39 "(" [] [],
                                    parameters: [
                                        SinglePattern {
                                            name: Name {
                                                ident_token: IDENT@39..42 "bar" [] [],
                                            },
                                            question_mark_token: missing (optional),
                                            excl_token: missing (optional),
                                            ty: missing (optional),
                                        },
                                    ],
                                    r_paren_token: R_PAREN@42..44 ")" [] [Whitespace(" ")],
                                },
                                fat_arrow_token: FAT_ARROW@44..47 "=>" [] [Whitespace(" ")],
                                return_type: missing (optional),
                            },
                        },
                    },
                ],
            },
            semicolon_token: missing (optional),
        },
        JsExpressionStatement {
            expression: JsArrowFunctionExpression {
                async_token: ASYNC_KW@49..56 "async" [Whitespace("\n")] [Whitespace(" ")],
                type_parameters: missing (optional),
                parameter_list: JsParameterList {
                    l_paren_token: L_PAREN@56..57 "(" [] [],
                    parameters: [
                        SinglePattern {
                            name: Name {
                                ident_token: IDENT@57..60 "foo" [] [],
                            },
                            question_mark_token: missing (optional),
                            excl_token: missing (optional),
                            ty: missing (optional),
                        },
                        COMMA@60..62 "," [] [Whitespace(" ")],
                        SinglePattern {
                            name: Name {
                                ident_token: IDENT@62..65 "bar" [] [],
                            },
                            question_mark_token: missing (optional),
                            excl_token: missing (optional),
                            ty: missing (optional),
                        },
                        COMMA@65..67 "," [] [Whitespace(" ")],
                        JsRestParameter {
                            dotdotdot_token: DOT2@67..70 "..." [] [],
                            binding: SinglePattern {
                                name: Name {
                                    ident_token: IDENT@70..73 "baz" [] [],
                                },
                                question_mark_token: missing (optional),
                                excl_token: missing (optional),
                                ty: missing (optional),
                            },
                        },
                    ],
                    r_paren_token: R_PAREN@73..75 ")" [] [Whitespace(" ")],
                },
                fat_arrow_token: FAT_ARROW@75..78 "=>" [] [Whitespace(" ")],
                return_type: missing (optional),
            },
            semicolon_token: missing (optional),
        },
    ],
}

0: JS_ROOT@0..82
  0: (empty)
  1: LIST@0..0
  2: LIST@0..81
    0: JS_VARIABLE_DECLARATION_STATEMENT@0..23
      0: JS_VARIABLE_DECLARATION@0..23
        0: LET_KW@0..4 "let" [] [Whitespace(" ")]
        1: LIST@4..23
          0: JS_VARIABLE_DECLARATOR@4..23
            0: JS_IDENTIFIER_BINDING@4..6
              0: IDENT@4..6 "a" [] [Whitespace(" ")]
            1: JS_EQUAL_VALUE_CLAUSE@6..23
              0: EQ@6..8 "=" [] [Whitespace(" ")]
              1: JS_ARROW_FUNCTION_EXPRESSION@8..23
                0: ASYNC_KW@8..14 "async" [] [Whitespace(" ")]
                1: JS_IDENTIFIER_BINDING@14..18
                  0: IDENT@14..18 "foo" [] [Whitespace(" ")]
                2: FAT_ARROW@18..21 "=>" [] [Whitespace(" ")]
                3: JS_FUNCTION_BODY@21..23
                  0: L_CURLY@21..22 "{" [] []
                  1: LIST@22..22
                  2: LIST@22..22
                  3: R_CURLY@22..23 "}" [] []
      1: (empty)
    1: JS_VARIABLE_DECLARATION_STATEMENT@23..49
      0: JS_VARIABLE_DECLARATION@23..49
        0: LET_KW@23..28 "let" [Whitespace("\n")] [Whitespace(" ")]
        1: LIST@28..49
          0: JS_VARIABLE_DECLARATOR@28..49
            0: JS_IDENTIFIER_BINDING@28..30
              0: IDENT@28..30 "b" [] [Whitespace(" ")]
            1: JS_EQUAL_VALUE_CLAUSE@30..49
              0: EQ@30..32 "=" [] [Whitespace(" ")]
              1: JS_ARROW_FUNCTION_EXPRESSION@32..49
                0: ASYNC_KW@32..38 "async" [] [Whitespace(" ")]
                1: JS_PARAMETER_LIST@38..44
                  0: L_PAREN@38..39 "(" [] []
                  1: LIST@39..42
                    0: JS_IDENTIFIER_BINDING@39..42
                      0: IDENT@39..42 "bar" [] []
                  2: R_PAREN@42..44 ")" [] [Whitespace(" ")]
                2: FAT_ARROW@44..47 "=>" [] [Whitespace(" ")]
                3: JS_FUNCTION_BODY@47..49
                  0: L_CURLY@47..48 "{" [] []
                  1: LIST@48..48
                  2: LIST@48..48
                  3: R_CURLY@48..49 "}" [] []
      1: (empty)
    2: JS_EXPRESSION_STATEMENT@49..81
      0: JS_ARROW_FUNCTION_EXPRESSION@49..81
        0: ASYNC_KW@49..56 "async" [Whitespace("\n")] [Whitespace(" ")]
        1: JS_PARAMETER_LIST@56..75
          0: L_PAREN@56..57 "(" [] []
          1: LIST@57..73
            0: JS_IDENTIFIER_BINDING@57..60
              0: IDENT@57..60 "foo" [] []
            1: COMMA@60..62 "," [] [Whitespace(" ")]
            2: JS_IDENTIFIER_BINDING@62..65
              0: IDENT@62..65 "bar" [] []
            3: COMMA@65..67 "," [] [Whitespace(" ")]
            4: JS_REST_PARAMETER@67..73
              0: DOT2@67..70 "..." [] []
              1: JS_IDENTIFIER_BINDING@70..73
                0: IDENT@70..73 "baz" [] []
          2: R_PAREN@73..75 ")" [] [Whitespace(" ")]
        2: FAT_ARROW@75..78 "=>" [] [Whitespace(" ")]
        3: JS_REFERENCE_IDENTIFIER_EXPRESSION@78..81
          0: IDENT@78..81 "foo" [] []
      1: (empty)
  3: EOF@81..82 "" [Whitespace("\n")] []
