JsModule {
    interpreter_token: missing (optional),
    directives: JsDirectiveList [],
    items: JsModuleItemList [
        JsExpressionStatement {
            expression: JsxTagExpression {
                tag: JsxSelfClosingElement {
                    l_angle_token: L_ANGLE@0..1 "<" [] [],
                    name: JsxName {
                        value_token: JSX_IDENT@1..5 "div" [] [Whitespace(" ")],
                    },
<<<<<<< HEAD
<<<<<<< HEAD
                    attributes: JsxAttributeList [],
                    slash_token: SLASH@5..6 "/" [] [],
                    r_angle_token: R_ANGLE@6..7 ">" [] [],
=======
<<<<<<< HEAD
                    slash_r_angle_token: SLASH_R_ANGLE@5..7 "/>" [] [],
=======
                    divide_token: SLASH@5..6 "/" [] [],
                    r_angle_token: R_ANGLE@6..7 ">" [] [],
>>>>>>> 0ae10e4634 (jsx in arrow functions and as statements)
>>>>>>> ed0e4b6d04 (jsx in arrow functions and as statements)
=======
                    divide_token: SLASH@5..6 "/" [] [],
                    r_angle_token: R_ANGLE@6..7 ">" [] [],
>>>>>>> a23ec66cbf (abandoning jsx if no closing element is found)
                },
            },
            semicolon_token: missing (optional),
        },
    ],
    eof_token: EOF@7..8 "" [Newline("\n")] [],
}

0: JS_MODULE@0..8
  0: (empty)
  1: JS_DIRECTIVE_LIST@0..0
  2: JS_MODULE_ITEM_LIST@0..7
    0: JS_EXPRESSION_STATEMENT@0..7
      0: JSX_TAG_EXPRESSION@0..7
        0: JSX_SELF_CLOSING_ELEMENT@0..7
          0: L_ANGLE@0..1 "<" [] []
<<<<<<< HEAD
          1: JSX_NAME@1..5
            0: JSX_IDENT@1..5 "div" [] [Whitespace(" ")]
          2: JSX_ATTRIBUTE_LIST@5..5
          3: SLASH@5..6 "/" [] []
          4: R_ANGLE@6..7 ">" [] []
=======
          1: JSX_REFERENCE_IDENTIFIER@1..5
            0: IDENT@1..5 "div" [] [Whitespace(" ")]
          2: SLASH@5..6 "/" [] []
          3: R_ANGLE@6..7 ">" [] []
<<<<<<< HEAD
>>>>>>> 0ae10e4634 (jsx in arrow functions and as statements)
>>>>>>> ed0e4b6d04 (jsx in arrow functions and as statements)
=======
>>>>>>> a23ec66cbf (abandoning jsx if no closing element is found)
      1: (empty)
  3: EOF@7..8 "" [Newline("\n")] []
