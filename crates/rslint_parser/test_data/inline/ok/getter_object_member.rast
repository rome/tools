JsRoot {
    interpreter_token: missing (optional),
    directives: [],
    statements: [
        JsVariableDeclarationStatement {
            declaration: JsVariableDeclaration {
                kind_token: LET_KW@0..4 "let" [] [Whitespace(" ")],
                declarators: [
                    JsVariableDeclarator {
                        id: JsIdentifierBinding {
                            name_token: IDENT@4..6 "a" [] [Whitespace(" ")],
                            question_mark_token: missing (optional),
                            excl_token: missing (optional),
                            ty: missing (optional),
                        },
                        init: JsEqualValueClause {
                            eq_token: EQ@6..8 "=" [] [Whitespace(" ")],
                            expression: JsObjectExpression {
                                l_curly_token: L_CURLY@8..9 "{" [] [],
                                members: [
                                    JsGetterObjectMember {
                                        get_token: GET_KW@9..15 "get" [Whitespace("\n ")] [Whitespace(" ")],
                                        name: JsLiteralMemberName {
                                            value: IDENT@15..18 "foo" [] [],
                                        },
                                        l_paren_token: L_PAREN@18..19 "(" [] [],
                                        r_paren_token: R_PAREN@19..21 ")" [] [Whitespace(" ")],
                                        return_type: missing (optional),
                                        body: JsFunctionBody {
                                            l_curly_token: L_CURLY@21..22 "{" [] [],
                                            directives: [],
                                            statements: [
                                                JsReturnStatement {
                                                    return_token: RETURN_KW@22..33 "return" [Whitespace("\n   ")] [Whitespace(" ")],
                                                    argument: JsReferenceIdentifierExpression {
                                                        name_token: IDENT@33..36 "foo" [] [],
                                                    },
                                                    semicolon_token: SEMICOLON@36..37 ";" [] [],
                                                },
                                            ],
                                            r_curly_token: R_CURLY@37..40 "}" [Whitespace("\n ")] [],
                                        },
                                    },
                                    COMMA@40..41 "," [] [],
                                    JsGetterObjectMember {
                                        get_token: GET_KW@41..48 "get" [Whitespace("\n\n ")] [Whitespace(" ")],
                                        name: JsLiteralMemberName {
                                            value: JS_STRING_LITERAL@48..53 "\"bar\"" [] [],
                                        },
                                        l_paren_token: L_PAREN@53..54 "(" [] [],
                                        r_paren_token: R_PAREN@54..56 ")" [] [Whitespace(" ")],
                                        return_type: missing (optional),
                                        body: JsFunctionBody {
                                            l_curly_token: L_CURLY@56..57 "{" [] [],
                                            directives: [],
                                            statements: [
                                                JsReturnStatement {
                                                    return_token: RETURN_KW@57..67 "return" [Whitespace("\n\t ")] [Whitespace(" ")],
                                                    argument: JsStringLiteralExpression {
                                                        value_token: JS_STRING_LITERAL@67..72 "\"bar\"" [] [],
                                                    },
                                                    semicolon_token: SEMICOLON@72..73 ";" [] [],
                                                },
                                            ],
                                            r_curly_token: R_CURLY@73..76 "}" [Whitespace("\n ")] [],
                                        },
                                    },
                                    COMMA@76..77 "," [] [],
                                    JsGetterObjectMember {
                                        get_token: GET_KW@77..84 "get" [Whitespace("\n\n ")] [Whitespace(" ")],
                                        name: JsComputedMemberName {
                                            l_brack_token: L_BRACK@84..85 "[" [] [],
                                            expression: JsBinaryExpression {
                                                left: JsStringLiteralExpression {
                                                    value_token: JS_STRING_LITERAL@85..89 "\"a\"" [] [Whitespace(" ")],
                                                },
                                                operator: PLUS@89..91 "+" [] [Whitespace(" ")],
                                            },
                                            r_brack_token: R_BRACK@94..95 "]" [] [],
                                        },
                                        l_paren_token: L_PAREN@95..96 "(" [] [],
                                        r_paren_token: R_PAREN@96..98 ")" [] [Whitespace(" ")],
                                        return_type: missing (optional),
                                        body: JsFunctionBody {
                                            l_curly_token: L_CURLY@98..99 "{" [] [],
                                            directives: [],
                                            statements: [
                                                JsReturnStatement {
                                                    return_token: RETURN_KW@99..109 "return" [Whitespace("\n\t ")] [Whitespace(" ")],
                                                    argument: JsBinaryExpression {
                                                        left: JsStringLiteralExpression {
                                                            value_token: JS_STRING_LITERAL@109..113 "\"a\"" [] [Whitespace(" ")],
                                                        },
                                                        operator: PLUS@113..115 "+" [] [Whitespace(" ")],
                                                    },
                                                    semicolon_token: missing (optional),
                                                },
                                            ],
                                            r_curly_token: R_CURLY@118..121 "}" [Whitespace("\n ")] [],
                                        },
                                    },
                                    COMMA@121..122 "," [] [],
                                    JsGetterObjectMember {
                                        get_token: GET_KW@122..129 "get" [Whitespace("\n\n\t")] [Whitespace(" ")],
                                        name: JsLiteralMemberName {
                                            value: JS_NUMBER_LITERAL@129..130 "5" [] [],
                                        },
                                        l_paren_token: L_PAREN@130..131 "(" [] [],
                                        r_paren_token: R_PAREN@131..133 ")" [] [Whitespace(" ")],
                                        return_type: missing (optional),
                                        body: JsFunctionBody {
                                            l_curly_token: L_CURLY@133..134 "{" [] [],
                                            directives: [],
                                            statements: [
                                                JsReturnStatement {
                                                    return_token: RETURN_KW@134..144 "return" [Whitespace("\n\t ")] [Whitespace(" ")],
                                                    argument: JsNumberLiteralExpression {
                                                        value_token: JS_NUMBER_LITERAL@144..145 "5" [] [],
                                                    },
                                                    semicolon_token: SEMICOLON@145..146 ";" [] [],
                                                },
                                            ],
                                            r_curly_token: R_CURLY@146..149 "}" [Whitespace("\n\t")] [],
                                        },
                                    },
                                    COMMA@149..150 "," [] [],
                                    JsMethodObjectMember {
                                        async_token: missing (optional),
                                        star_token: missing (optional),
                                        name: JsLiteralMemberName {
                                            value: IDENT@150..156 "get" [Whitespace("\n\n\t")] [],
                                        },
                                        type_params: missing (optional),
                                        parameter_list: JsParameterList {
                                            l_paren_token: L_PAREN@156..157 "(" [] [],
                                            parameters: [],
                                            r_paren_token: R_PAREN@157..159 ")" [] [Whitespace(" ")],
                                        },
                                        return_type: missing (optional),
                                        body: JsFunctionBody {
                                            l_curly_token: L_CURLY@159..160 "{" [] [],
                                            directives: [],
                                            statements: [
                                                JsReturnStatement {
                                                    return_token: RETURN_KW@160..170 "return" [Whitespace("\n\t ")] [Whitespace(" ")],
                                                    argument: JsStringLiteralExpression {
                                                        value_token: JS_STRING_LITERAL@170..205 "\"This is a method and not a getter\"" [] [],
                                                    },
                                                    semicolon_token: SEMICOLON@205..206 ";" [] [],
                                                },
                                            ],
                                            r_curly_token: R_CURLY@206..209 "}" [Whitespace("\n\t")] [],
                                        },
                                    },
                                ],
                                r_curly_token: R_CURLY@209..211 "}" [Whitespace("\n")] [],
                            },
                        },
                    },
                ],
            },
            semicolon_token: missing (optional),
        },
    ],
}

0: JS_ROOT@0..212
  0: (empty)
  1: LIST@0..0
  2: LIST@0..211
    0: JS_VARIABLE_DECLARATION_STATEMENT@0..211
      0: JS_VARIABLE_DECLARATION@0..211
        0: LET_KW@0..4 "let" [] [Whitespace(" ")]
        1: LIST@4..211
          0: JS_VARIABLE_DECLARATOR@4..211
            0: JS_IDENTIFIER_BINDING@4..6
              0: IDENT@4..6 "a" [] [Whitespace(" ")]
            1: JS_EQUAL_VALUE_CLAUSE@6..211
              0: EQ@6..8 "=" [] [Whitespace(" ")]
              1: JS_OBJECT_EXPRESSION@8..211
                0: L_CURLY@8..9 "{" [] []
                1: LIST@9..209
                  0: JS_GETTER_OBJECT_MEMBER@9..40
                    0: GET_KW@9..15 "get" [Whitespace("\n ")] [Whitespace(" ")]
                    1: JS_LITERAL_MEMBER_NAME@15..18
                      0: IDENT@15..18 "foo" [] []
                    2: L_PAREN@18..19 "(" [] []
                    3: R_PAREN@19..21 ")" [] [Whitespace(" ")]
                    4: JS_FUNCTION_BODY@21..40
                      0: L_CURLY@21..22 "{" [] []
                      1: LIST@22..22
                      2: LIST@22..37
                        0: JS_RETURN_STATEMENT@22..37
                          0: RETURN_KW@22..33 "return" [Whitespace("\n   ")] [Whitespace(" ")]
                          1: JS_REFERENCE_IDENTIFIER_EXPRESSION@33..36
                            0: IDENT@33..36 "foo" [] []
                          2: SEMICOLON@36..37 ";" [] []
                      3: R_CURLY@37..40 "}" [Whitespace("\n ")] []
                  1: COMMA@40..41 "," [] []
                  2: JS_GETTER_OBJECT_MEMBER@41..76
                    0: GET_KW@41..48 "get" [Whitespace("\n\n ")] [Whitespace(" ")]
                    1: JS_LITERAL_MEMBER_NAME@48..53
                      0: JS_STRING_LITERAL@48..53 "\"bar\"" [] []
                    2: L_PAREN@53..54 "(" [] []
                    3: R_PAREN@54..56 ")" [] [Whitespace(" ")]
                    4: JS_FUNCTION_BODY@56..76
                      0: L_CURLY@56..57 "{" [] []
                      1: LIST@57..57
                      2: LIST@57..73
                        0: JS_RETURN_STATEMENT@57..73
                          0: RETURN_KW@57..67 "return" [Whitespace("\n\t ")] [Whitespace(" ")]
                          1: JS_STRING_LITERAL_EXPRESSION@67..72
                            0: JS_STRING_LITERAL@67..72 "\"bar\"" [] []
                          2: SEMICOLON@72..73 ";" [] []
                      3: R_CURLY@73..76 "}" [Whitespace("\n ")] []
                  3: COMMA@76..77 "," [] []
                  4: JS_GETTER_OBJECT_MEMBER@77..121
                    0: GET_KW@77..84 "get" [Whitespace("\n\n ")] [Whitespace(" ")]
                    1: JS_COMPUTED_MEMBER_NAME@84..95
                      0: L_BRACK@84..85 "[" [] []
                      1: JS_BINARY_EXPRESSION@85..94
                        0: JS_STRING_LITERAL_EXPRESSION@85..89
                          0: JS_STRING_LITERAL@85..89 "\"a\"" [] [Whitespace(" ")]
                        1: PLUS@89..91 "+" [] [Whitespace(" ")]
                        2: JS_STRING_LITERAL_EXPRESSION@91..94
                          0: JS_STRING_LITERAL@91..94 "\"b\"" [] []
                      2: R_BRACK@94..95 "]" [] []
                    2: L_PAREN@95..96 "(" [] []
                    3: R_PAREN@96..98 ")" [] [Whitespace(" ")]
                    4: JS_FUNCTION_BODY@98..121
                      0: L_CURLY@98..99 "{" [] []
                      1: LIST@99..99
                      2: LIST@99..118
                        0: JS_RETURN_STATEMENT@99..118
                          0: RETURN_KW@99..109 "return" [Whitespace("\n\t ")] [Whitespace(" ")]
                          1: JS_BINARY_EXPRESSION@109..118
                            0: JS_STRING_LITERAL_EXPRESSION@109..113
                              0: JS_STRING_LITERAL@109..113 "\"a\"" [] [Whitespace(" ")]
                            1: PLUS@113..115 "+" [] [Whitespace(" ")]
                            2: JS_STRING_LITERAL_EXPRESSION@115..118
                              0: JS_STRING_LITERAL@115..118 "\"b\"" [] []
                          2: (empty)
                      3: R_CURLY@118..121 "}" [Whitespace("\n ")] []
                  5: COMMA@121..122 "," [] []
                  6: JS_GETTER_OBJECT_MEMBER@122..149
                    0: GET_KW@122..129 "get" [Whitespace("\n\n\t")] [Whitespace(" ")]
                    1: JS_LITERAL_MEMBER_NAME@129..130
                      0: JS_NUMBER_LITERAL@129..130 "5" [] []
                    2: L_PAREN@130..131 "(" [] []
                    3: R_PAREN@131..133 ")" [] [Whitespace(" ")]
                    4: JS_FUNCTION_BODY@133..149
                      0: L_CURLY@133..134 "{" [] []
                      1: LIST@134..134
                      2: LIST@134..146
                        0: JS_RETURN_STATEMENT@134..146
                          0: RETURN_KW@134..144 "return" [Whitespace("\n\t ")] [Whitespace(" ")]
                          1: JS_NUMBER_LITERAL_EXPRESSION@144..145
                            0: JS_NUMBER_LITERAL@144..145 "5" [] []
                          2: SEMICOLON@145..146 ";" [] []
                      3: R_CURLY@146..149 "}" [Whitespace("\n\t")] []
                  7: COMMA@149..150 "," [] []
                  8: JS_METHOD_OBJECT_MEMBER@150..209
                    0: JS_LITERAL_MEMBER_NAME@150..156
                      0: IDENT@150..156 "get" [Whitespace("\n\n\t")] []
                    1: JS_PARAMETER_LIST@156..159
                      0: L_PAREN@156..157 "(" [] []
                      1: LIST@157..157
                      2: R_PAREN@157..159 ")" [] [Whitespace(" ")]
                    2: JS_FUNCTION_BODY@159..209
                      0: L_CURLY@159..160 "{" [] []
                      1: LIST@160..160
                      2: LIST@160..206
                        0: JS_RETURN_STATEMENT@160..206
                          0: RETURN_KW@160..170 "return" [Whitespace("\n\t ")] [Whitespace(" ")]
                          1: JS_STRING_LITERAL_EXPRESSION@170..205
                            0: JS_STRING_LITERAL@170..205 "\"This is a method and not a getter\"" [] []
                          2: SEMICOLON@205..206 ";" [] []
                      3: R_CURLY@206..209 "}" [Whitespace("\n\t")] []
                2: R_CURLY@209..211 "}" [Whitespace("\n")] []
      1: (empty)
  3: EOF@211..212 "" [Whitespace("\n")] []
