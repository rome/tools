JsRoot {
    interpreter_token: None,
    directives: [],
    statements: [
        JsVariableDeclarationStatement(
            JsVariableDeclarationStatement {
                declaration: Ok(
                    JsVariableDeclaration {
                        kind_token: Ok(
                            LET_KW@0..4 "let" [] [Whitespace(" ")],
                        ),
                        declarators: [
                            AstSeparatedElement {
                                node: JsVariableDeclarator {
                                    id: Ok(
                                        SinglePattern(
                                            SinglePattern {
                                                name: Ok(
                                                    Name {
                                                        ident_token: Ok(
                                                            IDENT@4..8 "foo" [] [Whitespace(" ")],
                                                        ),
                                                    },
                                                ),
                                                question_mark_token: None,
                                                excl_token: None,
                                                ty: None,
                                            },
                                        ),
                                    ),
                                    init: Some(
                                        JsEqualValueClause {
                                            eq_token: Ok(
                                                EQ@8..10 "=" [] [Whitespace(" ")],
                                            ),
                                            expression: Ok(
                                                JsReferenceIdentifierExpression(
                                                    JsReferenceIdentifierExpression {
                                                        name_token: Ok(
                                                            IDENT@10..13 "bar" [] [],
                                                        ),
                                                    },
                                                ),
                                            ),
                                        },
                                    ),
                                },
                                trailing_separator: None,
                            },
                        ],
                    },
                ),
                semicolon_token: Some(
                    SEMICOLON@13..14 ";" [] [],
                ),
            },
        ),
        JsVariableDeclarationStatement(
            JsVariableDeclarationStatement {
                declaration: Ok(
                    JsVariableDeclaration {
                        kind_token: Ok(
                            LET_KW@14..19 "let" [Whitespace("\n")] [Whitespace(" ")],
                        ),
                        declarators: [
                            AstSeparatedElement {
                                node: JsVariableDeclarator {
                                    id: Ok(
                                        SinglePattern(
                                            SinglePattern {
                                                name: Ok(
                                                    Name {
                                                        ident_token: Ok(
                                                            IDENT@19..23 "foo" [] [Whitespace(" ")],
                                                        ),
                                                    },
                                                ),
                                                question_mark_token: None,
                                                excl_token: None,
                                                ty: None,
                                            },
                                        ),
                                    ),
                                    init: Some(
                                        JsEqualValueClause {
                                            eq_token: Ok(
                                                EQ@23..25 "=" [] [Whitespace(" ")],
                                            ),
                                            expression: Ok(
                                                JsReferenceIdentifierExpression(
                                                    JsReferenceIdentifierExpression {
                                                        name_token: Ok(
                                                            IDENT@25..26 "b" [] [],
                                                        ),
                                                    },
                                                ),
                                            ),
                                        },
                                    ),
                                },
                                trailing_separator: None,
                            },
                        ],
                    },
                ),
                semicolon_token: Some(
                    SEMICOLON@26..27 ";" [] [],
                ),
            },
        ),
        JsVariableDeclarationStatement(
            JsVariableDeclarationStatement {
                declaration: Ok(
                    JsVariableDeclaration {
                        kind_token: Ok(
                            LET_KW@27..32 "let" [Whitespace("\n")] [Whitespace(" ")],
                        ),
                        declarators: [
                            AstSeparatedElement {
                                node: JsVariableDeclarator {
                                    id: Ok(
                                        SinglePattern(
                                            SinglePattern {
                                                name: Ok(
                                                    Name {
                                                        ident_token: Ok(
                                                            IDENT@32..35 "foo" [] [],
                                                        ),
                                                    },
                                                ),
                                                question_mark_token: None,
                                                excl_token: None,
                                                ty: None,
                                            },
                                        ),
                                    ),
                                    init: None,
                                },
                                trailing_separator: None,
                            },
                        ],
                    },
                ),
                semicolon_token: Some(
                    SEMICOLON@35..36 ";" [] [],
                ),
            },
        ),
        JsVariableDeclarationStatement(
            JsVariableDeclarationStatement {
                declaration: Ok(
                    JsVariableDeclaration {
                        kind_token: Ok(
                            LET_KW@36..41 "let" [Whitespace("\n")] [Whitespace(" ")],
                        ),
                        declarators: [
                            AstSeparatedElement {
                                node: JsVariableDeclarator {
                                    id: Ok(
                                        SinglePattern(
                                            SinglePattern {
                                                name: Ok(
                                                    Name {
                                                        ident_token: Ok(
                                                            IDENT@41..44 "foo" [] [],
                                                        ),
                                                    },
                                                ),
                                                question_mark_token: None,
                                                excl_token: None,
                                                ty: None,
                                            },
                                        ),
                                    ),
                                    init: None,
                                },
                                trailing_separator: None,
                            },
                        ],
                    },
                ),
                semicolon_token: None,
            },
        ),
        JsVariableDeclarationStatement(
            JsVariableDeclarationStatement {
                declaration: Ok(
                    JsVariableDeclaration {
                        kind_token: Ok(
                            LET_KW@44..49 "let" [Whitespace("\n")] [Whitespace(" ")],
                        ),
                        declarators: [
                            AstSeparatedElement {
                                node: JsVariableDeclarator {
                                    id: Ok(
                                        SinglePattern(
                                            SinglePattern {
                                                name: Ok(
                                                    Name {
                                                        ident_token: Ok(
                                                            IDENT@49..52 "foo" [] [],
                                                        ),
                                                    },
                                                ),
                                                question_mark_token: None,
                                                excl_token: None,
                                                ty: None,
                                            },
                                        ),
                                    ),
                                    init: None,
                                },
                                trailing_separator: None,
                            },
                        ],
                    },
                ),
                semicolon_token: None,
            },
        ),
        JsFunctionDeclaration(
            JsFunctionDeclaration {
                async_token: None,
                function_token: Ok(
                    FUNCTION_KW@52..62 "function" [Whitespace("\n")] [Whitespace(" ")],
                ),
                star_token: None,
                id: Ok(
                    JsIdentifierBinding {
                        name_token: Ok(
                            IDENT@62..65 "foo" [] [],
                        ),
                    },
                ),
                type_parameters: None,
                parameter_list: Ok(
                    JsParameterList {
                        l_paren_token: Ok(
                            L_PAREN@65..66 "(" [] [],
                        ),
                        parameters: [],
                        r_paren_token: Ok(
                            R_PAREN@66..68 ")" [] [Whitespace(" ")],
                        ),
                    },
                ),
                return_type: None,
                body: Ok(
                    JsFunctionBody {
                        l_curly_token: Ok(
                            L_CURLY@68..70 "{" [] [Whitespace(" ")],
                        ),
                        directives: [],
                        statements: [
                            JsReturnStatement(
                                JsReturnStatement {
                                    return_token: Ok(
                                        RETURN_KW@70..77 "return" [] [Whitespace(" ")],
                                    ),
                                    argument: Some(
                                        JsAnyLiteralExpression(
                                            JsBooleanLiteralExpression(
                                                JsBooleanLiteralExpression {
                                                    value_token: Ok(
                                                        TRUE_KW@77..82 "true" [] [Whitespace(" ")],
                                                    ),
                                                },
                                            ),
                                        ),
                                    ),
                                    semicolon_token: None,
                                },
                            ),
                        ],
                        r_curly_token: Ok(
                            R_CURLY@82..83 "}" [] [],
                        ),
                    },
                ),
            },
        ),
    ],
}

0: JS_ROOT@0..84
  0: (empty)
  1: LIST@0..0
  2: LIST@0..83
    0: JS_VARIABLE_DECLARATION_STATEMENT@0..14
      0: JS_VARIABLE_DECLARATION@0..13
        0: LET_KW@0..4 "let" [] [Whitespace(" ")]
        1: LIST@4..13
          0: JS_VARIABLE_DECLARATOR@4..13
            0: SINGLE_PATTERN@4..8
              0: NAME@4..8
                0: IDENT@4..8 "foo" [] [Whitespace(" ")]
            1: JS_EQUAL_VALUE_CLAUSE@8..13
              0: EQ@8..10 "=" [] [Whitespace(" ")]
              1: JS_REFERENCE_IDENTIFIER_EXPRESSION@10..13
                0: IDENT@10..13 "bar" [] []
      1: SEMICOLON@13..14 ";" [] []
    1: JS_VARIABLE_DECLARATION_STATEMENT@14..27
      0: JS_VARIABLE_DECLARATION@14..26
        0: LET_KW@14..19 "let" [Whitespace("\n")] [Whitespace(" ")]
        1: LIST@19..26
          0: JS_VARIABLE_DECLARATOR@19..26
            0: SINGLE_PATTERN@19..23
              0: NAME@19..23
                0: IDENT@19..23 "foo" [] [Whitespace(" ")]
            1: JS_EQUAL_VALUE_CLAUSE@23..26
              0: EQ@23..25 "=" [] [Whitespace(" ")]
              1: JS_REFERENCE_IDENTIFIER_EXPRESSION@25..26
                0: IDENT@25..26 "b" [] []
      1: SEMICOLON@26..27 ";" [] []
    2: JS_VARIABLE_DECLARATION_STATEMENT@27..36
      0: JS_VARIABLE_DECLARATION@27..35
        0: LET_KW@27..32 "let" [Whitespace("\n")] [Whitespace(" ")]
        1: LIST@32..35
          0: JS_VARIABLE_DECLARATOR@32..35
            0: SINGLE_PATTERN@32..35
              0: NAME@32..35
                0: IDENT@32..35 "foo" [] []
      1: SEMICOLON@35..36 ";" [] []
    3: JS_VARIABLE_DECLARATION_STATEMENT@36..44
      0: JS_VARIABLE_DECLARATION@36..44
        0: LET_KW@36..41 "let" [Whitespace("\n")] [Whitespace(" ")]
        1: LIST@41..44
          0: JS_VARIABLE_DECLARATOR@41..44
            0: SINGLE_PATTERN@41..44
              0: NAME@41..44
                0: IDENT@41..44 "foo" [] []
      1: (empty)
    4: JS_VARIABLE_DECLARATION_STATEMENT@44..52
      0: JS_VARIABLE_DECLARATION@44..52
        0: LET_KW@44..49 "let" [Whitespace("\n")] [Whitespace(" ")]
        1: LIST@49..52
          0: JS_VARIABLE_DECLARATOR@49..52
            0: SINGLE_PATTERN@49..52
              0: NAME@49..52
                0: IDENT@49..52 "foo" [] []
      1: (empty)
    5: JS_FUNCTION_DECLARATION@52..83
      0: FUNCTION_KW@52..62 "function" [Whitespace("\n")] [Whitespace(" ")]
      1: JS_IDENTIFIER_BINDING@62..65
        0: IDENT@62..65 "foo" [] []
      2: JS_PARAMETER_LIST@65..68
        0: L_PAREN@65..66 "(" [] []
        1: LIST@66..66
        2: R_PAREN@66..68 ")" [] [Whitespace(" ")]
      3: JS_FUNCTION_BODY@68..83
        0: L_CURLY@68..70 "{" [] [Whitespace(" ")]
        1: LIST@70..70
        2: LIST@70..82
          0: JS_RETURN_STATEMENT@70..82
            0: RETURN_KW@70..77 "return" [] [Whitespace(" ")]
            1: JS_BOOLEAN_LITERAL_EXPRESSION@77..82
              0: TRUE_KW@77..82 "true" [] [Whitespace(" ")]
            2: (empty)
        3: R_CURLY@82..83 "}" [] []
  3: EOF@83..84 "" [Whitespace("\n")] []
