JsRoot {
    interpreter_token: missing (optional),
    directives: [],
    statements: [
        JsExpressionStatement {
            expression: JsArrowFunctionExpression {
                async_token: missing (optional),
                type_parameters: missing (optional),
                parameter_list: JsIdentifierBinding {
                    name_token: IDENT@0..14 "foo" [Comments("// SCRIPT"), Whitespace("\n")] [Whitespace(" ")],
                    question_mark_token: missing (optional),
                    excl_token: missing (optional),
                    ty: missing (optional),
                },
                fat_arrow_token: FAT_ARROW@14..17 "=>" [] [Whitespace(" ")],
                return_type: missing (optional),
            },
            semicolon_token: missing (optional),
        },
        JsExpressionStatement {
            expression: JsArrowFunctionExpression {
                async_token: missing (optional),
                type_parameters: missing (optional),
                parameter_list: JsIdentifierBinding {
                    name_token: IDENT@19..26 "yield" [Whitespace("\n")] [Whitespace(" ")],
                    question_mark_token: missing (optional),
                    excl_token: missing (optional),
                    ty: missing (optional),
                },
                fat_arrow_token: FAT_ARROW@26..29 "=>" [] [Whitespace(" ")],
                return_type: missing (optional),
            },
            semicolon_token: missing (optional),
        },
        JsExpressionStatement {
            expression: JsArrowFunctionExpression {
                async_token: missing (optional),
                type_parameters: missing (optional),
                parameter_list: JsIdentifierBinding {
                    name_token: IDENT@31..38 "await" [Whitespace("\n")] [Whitespace(" ")],
                    question_mark_token: missing (optional),
                    excl_token: missing (optional),
                    ty: missing (optional),
                },
                fat_arrow_token: FAT_ARROW@38..41 "=>" [] [Whitespace(" ")],
                return_type: missing (optional),
            },
            semicolon_token: missing (optional),
        },
        JsExpressionStatement {
            expression: JsArrowFunctionExpression {
                async_token: missing (optional),
                type_parameters: missing (optional),
                parameter_list: JsIdentifierBinding {
                    name_token: IDENT@43..48 "foo" [Whitespace("\n")] [Whitespace(" ")],
                    question_mark_token: missing (optional),
                    excl_token: missing (optional),
                    ty: missing (optional),
                },
                fat_arrow_token: FAT_ARROW@48..50 "=>" [] [],
                return_type: missing (optional),
            },
            semicolon_token: missing (optional),
        },
    ],
}

0: JS_ROOT@0..54
  0: (empty)
  1: LIST@0..0
  2: LIST@0..53
    0: JS_EXPRESSION_STATEMENT@0..19
      0: JS_ARROW_FUNCTION_EXPRESSION@0..19
        0: JS_IDENTIFIER_BINDING@0..14
          0: IDENT@0..14 "foo" [Comments("// SCRIPT"), Whitespace("\n")] [Whitespace(" ")]
        1: FAT_ARROW@14..17 "=>" [] [Whitespace(" ")]
        2: JS_FUNCTION_BODY@17..19
          0: L_CURLY@17..18 "{" [] []
          1: LIST@18..18
          2: LIST@18..18
          3: R_CURLY@18..19 "}" [] []
      1: (empty)
    1: JS_EXPRESSION_STATEMENT@19..31
      0: JS_ARROW_FUNCTION_EXPRESSION@19..31
        0: JS_IDENTIFIER_BINDING@19..26
          0: IDENT@19..26 "yield" [Whitespace("\n")] [Whitespace(" ")]
        1: FAT_ARROW@26..29 "=>" [] [Whitespace(" ")]
        2: JS_FUNCTION_BODY@29..31
          0: L_CURLY@29..30 "{" [] []
          1: LIST@30..30
          2: LIST@30..30
          3: R_CURLY@30..31 "}" [] []
      1: (empty)
    2: JS_EXPRESSION_STATEMENT@31..43
      0: JS_ARROW_FUNCTION_EXPRESSION@31..43
        0: JS_IDENTIFIER_BINDING@31..38
          0: IDENT@31..38 "await" [Whitespace("\n")] [Whitespace(" ")]
        1: FAT_ARROW@38..41 "=>" [] [Whitespace(" ")]
        2: JS_FUNCTION_BODY@41..43
          0: L_CURLY@41..42 "{" [] []
          1: LIST@42..42
          2: LIST@42..42
          3: R_CURLY@42..43 "}" [] []
      1: (empty)
    3: JS_EXPRESSION_STATEMENT@43..53
      0: JS_ARROW_FUNCTION_EXPRESSION@43..53
        0: JS_IDENTIFIER_BINDING@43..48
          0: IDENT@43..48 "foo" [Whitespace("\n")] [Whitespace(" ")]
        1: FAT_ARROW@48..50 "=>" [] []
        2: JS_FUNCTION_BODY@50..53
          0: L_CURLY@50..52 "{" [Whitespace("\n")] []
          1: LIST@52..52
          2: LIST@52..52
          3: R_CURLY@52..53 "}" [] []
      1: (empty)
  3: EOF@53..54 "" [Whitespace("\n")] []
