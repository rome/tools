JsModule {
    interpreter_token: missing (optional),
    directives: JsDirectiveList [],
    items: JsModuleItemList [
        TsTypeAliasDeclaration {
            type_token: TYPE_KW@0..5 "type" [] [Whitespace(" ")],
            binding_identifier: TsIdentifierBinding {
                name_token: IDENT@5..7 "A" [] [Whitespace(" ")],
            },
            type_parameters: missing (optional),
            eq_token: EQ@7..9 "=" [] [Whitespace(" ")],
            ty: TsArrayType {
                element_type: TsStringType {
                    string_token: STRING_KW@9..15 "string" [] [],
                },
                l_brack_token: L_BRACK@15..16 "[" [] [],
                r_brack_token: R_BRACK@16..17 "]" [] [],
            },
            semicolon_token: SEMICOLON@17..18 ";" [] [],
        },
        TsTypeAliasDeclaration {
            type_token: TYPE_KW@18..24 "type" [Newline("\n")] [Whitespace(" ")],
            binding_identifier: TsIdentifierBinding {
                name_token: IDENT@24..26 "B" [] [Whitespace(" ")],
            },
            type_parameters: missing (optional),
            eq_token: EQ@26..28 "=" [] [Whitespace(" ")],
            ty: TsArrayType {
                element_type: TsObjectType {
                    l_curly_token: L_CURLY@28..30 "{" [] [Whitespace(" ")],
                    members: TsTypeMemberList [
                        TsPropertySignatureTypeMember {
                            readonly_token: missing (optional),
                            name: JsLiteralMemberName {
                                value: IDENT@30..31 "a" [] [],
                            },
                            optional_token: missing (optional),
                            type_annotation: TsTypeAnnotation {
                                colon_token: COLON@31..33 ":" [] [Whitespace(" ")],
                                ty: TsNumberType {
                                    number_token: NUMBER_KW@33..40 "number" [] [Whitespace(" ")],
                                },
                            },
                            separator_token: missing (optional),
                        },
                    ],
                    r_curly_token: R_CURLY@40..42 "}" [] [Whitespace(" ")],
                },
                l_brack_token: L_BRACK@42..43 "[" [] [],
                r_brack_token: R_BRACK@43..44 "]" [] [],
            },
            semicolon_token: SEMICOLON@44..45 ";" [] [],
        },
    ],
    eof_token: EOF@45..46 "" [Newline("\n")] [],
}

0: JS_MODULE@0..46
  0: (empty)
  1: JS_DIRECTIVE_LIST@0..0
  2: JS_MODULE_ITEM_LIST@0..45
    0: TS_TYPE_ALIAS_DECLARATION@0..18
      0: TYPE_KW@0..5 "type" [] [Whitespace(" ")]
      1: TS_IDENTIFIER_BINDING@5..7
        0: IDENT@5..7 "A" [] [Whitespace(" ")]
      2: (empty)
      3: EQ@7..9 "=" [] [Whitespace(" ")]
      4: TS_ARRAY_TYPE@9..17
        0: TS_STRING_TYPE@9..15
          0: STRING_KW@9..15 "string" [] []
        1: L_BRACK@15..16 "[" [] []
        2: R_BRACK@16..17 "]" [] []
      5: SEMICOLON@17..18 ";" [] []
    1: TS_TYPE_ALIAS_DECLARATION@18..45
      0: TYPE_KW@18..24 "type" [Newline("\n")] [Whitespace(" ")]
      1: TS_IDENTIFIER_BINDING@24..26
        0: IDENT@24..26 "B" [] [Whitespace(" ")]
      2: (empty)
      3: EQ@26..28 "=" [] [Whitespace(" ")]
      4: TS_ARRAY_TYPE@28..44
        0: TS_OBJECT_TYPE@28..42
          0: L_CURLY@28..30 "{" [] [Whitespace(" ")]
          1: TS_TYPE_MEMBER_LIST@30..40
            0: TS_PROPERTY_SIGNATURE_TYPE_MEMBER@30..40
              0: (empty)
              1: JS_LITERAL_MEMBER_NAME@30..31
                0: IDENT@30..31 "a" [] []
              2: (empty)
              3: TS_TYPE_ANNOTATION@31..40
                0: COLON@31..33 ":" [] [Whitespace(" ")]
                1: TS_NUMBER_TYPE@33..40
                  0: NUMBER_KW@33..40 "number" [] [Whitespace(" ")]
              4: (empty)
          2: R_CURLY@40..42 "}" [] [Whitespace(" ")]
        1: L_BRACK@42..43 "[" [] []
        2: R_BRACK@43..44 "]" [] []
      5: SEMICOLON@44..45 ";" [] []
  3: EOF@45..46 "" [Newline("\n")] []
