JsModule {
    interpreter_token: missing (optional),
    directives: JsDirectiveList [],
    items: JsModuleItemList [
        TsTypeAliasStatement {
            type_token: TYPE_KW@0..19 "type" [Comments("// TYPESCRIPT"), Newline("\n")] [Whitespace(" ")],
            binding_identifier: TsIdentifierBinding {
                name_token: IDENT@19..20 "A" [] [],
            },
            type_parameters: TsTypeParameters {
                l_angle_token: L_ANGLE@20..21 "<" [] [],
                items: TsTypeParameterList [
                    TsTypeParameter {
                        name: TsTypeParameterName {
                            ident_token: IDENT@21..23 "X" [] [Whitespace(" ")],
                        },
                        constraint: TsTypeConstraintClause {
                            extends_token: EXTENDS_KW@23..31 "extends" [] [Whitespace(" ")],
                            ty: TsStringType {
                                string_token: STRING_KW@31..37 "string" [] [],
                            },
                        },
                        default: missing (optional),
                    },
                    COMMA@37..39 "," [] [Whitespace(" ")],
                    TsTypeParameter {
                        name: TsTypeParameterName {
                            ident_token: IDENT@39..41 "Y" [] [Whitespace(" ")],
                        },
                        constraint: missing (optional),
                        default: TsDefaultTypeClause {
                            eq_token: EQ@41..43 "=" [] [Whitespace(" ")],
                            ty: TsNumberType {
                                number_token: NUMBER_KW@43..49 "number" [] [],
                            },
                        },
                    },
                    COMMA@49..51 "," [] [Whitespace(" ")],
                    TsTypeParameter {
                        name: TsTypeParameterName {
                            ident_token: IDENT@51..53 "Z" [] [Whitespace(" ")],
                        },
                        constraint: TsTypeConstraintClause {
                            extends_token: EXTENDS_KW@53..61 "extends" [] [Whitespace(" ")],
                            ty: TsUnionType {
                                leading_separator_token_token: missing (optional),
                                types: TsUnionTypeVariantList [
                                    TsStringType {
                                        string_token: STRING_KW@61..68 "string" [] [Whitespace(" ")],
                                    },
                                    PIPE@68..70 "|" [] [Whitespace(" ")],
                                    TsNumberType {
                                        number_token: NUMBER_KW@70..77 "number" [] [Whitespace(" ")],
                                    },
                                ],
                            },
                        },
                        default: TsDefaultTypeClause {
                            eq_token: EQ@77..79 "=" [] [Whitespace(" ")],
                            ty: TsNumberType {
                                number_token: NUMBER_KW@79..85 "number" [] [],
                            },
                        },
                    },
                ],
                r_angle_token: R_ANGLE@85..87 ">" [] [Whitespace(" ")],
            },
            eq_token: EQ@87..89 "=" [] [Whitespace(" ")],
            ty: TsObjectType {
                l_curly_token: L_CURLY@89..91 "{" [] [Whitespace(" ")],
                members: TsObjectTypeMemberList [
                    TsPropertySignatureObjectTypeMember {
                        readonly_token: missing (optional),
                        name: JsLiteralMemberName {
                            value: IDENT@91..92 "x" [] [],
                        },
                        optional_token_token: missing (optional),
                        type_annotation: TsTypeAnnotation {
                            colon_token: COLON@92..94 ":" [] [Whitespace(" ")],
                            ty: TsReferenceType {
                                name: JsReferenceIdentifier {
                                    value_token: IDENT@94..95 "X" [] [],
                                },
                                type_arguments: missing (optional),
                            },
                        },
                        separator_token: COMMA@95..97 "," [] [Whitespace(" ")],
                    },
                    TsPropertySignatureObjectTypeMember {
                        readonly_token: missing (optional),
                        name: JsLiteralMemberName {
                            value: IDENT@97..98 "y" [] [],
                        },
                        optional_token_token: missing (optional),
                        type_annotation: TsTypeAnnotation {
                            colon_token: COLON@98..100 ":" [] [Whitespace(" ")],
                            ty: TsReferenceType {
                                name: JsReferenceIdentifier {
                                    value_token: IDENT@100..101 "Y" [] [],
                                },
                                type_arguments: missing (optional),
                            },
                        },
                        separator_token: COMMA@101..103 "," [] [Whitespace(" ")],
                    },
                    TsPropertySignatureObjectTypeMember {
                        readonly_token: missing (optional),
                        name: JsLiteralMemberName {
                            value: IDENT@103..104 "z" [] [],
                        },
                        optional_token_token: missing (optional),
                        type_annotation: TsTypeAnnotation {
                            colon_token: COLON@104..106 ":" [] [Whitespace(" ")],
                            ty: TsReferenceType {
                                name: JsReferenceIdentifier {
                                    value_token: IDENT@106..108 "Z" [] [Whitespace(" ")],
                                },
                                type_arguments: missing (optional),
                            },
                        },
                        separator_token: missing (optional),
                    },
                ],
                r_curly_token: R_CURLY@108..109 "}" [] [],
            },
            semicolon_token: missing (optional),
        },
    ],
    eof_token: EOF@109..110 "" [Newline("\n")] [],
}

0: JS_MODULE@0..110
  0: (empty)
  1: JS_DIRECTIVE_LIST@0..0
  2: JS_MODULE_ITEM_LIST@0..109
    0: TS_TYPE_ALIAS_STATEMENT@0..109
      0: TYPE_KW@0..19 "type" [Comments("// TYPESCRIPT"), Newline("\n")] [Whitespace(" ")]
      1: TS_IDENTIFIER_BINDING@19..20
        0: IDENT@19..20 "A" [] []
      2: TS_TYPE_PARAMETERS@20..87
        0: L_ANGLE@20..21 "<" [] []
        1: TS_TYPE_PARAMETER_LIST@21..85
          0: TS_TYPE_PARAMETER@21..37
            0: TS_TYPE_PARAMETER_NAME@21..23
              0: IDENT@21..23 "X" [] [Whitespace(" ")]
            1: TS_TYPE_CONSTRAINT_CLAUSE@23..37
              0: EXTENDS_KW@23..31 "extends" [] [Whitespace(" ")]
              1: TS_STRING_TYPE@31..37
                0: STRING_KW@31..37 "string" [] []
            2: (empty)
          1: COMMA@37..39 "," [] [Whitespace(" ")]
          2: TS_TYPE_PARAMETER@39..49
            0: TS_TYPE_PARAMETER_NAME@39..41
              0: IDENT@39..41 "Y" [] [Whitespace(" ")]
            1: (empty)
            2: TS_DEFAULT_TYPE_CLAUSE@41..49
              0: EQ@41..43 "=" [] [Whitespace(" ")]
              1: TS_NUMBER_TYPE@43..49
                0: NUMBER_KW@43..49 "number" [] []
          3: COMMA@49..51 "," [] [Whitespace(" ")]
          4: TS_TYPE_PARAMETER@51..85
            0: TS_TYPE_PARAMETER_NAME@51..53
              0: IDENT@51..53 "Z" [] [Whitespace(" ")]
            1: TS_TYPE_CONSTRAINT_CLAUSE@53..77
              0: EXTENDS_KW@53..61 "extends" [] [Whitespace(" ")]
              1: TS_UNION_TYPE@61..77
                0: (empty)
                1: TS_UNION_TYPE_VARIANT_LIST@61..77
                  0: TS_STRING_TYPE@61..68
                    0: STRING_KW@61..68 "string" [] [Whitespace(" ")]
                  1: PIPE@68..70 "|" [] [Whitespace(" ")]
                  2: TS_NUMBER_TYPE@70..77
                    0: NUMBER_KW@70..77 "number" [] [Whitespace(" ")]
            2: TS_DEFAULT_TYPE_CLAUSE@77..85
              0: EQ@77..79 "=" [] [Whitespace(" ")]
              1: TS_NUMBER_TYPE@79..85
                0: NUMBER_KW@79..85 "number" [] []
        2: R_ANGLE@85..87 ">" [] [Whitespace(" ")]
      3: EQ@87..89 "=" [] [Whitespace(" ")]
      4: TS_OBJECT_TYPE@89..109
        0: L_CURLY@89..91 "{" [] [Whitespace(" ")]
        1: TS_OBJECT_TYPE_MEMBER_LIST@91..108
          0: TS_PROPERTY_SIGNATURE_OBJECT_TYPE_MEMBER@91..97
            0: (empty)
            1: JS_LITERAL_MEMBER_NAME@91..92
              0: IDENT@91..92 "x" [] []
            2: (empty)
            3: TS_TYPE_ANNOTATION@92..95
              0: COLON@92..94 ":" [] [Whitespace(" ")]
              1: TS_REFERENCE_TYPE@94..95
                0: JS_REFERENCE_IDENTIFIER@94..95
                  0: IDENT@94..95 "X" [] []
                1: (empty)
            4: COMMA@95..97 "," [] [Whitespace(" ")]
          1: TS_PROPERTY_SIGNATURE_OBJECT_TYPE_MEMBER@97..103
            0: (empty)
            1: JS_LITERAL_MEMBER_NAME@97..98
              0: IDENT@97..98 "y" [] []
            2: (empty)
            3: TS_TYPE_ANNOTATION@98..101
              0: COLON@98..100 ":" [] [Whitespace(" ")]
              1: TS_REFERENCE_TYPE@100..101
                0: JS_REFERENCE_IDENTIFIER@100..101
                  0: IDENT@100..101 "Y" [] []
                1: (empty)
            4: COMMA@101..103 "," [] [Whitespace(" ")]
          2: TS_PROPERTY_SIGNATURE_OBJECT_TYPE_MEMBER@103..108
            0: (empty)
            1: JS_LITERAL_MEMBER_NAME@103..104
              0: IDENT@103..104 "z" [] []
            2: (empty)
            3: TS_TYPE_ANNOTATION@104..108
              0: COLON@104..106 ":" [] [Whitespace(" ")]
              1: TS_REFERENCE_TYPE@106..108
                0: JS_REFERENCE_IDENTIFIER@106..108
                  0: IDENT@106..108 "Z" [] [Whitespace(" ")]
                1: (empty)
            4: (empty)
        2: R_CURLY@108..109 "}" [] []
      5: (empty)
  3: EOF@109..110 "" [Newline("\n")] []
