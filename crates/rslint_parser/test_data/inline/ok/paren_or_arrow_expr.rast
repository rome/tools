JsRoot {
    interpreter_token: missing (optional),
    directives: [],
    statements: [
        JsExpressionStatement {
            expression: JsParenthesizedExpression {
                l_paren_token: L_PAREN@0..1 "(" [] [],
                expression: JsReferenceIdentifierExpression {
                    name_token: IDENT@1..4 "foo" [] [],
                },
                r_paren_token: R_PAREN@4..5 ")" [] [],
            },
            semicolon_token: SEMICOLON@5..6 ";" [] [],
        },
        JsExpressionStatement {
            expression: JsArrowFunctionExpression {
                async_token: missing (optional),
                type_parameters: missing (optional),
                parameter_list: JsParameterList {
                    l_paren_token: L_PAREN@6..8 "(" [Whitespace("\n")] [],
                    parameters: [
                        JsIdentifierBinding {
                            name_token: IDENT@8..11 "foo" [] [],
                            question_mark_token: missing (optional),
                            excl_token: missing (optional),
                            ty: missing (optional),
                        }
                        ,
                    ],
                    r_paren_token: R_PAREN@11..13 ")" [] [Whitespace(" ")],
                },
                fat_arrow_token: FAT_ARROW@13..16 "=>" [] [Whitespace(" ")],
                return_type: missing (optional),
            },
            semicolon_token: SEMICOLON@18..19 ";" [] [],
        },
        JsExpressionStatement {
            expression: JsParenthesizedExpression {
                l_paren_token: L_PAREN@19..21 "(" [Whitespace("\n")] [],
                expression: JsBinaryExpression {
                    left: JsNumberLiteralExpression {
                        value_token: JS_NUMBER_LITERAL@21..23 "5" [] [Whitespace(" ")],
                    },
                    operator: PLUS@23..25 "+" [] [Whitespace(" ")],
                },
                r_paren_token: R_PAREN@26..27 ")" [] [],
            },
            semicolon_token: SEMICOLON@27..28 ";" [] [],
        },
        JsExpressionStatement {
            expression: JsArrowFunctionExpression {
                async_token: missing (optional),
                type_parameters: missing (optional),
                parameter_list: JsParameterList {
                    l_paren_token: L_PAREN@28..30 "(" [Whitespace("\n")] [],
                    parameters: [
                        JsObjectBinding {
                            l_curly_token: L_CURLY@30..31 "{" [] [],
                            properties: [
                                JsShorthandPropertyBinding {
                                    identifier: JsIdentifierBinding {
                                        name_token: IDENT@31..34 "foo" [] [],
                                        question_mark_token: missing (optional),
                                        excl_token: missing (optional),
                                        ty: missing (optional),
                                    },
                                }
                                COMMA@34..36 "," [] [Whitespace(" ")],
                                JsShorthandPropertyBinding {
                                    identifier: JsIdentifierBinding {
                                        name_token: IDENT@36..39 "bar" [] [],
                                        question_mark_token: missing (optional),
                                        excl_token: missing (optional),
                                        ty: missing (optional),
                                    },
                                }
                                COMMA@39..41 "," [] [Whitespace(" ")],
                                JsPropertyBinding {
                                    member: JsLiteralMemberName {
                                        value: IDENT@41..42 "b" [] [],
                                    },
                                    colon_token: COLON@42..44 ":" [] [Whitespace(" ")],
                                    binding: ArrayPattern {
                                        l_brack_token: L_BRACK@44..45 "[" [] [],
                                        elements: [
                                            JsIdentifierBinding {
                                                name_token: IDENT@45..46 "f" [] [],
                                                question_mark_token: missing (optional),
                                                excl_token: missing (optional),
                                                ty: missing (optional),
                                            },
                                            RestPattern {
                                                dotdotdot_token: DOT2@48..51 "..." [] [],
                                                pat: JsIdentifierBinding {
                                                    name_token: IDENT@51..54 "baz" [] [],
                                                    question_mark_token: missing (optional),
                                                    excl_token: missing (optional),
                                                    ty: missing (optional),
                                                },
                                            },
                                        ],
                                        r_brack_token: R_BRACK@54..55 "]" [] [],
                                        excl_token: missing (required),
                                        ty: missing (optional),
                                    },
                                }
                                ,
                            ],
                            r_curly_token: R_CURLY@55..56 "}" [] [],
                        }
                        ,
                    ],
                    r_paren_token: R_PAREN@56..58 ")" [] [Whitespace(" ")],
                },
                fat_arrow_token: FAT_ARROW@58..61 "=>" [] [Whitespace(" ")],
                return_type: missing (optional),
            },
            semicolon_token: SEMICOLON@63..64 ";" [] [],
        },
        JsExpressionStatement {
            expression: JsArrowFunctionExpression {
                async_token: missing (optional),
                type_parameters: missing (optional),
                parameter_list: JsParameterList {
                    l_paren_token: L_PAREN@64..66 "(" [Whitespace("\n")] [],
                    parameters: [
                        JsIdentifierBinding {
                            name_token: IDENT@66..69 "foo" [] [],
                            question_mark_token: missing (optional),
                            excl_token: missing (optional),
                            ty: missing (optional),
                        }
                        COMMA@69..71 "," [] [Whitespace(" ")],
                        JsRestParameter {
                            dotdotdot_token: DOT2@71..74 "..." [] [],
                            binding: JsIdentifierBinding {
                                name_token: IDENT@74..77 "bar" [] [],
                                question_mark_token: missing (optional),
                                excl_token: missing (optional),
                                ty: missing (optional),
                            },
                        }
                        ,
                    ],
                    r_paren_token: R_PAREN@77..79 ")" [] [Whitespace(" ")],
                },
                fat_arrow_token: FAT_ARROW@79..82 "=>" [] [Whitespace(" ")],
                return_type: missing (optional),
            },
            semicolon_token: missing (optional),
        },
    ],
}

0: JS_ROOT@0..85
  0: (empty)
  1: LIST@0..0
  2: LIST@0..84
    0: JS_EXPRESSION_STATEMENT@0..6
      0: JS_PARENTHESIZED_EXPRESSION@0..5
        0: L_PAREN@0..1 "(" [] []
        1: JS_REFERENCE_IDENTIFIER_EXPRESSION@1..4
          0: IDENT@1..4 "foo" [] []
        2: R_PAREN@4..5 ")" [] []
      1: SEMICOLON@5..6 ";" [] []
    1: JS_EXPRESSION_STATEMENT@6..19
      0: JS_ARROW_FUNCTION_EXPRESSION@6..18
        0: JS_PARAMETER_LIST@6..13
          0: L_PAREN@6..8 "(" [Whitespace("\n")] []
          1: LIST@8..11
            0: JS_IDENTIFIER_BINDING@8..11
              0: IDENT@8..11 "foo" [] []
          2: R_PAREN@11..13 ")" [] [Whitespace(" ")]
        1: FAT_ARROW@13..16 "=>" [] [Whitespace(" ")]
        2: JS_FUNCTION_BODY@16..18
          0: L_CURLY@16..17 "{" [] []
          1: LIST@17..17
          2: LIST@17..17
          3: R_CURLY@17..18 "}" [] []
      1: SEMICOLON@18..19 ";" [] []
    2: JS_EXPRESSION_STATEMENT@19..28
      0: JS_PARENTHESIZED_EXPRESSION@19..27
        0: L_PAREN@19..21 "(" [Whitespace("\n")] []
        1: JS_BINARY_EXPRESSION@21..26
          0: JS_NUMBER_LITERAL_EXPRESSION@21..23
            0: JS_NUMBER_LITERAL@21..23 "5" [] [Whitespace(" ")]
          1: PLUS@23..25 "+" [] [Whitespace(" ")]
          2: JS_NUMBER_LITERAL_EXPRESSION@25..26
            0: JS_NUMBER_LITERAL@25..26 "5" [] []
        2: R_PAREN@26..27 ")" [] []
      1: SEMICOLON@27..28 ";" [] []
    3: JS_EXPRESSION_STATEMENT@28..64
      0: JS_ARROW_FUNCTION_EXPRESSION@28..63
        0: JS_PARAMETER_LIST@28..58
          0: L_PAREN@28..30 "(" [Whitespace("\n")] []
          1: LIST@30..56
            0: JS_OBJECT_BINDING@30..56
              0: L_CURLY@30..31 "{" [] []
              1: LIST@31..55
                0: JS_SHORTHAND_PROPERTY_BINDING@31..34
                  0: JS_IDENTIFIER_BINDING@31..34
                    0: IDENT@31..34 "foo" [] []
                1: COMMA@34..36 "," [] [Whitespace(" ")]
                2: JS_SHORTHAND_PROPERTY_BINDING@36..39
                  0: JS_IDENTIFIER_BINDING@36..39
                    0: IDENT@36..39 "bar" [] []
                3: COMMA@39..41 "," [] [Whitespace(" ")]
                4: JS_PROPERTY_BINDING@41..55
                  0: JS_LITERAL_MEMBER_NAME@41..42
                    0: IDENT@41..42 "b" [] []
                  1: COLON@42..44 ":" [] [Whitespace(" ")]
                  2: ARRAY_PATTERN@44..55
                    0: L_BRACK@44..45 "[" [] []
                    1: LIST@45..54
                      0: JS_IDENTIFIER_BINDING@45..46
                        0: IDENT@45..46 "f" [] []
                      1: COMMA@46..48 "," [] [Whitespace(" ")]
                      2: REST_PATTERN@48..54
                        0: DOT2@48..51 "..." [] []
                        1: JS_IDENTIFIER_BINDING@51..54
                          0: IDENT@51..54 "baz" [] []
                    2: R_BRACK@54..55 "]" [] []
              2: R_CURLY@55..56 "}" [] []
          2: R_PAREN@56..58 ")" [] [Whitespace(" ")]
        1: FAT_ARROW@58..61 "=>" [] [Whitespace(" ")]
        2: JS_FUNCTION_BODY@61..63
          0: L_CURLY@61..62 "{" [] []
          1: LIST@62..62
          2: LIST@62..62
          3: R_CURLY@62..63 "}" [] []
      1: SEMICOLON@63..64 ";" [] []
    4: JS_EXPRESSION_STATEMENT@64..84
      0: JS_ARROW_FUNCTION_EXPRESSION@64..84
        0: JS_PARAMETER_LIST@64..79
          0: L_PAREN@64..66 "(" [Whitespace("\n")] []
          1: LIST@66..77
            0: JS_IDENTIFIER_BINDING@66..69
              0: IDENT@66..69 "foo" [] []
            1: COMMA@69..71 "," [] [Whitespace(" ")]
            2: JS_REST_PARAMETER@71..77
              0: DOT2@71..74 "..." [] []
              1: JS_IDENTIFIER_BINDING@74..77
                0: IDENT@74..77 "bar" [] []
          2: R_PAREN@77..79 ")" [] [Whitespace(" ")]
        1: FAT_ARROW@79..82 "=>" [] [Whitespace(" ")]
        2: JS_FUNCTION_BODY@82..84
          0: L_CURLY@82..83 "{" [] []
          1: LIST@83..83
          2: LIST@83..83
          3: R_CURLY@83..84 "}" [] []
      1: (empty)
  3: EOF@84..85 "" [Whitespace("\n")] []
