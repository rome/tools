JS_ROOT@0..359
  LIST@0..20
    JS_DIRECTIVE@0..20
      JS_STRING_LITERAL_TOKEN@0..20 "// SCRIPT\n\n\"use new\""
  LIST@20..359
    JS_VARIABLE_DECLARATION_STATEMENT@20..33
      JS_VARIABLE_DECLARATION@20..32
        LET_KW@20..26 "\n\nlet "
        LIST@26..32
          JS_VARIABLE_DECLARATOR@26..32
            SINGLE_PATTERN@26..28
              NAME@26..28
                IDENT@26..28 "a "
            JS_EQUAL_VALUE_CLAUSE@28..32
              EQ@28..30 "= "
              JS_NUMBER_LITERAL@30..32
                JS_NUMBER_LITERAL_TOKEN@30..32 "10"
      SEMICOLON@32..33 ";"
    JS_EXPRESSION_STATEMENT@33..67
      JS_STRING_LITERAL@33..47
        JS_STRING_LITERAL_TOKEN@33..47 "\n\n\"use strict\""
      SEMICOLON@47..67 "; // not a directive"
    JS_FUNCTION_DECLARATION@67..152
      FUNCTION_KW@67..78 "\n\nfunction "
      JS_IDENTIFIER_BINDING@78..82
        IDENT@78..82 "test"
      JS_PARAMETER_LIST@82..85
        L_PAREN@82..83 "("
        LIST@83..83
        R_PAREN@83..85 ") "
      JS_FUNCTION_BODY@85..152
        L_CURLY@85..86 "{"
        LIST@86..101
          JS_DIRECTIVE@86..101
            JS_STRING_LITERAL_TOKEN@86..100 "\n\t'use strict'"
            SEMICOLON@100..101 ";"
        LIST@101..150
          JS_VARIABLE_DECLARATION_STATEMENT@101..115
            JS_VARIABLE_DECLARATION@101..114
              LET_KW@101..108 "\n\n\tlet "
              LIST@108..114
                JS_VARIABLE_DECLARATOR@108..114
                  SINGLE_PATTERN@108..110
                    NAME@108..110
                      IDENT@108..110 "a "
                  JS_EQUAL_VALUE_CLAUSE@110..114
                    EQ@110..112 "= "
                    JS_NUMBER_LITERAL@112..114
                      JS_NUMBER_LITERAL_TOKEN@112..114 "10"
            SEMICOLON@114..115 ";"
          JS_EXPRESSION_STATEMENT@115..150
            JS_STRING_LITERAL@115..130
              JS_STRING_LITERAL_TOKEN@115..130 "\n\n\t'use strict'"
            SEMICOLON@130..150 "; // not a directive"
        R_CURLY@150..152 "\n}"
    JS_EXPRESSION_STATEMENT@152..236
      JS_PARENTHESIZED_EXPRESSION@152..235
        L_PAREN@152..155 "\n\n("
        JS_FUNCTION_EXPRESSION@155..234
          FUNCTION_KW@155..164 "function "
          JS_PARAMETER_LIST@164..167
            L_PAREN@164..165 "("
            LIST@165..165
            R_PAREN@165..167 ") "
          JS_FUNCTION_BODY@167..234
            L_CURLY@167..168 "{"
            LIST@168..183
              JS_DIRECTIVE@168..183
                JS_STRING_LITERAL_TOKEN@168..182 "\n\t\"use strict\""
                SEMICOLON@182..183 ";"
            LIST@183..232
              JS_VARIABLE_DECLARATION_STATEMENT@183..197
                JS_VARIABLE_DECLARATION@183..196
                  LET_KW@183..190 "\n\n\tlet "
                  LIST@190..196
                    JS_VARIABLE_DECLARATOR@190..196
                      SINGLE_PATTERN@190..192
                        NAME@190..192
                          IDENT@190..192 "a "
                      JS_EQUAL_VALUE_CLAUSE@192..196
                        EQ@192..194 "= "
                        JS_NUMBER_LITERAL@194..196
                          JS_NUMBER_LITERAL_TOKEN@194..196 "10"
                SEMICOLON@196..197 ";"
              JS_EXPRESSION_STATEMENT@197..232
                JS_STRING_LITERAL@197..212
                  JS_STRING_LITERAL_TOKEN@197..212 "\n\n\t\"use strict\""
                SEMICOLON@212..232 "; // not a directive"
            R_CURLY@232..234 "\n}"
        R_PAREN@234..235 ")"
      SEMICOLON@235..236 ";"
    JS_VARIABLE_DECLARATION_STATEMENT@236..320
      JS_VARIABLE_DECLARATION@236..320
        LET_KW@236..242 "\n\nlet "
        LIST@242..320
          JS_VARIABLE_DECLARATOR@242..320
            SINGLE_PATTERN@242..244
              NAME@242..244
                IDENT@242..244 "b "
            JS_EQUAL_VALUE_CLAUSE@244..320
              EQ@244..246 "= "
              JS_ARROW_FUNCTION_EXPRESSION@246..320
                JS_PARAMETER_LIST@246..249
                  L_PAREN@246..247 "("
                  LIST@247..247
                  R_PAREN@247..249 ") "
                FAT_ARROW@249..252 "=> "
                JS_FUNCTION_BODY@252..320
                  L_CURLY@252..253 "{"
                  LIST@253..268
                    JS_DIRECTIVE@253..268
                      JS_STRING_LITERAL_TOKEN@253..267 "\n\t\"use strict\""
                      SEMICOLON@267..268 ";"
                  LIST@268..318
                    JS_VARIABLE_DECLARATION_STATEMENT@268..282
                      JS_VARIABLE_DECLARATION@268..281
                        LET_KW@268..275 "\n\n\tlet "
                        LIST@275..281
                          JS_VARIABLE_DECLARATOR@275..281
                            SINGLE_PATTERN@275..277
                              NAME@275..277
                                IDENT@275..277 "a "
                            JS_EQUAL_VALUE_CLAUSE@277..281
                              EQ@277..279 "= "
                              JS_NUMBER_LITERAL@279..281
                                JS_NUMBER_LITERAL_TOKEN@279..281 "10"
                      SEMICOLON@281..282 ";"
                    JS_EXPRESSION_STATEMENT@282..318
                      JS_STRING_LITERAL@282..297
                        JS_STRING_LITERAL_TOKEN@282..297 "\n\n\t\"use strict\""
                      SEMICOLON@297..318 ";  // not a directive"
                  R_CURLY@318..320 "\n}"
    JS_BLOCK_STATEMENT@320..359
      L_CURLY@320..323 "\n\n{"
      LIST@323..357
        JS_EXPRESSION_STATEMENT@323..357
          JS_STRING_LITERAL@323..337
            JS_STRING_LITERAL_TOKEN@323..337 "\n\t\"use strict\""
          SEMICOLON@337..357 "; // not a directive"
      R_CURLY@357..359 "\n}"
