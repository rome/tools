JsScript {
    interpreter_token: missing (optional),
    directives: JsDirectiveList [
        JsDirective {
            value_token: JS_STRING_LITERAL@0..20 "\"use new\"" [Comments("// SCRIPT"), Whitespace("\n\n")] [],
            semicolon_token: missing (optional),
        },
    ],
    statements: JsStatementList [
        JsVariableStatement {
            declarations: JsVariableDeclarations {
                kind_token: LET_KW@20..26 "let" [Whitespace("\n\n")] [Whitespace(" ")],
                items: JsVariableDeclarationList [
                    JsVariableDeclaration {
                        id: JsIdentifierBinding {
                            name_token: IDENT@26..28 "a" [] [Whitespace(" ")],
                        },
                        excl_token: missing (optional),
                        type_annotation: missing (optional),
                        initializer: JsInitializerClause {
                            eq_token: EQ@28..30 "=" [] [Whitespace(" ")],
                            expression: JsNumberLiteralExpression {
                                value_token: JS_NUMBER_LITERAL@30..32 "10" [] [],
                            },
                        },
                    },
                ],
            },
            semicolon_token: SEMICOLON@32..33 ";" [] [],
        },
        JsExpressionStatement {
            expression: JsStringLiteralExpression {
                value_token: JS_STRING_LITERAL@33..47 "\"use strict\"" [Whitespace("\n\n")] [],
            },
            semicolon_token: SEMICOLON@47..67 ";" [] [Whitespace(" "), Comments("// not a directive")],
        },
        JsFunctionDeclaration {
            async_token: missing (optional),
            function_token: FUNCTION_KW@67..78 "function" [Whitespace("\n\n")] [Whitespace(" ")],
            star_token: missing (optional),
            id: JsIdentifierBinding {
                name_token: IDENT@78..82 "test" [] [],
            },
            type_parameters: missing (optional),
            parameters: JsParameters {
                l_paren_token: L_PAREN@82..83 "(" [] [],
                items: JsParameterList [],
                r_paren_token: R_PAREN@83..85 ")" [] [Whitespace(" ")],
            },
            return_type: missing (optional),
            body: JsFunctionBody {
                l_curly_token: L_CURLY@85..86 "{" [] [],
                directives: JsDirectiveList [
                    JsDirective {
                        value_token: JS_STRING_LITERAL@86..100 "'use strict'" [Whitespace("\n\t")] [],
                        semicolon_token: SEMICOLON@100..101 ";" [] [],
                    },
                ],
                statements: JsStatementList [
                    JsVariableStatement {
                        declarations: JsVariableDeclarations {
                            kind_token: LET_KW@101..108 "let" [Whitespace("\n\n\t")] [Whitespace(" ")],
                            items: JsVariableDeclarationList [
                                JsVariableDeclaration {
                                    id: JsIdentifierBinding {
                                        name_token: IDENT@108..110 "a" [] [Whitespace(" ")],
                                    },
                                    excl_token: missing (optional),
                                    type_annotation: missing (optional),
                                    initializer: JsInitializerClause {
                                        eq_token: EQ@110..112 "=" [] [Whitespace(" ")],
                                        expression: JsNumberLiteralExpression {
                                            value_token: JS_NUMBER_LITERAL@112..114 "10" [] [],
                                        },
                                    },
                                },
                            ],
                        },
                        semicolon_token: SEMICOLON@114..115 ";" [] [],
                    },
                    JsExpressionStatement {
                        expression: JsStringLiteralExpression {
                            value_token: JS_STRING_LITERAL@115..130 "'use strict'" [Whitespace("\n\n\t")] [],
                        },
                        semicolon_token: SEMICOLON@130..150 ";" [] [Whitespace(" "), Comments("// not a directive")],
                    },
                ],
                r_curly_token: R_CURLY@150..152 "}" [Whitespace("\n")] [],
            },
        },
        JsExpressionStatement {
            expression: JsParenthesizedExpression {
                l_paren_token: L_PAREN@152..155 "(" [Whitespace("\n\n")] [],
                expression: JsFunctionExpression {
                    async_token: missing (optional),
                    function_token: FUNCTION_KW@155..164 "function" [] [Whitespace(" ")],
                    star_token: missing (optional),
                    id: missing (optional),
                    type_parameters: missing (optional),
                    parameters: JsParameters {
                        l_paren_token: L_PAREN@164..165 "(" [] [],
                        items: JsParameterList [],
                        r_paren_token: R_PAREN@165..167 ")" [] [Whitespace(" ")],
                    },
                    return_type: missing (optional),
                    body: JsFunctionBody {
                        l_curly_token: L_CURLY@167..168 "{" [] [],
                        directives: JsDirectiveList [
                            JsDirective {
                                value_token: JS_STRING_LITERAL@168..182 "\"use strict\"" [Whitespace("\n\t")] [],
                                semicolon_token: SEMICOLON@182..183 ";" [] [],
                            },
                        ],
                        statements: JsStatementList [
                            JsVariableStatement {
                                declarations: JsVariableDeclarations {
                                    kind_token: LET_KW@183..190 "let" [Whitespace("\n\n\t")] [Whitespace(" ")],
                                    items: JsVariableDeclarationList [
                                        JsVariableDeclaration {
                                            id: JsIdentifierBinding {
                                                name_token: IDENT@190..192 "a" [] [Whitespace(" ")],
                                            },
                                            excl_token: missing (optional),
                                            type_annotation: missing (optional),
                                            initializer: JsInitializerClause {
                                                eq_token: EQ@192..194 "=" [] [Whitespace(" ")],
                                                expression: JsNumberLiteralExpression {
                                                    value_token: JS_NUMBER_LITERAL@194..196 "10" [] [],
                                                },
                                            },
                                        },
                                    ],
                                },
                                semicolon_token: SEMICOLON@196..197 ";" [] [],
                            },
                            JsExpressionStatement {
                                expression: JsStringLiteralExpression {
                                    value_token: JS_STRING_LITERAL@197..212 "\"use strict\"" [Whitespace("\n\n\t")] [],
                                },
                                semicolon_token: SEMICOLON@212..232 ";" [] [Whitespace(" "), Comments("// not a directive")],
                            },
                        ],
                        r_curly_token: R_CURLY@232..234 "}" [Whitespace("\n")] [],
                    },
                },
                r_paren_token: R_PAREN@234..235 ")" [] [],
            },
            semicolon_token: SEMICOLON@235..236 ";" [] [],
        },
        JsVariableStatement {
            declarations: JsVariableDeclarations {
                kind_token: LET_KW@236..242 "let" [Whitespace("\n\n")] [Whitespace(" ")],
                items: JsVariableDeclarationList [
                    JsVariableDeclaration {
                        id: JsIdentifierBinding {
                            name_token: IDENT@242..244 "b" [] [Whitespace(" ")],
                        },
                        excl_token: missing (optional),
                        type_annotation: missing (optional),
                        initializer: JsInitializerClause {
                            eq_token: EQ@244..246 "=" [] [Whitespace(" ")],
                            expression: JsArrowFunctionExpression {
                                async_token: missing (optional),
                                type_parameters: missing (optional),
                                parameters: JsParameters {
                                    l_paren_token: L_PAREN@246..247 "(" [] [],
                                    items: JsParameterList [],
                                    r_paren_token: R_PAREN@247..249 ")" [] [Whitespace(" ")],
                                },
                                return_type: missing (optional),
                                fat_arrow_token: FAT_ARROW@249..252 "=>" [] [Whitespace(" ")],
                                body: JsFunctionBody {
                                    l_curly_token: L_CURLY@252..253 "{" [] [],
                                    directives: JsDirectiveList [
                                        JsDirective {
                                            value_token: JS_STRING_LITERAL@253..267 "\"use strict\"" [Whitespace("\n\t")] [],
                                            semicolon_token: SEMICOLON@267..268 ";" [] [],
                                        },
                                    ],
                                    statements: JsStatementList [
                                        JsVariableStatement {
                                            declarations: JsVariableDeclarations {
                                                kind_token: LET_KW@268..275 "let" [Whitespace("\n\n\t")] [Whitespace(" ")],
                                                items: JsVariableDeclarationList [
                                                    JsVariableDeclaration {
                                                        id: JsIdentifierBinding {
                                                            name_token: IDENT@275..277 "a" [] [Whitespace(" ")],
                                                        },
                                                        excl_token: missing (optional),
                                                        type_annotation: missing (optional),
                                                        initializer: JsInitializerClause {
                                                            eq_token: EQ@277..279 "=" [] [Whitespace(" ")],
                                                            expression: JsNumberLiteralExpression {
                                                                value_token: JS_NUMBER_LITERAL@279..281 "10" [] [],
                                                            },
                                                        },
                                                    },
                                                ],
                                            },
                                            semicolon_token: SEMICOLON@281..282 ";" [] [],
                                        },
                                        JsExpressionStatement {
                                            expression: JsStringLiteralExpression {
                                                value_token: JS_STRING_LITERAL@282..297 "\"use strict\"" [Whitespace("\n\n\t")] [],
                                            },
                                            semicolon_token: SEMICOLON@297..318 ";" [] [Whitespace("  "), Comments("// not a directive")],
                                        },
                                    ],
                                    r_curly_token: R_CURLY@318..320 "}" [Whitespace("\n")] [],
                                },
                            },
                        },
                    },
                ],
            },
            semicolon_token: missing (optional),
        },
        JsBlockStatement {
            l_curly_token: L_CURLY@320..323 "{" [Whitespace("\n\n")] [],
            statements: JsStatementList [
                JsExpressionStatement {
                    expression: JsStringLiteralExpression {
                        value_token: JS_STRING_LITERAL@323..337 "\"use strict\"" [Whitespace("\n\t")] [],
                    },
                    semicolon_token: SEMICOLON@337..357 ";" [] [Whitespace(" "), Comments("// not a directive")],
                },
            ],
            r_curly_token: R_CURLY@357..359 "}" [Whitespace("\n")] [],
        },
    ],
    eof_token: EOF@359..360 "" [Whitespace("\n")] [],
}

0: JS_SCRIPT@0..360
  0: (empty)
  1: JS_DIRECTIVE_LIST@0..20
    0: JS_DIRECTIVE@0..20
      0: JS_STRING_LITERAL@0..20 "\"use new\"" [Comments("// SCRIPT"), Whitespace("\n\n")] []
      1: (empty)
  2: JS_STATEMENT_LIST@20..359
    0: JS_VARIABLE_STATEMENT@20..33
      0: JS_VARIABLE_DECLARATIONS@20..32
        0: LET_KW@20..26 "let" [Whitespace("\n\n")] [Whitespace(" ")]
        1: JS_VARIABLE_DECLARATION_LIST@26..32
          0: JS_VARIABLE_DECLARATION@26..32
            0: JS_IDENTIFIER_BINDING@26..28
              0: IDENT@26..28 "a" [] [Whitespace(" ")]
            1: (empty)
            2: (empty)
            3: JS_INITIALIZER_CLAUSE@28..32
              0: EQ@28..30 "=" [] [Whitespace(" ")]
              1: JS_NUMBER_LITERAL_EXPRESSION@30..32
                0: JS_NUMBER_LITERAL@30..32 "10" [] []
      1: SEMICOLON@32..33 ";" [] []
    1: JS_EXPRESSION_STATEMENT@33..67
      0: JS_STRING_LITERAL_EXPRESSION@33..47
        0: JS_STRING_LITERAL@33..47 "\"use strict\"" [Whitespace("\n\n")] []
      1: SEMICOLON@47..67 ";" [] [Whitespace(" "), Comments("// not a directive")]
    2: JS_FUNCTION_DECLARATION@67..152
      0: (empty)
      1: FUNCTION_KW@67..78 "function" [Whitespace("\n\n")] [Whitespace(" ")]
      2: (empty)
      3: JS_IDENTIFIER_BINDING@78..82
        0: IDENT@78..82 "test" [] []
      4: (empty)
      5: JS_PARAMETERS@82..85
        0: L_PAREN@82..83 "(" [] []
        1: JS_PARAMETER_LIST@83..83
        2: R_PAREN@83..85 ")" [] [Whitespace(" ")]
      6: (empty)
      7: JS_FUNCTION_BODY@85..152
        0: L_CURLY@85..86 "{" [] []
        1: JS_DIRECTIVE_LIST@86..101
          0: JS_DIRECTIVE@86..101
            0: JS_STRING_LITERAL@86..100 "'use strict'" [Whitespace("\n\t")] []
            1: SEMICOLON@100..101 ";" [] []
        2: JS_STATEMENT_LIST@101..150
          0: JS_VARIABLE_STATEMENT@101..115
            0: JS_VARIABLE_DECLARATIONS@101..114
              0: LET_KW@101..108 "let" [Whitespace("\n\n\t")] [Whitespace(" ")]
              1: JS_VARIABLE_DECLARATION_LIST@108..114
                0: JS_VARIABLE_DECLARATION@108..114
                  0: JS_IDENTIFIER_BINDING@108..110
                    0: IDENT@108..110 "a" [] [Whitespace(" ")]
                  1: (empty)
                  2: (empty)
                  3: JS_INITIALIZER_CLAUSE@110..114
                    0: EQ@110..112 "=" [] [Whitespace(" ")]
                    1: JS_NUMBER_LITERAL_EXPRESSION@112..114
                      0: JS_NUMBER_LITERAL@112..114 "10" [] []
            1: SEMICOLON@114..115 ";" [] []
          1: JS_EXPRESSION_STATEMENT@115..150
            0: JS_STRING_LITERAL_EXPRESSION@115..130
              0: JS_STRING_LITERAL@115..130 "'use strict'" [Whitespace("\n\n\t")] []
            1: SEMICOLON@130..150 ";" [] [Whitespace(" "), Comments("// not a directive")]
        3: R_CURLY@150..152 "}" [Whitespace("\n")] []
    3: JS_EXPRESSION_STATEMENT@152..236
      0: JS_PARENTHESIZED_EXPRESSION@152..235
        0: L_PAREN@152..155 "(" [Whitespace("\n\n")] []
        1: JS_FUNCTION_EXPRESSION@155..234
          0: (empty)
          1: FUNCTION_KW@155..164 "function" [] [Whitespace(" ")]
          2: (empty)
          3: (empty)
          4: (empty)
          5: JS_PARAMETERS@164..167
            0: L_PAREN@164..165 "(" [] []
            1: JS_PARAMETER_LIST@165..165
            2: R_PAREN@165..167 ")" [] [Whitespace(" ")]
          6: (empty)
          7: JS_FUNCTION_BODY@167..234
            0: L_CURLY@167..168 "{" [] []
            1: JS_DIRECTIVE_LIST@168..183
              0: JS_DIRECTIVE@168..183
                0: JS_STRING_LITERAL@168..182 "\"use strict\"" [Whitespace("\n\t")] []
                1: SEMICOLON@182..183 ";" [] []
            2: JS_STATEMENT_LIST@183..232
              0: JS_VARIABLE_STATEMENT@183..197
                0: JS_VARIABLE_DECLARATIONS@183..196
                  0: LET_KW@183..190 "let" [Whitespace("\n\n\t")] [Whitespace(" ")]
                  1: JS_VARIABLE_DECLARATION_LIST@190..196
                    0: JS_VARIABLE_DECLARATION@190..196
                      0: JS_IDENTIFIER_BINDING@190..192
                        0: IDENT@190..192 "a" [] [Whitespace(" ")]
                      1: (empty)
                      2: (empty)
                      3: JS_INITIALIZER_CLAUSE@192..196
                        0: EQ@192..194 "=" [] [Whitespace(" ")]
                        1: JS_NUMBER_LITERAL_EXPRESSION@194..196
                          0: JS_NUMBER_LITERAL@194..196 "10" [] []
                1: SEMICOLON@196..197 ";" [] []
              1: JS_EXPRESSION_STATEMENT@197..232
                0: JS_STRING_LITERAL_EXPRESSION@197..212
                  0: JS_STRING_LITERAL@197..212 "\"use strict\"" [Whitespace("\n\n\t")] []
                1: SEMICOLON@212..232 ";" [] [Whitespace(" "), Comments("// not a directive")]
            3: R_CURLY@232..234 "}" [Whitespace("\n")] []
        2: R_PAREN@234..235 ")" [] []
      1: SEMICOLON@235..236 ";" [] []
    4: JS_VARIABLE_STATEMENT@236..320
      0: JS_VARIABLE_DECLARATIONS@236..320
        0: LET_KW@236..242 "let" [Whitespace("\n\n")] [Whitespace(" ")]
        1: JS_VARIABLE_DECLARATION_LIST@242..320
          0: JS_VARIABLE_DECLARATION@242..320
            0: JS_IDENTIFIER_BINDING@242..244
              0: IDENT@242..244 "b" [] [Whitespace(" ")]
            1: (empty)
            2: (empty)
            3: JS_INITIALIZER_CLAUSE@244..320
              0: EQ@244..246 "=" [] [Whitespace(" ")]
              1: JS_ARROW_FUNCTION_EXPRESSION@246..320
                0: (empty)
                1: (empty)
                2: JS_PARAMETERS@246..249
                  0: L_PAREN@246..247 "(" [] []
                  1: JS_PARAMETER_LIST@247..247
                  2: R_PAREN@247..249 ")" [] [Whitespace(" ")]
                3: (empty)
                4: FAT_ARROW@249..252 "=>" [] [Whitespace(" ")]
                5: JS_FUNCTION_BODY@252..320
                  0: L_CURLY@252..253 "{" [] []
                  1: JS_DIRECTIVE_LIST@253..268
                    0: JS_DIRECTIVE@253..268
                      0: JS_STRING_LITERAL@253..267 "\"use strict\"" [Whitespace("\n\t")] []
                      1: SEMICOLON@267..268 ";" [] []
                  2: JS_STATEMENT_LIST@268..318
                    0: JS_VARIABLE_STATEMENT@268..282
                      0: JS_VARIABLE_DECLARATIONS@268..281
                        0: LET_KW@268..275 "let" [Whitespace("\n\n\t")] [Whitespace(" ")]
                        1: JS_VARIABLE_DECLARATION_LIST@275..281
                          0: JS_VARIABLE_DECLARATION@275..281
                            0: JS_IDENTIFIER_BINDING@275..277
                              0: IDENT@275..277 "a" [] [Whitespace(" ")]
                            1: (empty)
                            2: (empty)
                            3: JS_INITIALIZER_CLAUSE@277..281
                              0: EQ@277..279 "=" [] [Whitespace(" ")]
                              1: JS_NUMBER_LITERAL_EXPRESSION@279..281
                                0: JS_NUMBER_LITERAL@279..281 "10" [] []
                      1: SEMICOLON@281..282 ";" [] []
                    1: JS_EXPRESSION_STATEMENT@282..318
                      0: JS_STRING_LITERAL_EXPRESSION@282..297
                        0: JS_STRING_LITERAL@282..297 "\"use strict\"" [Whitespace("\n\n\t")] []
                      1: SEMICOLON@297..318 ";" [] [Whitespace("  "), Comments("// not a directive")]
                  3: R_CURLY@318..320 "}" [Whitespace("\n")] []
      1: (empty)
    5: JS_BLOCK_STATEMENT@320..359
      0: L_CURLY@320..323 "{" [Whitespace("\n\n")] []
      1: JS_STATEMENT_LIST@323..357
        0: JS_EXPRESSION_STATEMENT@323..357
          0: JS_STRING_LITERAL_EXPRESSION@323..337
            0: JS_STRING_LITERAL@323..337 "\"use strict\"" [Whitespace("\n\t")] []
          1: SEMICOLON@337..357 ";" [] [Whitespace(" "), Comments("// not a directive")]
      2: R_CURLY@357..359 "}" [Whitespace("\n")] []
  3: EOF@359..360 "" [Whitespace("\n")] []
