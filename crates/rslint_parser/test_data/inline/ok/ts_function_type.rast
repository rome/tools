JsModule {
    interpreter_token: missing (optional),
    directives: JsDirectiveList [],
    items: JsModuleItemList [
        TsTypeAlias {
            type_token: TYPE_KW@0..19 "type" [Comments("// TYPESCRIPT"), Newline("\n")] [Whitespace(" ")],
            binding_identifier: JsIdentifierBinding {
                name_token: IDENT@19..21 "A" [] [Whitespace(" ")],
            },
            type_parameters: missing (required),
            eq_token: EQ@21..23 "=" [] [Whitespace(" ")],
            ty: TsFunctionType {
                type_parameters: missing (optional),
                parameters: JsParameters {
                    l_paren_token: L_PAREN@23..24 "(" [] [],
                    items: JsParameterList [],
                    r_paren_token: R_PAREN@24..26 ")" [] [Whitespace(" ")],
                },
                fat_arrow_token: FAT_ARROW@26..29 "=>" [] [Whitespace(" ")],
                return_type: TsStringType {
                    string_token: STRING_KW@29..35 "string" [] [],
                },
            },
            semicolon_token: SEMICOLON@35..36 ";" [] [],
        },
        TsTypeAlias {
            type_token: TYPE_KW@36..42 "type" [Newline("\n")] [Whitespace(" ")],
            binding_identifier: JsIdentifierBinding {
                name_token: IDENT@42..44 "B" [] [Whitespace(" ")],
            },
            type_parameters: missing (required),
            eq_token: EQ@44..46 "=" [] [Whitespace(" ")],
            ty: TsFunctionType {
                type_parameters: missing (optional),
                parameters: JsParameters {
                    l_paren_token: L_PAREN@46..47 "(" [] [],
                    items: JsParameterList [
                        JsParameter {
                            binding: JsIdentifierBinding {
                                name_token: IDENT@47..48 "a" [] [],
                            },
                            type_annotation: TsTypeAnnotation {
                                colon_token: COLON@48..50 ":" [] [Whitespace(" ")],
                                ty: TsStringType {
                                    string_token: STRING_KW@50..56 "string" [] [],
                                },
                            },
                            initializer: missing (optional),
                        },
                    ],
                    r_paren_token: R_PAREN@56..58 ")" [] [Whitespace(" ")],
                },
                fat_arrow_token: FAT_ARROW@58..61 "=>" [] [Whitespace(" ")],
                return_type: TsStringType {
                    string_token: STRING_KW@61..67 "string" [] [],
                },
            },
            semicolon_token: SEMICOLON@67..68 ";" [] [],
        },
        TsTypeAlias {
            type_token: TYPE_KW@68..74 "type" [Newline("\n")] [Whitespace(" ")],
            binding_identifier: JsIdentifierBinding {
                name_token: IDENT@74..76 "C" [] [Whitespace(" ")],
            },
            type_parameters: missing (required),
            eq_token: EQ@76..78 "=" [] [Whitespace(" ")],
            ty: TsFunctionType {
                type_parameters: missing (optional),
                parameters: JsParameters {
                    l_paren_token: L_PAREN@78..79 "(" [] [],
                    items: JsParameterList [
                        JsParameter {
                            binding: JsIdentifierBinding {
                                name_token: IDENT@79..81 "b" [] [Whitespace(" ")],
                            },
                            type_annotation: missing (optional),
                            initializer: JsInitializerClause {
                                eq_token: EQ@81..83 "=" [] [Whitespace(" ")],
                                expression: JsStringLiteralExpression {
                                    value_token: JS_STRING_LITERAL@83..89 "\"test\"" [] [],
                                },
                            },
                        },
                    ],
                    r_paren_token: R_PAREN@89..91 ")" [] [Whitespace(" ")],
                },
                fat_arrow_token: FAT_ARROW@91..94 "=>" [] [Whitespace(" ")],
                return_type: TsStringType {
                    string_token: STRING_KW@94..100 "string" [] [],
                },
            },
            semicolon_token: SEMICOLON@100..101 ";" [] [],
        },
        TsTypeAlias {
            type_token: TYPE_KW@101..107 "type" [Newline("\n")] [Whitespace(" ")],
            binding_identifier: JsIdentifierBinding {
                name_token: IDENT@107..109 "D" [] [Whitespace(" ")],
            },
            type_parameters: missing (required),
            eq_token: EQ@109..111 "=" [] [Whitespace(" ")],
            ty: TsFunctionType {
                type_parameters: missing (optional),
                parameters: JsParameters {
                    l_paren_token: L_PAREN@111..112 "(" [] [],
                    items: JsParameterList [
                        JsParameter {
                            binding: JsIdentifierBinding {
                                name_token: IDENT@112..113 "c" [] [],
                            },
                            type_annotation: missing (optional),
                            initializer: missing (optional),
                        },
                        COMMA@113..115 "," [] [Whitespace(" ")],
                        JsParameter {
                            binding: JsIdentifierBinding {
                                name_token: IDENT@115..116 "d" [] [],
                            },
                            type_annotation: missing (optional),
                            initializer: missing (optional),
                        },
                    ],
                    r_paren_token: R_PAREN@116..118 ")" [] [Whitespace(" ")],
                },
                fat_arrow_token: FAT_ARROW@118..121 "=>" [] [Whitespace(" ")],
                return_type: TsStringType {
                    string_token: STRING_KW@121..127 "string" [] [],
                },
            },
            semicolon_token: missing (optional),
        },
        TsTypeAlias {
            type_token: TYPE_KW@127..133 "type" [Newline("\n")] [Whitespace(" ")],
            binding_identifier: JsIdentifierBinding {
                name_token: IDENT@133..135 "E" [] [Whitespace(" ")],
            },
            type_parameters: missing (required),
            eq_token: EQ@135..137 "=" [] [Whitespace(" ")],
            ty: TsFunctionType {
                type_parameters: missing (optional),
                parameters: JsParameters {
                    l_paren_token: L_PAREN@137..138 "(" [] [],
                    items: JsParameterList [
                        JsParameter {
                            binding: JsArrayBindingPattern {
                                l_brack_token: L_BRACK@138..139 "[" [] [],
                                elements: JsArrayBindingPatternElementList [
                                    JsIdentifierBinding {
                                        name_token: IDENT@139..140 "a" [] [],
                                    },
                                ],
                                r_brack_token: R_BRACK@140..141 "]" [] [],
                            },
                            type_annotation: missing (optional),
                            initializer: missing (optional),
                        },
                    ],
                    r_paren_token: R_PAREN@141..143 ")" [] [Whitespace(" ")],
                },
                fat_arrow_token: FAT_ARROW@143..146 "=>" [] [Whitespace(" ")],
                return_type: TsStringType {
                    string_token: STRING_KW@146..152 "string" [] [],
                },
            },
            semicolon_token: missing (optional),
        },
        TsTypeAlias {
            type_token: TYPE_KW@152..158 "type" [Newline("\n")] [Whitespace(" ")],
            binding_identifier: JsIdentifierBinding {
                name_token: IDENT@158..160 "F" [] [Whitespace(" ")],
            },
            type_parameters: missing (required),
            eq_token: EQ@160..162 "=" [] [Whitespace(" ")],
            ty: TsFunctionType {
                type_parameters: missing (optional),
                parameters: JsParameters {
                    l_paren_token: L_PAREN@162..163 "(" [] [],
                    items: JsParameterList [
                        JsParameter {
                            binding: JsObjectBindingPattern {
                                l_curly_token: L_CURLY@163..164 "{" [] [],
                                properties: JsObjectBindingPatternPropertyList [
                                    JsObjectBindingPatternShorthandProperty {
                                        identifier: JsIdentifierBinding {
                                            name_token: IDENT@164..165 "a" [] [],
                                        },
                                        init: missing (optional),
                                    },
                                ],
                                r_curly_token: R_CURLY@165..166 "}" [] [],
                            },
                            type_annotation: missing (optional),
                            initializer: missing (optional),
                        },
                    ],
                    r_paren_token: R_PAREN@166..168 ")" [] [Whitespace(" ")],
                },
                fat_arrow_token: FAT_ARROW@168..171 "=>" [] [Whitespace(" ")],
                return_type: TsStringType {
                    string_token: STRING_KW@171..177 "string" [] [],
                },
            },
            semicolon_token: missing (optional),
        },
        TsTypeAlias {
            type_token: TYPE_KW@177..183 "type" [Newline("\n")] [Whitespace(" ")],
            binding_identifier: JsIdentifierBinding {
                name_token: IDENT@183..185 "G" [] [Whitespace(" ")],
            },
            type_parameters: missing (required),
            eq_token: EQ@185..187 "=" [] [Whitespace(" ")],
            ty: TsFunctionType {
                type_parameters: TsTypeParameters {
                    l_angle_token: L_ANGLE@187..188 "<" [] [],
                    items: TsTypeParameterList [
                        TsTypeParameter {
                            name: TsTypeParameterName {
                                ident_token: IDENT@188..189 "A" [] [],
                            },
                            constraint: missing (optional),
                            default: missing (optional),
                        },
                        COMMA@189..191 "," [] [Whitespace(" ")],
                        TsTypeParameter {
                            name: TsTypeParameterName {
                                ident_token: IDENT@191..192 "B" [] [],
                            },
                            constraint: missing (optional),
                            default: missing (optional),
                        },
                    ],
                    r_angle_token: R_ANGLE@192..193 ">" [] [],
                },
                parameters: JsParameters {
                    l_paren_token: L_PAREN@193..194 "(" [] [],
                    items: JsParameterList [
                        JsParameter {
                            binding: JsIdentifierBinding {
                                name_token: IDENT@194..195 "a" [] [],
                            },
                            type_annotation: TsTypeAnnotation {
                                colon_token: COLON@195..197 ":" [] [Whitespace(" ")],
                                ty: TsTypeReference {
                                    name: JsReferenceIdentifier {
                                        value_token: IDENT@197..198 "A" [] [],
                                    },
                                    type_arguments: missing (optional),
                                },
                            },
                            initializer: missing (optional),
                        },
                        COMMA@198..200 "," [] [Whitespace(" ")],
                        JsParameter {
                            binding: JsIdentifierBinding {
                                name_token: IDENT@200..201 "b" [] [],
                            },
                            type_annotation: TsTypeAnnotation {
                                colon_token: COLON@201..203 ":" [] [Whitespace(" ")],
                                ty: TsTypeReference {
                                    name: JsReferenceIdentifier {
                                        value_token: IDENT@203..204 "B" [] [],
                                    },
                                    type_arguments: missing (optional),
                                },
                            },
                            initializer: missing (optional),
                        },
                    ],
                    r_paren_token: R_PAREN@204..206 ")" [] [Whitespace(" ")],
                },
                fat_arrow_token: FAT_ARROW@206..209 "=>" [] [Whitespace(" ")],
                return_type: TsStringType {
                    string_token: STRING_KW@209..215 "string" [] [],
                },
            },
            semicolon_token: missing (optional),
        },
        TsTypeAlias {
            type_token: TYPE_KW@215..221 "type" [Newline("\n")] [Whitespace(" ")],
            binding_identifier: JsIdentifierBinding {
                name_token: IDENT@221..223 "H" [] [Whitespace(" ")],
            },
            type_parameters: missing (required),
            eq_token: EQ@223..225 "=" [] [Whitespace(" ")],
            ty: TsFunctionType {
                type_parameters: missing (optional),
                parameters: JsParameters {
                    l_paren_token: L_PAREN@225..226 "(" [] [],
                    items: JsParameterList [
                        JsParameter {
                            binding: JsIdentifierBinding {
                                name_token: IDENT@226..227 "a" [] [],
                            },
                            type_annotation: TsTypeAnnotation {
                                colon_token: COLON@227..229 ":" [] [Whitespace(" ")],
                                ty: TsAnyType {
                                    any_token: ANY_KW@229..232 "any" [] [],
                                },
                            },
                            initializer: missing (optional),
                        },
                    ],
                    r_paren_token: R_PAREN@232..234 ")" [] [Whitespace(" ")],
                },
                fat_arrow_token: FAT_ARROW@234..237 "=>" [] [Whitespace(" ")],
                return_type: TsTypePredicate {
                    asserts_token: missing (optional),
                    parameter_name: JsReferenceIdentifier {
                        value_token: IDENT@237..239 "a" [] [Whitespace(" ")],
                    },
                    is_token: IS_KW@239..242 "is" [] [Whitespace(" ")],
                    ty: TsStringType {
                        string_token: STRING_KW@242..248 "string" [] [],
                    },
                },
            },
            semicolon_token: SEMICOLON@248..249 ";" [] [],
        },
    ],
    eof_token: EOF@249..250 "" [Newline("\n")] [],
}

0: JS_MODULE@0..250
  0: (empty)
  1: JS_DIRECTIVE_LIST@0..0
  2: JS_MODULE_ITEM_LIST@0..249
    0: TS_TYPE_ALIAS@0..36
      0: TYPE_KW@0..19 "type" [Comments("// TYPESCRIPT"), Newline("\n")] [Whitespace(" ")]
      1: JS_IDENTIFIER_BINDING@19..21
        0: IDENT@19..21 "A" [] [Whitespace(" ")]
      2: (empty)
      3: EQ@21..23 "=" [] [Whitespace(" ")]
      4: TS_FUNCTION_TYPE@23..35
        0: (empty)
        1: JS_PARAMETERS@23..26
          0: L_PAREN@23..24 "(" [] []
          1: JS_PARAMETER_LIST@24..24
          2: R_PAREN@24..26 ")" [] [Whitespace(" ")]
        2: FAT_ARROW@26..29 "=>" [] [Whitespace(" ")]
        3: TS_STRING_TYPE@29..35
          0: STRING_KW@29..35 "string" [] []
      5: SEMICOLON@35..36 ";" [] []
    1: TS_TYPE_ALIAS@36..68
      0: TYPE_KW@36..42 "type" [Newline("\n")] [Whitespace(" ")]
      1: JS_IDENTIFIER_BINDING@42..44
        0: IDENT@42..44 "B" [] [Whitespace(" ")]
      2: (empty)
      3: EQ@44..46 "=" [] [Whitespace(" ")]
      4: TS_FUNCTION_TYPE@46..67
        0: (empty)
        1: JS_PARAMETERS@46..58
          0: L_PAREN@46..47 "(" [] []
          1: JS_PARAMETER_LIST@47..56
            0: JS_PARAMETER@47..56
              0: JS_IDENTIFIER_BINDING@47..48
                0: IDENT@47..48 "a" [] []
              1: TS_TYPE_ANNOTATION@48..56
                0: COLON@48..50 ":" [] [Whitespace(" ")]
                1: TS_STRING_TYPE@50..56
                  0: STRING_KW@50..56 "string" [] []
              2: (empty)
          2: R_PAREN@56..58 ")" [] [Whitespace(" ")]
        2: FAT_ARROW@58..61 "=>" [] [Whitespace(" ")]
        3: TS_STRING_TYPE@61..67
          0: STRING_KW@61..67 "string" [] []
      5: SEMICOLON@67..68 ";" [] []
    2: TS_TYPE_ALIAS@68..101
      0: TYPE_KW@68..74 "type" [Newline("\n")] [Whitespace(" ")]
      1: JS_IDENTIFIER_BINDING@74..76
        0: IDENT@74..76 "C" [] [Whitespace(" ")]
      2: (empty)
      3: EQ@76..78 "=" [] [Whitespace(" ")]
      4: TS_FUNCTION_TYPE@78..100
        0: (empty)
        1: JS_PARAMETERS@78..91
          0: L_PAREN@78..79 "(" [] []
          1: JS_PARAMETER_LIST@79..89
            0: JS_PARAMETER@79..89
              0: JS_IDENTIFIER_BINDING@79..81
                0: IDENT@79..81 "b" [] [Whitespace(" ")]
              1: (empty)
              2: JS_INITIALIZER_CLAUSE@81..89
                0: EQ@81..83 "=" [] [Whitespace(" ")]
                1: JS_STRING_LITERAL_EXPRESSION@83..89
                  0: JS_STRING_LITERAL@83..89 "\"test\"" [] []
          2: R_PAREN@89..91 ")" [] [Whitespace(" ")]
        2: FAT_ARROW@91..94 "=>" [] [Whitespace(" ")]
        3: TS_STRING_TYPE@94..100
          0: STRING_KW@94..100 "string" [] []
      5: SEMICOLON@100..101 ";" [] []
    3: TS_TYPE_ALIAS@101..127
      0: TYPE_KW@101..107 "type" [Newline("\n")] [Whitespace(" ")]
      1: JS_IDENTIFIER_BINDING@107..109
        0: IDENT@107..109 "D" [] [Whitespace(" ")]
      2: (empty)
      3: EQ@109..111 "=" [] [Whitespace(" ")]
      4: TS_FUNCTION_TYPE@111..127
        0: (empty)
        1: JS_PARAMETERS@111..118
          0: L_PAREN@111..112 "(" [] []
          1: JS_PARAMETER_LIST@112..116
            0: JS_PARAMETER@112..113
              0: JS_IDENTIFIER_BINDING@112..113
                0: IDENT@112..113 "c" [] []
              1: (empty)
              2: (empty)
            1: COMMA@113..115 "," [] [Whitespace(" ")]
            2: JS_PARAMETER@115..116
              0: JS_IDENTIFIER_BINDING@115..116
                0: IDENT@115..116 "d" [] []
              1: (empty)
              2: (empty)
          2: R_PAREN@116..118 ")" [] [Whitespace(" ")]
        2: FAT_ARROW@118..121 "=>" [] [Whitespace(" ")]
        3: TS_STRING_TYPE@121..127
          0: STRING_KW@121..127 "string" [] []
      5: (empty)
    4: TS_TYPE_ALIAS@127..152
      0: TYPE_KW@127..133 "type" [Newline("\n")] [Whitespace(" ")]
      1: JS_IDENTIFIER_BINDING@133..135
        0: IDENT@133..135 "E" [] [Whitespace(" ")]
      2: (empty)
      3: EQ@135..137 "=" [] [Whitespace(" ")]
      4: TS_FUNCTION_TYPE@137..152
        0: (empty)
        1: JS_PARAMETERS@137..143
          0: L_PAREN@137..138 "(" [] []
          1: JS_PARAMETER_LIST@138..141
            0: JS_PARAMETER@138..141
              0: JS_ARRAY_BINDING_PATTERN@138..141
                0: L_BRACK@138..139 "[" [] []
                1: JS_ARRAY_BINDING_PATTERN_ELEMENT_LIST@139..140
                  0: JS_IDENTIFIER_BINDING@139..140
                    0: IDENT@139..140 "a" [] []
                2: R_BRACK@140..141 "]" [] []
              1: (empty)
              2: (empty)
          2: R_PAREN@141..143 ")" [] [Whitespace(" ")]
        2: FAT_ARROW@143..146 "=>" [] [Whitespace(" ")]
        3: TS_STRING_TYPE@146..152
          0: STRING_KW@146..152 "string" [] []
      5: (empty)
    5: TS_TYPE_ALIAS@152..177
      0: TYPE_KW@152..158 "type" [Newline("\n")] [Whitespace(" ")]
      1: JS_IDENTIFIER_BINDING@158..160
        0: IDENT@158..160 "F" [] [Whitespace(" ")]
      2: (empty)
      3: EQ@160..162 "=" [] [Whitespace(" ")]
      4: TS_FUNCTION_TYPE@162..177
        0: (empty)
        1: JS_PARAMETERS@162..168
          0: L_PAREN@162..163 "(" [] []
          1: JS_PARAMETER_LIST@163..166
            0: JS_PARAMETER@163..166
              0: JS_OBJECT_BINDING_PATTERN@163..166
                0: L_CURLY@163..164 "{" [] []
                1: JS_OBJECT_BINDING_PATTERN_PROPERTY_LIST@164..165
                  0: JS_OBJECT_BINDING_PATTERN_SHORTHAND_PROPERTY@164..165
                    0: JS_IDENTIFIER_BINDING@164..165
                      0: IDENT@164..165 "a" [] []
                    1: (empty)
                2: R_CURLY@165..166 "}" [] []
              1: (empty)
              2: (empty)
          2: R_PAREN@166..168 ")" [] [Whitespace(" ")]
        2: FAT_ARROW@168..171 "=>" [] [Whitespace(" ")]
        3: TS_STRING_TYPE@171..177
          0: STRING_KW@171..177 "string" [] []
      5: (empty)
    6: TS_TYPE_ALIAS@177..215
      0: TYPE_KW@177..183 "type" [Newline("\n")] [Whitespace(" ")]
      1: JS_IDENTIFIER_BINDING@183..185
        0: IDENT@183..185 "G" [] [Whitespace(" ")]
      2: (empty)
      3: EQ@185..187 "=" [] [Whitespace(" ")]
      4: TS_FUNCTION_TYPE@187..215
        0: TS_TYPE_PARAMETERS@187..193
          0: L_ANGLE@187..188 "<" [] []
          1: TS_TYPE_PARAMETER_LIST@188..192
            0: TS_TYPE_PARAMETER@188..189
              0: TS_TYPE_PARAMETER_NAME@188..189
                0: IDENT@188..189 "A" [] []
              1: (empty)
              2: (empty)
            1: COMMA@189..191 "," [] [Whitespace(" ")]
            2: TS_TYPE_PARAMETER@191..192
              0: TS_TYPE_PARAMETER_NAME@191..192
                0: IDENT@191..192 "B" [] []
              1: (empty)
              2: (empty)
          2: R_ANGLE@192..193 ">" [] []
        1: JS_PARAMETERS@193..206
          0: L_PAREN@193..194 "(" [] []
          1: JS_PARAMETER_LIST@194..204
            0: JS_PARAMETER@194..198
              0: JS_IDENTIFIER_BINDING@194..195
                0: IDENT@194..195 "a" [] []
              1: TS_TYPE_ANNOTATION@195..198
                0: COLON@195..197 ":" [] [Whitespace(" ")]
                1: TS_TYPE_REFERENCE@197..198
                  0: JS_REFERENCE_IDENTIFIER@197..198
                    0: IDENT@197..198 "A" [] []
                  1: (empty)
              2: (empty)
            1: COMMA@198..200 "," [] [Whitespace(" ")]
            2: JS_PARAMETER@200..204
              0: JS_IDENTIFIER_BINDING@200..201
                0: IDENT@200..201 "b" [] []
              1: TS_TYPE_ANNOTATION@201..204
                0: COLON@201..203 ":" [] [Whitespace(" ")]
                1: TS_TYPE_REFERENCE@203..204
                  0: JS_REFERENCE_IDENTIFIER@203..204
                    0: IDENT@203..204 "B" [] []
                  1: (empty)
              2: (empty)
          2: R_PAREN@204..206 ")" [] [Whitespace(" ")]
        2: FAT_ARROW@206..209 "=>" [] [Whitespace(" ")]
        3: TS_STRING_TYPE@209..215
          0: STRING_KW@209..215 "string" [] []
      5: (empty)
    7: TS_TYPE_ALIAS@215..249
      0: TYPE_KW@215..221 "type" [Newline("\n")] [Whitespace(" ")]
      1: JS_IDENTIFIER_BINDING@221..223
        0: IDENT@221..223 "H" [] [Whitespace(" ")]
      2: (empty)
      3: EQ@223..225 "=" [] [Whitespace(" ")]
      4: TS_FUNCTION_TYPE@225..248
        0: (empty)
        1: JS_PARAMETERS@225..234
          0: L_PAREN@225..226 "(" [] []
          1: JS_PARAMETER_LIST@226..232
            0: JS_PARAMETER@226..232
              0: JS_IDENTIFIER_BINDING@226..227
                0: IDENT@226..227 "a" [] []
              1: TS_TYPE_ANNOTATION@227..232
                0: COLON@227..229 ":" [] [Whitespace(" ")]
                1: TS_ANY_TYPE@229..232
                  0: ANY_KW@229..232 "any" [] []
              2: (empty)
          2: R_PAREN@232..234 ")" [] [Whitespace(" ")]
        2: FAT_ARROW@234..237 "=>" [] [Whitespace(" ")]
        3: TS_TYPE_PREDICATE@237..248
          0: (empty)
          1: JS_REFERENCE_IDENTIFIER@237..239
            0: IDENT@237..239 "a" [] [Whitespace(" ")]
          2: IS_KW@239..242 "is" [] [Whitespace(" ")]
          3: TS_STRING_TYPE@242..248
            0: STRING_KW@242..248 "string" [] []
      5: SEMICOLON@248..249 ";" [] []
  3: EOF@249..250 "" [Newline("\n")] []
