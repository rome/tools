JS_ROOT@0..116
  LIST@0..0
  LIST@0..116
    JS_FUNCTION_DECLARATION@0..76
      ASYNC_KW@0..6 "async "
      FUNCTION_KW@6..15 "function "
      JS_IDENTIFIER_BINDING@15..19
        IDENT@15..19 "test"
      JS_PARAMETER_LIST@19..22
        L_PAREN@19..20 "("
        LIST@20..20
        R_PAREN@20..22 ") "
      JS_FUNCTION_BODY@22..76
        L_CURLY@22..23 "{"
        LIST@23..23
        LIST@23..74
          JS_EXPRESSION_STATEMENT@23..39
            JS_AWAIT_EXPRESSION@23..38
              AWAIT_KW@23..31 "\n\tawait "
              CALL_EXPR@31..38
                JS_REFERENCE_IDENTIFIER_EXPRESSION@31..36
                  IDENT@31..36 "inner"
                ARG_LIST@36..38
                  L_PAREN@36..37 "("
                  LIST@37..37
                  R_PAREN@37..38 ")"
            SEMICOLON@38..39 ";"
          JS_EXPRESSION_STATEMENT@39..74
            JS_BINARY_EXPRESSION@39..73
              JS_AWAIT_EXPRESSION@39..58
                AWAIT_KW@39..48 "\n\n\tawait "
                JS_PARENTHESIZED_EXPRESSION@48..58
                  L_PAREN@48..49 "("
                  CALL_EXPR@49..56
                    JS_REFERENCE_IDENTIFIER_EXPRESSION@49..54
                      IDENT@49..54 "inner"
                    ARG_LIST@54..56
                      L_PAREN@54..55 "("
                      LIST@55..55
                      R_PAREN@55..56 ")"
                  R_PAREN@56..58 ") "
              PLUS@58..60 "+ "
              JS_AWAIT_EXPRESSION@60..73
                AWAIT_KW@60..66 "await "
                CALL_EXPR@66..73
                  JS_REFERENCE_IDENTIFIER_EXPRESSION@66..71
                    IDENT@66..71 "inner"
                  ARG_LIST@71..73
                    L_PAREN@71..72 "("
                    LIST@72..72
                    R_PAREN@72..73 ")"
            SEMICOLON@73..74 ";"
        R_CURLY@74..76 "\n}"
    JS_FUNCTION_DECLARATION@76..116
      ASYNC_KW@76..84 "\n\nasync "
      FUNCTION_KW@84..93 "function "
      JS_IDENTIFIER_BINDING@93..98
        IDENT@93..98 "inner"
      JS_PARAMETER_LIST@98..101
        L_PAREN@98..99 "("
        LIST@99..99
        R_PAREN@99..101 ") "
      JS_FUNCTION_BODY@101..116
        L_CURLY@101..102 "{"
        LIST@102..102
        LIST@102..113
          JS_RETURN_STATEMENT@102..113
            RETURN_KW@102..111 "\n\treturn "
            JS_NUMBER_LITERAL@111..112
              JS_NUMBER_LITERAL_TOKEN@111..112 "4"
            SEMICOLON@112..113 ";"
        R_CURLY@113..116 "\n}\n"
