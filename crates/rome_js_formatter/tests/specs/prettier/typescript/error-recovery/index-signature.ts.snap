---
source: crates/rome_js_formatter/tests/prettier_tests.rs
info:
  test_file: "typescript\\error-recovery\\index-signature.ts"
---

# Input

```js
type A = { [key: string] };

type TwoParams = {
  [a: string, b: string]: string;
};
type ThreeParams = {
  [a: string, b: string, c: string]: string;
};

type TooLong = {
  [loooooooooooooooooooooooooong: string, looooooooooooooooooooooooooooooooooooooong: string]: string;
}
type TooLong81 = { [loooooooooooooooooooooooooong: string, loooooooooooooooooong: string]: string; }
type TooLong80 = { [loooooooooooooooooooooooooong: string, looooooooooooooooong: string]: string; }

// note lack of trailing comma in the index signature
type TooLongSingleParam = {
  [looooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooong: string]: string;
}
```


# Prettier differences

```diff
--- Prettier
+++ Rome
@@ -2,30 +2,20 @@
 
 type TwoParams = {
   [a: string, b: string]: string;
-};
+}
 type ThreeParams = {
   [a: string, b: string, c: string]: string;
-};
+}
 
 type TooLong = {
-  [
-    loooooooooooooooooooooooooong: string,
-    looooooooooooooooooooooooooooooooooooooong: string,
-  ]: string;
-};
-type TooLong81 = {
-  [
-    loooooooooooooooooooooooooong: string,
-    loooooooooooooooooong: string,
-  ]: string;
-};
-type TooLong80 = {
-  [loooooooooooooooooooooooooong: string, looooooooooooooooong: string]: string;
-};
+  [loooooooooooooooooooooooooong: string, looooooooooooooooooooooooooooooooooooooong: string]: string;
+}
+type TooLong81 = { [loooooooooooooooooooooooooong: string, loooooooooooooooooong: string]: string;
+}
+type TooLong80 = { [loooooooooooooooooooooooooong: string, looooooooooooooooong: string]: string;
+}
 
 // note lack of trailing comma in the index signature
 type TooLongSingleParam = {
-  [
-    looooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooong: string
-  ]: string;
+  [looooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooong: string]: string;
 };
```

# Output

```js
type A = { [key: string] };

type TwoParams = {
  [a: string, b: string]: string;
}
type ThreeParams = {
  [a: string, b: string, c: string]: string;
}

type TooLong = {
  [loooooooooooooooooooooooooong: string, looooooooooooooooooooooooooooooooooooooong: string]: string;
}
type TooLong81 = { [loooooooooooooooooooooooooong: string, loooooooooooooooooong: string]: string;
}
type TooLong80 = { [loooooooooooooooooooooooooong: string, looooooooooooooooong: string]: string;
}

// note lack of trailing comma in the index signature
type TooLongSingleParam = {
  [looooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooong: string]: string;
};
```


# Errors
```
index-signature.ts:1:26 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × An index signature must have a type annotation
  
    ┌─ index-signature.ts:1:26
    │
  1 │ type A = { [key: string] };
    │                          ^
  
index-signature.ts:4:13 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected `]` but instead found `,`
  
  × unexpected
  
    ┌─ index-signature.ts:4:13
    │
  4 │   [a: string, b: string]: string;
    │             ^
  
index-signature.ts:4:24 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × ';' expected'
  
  × An explicit or implicit semicolon is expected here...
  
    ┌─ index-signature.ts:4:24
    │
  4 │   [a: string, b: string]: string;
    │                        ^
  
index-signature.ts:4:33 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected a property, or a signature but instead found ';'
  
  × Expected a property, or a signature here
  
    ┌─ index-signature.ts:4:33
    │
  4 │   [a: string, b: string]: string;
    │                                 ^
  
index-signature.ts:5:1 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected a statement but instead found '}'
  
  × Expected a statement here
  
    ┌─ index-signature.ts:5:1
    │
  5 │ };
    │ ^
  
index-signature.ts:7:13 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected `]` but instead found `,`
  
  × unexpected
  
    ┌─ index-signature.ts:7:13
    │
  7 │   [a: string, b: string, c: string]: string;
    │             ^
  
index-signature.ts:7:35 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × ';' expected'
  
  × An explicit or implicit semicolon is expected here...
  
    ┌─ index-signature.ts:7:35
    │
  7 │   [a: string, b: string, c: string]: string;
    │                                   ^
  
index-signature.ts:7:44 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected a property, or a signature but instead found ';'
  
  × Expected a property, or a signature here
  
    ┌─ index-signature.ts:7:44
    │
  7 │   [a: string, b: string, c: string]: string;
    │                                            ^
  
index-signature.ts:8:1 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected a statement but instead found '}'
  
  × Expected a statement here
  
    ┌─ index-signature.ts:8:1
    │
  8 │ };
    │ ^
  
index-signature.ts:11:41 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected `]` but instead found `,`
  
  × unexpected
  
     ┌─ index-signature.ts:11:41
     │
  11 │   [loooooooooooooooooooooooooong: string, looooooooooooooooooooooooooooooooooooooong: string]: string;
     │                                         ^
  
index-signature.ts:11:93 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × ';' expected'
  
  × An explicit or implicit semicolon is expected here...
  
     ┌─ index-signature.ts:11:93
     │
  11 │   [loooooooooooooooooooooooooong: string, looooooooooooooooooooooooooooooooooooooong: string]: string;
     │                                                                                             ^
  
index-signature.ts:11:102 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected a property, or a signature but instead found ';'
  
  × Expected a property, or a signature here
  
     ┌─ index-signature.ts:11:102
     │
  11 │   [loooooooooooooooooooooooooong: string, looooooooooooooooooooooooooooooooooooooong: string]: string;
     │                                                                                                      ^
  
index-signature.ts:12:1 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected a statement but instead found '}'
  
  × Expected a statement here
  
     ┌─ index-signature.ts:12:1
     │
  12 │ }
     │ ^
  
index-signature.ts:13:58 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected `]` but instead found `,`
  
  × unexpected
  
     ┌─ index-signature.ts:13:58
     │
  13 │ type TooLong81 = { [loooooooooooooooooooooooooong: string, loooooooooooooooooong: string]: string; }
     │                                                          ^
  
index-signature.ts:13:89 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × ';' expected'
  
  × An explicit or implicit semicolon is expected here...
  
     ┌─ index-signature.ts:13:89
     │
  13 │ type TooLong81 = { [loooooooooooooooooooooooooong: string, loooooooooooooooooong: string]: string; }
     │                                                                                         ^
  
index-signature.ts:13:98 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected a property, or a signature but instead found ';'
  
  × Expected a property, or a signature here
  
     ┌─ index-signature.ts:13:98
     │
  13 │ type TooLong81 = { [loooooooooooooooooooooooooong: string, loooooooooooooooooong: string]: string; }
     │                                                                                                  ^
  
index-signature.ts:13:100 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected a statement but instead found '}'
  
  × Expected a statement here
  
     ┌─ index-signature.ts:13:100
     │
  13 │ type TooLong81 = { [loooooooooooooooooooooooooong: string, loooooooooooooooooong: string]: string; }
     │                                                                                                    ^
  
index-signature.ts:14:58 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected `]` but instead found `,`
  
  × unexpected
  
     ┌─ index-signature.ts:14:58
     │
  14 │ type TooLong80 = { [loooooooooooooooooooooooooong: string, looooooooooooooooong: string]: string; }
     │                                                          ^
  
index-signature.ts:14:88 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × ';' expected'
  
  × An explicit or implicit semicolon is expected here...
  
     ┌─ index-signature.ts:14:88
     │
  14 │ type TooLong80 = { [loooooooooooooooooooooooooong: string, looooooooooooooooong: string]: string; }
     │                                                                                        ^
  
index-signature.ts:14:97 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected a property, or a signature but instead found ';'
  
  × Expected a property, or a signature here
  
     ┌─ index-signature.ts:14:97
     │
  14 │ type TooLong80 = { [loooooooooooooooooooooooooong: string, looooooooooooooooong: string]: string; }
     │                                                                                                 ^
  
index-signature.ts:14:99 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected a statement but instead found '}'
  
  × Expected a statement here
  
     ┌─ index-signature.ts:14:99
     │
  14 │ type TooLong80 = { [loooooooooooooooooooooooooong: string, looooooooooooooooong: string]: string; }
     │                                                                                                   ^
  

```

# Lines exceeding max width of 80 characters
```
   11:   [loooooooooooooooooooooooooong: string, looooooooooooooooooooooooooooooooooooooong: string]: string;
   13: type TooLong81 = { [loooooooooooooooooooooooooong: string, loooooooooooooooooong: string]: string;
   15: type TooLong80 = { [loooooooooooooooooooooooooong: string, looooooooooooooooong: string]: string;
   20:   [looooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooong: string]: string;
```

