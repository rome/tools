---
source: crates/rome_js_formatter/tests/prettier_tests.rs
info:
  test_file: "typescript\\error-recovery\\jsdoc_only_types.ts"
---

# Input

```js
let a: *;
function b(x: ?) {}
let c: ?string;
let d: string?;
let e: ?(string | number);
let f: !string;
let g: string!;
let h: !(string | number);
```


# Prettier differences

```diff
--- Prettier
+++ Rome
@@ -1,8 +1,15 @@
-let a: *;
+let a:
+*
 function b(x: ?) {}
-let c: ?string;
-let d: ?string;
-let e: ?(string | number);
-let f: !string;
-let g: !string;
-let h: !(string | number);
+let c:
+?string
+let d: string;
+?
+let e:
+?(string | number)
+let f:
+!string;
+let g: string;
+!;
+let h:
+!(string | number);
```

# Output

```js
let a:
*
function b(x: ?) {}
let c:
?string
let d: string;
?
let e:
?(string | number)
let f:
!string;
let g: string;
!;
let h:
!(string | number);
```


# Errors
```
jsdoc_only_types.ts:1:8 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected a type but instead found '*'
  
  × Expected a type here
  
    ┌─ jsdoc_only_types.ts:1:8
    │
  1 │ let a: *;
    │        ^
  
jsdoc_only_types.ts:2:15 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected a type but instead found '?'
  
  × Expected a type here
  
    ┌─ jsdoc_only_types.ts:2:15
    │
  2 │ function b(x: ?) {}
    │               ^
  
jsdoc_only_types.ts:3:8 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected a type but instead found '?'
  
  × Expected a type here
  
    ┌─ jsdoc_only_types.ts:3:8
    │
  3 │ let c: ?string;
    │        ^
  
jsdoc_only_types.ts:4:14 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Expected a semicolon or an implicit semicolon after a statement, but found none
  
  × An explicit or implicit semicolon is expected here...
  
    ┌─ jsdoc_only_types.ts:4:14
    │
  4 │ let d: string?;
    │              ^
  
  i ...Which is required to end this statement
  
    ┌─ jsdoc_only_types.ts:4:1
    │
  4 │ let d: string?;
    │ ^^^^^^^^^^^^^
  
jsdoc_only_types.ts:5:8 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected a type but instead found '?'
  
  × Expected a type here
  
    ┌─ jsdoc_only_types.ts:5:8
    │
  5 │ let e: ?(string | number);
    │        ^
  
jsdoc_only_types.ts:6:8 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected a type but instead found '!'
  
  × Expected a type here
  
    ┌─ jsdoc_only_types.ts:6:8
    │
  6 │ let f: !string;
    │        ^
  
jsdoc_only_types.ts:7:14 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Expected a semicolon or an implicit semicolon after a statement, but found none
  
  × An explicit or implicit semicolon is expected here...
  
    ┌─ jsdoc_only_types.ts:7:14
    │
  7 │ let g: string!;
    │              ^
  
  i ...Which is required to end this statement
  
    ┌─ jsdoc_only_types.ts:7:1
    │
  7 │ let g: string!;
    │ ^^^^^^^^^^^^^
  
jsdoc_only_types.ts:8:8 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected a type but instead found '!'
  
  × Expected a type here
  
    ┌─ jsdoc_only_types.ts:8:8
    │
  8 │ let h: !(string | number);
    │        ^
  

```


