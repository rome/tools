---
source: crates/rome_formatter_test/src/snapshot_builder.rs
assertion_line: 212
info: typescript/error-recovery/jsdoc_only_types.ts
---

# Input

```ts
let a: *;
function b(x: ?) {}
let c: ?string;
let d: string?;
let e: ?(string | number);
let f: !string;
let g: string!;
let h: !(string | number);

```


# Prettier differences

```diff
--- Prettier
+++ Rome
@@ -1,8 +1,15 @@
-let a: *;
+let a:
+*
 function b(x: ?) {}
-let c: ?string;
-let d: string?;
-let e: ?(string | number);
-let f: !string;
-let g: string!;
-let h: !(string | number);
+let c:
+?string
+let d: string;
+?
+let e:
+?(string | number)
+let f:
+!string;
+let g: string;
+!;
+let h:
+!(string | number);
```

# Output

```ts
let a:
*
function b(x: ?) {}
let c:
?string
let d: string;
?
let e:
?(string | number)
let f:
!string;
let g: string;
!;
let h:
!(string | number);
```

# Errors
```
jsdoc_only_types.ts:1:8 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected a type but instead found '*'
  
  > 1 │ let a: *;
      │        ^
    2 │ function b(x: ?) {}
    3 │ let c: ?string;
  
  i Expected a type here
  
  > 1 │ let a: *;
      │        ^
    2 │ function b(x: ?) {}
    3 │ let c: ?string;
  
jsdoc_only_types.ts:2:15 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected a type but instead found '?'
  
    1 │ let a: *;
  > 2 │ function b(x: ?) {}
      │               ^
    3 │ let c: ?string;
    4 │ let d: string?;
  
  i Expected a type here
  
    1 │ let a: *;
  > 2 │ function b(x: ?) {}
      │               ^
    3 │ let c: ?string;
    4 │ let d: string?;
  
jsdoc_only_types.ts:3:8 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected a type but instead found '?'
  
    1 │ let a: *;
    2 │ function b(x: ?) {}
  > 3 │ let c: ?string;
      │        ^
    4 │ let d: string?;
    5 │ let e: ?(string | number);
  
  i Expected a type here
  
    1 │ let a: *;
    2 │ function b(x: ?) {}
  > 3 │ let c: ?string;
      │        ^
    4 │ let d: string?;
    5 │ let e: ?(string | number);
  
jsdoc_only_types.ts:4:14 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Expected a semicolon or an implicit semicolon after a statement, but found none
  
    2 │ function b(x: ?) {}
    3 │ let c: ?string;
  > 4 │ let d: string?;
      │              ^
    5 │ let e: ?(string | number);
    6 │ let f: !string;
  
  i An explicit or implicit semicolon is expected here...
  
    2 │ function b(x: ?) {}
    3 │ let c: ?string;
  > 4 │ let d: string?;
      │              ^
    5 │ let e: ?(string | number);
    6 │ let f: !string;
  
  i ...Which is required to end this statement
  
    2 │ function b(x: ?) {}
    3 │ let c: ?string;
  > 4 │ let d: string?;
      │ ^^^^^^^^^^^^^
    5 │ let e: ?(string | number);
    6 │ let f: !string;
  
jsdoc_only_types.ts:5:8 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected a type but instead found '?'
  
    3 │ let c: ?string;
    4 │ let d: string?;
  > 5 │ let e: ?(string | number);
      │        ^
    6 │ let f: !string;
    7 │ let g: string!;
  
  i Expected a type here
  
    3 │ let c: ?string;
    4 │ let d: string?;
  > 5 │ let e: ?(string | number);
      │        ^
    6 │ let f: !string;
    7 │ let g: string!;
  
jsdoc_only_types.ts:6:8 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected a type but instead found '!'
  
    4 │ let d: string?;
    5 │ let e: ?(string | number);
  > 6 │ let f: !string;
      │        ^
    7 │ let g: string!;
    8 │ let h: !(string | number);
  
  i Expected a type here
  
    4 │ let d: string?;
    5 │ let e: ?(string | number);
  > 6 │ let f: !string;
      │        ^
    7 │ let g: string!;
    8 │ let h: !(string | number);
  
jsdoc_only_types.ts:7:14 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Expected a semicolon or an implicit semicolon after a statement, but found none
  
    5 │ let e: ?(string | number);
    6 │ let f: !string;
  > 7 │ let g: string!;
      │              ^
    8 │ let h: !(string | number);
    9 │ 
  
  i An explicit or implicit semicolon is expected here...
  
    5 │ let e: ?(string | number);
    6 │ let f: !string;
  > 7 │ let g: string!;
      │              ^
    8 │ let h: !(string | number);
    9 │ 
  
  i ...Which is required to end this statement
  
    5 │ let e: ?(string | number);
    6 │ let f: !string;
  > 7 │ let g: string!;
      │ ^^^^^^^^^^^^^
    8 │ let h: !(string | number);
    9 │ 
  
jsdoc_only_types.ts:8:8 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected a type but instead found '!'
  
    6 │ let f: !string;
    7 │ let g: string!;
  > 8 │ let h: !(string | number);
      │        ^
    9 │ 
  
  i Expected a type here
  
    6 │ let f: !string;
    7 │ let g: string!;
  > 8 │ let h: !(string | number);
      │        ^
    9 │ 
  

```


