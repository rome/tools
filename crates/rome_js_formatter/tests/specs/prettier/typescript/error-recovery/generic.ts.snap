---
source: crates/rome_formatter_test/src/snapshot_builder.rs
info:
  test_file: typescript/error-recovery/generic.ts
---

# Input

```ts
f1<>();

new f2<>();

function f3<>() {}

class f4 {
    constructor<>() {}
}

const f5 = function<>() {}

interface f6<> {
    test<>();
}

class f7<> {
    test<>() {}
}
```


# Prettier differences

```diff
--- Prettier
+++ Rome
@@ -8,12 +8,12 @@
   constructor<>() {}
 }
 
-const f5 = function <>() {};
+const f5 = function<>() {}
 
 interface f6<> {
-  test<>();
+    test<>();
 }
 
 class f7<> {
-  test<>() {}
+    test<>() {}
 }
```

# Output

```ts
f1<>();

new f2<>();

function f3<>() {}

class f4 {
  constructor<>() {}
}

const f5 = function<>() {}

interface f6<> {
    test<>();
}

class f7<> {
    test<>() {}
}
```


# Errors
```
generic.ts:1:4 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected a type parameter but instead found '>'
  
  > 1 │ f1<>();
      │    ^
    2 │ 
    3 │ new f2<>();
  
  i Expected a type parameter here
  
  > 1 │ f1<>();
      │    ^
    2 │ 
    3 │ new f2<>();
  
generic.ts:3:8 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected a type parameter but instead found '>'
  
    1 │ f1<>();
    2 │ 
  > 3 │ new f2<>();
      │        ^
    4 │ 
    5 │ function f3<>() {}
  
  i Expected a type parameter here
  
    1 │ f1<>();
    2 │ 
  > 3 │ new f2<>();
      │        ^
    4 │ 
    5 │ function f3<>() {}
  
generic.ts:5:13 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected a type parameter but instead found '>'
  
    3 │ new f2<>();
    4 │ 
  > 5 │ function f3<>() {}
      │             ^
    6 │ 
    7 │ class f4 {
  
  i Expected a type parameter here
  
    3 │ new f2<>();
    4 │ 
  > 5 │ function f3<>() {}
      │             ^
    6 │ 
    7 │ class f4 {
  
generic.ts:8:17 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected a type parameter but instead found '>'
  
     7 │ class f4 {
   > 8 │     constructor<>() {}
       │                 ^
     9 │ }
    10 │ 
  
  i Expected a type parameter here
  
     7 │ class f4 {
   > 8 │     constructor<>() {}
       │                 ^
     9 │ }
    10 │ 
  
generic.ts:8:16 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × constructors cannot have type parameters.
  
     7 │ class f4 {
   > 8 │     constructor<>() {}
       │                ^^
     9 │ }
    10 │ 
  
generic.ts:11:21 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected a type parameter but instead found '>'
  
     9 │ }
    10 │ 
  > 11 │ const f5 = function<>() {}
       │                     ^
    12 │ 
    13 │ interface f6<> {
  
  i Expected a type parameter here
  
     9 │ }
    10 │ 
  > 11 │ const f5 = function<>() {}
       │                     ^
    12 │ 
    13 │ interface f6<> {
  
generic.ts:13:14 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected a type parameter but instead found '>'
  
    11 │ const f5 = function<>() {}
    12 │ 
  > 13 │ interface f6<> {
       │              ^
    14 │     test<>();
    15 │ }
  
  i Expected a type parameter here
  
    11 │ const f5 = function<>() {}
    12 │ 
  > 13 │ interface f6<> {
       │              ^
    14 │     test<>();
    15 │ }
  
generic.ts:14:10 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected a type parameter but instead found '>'
  
    13 │ interface f6<> {
  > 14 │     test<>();
       │          ^
    15 │ }
    16 │ 
  
  i Expected a type parameter here
  
    13 │ interface f6<> {
  > 14 │     test<>();
       │          ^
    15 │ }
    16 │ 
  
generic.ts:17:10 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected a type parameter but instead found '>'
  
    15 │ }
    16 │ 
  > 17 │ class f7<> {
       │          ^
    18 │     test<>() {}
    19 │ }
  
  i Expected a type parameter here
  
    15 │ }
    16 │ 
  > 17 │ class f7<> {
       │          ^
    18 │     test<>() {}
    19 │ }
  
generic.ts:18:10 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected a type parameter but instead found '>'
  
    17 │ class f7<> {
  > 18 │     test<>() {}
       │          ^
    19 │ }
    20 │ 
  
  i Expected a type parameter here
  
    17 │ class f7<> {
  > 18 │     test<>() {}
       │          ^
    19 │ }
    20 │ 
  

```


