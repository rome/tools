---
source: crates/rome_js_formatter/tests/prettier_tests.rs
---

# Input

```js
// Adding a comment stops the pretty printing process and everything is
// squished in a single line afterward
export type BuckWebSocketMessage = {
  // Not actually from Buck - this is to let the receiver know that the socket is connected.
  type: 'SocketConnected',
} | {
  type: 'BuildProgressUpdated',
  progressValue: number,
} | {
  type: 'BuildFinished',
  exitCode: number,
} | {
  type: 'BuildStarted',
} | {
  type: 'ParseStarted',
} | {
  type: 'ParseFinished',
} | {
  type: 'RunStarted',
} | {
  type: 'RunComplete',
};

// Two extra levels of indentation because of the comment
export type AsyncExecuteOptions = child_process$execFileOpts & {
  // The contents to write to stdin.
  stdin?: string,
  dontLogInNuclide?: boolean,
};
```


# Prettier differences

```diff
--- Prettier
+++ Rome
@@ -2,36 +2,38 @@
 // squished in a single line afterward
 export type BuckWebSocketMessage =
   | {
-      // Not actually from Buck - this is to let the receiver know that the socket is connected.
-      type: "SocketConnected";
-    }
+    // Not actually from Buck - this is to let the receiver know that the socket is connected.
+    type: "SocketConnected";
+  }
   | {
-      type: "BuildProgressUpdated";
-      progressValue: number;
-    }
+    type: "BuildProgressUpdated";
+    progressValue: number;
+  }
   | {
-      type: "BuildFinished";
-      exitCode: number;
-    }
+    type: "BuildFinished";
+    exitCode: number;
+  }
   | {
-      type: "BuildStarted";
-    }
+    type: "BuildStarted";
+  }
   | {
-      type: "ParseStarted";
-    }
+    type: "ParseStarted";
+  }
   | {
-      type: "ParseFinished";
-    }
+    type: "ParseFinished";
+  }
   | {
-      type: "RunStarted";
-    }
+    type: "RunStarted";
+  }
   | {
-      type: "RunComplete";
-    };
+    type: "RunComplete";
+  };
 
 // Two extra levels of indentation because of the comment
-export type AsyncExecuteOptions = child_process$execFileOpts & {
-  // The contents to write to stdin.
-  stdin?: string;
-  dontLogInNuclide?: boolean;
-};
+export type AsyncExecuteOptions =
+  & child_process$execFileOpts
+  & {
+    // The contents to write to stdin.
+    stdin?: string;
+    dontLogInNuclide?: boolean;
+  };
```

# Output

```js
// Adding a comment stops the pretty printing process and everything is
// squished in a single line afterward
export type BuckWebSocketMessage =
  | {
    // Not actually from Buck - this is to let the receiver know that the socket is connected.
    type: "SocketConnected";
  }
  | {
    type: "BuildProgressUpdated";
    progressValue: number;
  }
  | {
    type: "BuildFinished";
    exitCode: number;
  }
  | {
    type: "BuildStarted";
  }
  | {
    type: "ParseStarted";
  }
  | {
    type: "ParseFinished";
  }
  | {
    type: "RunStarted";
  }
  | {
    type: "RunComplete";
  };

// Two extra levels of indentation because of the comment
export type AsyncExecuteOptions =
  & child_process$execFileOpts
  & {
    // The contents to write to stdin.
    stdin?: string;
    dontLogInNuclide?: boolean;
  };
```


# Lines exceeding max width of 80 characters
```
    5:     // Not actually from Buck - this is to let the receiver know that the socket is connected.
```

