---
source: crates/rome_js_formatter/tests/prettier_tests.rs
info:
  test_file: "typescript\\typeparams\\print-width-120\\issue-7542.ts"
---

# Input

```js
export const Foo = forwardRef((props: FooProps, ref: Ref<HTMLElement>): JSX.Element => {
  return <div />;
});

export const Bar = forwardRef((props: BarProps, ref: Ref<HTMLElement>): JSX.Element | null => {
  return <div />;
});

users.map((user: User): User => {
  return user;
})

users.map((user: User): User => {
  ; // comment
})

users.map((user: User): User => {
  // comment
})
```


# Prettier differences

```diff
--- Prettier
+++ Rome
@@ -14,9 +14,11 @@
   return user;
 });
 
-users.map((user: User): User => {
-  // comment
-});
+users.map(
+  (user: User): User => {
+    // comment
+  },
+);
 
 users.map((user: User): User => {
   // comment
```

# Output

```js
export const Foo = forwardRef(
  (props: FooProps, ref: Ref<HTMLElement>): JSX.Element => {
    return <div />;
  },
);

export const Bar = forwardRef(
  (props: BarProps, ref: Ref<HTMLElement>): JSX.Element | null => {
    return <div />;
  },
);

users.map((user: User): User => {
  return user;
});

users.map(
  (user: User): User => {
    // comment
  },
);

users.map((user: User): User => {
  // comment
});
```


# Errors
```
issue-7542.ts:2:15 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected `>` but instead found `/`
  
    1 │ export const Foo = forwardRef((props: FooProps, ref: Ref<HTMLElement>): JSX.Element => {
  > 2 │   return <div />;
      │               ^
    3 │ });
    4 │ 
  
  i Remove /
  
issue-7542.ts:2:18 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × unterminated regex literal
  
    1 │ export const Foo = forwardRef((props: FooProps, ref: Ref<HTMLElement>): JSX.Element => {
  > 2 │   return <div />;
      │                  
    3 │ });
    4 │ 
  
  i ...but the line ends here
  
    1 │ export const Foo = forwardRef((props: FooProps, ref: Ref<HTMLElement>): JSX.Element => {
  > 2 │   return <div />;
      │                  
    3 │ });
    4 │ 
  
  i a regex literal starts there...
  
    1 │ export const Foo = forwardRef((props: FooProps, ref: Ref<HTMLElement>): JSX.Element => {
  > 2 │   return <div />;
      │               ^
    3 │ });
    4 │ 
  
issue-7542.ts:6:15 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected `>` but instead found `/`
  
    5 │ export const Bar = forwardRef((props: BarProps, ref: Ref<HTMLElement>): JSX.Element | null => {
  > 6 │   return <div />;
      │               ^
    7 │ });
    8 │ 
  
  i Remove /
  
issue-7542.ts:6:18 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × unterminated regex literal
  
    5 │ export const Bar = forwardRef((props: BarProps, ref: Ref<HTMLElement>): JSX.Element | null => {
  > 6 │   return <div />;
      │                  
    7 │ });
    8 │ 
  
  i ...but the line ends here
  
    5 │ export const Bar = forwardRef((props: BarProps, ref: Ref<HTMLElement>): JSX.Element | null => {
  > 6 │   return <div />;
      │                  
    7 │ });
    8 │ 
  
  i a regex literal starts there...
  
    5 │ export const Bar = forwardRef((props: BarProps, ref: Ref<HTMLElement>): JSX.Element | null => {
  > 6 │   return <div />;
      │               ^
    7 │ });
    8 │ 
  

```


