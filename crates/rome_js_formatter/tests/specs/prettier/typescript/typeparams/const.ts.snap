---
source: crates/rome_formatter_test/src/snapshot_builder.rs
info: typescript/typeparams/const.ts
---

# Input

```ts
function a<const T>() {}
function b<const T extends U>() {}
function c<T, const U>() {}
declare function d<const T>();
<const T>() => {};
<const T extends U>() => {};
(function <const T>() {});
(function <const T extends U>() {});
(function <T, const U>() {});

class A<const T> {}
class B<const T extends U> {}
class C<T, const U> {}
class D<in const T> {}
class E<const in T> {}
(class <const T> {});
(class <const T extends U> {});
(class <T, const U> {});
(class <in const T> {});
(class <const in T> {});

interface I<const T> {}
interface J<const T extends U> {}
interface K<T, const U> {}
interface L<in const T> {}
interface M<const in T> {}

class _ {
  method<const T>() {}
  method<const T extends U>() {}
  method<T, const U>() {}
}

```


# Prettier differences

```diff
--- Prettier
+++ Rome
@@ -2,7 +2,7 @@
 function b<const T extends U>() {}
 function c<T, const U>() {}
 declare function d<const T>();
-<const T,>() => {};
+<const T>() => {};
 <const T extends U>() => {};
 (function <const T>() {});
 (function <const T extends U>() {});
@@ -11,18 +11,18 @@
 class A<const T> {}
 class B<const T extends U> {}
 class C<T, const U> {}
-class D<const in T> {}
+class D<in const T> {}
 class E<const in T> {}
 (class<const T> {});
 (class<const T extends U> {});
 (class<T, const U> {});
-(class<const in T> {});
+(class<in const T> {});
 (class<const in T> {});
 
 interface I<const T> {}
 interface J<const T extends U> {}
 interface K<T, const U> {}
-interface L<const in T> {}
+interface L<in const T> {}
 interface M<const in T> {}
 
 class _ {
```

# Output

```ts
function a<const T>() {}
function b<const T extends U>() {}
function c<T, const U>() {}
declare function d<const T>();
<const T>() => {};
<const T extends U>() => {};
(function <const T>() {});
(function <const T extends U>() {});
(function <T, const U>() {});

class A<const T> {}
class B<const T extends U> {}
class C<T, const U> {}
class D<in const T> {}
class E<const in T> {}
(class<const T> {});
(class<const T extends U> {});
(class<T, const U> {});
(class<in const T> {});
(class<const in T> {});

interface I<const T> {}
interface J<const T extends U> {}
interface K<T, const U> {}
interface L<in const T> {}
interface M<const in T> {}

class _ {
  method<const T>() {}
  method<const T extends U>() {}
  method<T, const U>() {}
}
```

# Errors
```
const.ts:22:13 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × 'const' modifier can only appear on a type parameter of a function, method or class.
  
    20 │ (class <const in T> {});
    21 │ 
  > 22 │ interface I<const T> {}
       │             ^^^^^
    23 │ interface J<const T extends U> {}
    24 │ interface K<T, const U> {}
  
const.ts:23:13 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × 'const' modifier can only appear on a type parameter of a function, method or class.
  
    22 │ interface I<const T> {}
  > 23 │ interface J<const T extends U> {}
       │             ^^^^^
    24 │ interface K<T, const U> {}
    25 │ interface L<in const T> {}
  
const.ts:24:16 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × 'const' modifier can only appear on a type parameter of a function, method or class.
  
    22 │ interface I<const T> {}
    23 │ interface J<const T extends U> {}
  > 24 │ interface K<T, const U> {}
       │                ^^^^^
    25 │ interface L<in const T> {}
    26 │ interface M<const in T> {}
  
const.ts:25:16 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × 'const' modifier can only appear on a type parameter of a function, method or class.
  
    23 │ interface J<const T extends U> {}
    24 │ interface K<T, const U> {}
  > 25 │ interface L<in const T> {}
       │                ^^^^^
    26 │ interface M<const in T> {}
    27 │ 
  
const.ts:26:13 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × 'const' modifier can only appear on a type parameter of a function, method or class.
  
    24 │ interface K<T, const U> {}
    25 │ interface L<in const T> {}
  > 26 │ interface M<const in T> {}
       │             ^^^^^
    27 │ 
    28 │ class _ {
  

```


