---
source: crates/rome_formatter_test/src/snapshot_builder.rs
info: typescript/last-argument-expansion/forward-ref.tsx
---

# Input

```tsx
export const Link = forwardRef<HTMLAnchorElement, LinkProps>(
  function Link(props, ref) {
    return <ThemeUILink ref={ref} variant="default" {...props} />;
  }
);

export const LinkWithLongName = forwardRef<HTMLAnchorElement, LinkProps>(
  function Link(props, ref) {
    return <ThemeUILink ref={ref} variant="default" {...props} />;
  }
);

export const Arrow = forwardRef<HTMLAnchorElement, LinkProps>((props, ref) => {
  return <ThemeUILink ref={ref} variant="default" {...props} />;
});

export const ArrowWithLongName = forwardRef<HTMLAnchorElement, LinkProps>(
  (props, ref) => {
    return <ThemeUILink ref={ref} variant="default" {...props} />;
  }
);

const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(
  function Link(props, ref) {
    return <ThemeUILink ref={ref} variant="default" {...props} />;
  },
);

```


# Prettier differences

```diff
--- Prettier
+++ Rome
@@ -1,8 +1,9 @@
-export const Link = forwardRef<HTMLAnchorElement, LinkProps>(
-  function Link(props, ref) {
-    return <ThemeUILink ref={ref} variant="default" {...props} />;
-  },
-);
+export const Link = forwardRef<HTMLAnchorElement, LinkProps>(function Link(
+  props,
+  ref,
+) {
+  return <ThemeUILink ref={ref} variant="default" {...props} />;
+});
 
 export const LinkWithLongName = forwardRef<HTMLAnchorElement, LinkProps>(
   function Link(props, ref) {
@@ -20,8 +21,9 @@
   },
 );
 
-const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(
-  function Link(props, ref) {
-    return <ThemeUILink ref={ref} variant="default" {...props} />;
-  },
-);
+const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(function Link(
+  props,
+  ref,
+) {
+  return <ThemeUILink ref={ref} variant="default" {...props} />;
+});
```

# Output

```tsx
export const Link = forwardRef<HTMLAnchorElement, LinkProps>(function Link(
  props,
  ref,
) {
  return <ThemeUILink ref={ref} variant="default" {...props} />;
});

export const LinkWithLongName = forwardRef<HTMLAnchorElement, LinkProps>(
  function Link(props, ref) {
    return <ThemeUILink ref={ref} variant="default" {...props} />;
  },
);

export const Arrow = forwardRef<HTMLAnchorElement, LinkProps>((props, ref) => {
  return <ThemeUILink ref={ref} variant="default" {...props} />;
});

export const ArrowWithLongName = forwardRef<HTMLAnchorElement, LinkProps>(
  (props, ref) => {
    return <ThemeUILink ref={ref} variant="default" {...props} />;
  },
);

const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(function Link(
  props,
  ref,
) {
  return <ThemeUILink ref={ref} variant="default" {...props} />;
});
```


