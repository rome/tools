---
source: crates/rome_formatter_test/src/snapshot_builder.rs
assertion_line: 212
info: typescript/conformance/classes/classDeclarations/classAbstractKeyword/classAbstractInstantiations2.ts
---

# Input

```ts
class A {
}

abstract class B {
    foo(): number { return this.bar(); }
    abstract bar() : number;
}

new B;

var BB: typeof B = B;
var AA: typeof A = BB;
new AA;

function constructB(Factory : typeof B) {
    new Factory;
}

var BB = B;
new BB;

var x : any = C;
new x;

class C extends B { }

abstract class D extends B { }

class E extends B {
    bar() { return 1; }
}

abstract class F extends B {
    abstract foo() : number;
    bar() { return 2; }
}

abstract class G {
    abstract qux(x : number) : string;
    abstract qux() : number;
    y : number;
    abstract quz(x : number, y : string) : boolean;

    abstract nom(): boolean;
    nom(x : number): boolean;
}

class H {
    abstract baz() : number;
}
```


# Prettier differences

```diff
--- Prettier
+++ Rome
@@ -51,5 +51,5 @@
 }
 
 class H {
-  abstract baz(): number;
+  abstract baz() : number;
 }
```

# Output

```ts
class A {}

abstract class B {
  foo(): number {
    return this.bar();
  }
  abstract bar(): number;
}

new B();

var BB: typeof B = B;
var AA: typeof A = BB;
new AA();

function constructB(Factory: typeof B) {
  new Factory();
}

var BB = B;
new BB();

var x: any = C;
new x();

class C extends B {}

abstract class D extends B {}

class E extends B {
  bar() {
    return 1;
  }
}

abstract class F extends B {
  abstract foo(): number;
  bar() {
    return 2;
  }
}

abstract class G {
  abstract qux(x: number): string;
  abstract qux(): number;
  y: number;
  abstract quz(x: number, y: string): boolean;

  abstract nom(): boolean;
  nom(x: number): boolean;
}

class H {
  abstract baz() : number;
}
```

# Errors
```
classAbstractInstantiations2.ts:49:5 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Only abstract classes can have abstract members
  
    48 │ class H {
  > 49 │     abstract baz() : number;
       │     ^^^^^^^^
    50 │ }
  

```


