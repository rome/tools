---
source: crates/rome_js_formatter/tests/prettier_tests.rs
---

# Input

```js
type A = B extends T
  ? // comment
    foo
  : bar;

type A = B extends test /* comment
  comment
      comment
*/
  ? foo
  : bar;

type T = test extends B
  ? /* comment
          comment
    comment
          comment
  */
    foo
  : bar;

type T = test extends B
  ? /* comment
       comment
       comment
       comment
    */
    foo
  : test extends B
  ? /* comment
  comment
    comment */
    foo
  : bar;

type T = test extends B
  ? /* comment */
    foo
  : bar;

type T = test extends B
  ? foo
  : /* comment
         comment
     comment
           comment
    */
  bar;

type T = test extends B
  ? foo
  : /* comment
         comment
     comment
           comment
    */
  test extends B
  ? foo
  : /* comment
  comment
    comment
   */
    bar;

type T = test extends B
  ? foo
  : /* comment */
  bar;

type T = test extends B ? test extends B /* c
c */? foo : bar : bar;
```


# Prettier differences

```diff
--- Prettier
+++ Rome
@@ -1,6 +1,5 @@
 type A = B extends T
-  ? // comment
-    foo
+  ? foo // comment
   : bar;
 
 type A = B extends test /* comment
@@ -15,8 +14,7 @@
           comment
     comment
           comment
-  */
-    foo
+  */ foo
   : bar;
 
 type T = test extends B
@@ -24,13 +22,11 @@
        comment
        comment
        comment
-    */
-    foo
+    */ foo
   : test extends B
   ? /* comment
   comment
-    comment */
-    foo
+    comment */ foo
   : bar;
 
 type T = test extends B ? /* comment */ foo : bar;
@@ -41,8 +37,7 @@
          comment
      comment
            comment
-    */
-    bar;
+    */ bar;
 
 type T = test extends B
   ? foo
@@ -50,14 +45,12 @@
          comment
      comment
            comment
-    */
-  test extends B
+    */ test extends B
   ? foo
   : /* comment
   comment
     comment
-   */
-    bar;
+   */ bar;
 
 type T = test extends B ? foo : /* comment */ bar;
 
```

# Output

```js
type A = B extends T
  ? foo // comment
  : bar;

type A = B extends test /* comment
  comment
      comment
*/
  ? foo
  : bar;

type T = test extends B
  ? /* comment
          comment
    comment
          comment
  */ foo
  : bar;

type T = test extends B
  ? /* comment
       comment
       comment
       comment
    */ foo
  : test extends B
  ? /* comment
  comment
    comment */ foo
  : bar;

type T = test extends B ? /* comment */ foo : bar;

type T = test extends B
  ? foo
  : /* comment
         comment
     comment
           comment
    */ bar;

type T = test extends B
  ? foo
  : /* comment
         comment
     comment
           comment
    */ test extends B
  ? foo
  : /* comment
  comment
    comment
   */ bar;

type T = test extends B ? foo : /* comment */ bar;

type T = test extends B
  ? test extends B /* c
c */
    ? foo
    : bar
  : bar;
```



