---
source: crates/rome_js_formatter/tests/prettier_tests.rs
info:
  test_file: typescript/satisfies-operators/comments-unstable.ts
---

# Input

```js
const t1 = {
    prop1: 1,
    prop2: 2,
    prop3: 3
} satisfies
// Comment
Record<string, number>;
```


# Prettier differences

```diff
--- Prettier
+++ Rome
@@ -2,5 +2,7 @@
   prop1: 1,
   prop2: 2,
   prop3: 3,
-} satisfies // Comment
+};
+satisfies;
+// Comment
 Record<string, number>;
```

# Output

```js
const t1 = {
  prop1: 1,
  prop2: 2,
  prop3: 3,
};
satisfies;
// Comment
Record<string, number>;
```


# Errors
```
comments-unstable.ts:5:3 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Expected a semicolon or an implicit semicolon after a statement, but found none
  
    3 │     prop2: 2,
    4 │     prop3: 3
  > 5 │ } satisfies
      │   ^^^^^^^^^
    6 │ // Comment
    7 │ Record<string, number>;
  
  i An explicit or implicit semicolon is expected here...
  
    3 │     prop2: 2,
    4 │     prop3: 3
  > 5 │ } satisfies
      │   ^^^^^^^^^
    6 │ // Comment
    7 │ Record<string, number>;
  
  i ...Which is required to end this statement
  
  > 1 │ const t1 = {
      │ ^^^^^^^^^^^^
  > 2 │     prop1: 1,
  > 3 │     prop2: 2,
  > 4 │     prop3: 3
  > 5 │ } satisfies
      │ ^^
    6 │ // Comment
    7 │ Record<string, number>;
  

```


