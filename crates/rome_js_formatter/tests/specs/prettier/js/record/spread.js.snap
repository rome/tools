---
source: crates/rome_js_formatter/tests/prettier_tests.rs
info:
  test_file: "js\\record\\spread.js"
---

# Input

```js
const formData = #{ title: "Implement all the things" }
const taskNow = #{ id: 42, status: "WIP", ...formData }
const taskLater = #{ ...taskNow, status: "DONE" }

// A reminder: The ordering of keys in record literals does not affect equality (and is not retained)
assert(taskLater === #{ status: "DONE", title: formData.title, id: 42 })
```


# Prettier differences

```diff
--- Prettier
+++ Rome
@@ -1,6 +1,16 @@
-const formData = #{ title: "Implement all the things" };
-const taskNow = #{ id: 42, status: "WIP", ...formData };
-const taskLater = #{ ...taskNow, status: "DONE" };
+const formData = #;
+{
+  title: "Implement all the things";
+}
+const taskNow = #;
+{
+  id: 42, status;
+  : "WIP", ...formData
+}
+const taskLater = #;
+{
+  ...taskNow, status: "DONE"
+}
 
 // A reminder: The ordering of keys in record literals does not affect equality (and is not retained)
-assert(taskLater === #{ status: "DONE", title: formData.title, id: 42 });
+assert(taskLater === #{ status: "DONE", title: formData.title, id: 42 })
```

# Output

```js
const formData = #;
{
  title: "Implement all the things";
}
const taskNow = #;
{
  id: 42, status;
  : "WIP", ...formData
}
const taskLater = #;
{
  ...taskNow, status: "DONE"
}

// A reminder: The ordering of keys in record literals does not affect equality (and is not retained)
assert(taskLater === #{ status: "DONE", title: formData.title, id: 42 })
```


# Errors
```
spread.js:1:19 SyntaxError ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected an identifier but instead found '{'
  
  × Expected an identifier here
  
    ┌─ spread.js:1:19
    │
  1 │ const formData = #{ title: "Implement all the things" }
    │                   ^
  
spread.js:1:18 SyntaxError ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Private names are only allowed on the left side of a 'in' expression
  
    ┌─ spread.js:1:18
    │
  1 │ const formData = #{ title: "Implement all the things" }
    │                  ^
  
spread.js:1:19 SyntaxError ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Expected a semicolon or an implicit semicolon after a statement, but found none
  
  × An explicit or implicit semicolon is expected here...
  
    ┌─ spread.js:1:19
    │
  1 │ const formData = #{ title: "Implement all the things" }
    │                   ^
  
  i ...Which is required to end this statement
  
    ┌─ spread.js:1:1
    │
  1 │ const formData = #{ title: "Implement all the things" }
    │ ^^^^^^^^^^^^^^^^^^
  
spread.js:2:18 SyntaxError ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected an identifier but instead found '{'
  
  × Expected an identifier here
  
    ┌─ spread.js:2:18
    │
  2 │ const taskNow = #{ id: 42, status: "WIP", ...formData }
    │                  ^
  
spread.js:2:17 SyntaxError ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Private names are only allowed on the left side of a 'in' expression
  
    ┌─ spread.js:2:17
    │
  2 │ const taskNow = #{ id: 42, status: "WIP", ...formData }
    │                 ^
  
spread.js:2:18 SyntaxError ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Expected a semicolon or an implicit semicolon after a statement, but found none
  
  × An explicit or implicit semicolon is expected here...
  
    ┌─ spread.js:2:18
    │
  2 │ const taskNow = #{ id: 42, status: "WIP", ...formData }
    │                  ^
  
  i ...Which is required to end this statement
  
    ┌─ spread.js:2:1
    │
  2 │ const taskNow = #{ id: 42, status: "WIP", ...formData }
    │ ^^^^^^^^^^^^^^^^^
  
spread.js:2:34 SyntaxError ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Expected a semicolon or an implicit semicolon after a statement, but found none
  
  × An explicit or implicit semicolon is expected here...
  
    ┌─ spread.js:2:34
    │
  2 │ const taskNow = #{ id: 42, status: "WIP", ...formData }
    │                                  ^
  
  i ...Which is required to end this statement
  
    ┌─ spread.js:2:24
    │
  2 │ const taskNow = #{ id: 42, status: "WIP", ...formData }
    │                        ^^^^^^^^^^^
  
spread.js:3:20 SyntaxError ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected an identifier but instead found '{'
  
  × Expected an identifier here
  
    ┌─ spread.js:3:20
    │
  3 │ const taskLater = #{ ...taskNow, status: "DONE" }
    │                    ^
  
spread.js:3:19 SyntaxError ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Private names are only allowed on the left side of a 'in' expression
  
    ┌─ spread.js:3:19
    │
  3 │ const taskLater = #{ ...taskNow, status: "DONE" }
    │                   ^
  
spread.js:3:20 SyntaxError ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Expected a semicolon or an implicit semicolon after a statement, but found none
  
  × An explicit or implicit semicolon is expected here...
  
    ┌─ spread.js:3:20
    │
  3 │ const taskLater = #{ ...taskNow, status: "DONE" }
    │                    ^
  
  i ...Which is required to end this statement
  
    ┌─ spread.js:3:1
    │
  3 │ const taskLater = #{ ...taskNow, status: "DONE" }
    │ ^^^^^^^^^^^^^^^^^^^
  
spread.js:3:22 SyntaxError ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected an expression but instead found '...taskNow, status: "DONE"'
  
  × Expected an expression here
  
    ┌─ spread.js:3:22
    │
  3 │ const taskLater = #{ ...taskNow, status: "DONE" }
    │                      ^^^^^^^^^^^^^^^^^^^^^^^^^^
  
spread.js:6:23 SyntaxError ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected an identifier but instead found '{'
  
  × Expected an identifier here
  
    ┌─ spread.js:6:23
    │
  6 │ assert(taskLater === #{ status: "DONE", title: formData.title, id: 42 })
    │                       ^
  
spread.js:6:22 SyntaxError ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Private names are only allowed on the left side of a 'in' expression
  
    ┌─ spread.js:6:22
    │
  6 │ assert(taskLater === #{ status: "DONE", title: formData.title, id: 42 })
    │                      ^
  
spread.js:6:23 SyntaxError ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected `,` but instead found `{`
  
  × unexpected
  
    ┌─ spread.js:6:23
    │
  6 │ assert(taskLater === #{ status: "DONE", title: formData.title, id: 42 })
    │                       ^
  

```

# Lines exceeding max width of 80 characters
```
   15: // A reminder: The ordering of keys in record literals does not affect equality (and is not retained)
```

