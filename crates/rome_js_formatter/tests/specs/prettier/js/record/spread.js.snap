---
source: crates/rome_js_formatter/tests/prettier_tests.rs
expression: spread.js
---
# Input
```js
const formData = #{ title: "Implement all the things" }
const taskNow = #{ id: 42, status: "WIP", ...formData }
const taskLater = #{ ...taskNow, status: "DONE" }

// A reminder: The ordering of keys in record literals does not affect equality (and is not retained)
assert(taskLater === #{ status: "DONE", title: formData.title, id: 42 })

```

# Output
```js
const formData = #
{
  title: "Implement all the things";
}
const taskNow = #
{
  id: 42, status;
  : "WIP", ...formData
}
const taskLater = #
{
  ...taskNow, status: "DONE"
}

// A reminder: The ordering of keys in record literals does not affect equality (and is not retained)
assert(taskLater === #{ status: "DONE", title: formData.title, id: 42 })

```

# Errors
```
error[SyntaxError]: expected an identifier but instead found '{'
  ┌─ spread.js:1:19
  │
1 │ const formData = #{ title: "Implement all the things" }
  │                   ^ Expected an identifier here

error[SyntaxError]: Private names are only allowed on the left side of a 'in' expression
  ┌─ spread.js:1:18
  │
1 │ const formData = #{ title: "Implement all the things" }
  │                  ^

error[SyntaxError]: Expected a semicolon or an implicit semicolon after a statement, but found none
  ┌─ spread.js:1:19
  │
1 │ const formData = #{ title: "Implement all the things" }
  │ ------------------^ An explicit or implicit semicolon is expected here...
  │ │                  
  │ ...Which is required to end this statement

error[SyntaxError]: expected an identifier but instead found '{'
  ┌─ spread.js:2:18
  │
2 │ const taskNow = #{ id: 42, status: "WIP", ...formData }
  │                  ^ Expected an identifier here

error[SyntaxError]: Private names are only allowed on the left side of a 'in' expression
  ┌─ spread.js:2:17
  │
2 │ const taskNow = #{ id: 42, status: "WIP", ...formData }
  │                 ^

error[SyntaxError]: Expected a semicolon or an implicit semicolon after a statement, but found none
  ┌─ spread.js:2:18
  │
2 │ const taskNow = #{ id: 42, status: "WIP", ...formData }
  │ -----------------^ An explicit or implicit semicolon is expected here...
  │ │                 
  │ ...Which is required to end this statement

error[SyntaxError]: Expected a semicolon or an implicit semicolon after a statement, but found none
  ┌─ spread.js:2:34
  │
2 │ const taskNow = #{ id: 42, status: "WIP", ...formData }
  │                        ----------^
  │                        │         │
  │                        │         An explicit or implicit semicolon is expected here...
  │                        ...Which is required to end this statement

error[SyntaxError]: expected an identifier but instead found '{'
  ┌─ spread.js:3:20
  │
3 │ const taskLater = #{ ...taskNow, status: "DONE" }
  │                    ^ Expected an identifier here

error[SyntaxError]: Private names are only allowed on the left side of a 'in' expression
  ┌─ spread.js:3:19
  │
3 │ const taskLater = #{ ...taskNow, status: "DONE" }
  │                   ^

error[SyntaxError]: Expected a semicolon or an implicit semicolon after a statement, but found none
  ┌─ spread.js:3:20
  │
3 │ const taskLater = #{ ...taskNow, status: "DONE" }
  │ -------------------^ An explicit or implicit semicolon is expected here...
  │ │                   
  │ ...Which is required to end this statement

error[SyntaxError]: expected an expression but instead found '...taskNow, status: "DONE"'
  ┌─ spread.js:3:22
  │
3 │ const taskLater = #{ ...taskNow, status: "DONE" }
  │                      ^^^^^^^^^^^^^^^^^^^^^^^^^^ Expected an expression here

error[SyntaxError]: expected an identifier but instead found '{'
  ┌─ spread.js:6:23
  │
6 │ assert(taskLater === #{ status: "DONE", title: formData.title, id: 42 })
  │                       ^ Expected an identifier here

error[SyntaxError]: Private names are only allowed on the left side of a 'in' expression
  ┌─ spread.js:6:22
  │
6 │ assert(taskLater === #{ status: "DONE", title: formData.title, id: 42 })
  │                      ^

error[SyntaxError]: expected `,` but instead found `{`
  ┌─ spread.js:6:23
  │
6 │ assert(taskLater === #{ status: "DONE", title: formData.title, id: 42 })
  │                       ^ unexpected


```

# Lines exceeding max width of 80 characters
```
   15: // A reminder: The ordering of keys in record literals does not affect equality (and is not retained)
```

