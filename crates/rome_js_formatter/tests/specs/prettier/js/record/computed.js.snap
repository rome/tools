---
source: crates/rome_js_formatter/tests/prettier_tests.rs
expression: computed.js
---
# Input
```js
const key = "a";
assert(#{ [key]: 1 } === #{ a: 1 })
assert(#{ [key.toUpperCase()]: 1 } === #{ A: 1 })

assert(#{ [true]: 1 } === #{ true: 1 })
assert(#{ [true]: 1 } === #{ ["true"]: 1 })

assert(#{ [1 + 1]: "two" } === #{ 2: "two" })
assert(#{ [9 + 1]: "ten" } === #{ ["10"]: "ten" })

```

# Output
```js
const key = "a";
assert(#{ [key]: 1 } === #{ a: 1 })
assert(#{ [key.toUpperCase()]: 1 } === #{ A: 1 })

assert(#{ [true]: 1 } === #{ true: 1 })
assert(#{ [true]: 1 } === #{ ["true"]: 1 })

assert(#{ [1 + 1]: "two" } === #{ 2: "two" })
assert(#{ [9 + 1]: "ten" } === #{ ["10"]: "ten" })

```

# Errors
```
error[SyntaxError]: expected an identifier but instead found '{'
  ┌─ computed.js:2:9
  │
2 │ assert(#{ [key]: 1 } === #{ a: 1 })
  │         ^ Expected an identifier here

error[SyntaxError]: Private names are only allowed on the left side of a 'in' expression
  ┌─ computed.js:2:8
  │
2 │ assert(#{ [key]: 1 } === #{ a: 1 })
  │        ^

error[SyntaxError]: expected `,` but instead found `{`
  ┌─ computed.js:2:9
  │
2 │ assert(#{ [key]: 1 } === #{ a: 1 })
  │         ^ unexpected

error[SyntaxError]: expected an identifier but instead found '{'
  ┌─ computed.js:2:27
  │
2 │ assert(#{ [key]: 1 } === #{ a: 1 })
  │                           ^ Expected an identifier here

error[SyntaxError]: Private names are only allowed on the left side of a 'in' expression
  ┌─ computed.js:2:26
  │
2 │ assert(#{ [key]: 1 } === #{ a: 1 })
  │                          ^

error[SyntaxError]: expected `,` but instead found `{`
  ┌─ computed.js:2:27
  │
2 │ assert(#{ [key]: 1 } === #{ a: 1 })
  │                           ^ unexpected

error[SyntaxError]: expected an identifier but instead found '{'
  ┌─ computed.js:3:9
  │
3 │ assert(#{ [key.toUpperCase()]: 1 } === #{ A: 1 })
  │         ^ Expected an identifier here

error[SyntaxError]: Private names are only allowed on the left side of a 'in' expression
  ┌─ computed.js:3:8
  │
3 │ assert(#{ [key.toUpperCase()]: 1 } === #{ A: 1 })
  │        ^

error[SyntaxError]: expected `,` but instead found `{`
  ┌─ computed.js:3:9
  │
3 │ assert(#{ [key.toUpperCase()]: 1 } === #{ A: 1 })
  │         ^ unexpected

error[SyntaxError]: expected an identifier but instead found '{'
  ┌─ computed.js:3:41
  │
3 │ assert(#{ [key.toUpperCase()]: 1 } === #{ A: 1 })
  │                                         ^ Expected an identifier here

error[SyntaxError]: Private names are only allowed on the left side of a 'in' expression
  ┌─ computed.js:3:40
  │
3 │ assert(#{ [key.toUpperCase()]: 1 } === #{ A: 1 })
  │                                        ^

error[SyntaxError]: expected `,` but instead found `{`
  ┌─ computed.js:3:41
  │
3 │ assert(#{ [key.toUpperCase()]: 1 } === #{ A: 1 })
  │                                         ^ unexpected

error[SyntaxError]: expected an identifier but instead found '{'
  ┌─ computed.js:5:9
  │
5 │ assert(#{ [true]: 1 } === #{ true: 1 })
  │         ^ Expected an identifier here

error[SyntaxError]: Private names are only allowed on the left side of a 'in' expression
  ┌─ computed.js:5:8
  │
5 │ assert(#{ [true]: 1 } === #{ true: 1 })
  │        ^

error[SyntaxError]: expected `,` but instead found `{`
  ┌─ computed.js:5:9
  │
5 │ assert(#{ [true]: 1 } === #{ true: 1 })
  │         ^ unexpected

error[SyntaxError]: expected an identifier but instead found '{'
  ┌─ computed.js:5:28
  │
5 │ assert(#{ [true]: 1 } === #{ true: 1 })
  │                            ^ Expected an identifier here

error[SyntaxError]: Private names are only allowed on the left side of a 'in' expression
  ┌─ computed.js:5:27
  │
5 │ assert(#{ [true]: 1 } === #{ true: 1 })
  │                           ^

error[SyntaxError]: expected `,` but instead found `{`
  ┌─ computed.js:5:28
  │
5 │ assert(#{ [true]: 1 } === #{ true: 1 })
  │                            ^ unexpected

error[SyntaxError]: expected an identifier but instead found '{'
  ┌─ computed.js:6:9
  │
6 │ assert(#{ [true]: 1 } === #{ ["true"]: 1 })
  │         ^ Expected an identifier here

error[SyntaxError]: Private names are only allowed on the left side of a 'in' expression
  ┌─ computed.js:6:8
  │
6 │ assert(#{ [true]: 1 } === #{ ["true"]: 1 })
  │        ^

error[SyntaxError]: expected `,` but instead found `{`
  ┌─ computed.js:6:9
  │
6 │ assert(#{ [true]: 1 } === #{ ["true"]: 1 })
  │         ^ unexpected

error[SyntaxError]: expected an identifier but instead found '{'
  ┌─ computed.js:6:28
  │
6 │ assert(#{ [true]: 1 } === #{ ["true"]: 1 })
  │                            ^ Expected an identifier here

error[SyntaxError]: Private names are only allowed on the left side of a 'in' expression
  ┌─ computed.js:6:27
  │
6 │ assert(#{ [true]: 1 } === #{ ["true"]: 1 })
  │                           ^

error[SyntaxError]: expected `,` but instead found `{`
  ┌─ computed.js:6:28
  │
6 │ assert(#{ [true]: 1 } === #{ ["true"]: 1 })
  │                            ^ unexpected

error[SyntaxError]: expected an identifier but instead found '{'
  ┌─ computed.js:8:9
  │
8 │ assert(#{ [1 + 1]: "two" } === #{ 2: "two" })
  │         ^ Expected an identifier here

error[SyntaxError]: Private names are only allowed on the left side of a 'in' expression
  ┌─ computed.js:8:8
  │
8 │ assert(#{ [1 + 1]: "two" } === #{ 2: "two" })
  │        ^

error[SyntaxError]: expected `,` but instead found `{`
  ┌─ computed.js:8:9
  │
8 │ assert(#{ [1 + 1]: "two" } === #{ 2: "two" })
  │         ^ unexpected

error[SyntaxError]: expected an identifier but instead found '{'
  ┌─ computed.js:8:33
  │
8 │ assert(#{ [1 + 1]: "two" } === #{ 2: "two" })
  │                                 ^ Expected an identifier here

error[SyntaxError]: Private names are only allowed on the left side of a 'in' expression
  ┌─ computed.js:8:32
  │
8 │ assert(#{ [1 + 1]: "two" } === #{ 2: "two" })
  │                                ^

error[SyntaxError]: expected `,` but instead found `{`
  ┌─ computed.js:8:33
  │
8 │ assert(#{ [1 + 1]: "two" } === #{ 2: "two" })
  │                                 ^ unexpected

error[SyntaxError]: expected an identifier but instead found '{'
  ┌─ computed.js:9:9
  │
9 │ assert(#{ [9 + 1]: "ten" } === #{ ["10"]: "ten" })
  │         ^ Expected an identifier here

error[SyntaxError]: Private names are only allowed on the left side of a 'in' expression
  ┌─ computed.js:9:8
  │
9 │ assert(#{ [9 + 1]: "ten" } === #{ ["10"]: "ten" })
  │        ^

error[SyntaxError]: expected `,` but instead found `{`
  ┌─ computed.js:9:9
  │
9 │ assert(#{ [9 + 1]: "ten" } === #{ ["10"]: "ten" })
  │         ^ unexpected

error[SyntaxError]: expected an identifier but instead found '{'
  ┌─ computed.js:9:33
  │
9 │ assert(#{ [9 + 1]: "ten" } === #{ ["10"]: "ten" })
  │                                 ^ Expected an identifier here

error[SyntaxError]: Private names are only allowed on the left side of a 'in' expression
  ┌─ computed.js:9:32
  │
9 │ assert(#{ [9 + 1]: "ten" } === #{ ["10"]: "ten" })
  │                                ^

error[SyntaxError]: expected `,` but instead found `{`
  ┌─ computed.js:9:33
  │
9 │ assert(#{ [9 + 1]: "ten" } === #{ ["10"]: "ten" })
  │                                 ^ unexpected


```


