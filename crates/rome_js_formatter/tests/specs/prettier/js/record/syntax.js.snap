---
source: crates/rome_js_formatter/tests/prettier_tests.rs
info:
  test_file: "js\\record\\syntax.js"
---

# Input

```js
#{}
#{ a: 1, b: 2 }
#{ a: 1, b: #[2, 3, #{ c: 4 }] }
```


# Prettier differences

```diff
--- Prettier
+++ Rome
@@ -1,3 +1,17 @@
-#{};
-#{ a: 1, b: 2 };
-#{ a: 1, b: #[2, 3, #{ c: 4 }] };
+#
+{
+}
+#
+{
+  a: 1, b;
+  : 2
+}
+#
+{
+  a: 1, b;
+  : #[2, 3, #
+  {
+    c: 4;
+  }
+  ]
+}
```

# Output

```js
#
{
}
#
{
  a: 1, b;
  : 2
}
#
{
  a: 1, b;
  : #[2, 3, #
  {
    c: 4;
  }
  ]
}
```


# Errors
```
syntax.js:1:1 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected a statement but instead found '#'
  
  × Expected a statement here
  
    ┌─ syntax.js:1:1
    │
  1 │ #{}
    │ ^
  
syntax.js:2:2 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected an identifier but instead found '{'
  
  × Expected an identifier here
  
    ┌─ syntax.js:2:2
    │
  2 │ #{ a: 1, b: 2 }
    │  ^
  
syntax.js:2:1 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Private names are only allowed on the left side of a 'in' expression
  
    ┌─ syntax.js:2:1
    │
  2 │ #{ a: 1, b: 2 }
    │ ^
  
syntax.js:2:2 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Expected a semicolon or an implicit semicolon after a statement, but found none
  
  × An explicit or implicit semicolon is expected here...
  
    ┌─ syntax.js:2:2
    │
  2 │ #{ a: 1, b: 2 }
    │  ^
  
  i ...Which is required to end this statement
  
    ┌─ syntax.js:2:1
    │
  2 │ #{ a: 1, b: 2 }
    │ ^^
  
syntax.js:2:11 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Expected a semicolon or an implicit semicolon after a statement, but found none
  
  × An explicit or implicit semicolon is expected here...
  
    ┌─ syntax.js:2:11
    │
  2 │ #{ a: 1, b: 2 }
    │           ^
  
  i ...Which is required to end this statement
  
    ┌─ syntax.js:2:7
    │
  2 │ #{ a: 1, b: 2 }
    │       ^^^^^
  
syntax.js:3:2 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected an identifier but instead found '{'
  
  × Expected an identifier here
  
    ┌─ syntax.js:3:2
    │
  3 │ #{ a: 1, b: #[2, 3, #{ c: 4 }] }
    │  ^
  
syntax.js:3:1 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Private names are only allowed on the left side of a 'in' expression
  
    ┌─ syntax.js:3:1
    │
  3 │ #{ a: 1, b: #[2, 3, #{ c: 4 }] }
    │ ^
  
syntax.js:3:2 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Expected a semicolon or an implicit semicolon after a statement, but found none
  
  × An explicit or implicit semicolon is expected here...
  
    ┌─ syntax.js:3:2
    │
  3 │ #{ a: 1, b: #[2, 3, #{ c: 4 }] }
    │  ^
  
  i ...Which is required to end this statement
  
    ┌─ syntax.js:3:1
    │
  3 │ #{ a: 1, b: #[2, 3, #{ c: 4 }] }
    │ ^^
  
syntax.js:3:11 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Expected a semicolon or an implicit semicolon after a statement, but found none
  
  × An explicit or implicit semicolon is expected here...
  
    ┌─ syntax.js:3:11
    │
  3 │ #{ a: 1, b: #[2, 3, #{ c: 4 }] }
    │           ^
  
  i ...Which is required to end this statement
  
    ┌─ syntax.js:3:7
    │
  3 │ #{ a: 1, b: #[2, 3, #{ c: 4 }] }
    │       ^^^^^
  
syntax.js:3:30 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected a statement but instead found ']'
  
  × Expected a statement here
  
    ┌─ syntax.js:3:30
    │
  3 │ #{ a: 1, b: #[2, 3, #{ c: 4 }] }
    │                              ^
  
syntax.js:1:1 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected `!` following a `#`, but found none
  
    ┌─ syntax.js:1:1
    │
  1 │ #{}
    │ ^
  

```


