---
source: crates/rome_js_formatter/tests/prettier_tests.rs
info:
  test_file: "js\\babel-plugins\\record-tuple-record.js"
---

# Input

```js
const record1 = #{
    a: 1,
    b: 2,
    c: 3,
};

const record2 = #{...record1, b: 5};
```


# Prettier differences

```diff
--- Prettier
+++ Rome
@@ -1,7 +1,11 @@
-const record1 = #{
-  a: 1,
-  b: 2,
-  c: 3,
-};
+const record1 = #;
+{
+  a: 1, b;
+  : 2,
+    c: 3,
+}
 
-const record2 = #{ ...record1, b: 5 };
+const record2 = #;
+{
+  ...record1, b: 5
+}
```

# Output

```js
const record1 = #;
{
  a: 1, b;
  : 2,
    c: 3,
}

const record2 = #;
{
  ...record1, b: 5
}
```


# Errors
```
record-tuple-record.js:1:18 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected an identifier but instead found '{'
  
  × Expected an identifier here
  
    ┌─ record-tuple-record.js:1:18
    │
  1 │ const record1 = #{
    │                  ^
  
record-tuple-record.js:1:17 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Private names are only allowed on the left side of a 'in' expression
  
    ┌─ record-tuple-record.js:1:17
    │
  1 │ const record1 = #{
    │                 ^
  
record-tuple-record.js:1:18 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Expected a semicolon or an implicit semicolon after a statement, but found none
  
  × An explicit or implicit semicolon is expected here...
  
    ┌─ record-tuple-record.js:1:18
    │
  1 │ const record1 = #{
    │                  ^
  
  i ...Which is required to end this statement
  
    ┌─ record-tuple-record.js:1:1
    │
  1 │ const record1 = #{
    │ ^^^^^^^^^^^^^^^^^
  
record-tuple-record.js:3:6 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Expected a semicolon or an implicit semicolon after a statement, but found none
  
  × An explicit or implicit semicolon is expected here...
  
    ┌─ record-tuple-record.js:3:6
    │
  3 │     b: 2,
    │      ^
  
  i ...Which is required to end this statement
  
    ┌─ record-tuple-record.js:2:8
    │  
  2 │       a: 1,
    │ ┌────────^
  3 │ │     b: 2,
    │ └──────^
  
record-tuple-record.js:7:18 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected an identifier but instead found '{'
  
  × Expected an identifier here
  
    ┌─ record-tuple-record.js:7:18
    │
  7 │ const record2 = #{...record1, b: 5};
    │                  ^
  
record-tuple-record.js:7:17 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Private names are only allowed on the left side of a 'in' expression
  
    ┌─ record-tuple-record.js:7:17
    │
  7 │ const record2 = #{...record1, b: 5};
    │                 ^
  
record-tuple-record.js:7:18 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Expected a semicolon or an implicit semicolon after a statement, but found none
  
  × An explicit or implicit semicolon is expected here...
  
    ┌─ record-tuple-record.js:7:18
    │
  7 │ const record2 = #{...record1, b: 5};
    │                  ^
  
  i ...Which is required to end this statement
  
    ┌─ record-tuple-record.js:7:1
    │
  7 │ const record2 = #{...record1, b: 5};
    │ ^^^^^^^^^^^^^^^^^
  
record-tuple-record.js:7:19 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected an expression but instead found '...record1, b: 5'
  
  × Expected an expression here
  
    ┌─ record-tuple-record.js:7:19
    │
  7 │ const record2 = #{...record1, b: 5};
    │                   ^^^^^^^^^^^^^^^^
  

```


