---
source: crates/rome_js_formatter/tests/prettier_tests.rs
info:
  test_file: "js\\babel-plugins\\pipeline-operator-hack.js"
---

# Input

```js
// https://babeljs.io/docs/en/babel-plugin-proposal-pipeline-operator
// https://github.com/js-choi/proposal-hack-pipes

return list
 |> take(prefix.length, %)
 |> equals(%, prefix);

// (The % token isn't final; it might instead be @ or ? or #.)
```


# Prettier differences

```diff
--- Prettier
+++ Rome
@@ -1,6 +1,8 @@
 // https://babeljs.io/docs/en/babel-plugin-proposal-pipeline-operator
 // https://github.com/js-choi/proposal-hack-pipes
 
-return list |> take(prefix.length, %) |> equals(%, prefix);
+return list
+ |> take(prefix.length, %)
+ |> equals(%, prefix);
 
 // (The % token isn't final; it might instead be @ or ? or #.)
```

# Output

```js
// https://babeljs.io/docs/en/babel-plugin-proposal-pipeline-operator
// https://github.com/js-choi/proposal-hack-pipes

return list
 |> take(prefix.length, %)
 |> equals(%, prefix);

// (The % token isn't final; it might instead be @ or ? or #.)
```


# Errors
```
pipeline-operator-hack.js:5:3 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Expected an expression for the left hand side of the `>` operator.
  
  × This operator requires a left hand side value
  
    ┌─ pipeline-operator-hack.js:5:3
    │
  5 │  |> take(prefix.length, %)
    │   ^
  
pipeline-operator-hack.js:5:25 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Expected an expression for the left hand side of the `%` operator.
  
  × This operator requires a left hand side value
  
    ┌─ pipeline-operator-hack.js:5:25
    │
  5 │  |> take(prefix.length, %)
    │                         ^
  
pipeline-operator-hack.js:5:26 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected an expression but instead found ')'
  
  × Expected an expression here
  
    ┌─ pipeline-operator-hack.js:5:26
    │
  5 │  |> take(prefix.length, %)
    │                          ^
  
pipeline-operator-hack.js:6:3 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Expected an expression for the left hand side of the `>` operator.
  
  × This operator requires a left hand side value
  
    ┌─ pipeline-operator-hack.js:6:3
    │
  6 │  |> equals(%, prefix);
    │   ^
  
pipeline-operator-hack.js:6:12 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Expected an expression for the left hand side of the `%` operator.
  
  × This operator requires a left hand side value
  
    ┌─ pipeline-operator-hack.js:6:12
    │
  6 │  |> equals(%, prefix);
    │            ^
  
pipeline-operator-hack.js:6:13 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected an expression but instead found ','
  
  × Expected an expression here
  
    ┌─ pipeline-operator-hack.js:6:13
    │
  6 │  |> equals(%, prefix);
    │             ^
  
pipeline-operator-hack.js:4:1 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Illegal return statement outside of a function
  
    ┌─ pipeline-operator-hack.js:4:1
    │  
  4 │ ┌ return list
  5 │ │  |> take(prefix.length, %)
  6 │ │  |> equals(%, prefix);
    │ └──────────────────────^
  

```


