---
source: crates/rome_formatter_test/src/snapshot_builder.rs
info: js/method-chain/tuple-and-record.js
---

# Input

```js
foo.a().b().c([n, o])
foo.a().b().c(#[n, o])

foo.a().b().c({n, o})
foo.a().b().c(#{n, o})

```


# Prettier differences

```diff
--- Prettier
+++ Rome
@@ -1,5 +1,5 @@
 foo.a().b().c([n, o]);
-foo.a().b().c(#[n, o]);
+foo.a().b().c(#[n, o])
 
 foo.a().b().c({ n, o });
-foo.a().b().c(#{ n, o });
+foo.a().b().c(#{n, o})
```

# Output

```js
foo.a().b().c([n, o]);
foo.a().b().c(#[n, o])

foo.a().b().c({ n, o });
foo.a().b().c(#{n, o})
```

# Errors
```
tuple-and-record.js:2:16 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected an identifier but instead found '['
  
    1 │ foo.a().b().c([n, o])
  > 2 │ foo.a().b().c(#[n, o])
      │                ^
    3 │ 
    4 │ foo.a().b().c({n, o})
  
  i Expected an identifier here
  
    1 │ foo.a().b().c([n, o])
  > 2 │ foo.a().b().c(#[n, o])
      │                ^
    3 │ 
    4 │ foo.a().b().c({n, o})
  
tuple-and-record.js:2:15 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Private names are only allowed on the left side of a 'in' expression
  
    1 │ foo.a().b().c([n, o])
  > 2 │ foo.a().b().c(#[n, o])
      │               ^
    3 │ 
    4 │ foo.a().b().c({n, o})
  
tuple-and-record.js:2:16 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected `,` but instead found `[`
  
    1 │ foo.a().b().c([n, o])
  > 2 │ foo.a().b().c(#[n, o])
      │                ^
    3 │ 
    4 │ foo.a().b().c({n, o})
  
  i Remove [
  
tuple-and-record.js:5:16 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected an identifier but instead found '{'
  
    4 │ foo.a().b().c({n, o})
  > 5 │ foo.a().b().c(#{n, o})
      │                ^
    6 │ 
  
  i Expected an identifier here
  
    4 │ foo.a().b().c({n, o})
  > 5 │ foo.a().b().c(#{n, o})
      │                ^
    6 │ 
  
tuple-and-record.js:5:15 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Private names are only allowed on the left side of a 'in' expression
  
    4 │ foo.a().b().c({n, o})
  > 5 │ foo.a().b().c(#{n, o})
      │               ^
    6 │ 
  
tuple-and-record.js:5:16 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected `,` but instead found `{`
  
    4 │ foo.a().b().c({n, o})
  > 5 │ foo.a().b().c(#{n, o})
      │                ^
    6 │ 
  
  i Remove {
  

```


