---
source: crates/rome_js_formatter/tests/prettier_tests.rs
expression: break-last-member.js
---
# Input
```js
SomeVeryLongUpperCaseConstant.someVeryLongCallExpression().some_very_long_member_expression
weNeedToReachTheEightyCharacterLimitXXXXXXXXXXXXXXXXX.someNode
  .childrenInAnArray[0];
superSupersuperSupersuperSupersuperSupersuperSuperLong.exampleOfOrderOfGetterAndSetterReordered;
superSupersuperSupersuperSupersuperSupersuperSuperLong.exampleOfOrderOfGetterAndSetterReordered[0];

expect(
  findDOMNode(component.instance()).getElementsByClassName(styles.inner)[0].style.paddingRight
).toBe('1000px');

const { course, conflicts = [], index, scheduleId, studentId, something } = a.this.props;

const { course2, conflicts2 = [], index2, scheduleId2, studentId2, something2 } = this.props;

const {
  updated,
  author: { identifier: ownerId },
  location,
  category: categories,
} = rawAd.entry;

```

# Output
```js
SomeVeryLongUpperCaseConstant.someVeryLongCallExpression().some_very_long_member_expression;
weNeedToReachTheEightyCharacterLimitXXXXXXXXXXXXXXXXX.someNode.childrenInAnArray[0];
superSupersuperSupersuperSupersuperSupersuperSuperLong.exampleOfOrderOfGetterAndSetterReordered;
superSupersuperSupersuperSupersuperSupersuperSuperLong.exampleOfOrderOfGetterAndSetterReordered[0];

expect(
  findDOMNode(component.instance()).getElementsByClassName(styles.inner)[0].style.paddingRight,
).toBe("1000px");

const { course, conflicts = [], index, scheduleId, studentId, something } = a.this.props;

const { course2, conflicts2 = [], index2, scheduleId2, studentId2, something2 } = this.props;

const {
  updated,
  author: { identifier: ownerId },
  location,
  category: categories,
} = rawAd.entry;

```

# Lines exceeding max width of 80 characters
```
    1: SomeVeryLongUpperCaseConstant.someVeryLongCallExpression().some_very_long_member_expression;
    2: weNeedToReachTheEightyCharacterLimitXXXXXXXXXXXXXXXXX.someNode.childrenInAnArray[0];
    3: superSupersuperSupersuperSupersuperSupersuperSuperLong.exampleOfOrderOfGetterAndSetterReordered;
    4: superSupersuperSupersuperSupersuperSupersuperSuperLong.exampleOfOrderOfGetterAndSetterReordered[0];
    7:   findDOMNode(component.instance()).getElementsByClassName(styles.inner)[0].style.paddingRight,
   10: const { course, conflicts = [], index, scheduleId, studentId, something } = a.this.props;
   12: const { course2, conflicts2 = [], index2, scheduleId2, studentId2, something2 } = this.props;
```

