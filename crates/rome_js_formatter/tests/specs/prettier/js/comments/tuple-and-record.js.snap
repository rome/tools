---
source: crates/rome_formatter_test/src/snapshot_builder.rs
info: js/comments/tuple-and-record.js
---

# Input

```js
let object = // Comment
{
  key: 'value'
}

let record = // Comment
#{
  key: 'value'
}

let array = // Comment
[
  'value'
]

let tuple = // Comment
#[
  'value'
]

```


# Prettier differences

```diff
--- Prettier
+++ Rome
@@ -4,16 +4,16 @@
     key: "value",
   };
 
-let record =
-  // Comment
-  #{
-    key: "value",
-  };
+let record = // Comment
+  #;
+{
+  key: "value";
+}
 
 let array =
   // Comment
   ["value"];
 
-let tuple =
-  // Comment
-  #["value"];
+let tuple = // Comment
+  #;
+["value"];
```

# Output

```js
let object =
  // Comment
  {
    key: "value",
  };

let record = // Comment
  #;
{
  key: "value";
}

let array =
  // Comment
  ["value"];

let tuple = // Comment
  #;
["value"];
```

# Errors
```
tuple-and-record.js:7:2 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected an identifier but instead found '{'
  
    6 │ let record = // Comment
  > 7 │ #{
      │  ^
    8 │   key: 'value'
    9 │ }
  
  i Expected an identifier here
  
    6 │ let record = // Comment
  > 7 │ #{
      │  ^
    8 │   key: 'value'
    9 │ }
  
tuple-and-record.js:7:1 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Private names are only allowed on the left side of a 'in' expression
  
    6 │ let record = // Comment
  > 7 │ #{
      │ ^
    8 │   key: 'value'
    9 │ }
  
tuple-and-record.js:7:2 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Expected a semicolon or an implicit semicolon after a statement, but found none
  
    6 │ let record = // Comment
  > 7 │ #{
      │  ^
    8 │   key: 'value'
    9 │ }
  
  i An explicit or implicit semicolon is expected here...
  
    6 │ let record = // Comment
  > 7 │ #{
      │  ^
    8 │   key: 'value'
    9 │ }
  
  i ...Which is required to end this statement
  
    4 │ }
    5 │ 
  > 6 │ let record = // Comment
      │ ^^^^^^^^^^^^^^^^^^^^^^^
  > 7 │ #{
      │ ^
    8 │   key: 'value'
    9 │ }
  
tuple-and-record.js:17:2 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected an identifier but instead found '['
  
    16 │ let tuple = // Comment
  > 17 │ #[
       │  ^
    18 │   'value'
    19 │ ]
  
  i Expected an identifier here
  
    16 │ let tuple = // Comment
  > 17 │ #[
       │  ^
    18 │   'value'
    19 │ ]
  
tuple-and-record.js:17:1 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Private names are only allowed on the left side of a 'in' expression
  
    16 │ let tuple = // Comment
  > 17 │ #[
       │ ^
    18 │   'value'
    19 │ ]
  
tuple-and-record.js:17:2 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Expected a semicolon or an implicit semicolon after a statement, but found none
  
    16 │ let tuple = // Comment
  > 17 │ #[
       │  ^
    18 │   'value'
    19 │ ]
  
  i An explicit or implicit semicolon is expected here...
  
    16 │ let tuple = // Comment
  > 17 │ #[
       │  ^
    18 │   'value'
    19 │ ]
  
  i ...Which is required to end this statement
  
    14 │ ]
    15 │ 
  > 16 │ let tuple = // Comment
       │ ^^^^^^^^^^^^^^^^^^^^^^
  > 17 │ #[
       │ ^
    18 │   'value'
    19 │ ]
  

```


