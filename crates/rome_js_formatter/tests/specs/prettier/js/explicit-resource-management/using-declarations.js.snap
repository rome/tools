---
source: crates/rome_formatter_test/src/snapshot_builder.rs
info: js/explicit-resource-management/using-declarations.js
---

# Input

```js
{
  using /* 1 */ a = foo(), /* 2 */ b = foo()
}

for(using /* 1 */ a = foo(), /* 2 */ b = foo();;);

for(using /* 1 */ foo of bar());

```


# Prettier differences

```diff
--- Prettier
+++ Rome
@@ -1,8 +1,10 @@
 {
-  using /* 1 */ a = foo(),
-    /* 2 */ b = foo();
+  using; /* 1 */
+  (a = foo()), /* 2 */ (b = foo());
 }
 
-for (using /* 1 */ a = foo(), /* 2 */ b = foo(); ; );
+for(using /* 1 */ a = foo(), /* 2 */ b = foo();;
+)
 
-for (using /* 1 */ foo of bar());
+for(using /* 1 */ foo of bar()
+)
```

# Output

```js
{
  using; /* 1 */
  (a = foo()), /* 2 */ (b = foo());
}

for(using /* 1 */ a = foo(), /* 2 */ b = foo();;
)

for(using /* 1 */ foo of bar()
)
```

# Errors
```
using-declarations.js:2:17 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Expected a semicolon or an implicit semicolon after a statement, but found none
  
    1 │ {
  > 2 │   using /* 1 */ a = foo(), /* 2 */ b = foo()
      │                 ^
    3 │ }
    4 │ 
  
  i An explicit or implicit semicolon is expected here...
  
    1 │ {
  > 2 │   using /* 1 */ a = foo(), /* 2 */ b = foo()
      │                 ^
    3 │ }
    4 │ 
  
  i ...Which is required to end this statement
  
    1 │ {
  > 2 │   using /* 1 */ a = foo(), /* 2 */ b = foo()
      │   ^^^^^^^^^^^^^^^
    3 │ }
    4 │ 
  
using-declarations.js:5:19 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected `;` but instead found `a`
  
    3 │ }
    4 │ 
  > 5 │ for(using /* 1 */ a = foo(), /* 2 */ b = foo();;);
      │                   ^
    6 │ 
    7 │ for(using /* 1 */ foo of bar());
  
  i Remove a
  
using-declarations.js:5:48 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected an expression but instead found ';'
  
    3 │ }
    4 │ 
  > 5 │ for(using /* 1 */ a = foo(), /* 2 */ b = foo();;);
      │                                                ^
    6 │ 
    7 │ for(using /* 1 */ foo of bar());
  
  i Expected an expression here
  
    3 │ }
    4 │ 
  > 5 │ for(using /* 1 */ a = foo(), /* 2 */ b = foo();;);
      │                                                ^
    6 │ 
    7 │ for(using /* 1 */ foo of bar());
  
using-declarations.js:5:49 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected a statement but instead found ')'
  
    3 │ }
    4 │ 
  > 5 │ for(using /* 1 */ a = foo(), /* 2 */ b = foo();;);
      │                                                 ^
    6 │ 
    7 │ for(using /* 1 */ foo of bar());
  
  i Expected a statement here
  
    3 │ }
    4 │ 
  > 5 │ for(using /* 1 */ a = foo(), /* 2 */ b = foo();;);
      │                                                 ^
    6 │ 
    7 │ for(using /* 1 */ foo of bar());
  
using-declarations.js:7:19 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected `;` but instead found `foo`
  
    5 │ for(using /* 1 */ a = foo(), /* 2 */ b = foo();;);
    6 │ 
  > 7 │ for(using /* 1 */ foo of bar());
      │                   ^^^
    8 │ 
  
  i Remove foo
  
using-declarations.js:7:23 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected `;` but instead found `of`
  
    5 │ for(using /* 1 */ a = foo(), /* 2 */ b = foo();;);
    6 │ 
  > 7 │ for(using /* 1 */ foo of bar());
      │                       ^^
    8 │ 
  
  i Remove of
  
using-declarations.js:7:26 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected `)` but instead found `bar`
  
    5 │ for(using /* 1 */ a = foo(), /* 2 */ b = foo();;);
    6 │ 
  > 7 │ for(using /* 1 */ foo of bar());
      │                          ^^^
    8 │ 
  
  i Remove bar
  
using-declarations.js:7:31 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Expected a semicolon or an implicit semicolon after a statement, but found none
  
    5 │ for(using /* 1 */ a = foo(), /* 2 */ b = foo();;);
    6 │ 
  > 7 │ for(using /* 1 */ foo of bar());
      │                               ^
    8 │ 
  
  i An explicit or implicit semicolon is expected here...
  
    5 │ for(using /* 1 */ a = foo(), /* 2 */ b = foo();;);
    6 │ 
  > 7 │ for(using /* 1 */ foo of bar());
      │                               ^
    8 │ 
  
  i ...Which is required to end this statement
  
    5 │ for(using /* 1 */ a = foo(), /* 2 */ b = foo();;);
    6 │ 
  > 7 │ for(using /* 1 */ foo of bar());
      │                          ^^^^^^
    8 │ 
  

```


