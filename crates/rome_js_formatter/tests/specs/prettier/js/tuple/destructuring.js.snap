---
source: crates/rome_js_formatter/tests/prettier_tests.rs
expression: destructuring.js
---
# Input
```js
const [a, b] = #[1, 2];
assert(a === 1);
assert(b === 2);

const [a, ...rest] = #[1, 2, 3];
assert(a === 1);
assert(Array.isArray(rest));
assert(rest[0] === 2);
assert(rest[1] === 3);

```

# Output
```js
const [a, b] = #;
[1, 2];
assert(a === 1);
assert(b === 2);

const [a, ...rest] = #;
[1, 2, 3];
assert(a === 1);
assert(Array.isArray(rest));
assert(rest[0] === 2);
assert(rest[1] === 3);

```

# Errors
```
error[SyntaxError]: expected an identifier but instead found '['
  ┌─ destructuring.js:1:17
  │
1 │ const [a, b] = #[1, 2];
  │                 ^ Expected an identifier here

error[SyntaxError]: Private names are only allowed on the left side of a 'in' expression
  ┌─ destructuring.js:1:16
  │
1 │ const [a, b] = #[1, 2];
  │                ^

error[SyntaxError]: Expected a semicolon or an implicit semicolon after a statement, but found none
  ┌─ destructuring.js:1:17
  │
1 │ const [a, b] = #[1, 2];
  │ ----------------^ An explicit or implicit semicolon is expected here...
  │ │                
  │ ...Which is required to end this statement

error[SyntaxError]: expected an identifier but instead found '['
  ┌─ destructuring.js:5:23
  │
5 │ const [a, ...rest] = #[1, 2, 3];
  │                       ^ Expected an identifier here

error[SyntaxError]: Private names are only allowed on the left side of a 'in' expression
  ┌─ destructuring.js:5:22
  │
5 │ const [a, ...rest] = #[1, 2, 3];
  │                      ^

error[SyntaxError]: Expected a semicolon or an implicit semicolon after a statement, but found none
  ┌─ destructuring.js:5:23
  │
5 │ const [a, ...rest] = #[1, 2, 3];
  │ ----------------------^ An explicit or implicit semicolon is expected here...
  │ │                      
  │ ...Which is required to end this statement


```


