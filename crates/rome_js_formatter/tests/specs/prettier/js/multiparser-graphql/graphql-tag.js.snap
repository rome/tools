---
source: crates/rome_js_formatter/tests/prettier_tests.rs
---

# Input

```js
import gql from "graphql-tag";

const query = gql`
      {
    user(   id :   5  )  {
      firstName

      lastName
    }
  }
`;


// With interpolations:

gql`
query User {
  user(id:5){
    ...UserDetails
    ...Friends
  }
}

${USER_DETAILS_FRAGMENT}${FRIENDS_FRAGMENT}
`


// Skip if non-toplevel interpolation:

gql`
query User {
  user(id:${id}){ name }
}
`


// Skip if top-level interpolation within comment:

gql`
query User {
  user(id:5){ name }
}
#${test}
`


// Comment on last line:

gql`
query User {
  user(id:5){ name }
}
# comment`
// ` <-- editor syntax highlighting workaround


// Preserve up to one blank line between things and enforce linebreak between
// interpolations:

gql`
# comment
${one}${two}  ${three}
${four}

${five}
# comment
${six}

# comment
${seven}
# comment

${eight}

  # comment with trailing whitespace      


# blank line above this comment


`


// Interpolation directly before and after query:

gql`${one} query Test { test }${two}`


// Only interpolation:

gql`${test}`


// Only comment:

gql`# comment`
// ` <-- editor syntax highlighting workaround


// Only whitespace:

gql`   `


// Empty:

gql``


// Comments after other things:
// Currently, comments after interpolations are moved to the next line.
// We might want to keep them on the next line in the future.

gql`
  ${test} # comment

  query Test { # comment
    test # comment
  } # comment
  ${test} # comment
  ${test} # comment

  ${test} # comment

  # comment
  ${test} # comment
`


// Larger mixed test:

gql`



query User {
  test
}

    
	
${USER_DETAILS_FRAGMENT}

   # Comment    
   # that continues on a new line

    
   # and has a blank line in the middle

    ${FRIENDS_FRAGMENT}
  ${generateFragment({
     totally:  "a good idea"
    })}

${fragment}#comment

fragment another on User { name
}${ fragment }`
```


# Prettier differences

```diff
--- Prettier
+++ Rome
@@ -1,8 +1,8 @@
 import gql from "graphql-tag";
 
 const query = gql`
-  {
-    user(id: 5) {
+      {
+    user(   id :   5  )  {
       firstName
 
       lastName
@@ -13,15 +13,14 @@
 // With interpolations:
 
 gql`
-  query User {
-    user(id: 5) {
-      ...UserDetails
-      ...Friends
-    }
+query User {
+  user(id:5){
+    ...UserDetails
+    ...Friends
   }
+}
 
-  ${USER_DETAILS_FRAGMENT}
-  ${FRIENDS_FRAGMENT}
+${USER_DETAILS_FRAGMENT}${FRIENDS_FRAGMENT}
 `;
 
 // Skip if non-toplevel interpolation:
@@ -44,66 +43,54 @@
 // Comment on last line:
 
 gql`
-  query User {
-    user(id: 5) {
-      name
-    }
-  }
-  # comment
-`;
+query User {
+  user(id:5){ name }
+}
+# comment`;
 // ` <-- editor syntax highlighting workaround
 
 // Preserve up to one blank line between things and enforce linebreak between
 // interpolations:
 
 gql`
-  # comment
-  ${one}
-  ${two}
-  ${three}
-  ${four}
+# comment
+${one}${two}  ${three}
+${four}
 
-  ${five}
-  # comment
-  ${six}
+${five}
+# comment
+${six}
 
-  # comment
-  ${seven}
-  # comment
+# comment
+${seven}
+# comment
+
+${eight}
+
+  # comment with trailing whitespace      
 
-  ${eight}
 
-  # comment with trailing whitespace
+# blank line above this comment
+
 
-  # blank line above this comment
 `;
 
 // Interpolation directly before and after query:
 
-gql`
-  ${one}
-  query Test {
-    test
-  }
-  ${two}
-`;
+gql`${one} query Test { test }${two}`;
 
 // Only interpolation:
 
-gql`
-  ${test}
-`;
+gql`${test}`;
 
 // Only comment:
 
-gql`
-  # comment
-`;
+gql`# comment`;
 // ` <-- editor syntax highlighting workaround
 
 // Only whitespace:
 
-gql``;
+gql`   `;
 
 // Empty:
 
@@ -114,50 +101,46 @@
 // We might want to keep them on the next line in the future.
 
 gql`
-  ${test}
-  # comment
+  ${test} # comment
 
-  query Test {
-    # comment
+  query Test { # comment
     test # comment
   } # comment
-  ${test}
-  # comment
-  ${test}
-  # comment
+  ${test} # comment
+  ${test} # comment
 
-  ${test}
-  # comment
+  ${test} # comment
 
   # comment
-  ${test}
-  # comment
+  ${test} # comment
 `;
 
 // Larger mixed test:
 
 gql`
-  query User {
-    test
-  }
 
-  ${USER_DETAILS_FRAGMENT}
 
-  # Comment
-  # that continues on a new line
 
-  # and has a blank line in the middle
+query User {
+  test
+}
+
+    
+	
+${USER_DETAILS_FRAGMENT}
 
-  ${FRIENDS_FRAGMENT}
+   # Comment    
+   # that continues on a new line
+
+    
+   # and has a blank line in the middle
+
+    ${FRIENDS_FRAGMENT}
   ${generateFragment({
     totally: "a good idea",
   })}
 
-  ${fragment}
-  #comment
+${fragment}#comment
 
-  fragment another on User {
-    name
-  }
-  ${fragment}
-`;
+fragment another on User { name
+}${fragment}`;
```

# Output

```js
import gql from "graphql-tag";

const query = gql`
      {
    user(   id :   5  )  {
      firstName

      lastName
    }
  }
`;

// With interpolations:

gql`
query User {
  user(id:5){
    ...UserDetails
    ...Friends
  }
}

${USER_DETAILS_FRAGMENT}${FRIENDS_FRAGMENT}
`;

// Skip if non-toplevel interpolation:

gql`
query User {
  user(id:${id}){ name }
}
`;

// Skip if top-level interpolation within comment:

gql`
query User {
  user(id:5){ name }
}
#${test}
`;

// Comment on last line:

gql`
query User {
  user(id:5){ name }
}
# comment`;
// ` <-- editor syntax highlighting workaround

// Preserve up to one blank line between things and enforce linebreak between
// interpolations:

gql`
# comment
${one}${two}  ${three}
${four}

${five}
# comment
${six}

# comment
${seven}
# comment

${eight}

  # comment with trailing whitespace      


# blank line above this comment


`;

// Interpolation directly before and after query:

gql`${one} query Test { test }${two}`;

// Only interpolation:

gql`${test}`;

// Only comment:

gql`# comment`;
// ` <-- editor syntax highlighting workaround

// Only whitespace:

gql`   `;

// Empty:

gql``;

// Comments after other things:
// Currently, comments after interpolations are moved to the next line.
// We might want to keep them on the next line in the future.

gql`
  ${test} # comment

  query Test { # comment
    test # comment
  } # comment
  ${test} # comment
  ${test} # comment

  ${test} # comment

  # comment
  ${test} # comment
`;

// Larger mixed test:

gql`



query User {
  test
}

    
	
${USER_DETAILS_FRAGMENT}

   # Comment    
   # that continues on a new line

    
   # and has a blank line in the middle

    ${FRIENDS_FRAGMENT}
  ${generateFragment({
    totally: "a good idea",
  })}

${fragment}#comment

fragment another on User { name
}${fragment}`;
```



