---
source: crates/rome_js_formatter/tests/prettier_tests.rs
---

# Input

```js
// "ArrowFunctionExpression"
(() => {})``;

// "AssignmentExpression"
(b = c)``;

// "AwaitExpression"
async function f() {
  (await b)``;
}

// "BinaryExpression"
(b + c)``;

// "CallExpression"
b()``;

// "ClassExpression"
(class {})``;

// "ConditionalExpression"
(b ? c : d)``;

// "FunctionExpression"
(function() {})``;

// "LogicalExpression"
(b || c)``;

// "MemberExpression"
b.c``;

// "NewExpression"
(new B())``;

// "ObjectExpression"
({})``;

// "SequenceExpression"
(b, c)``;

// "TaggedTemplateExpression"
(``)``;

// "UnaryExpression"
(void b)``;

// "UpdateExpression"
(++b)``;

// "YieldExpression"
function* d() {
  (yield 1)``;
}
```


# Prettier differences

```diff
--- Prettier
+++ Rome
@@ -16,7 +16,7 @@
 b()``;
 
 // "ClassExpression"
-(class {}``);
+(class {})``;
 
 // "ConditionalExpression"
 (b ? c : d)``;
@@ -31,16 +31,16 @@
 b.c``;
 
 // "NewExpression"
-new B()``;
+(new B())``;
 
 // "ObjectExpression"
-({}``);
+({})``;
 
 // "SequenceExpression"
 (b, c)``;
 
 // "TaggedTemplateExpression"
-````;
+(``)``;
 
 // "UnaryExpression"
 (void b)``;
```

# Output

```js
// "ArrowFunctionExpression"
(() => {})``;

// "AssignmentExpression"
(b = c)``;

// "AwaitExpression"
async function f() {
  (await b)``;
}

// "BinaryExpression"
(b + c)``;

// "CallExpression"
b()``;

// "ClassExpression"
(class {})``;

// "ConditionalExpression"
(b ? c : d)``;

// "FunctionExpression"
(function () {})``;

// "LogicalExpression"
(b || c)``;

// "MemberExpression"
b.c``;

// "NewExpression"
(new B())``;

// "ObjectExpression"
({})``;

// "SequenceExpression"
(b, c)``;

// "TaggedTemplateExpression"
(``)``;

// "UnaryExpression"
(void b)``;

// "UpdateExpression"
(++b)``;

// "YieldExpression"
function* d() {
  (yield 1)``;
}
```



