---
source: crates/rome_js_formatter/tests/prettier_tests.rs
---

# Input

```js
const f = (argument1, argument2, argument3) =>
  (doSomethingWithArgument(argument1), doSomethingWithArgument(argument2),argument1);
(function(){
	return aLongIdentifierName, aLongIdentifierName, aLongIdentifierName, aLongIdentifierName;
});
aLongIdentifierName, aLongIdentifierName, aLongIdentifierName, aLongIdentifierName;
a.then(() => (aLongIdentifierName, aLongIdentifierName, aLongIdentifierName, aLongIdentifierName));
for (aLongIdentifierName = 0, aLongIdentifierName = 0, aLongIdentifierName = 0, aLongIdentifierName = 0; test; update) {}
(a = b ? c : function() { return 0; }),
  (a = b ? c : function() { return 0; }),
  (a = b ? c : function() { return 0; }),
  (a = b ? c : function() { return 0; }),
  (a = b ? c : function() { return 0; });
```


# Prettier differences

```diff
--- Prettier
+++ Rome
@@ -1,8 +1,8 @@
-const f = (argument1, argument2, argument3) => (
-  doSomethingWithArgument(argument1),
-  doSomethingWithArgument(argument2),
-  argument1
-);
+const f = (argument1, argument2, argument3) => (doSomethingWithArgument(
+  argument1,
+),
+doSomethingWithArgument(argument2),
+argument1);
 (function () {
   return (
     aLongIdentifierName,
@@ -16,17 +16,15 @@
   aLongIdentifierName,
   aLongIdentifierName;
 a.then(
-  () => (
-    aLongIdentifierName,
-    aLongIdentifierName,
-    aLongIdentifierName,
-    aLongIdentifierName
-  ),
+  () => (aLongIdentifierName,
+  aLongIdentifierName,
+  aLongIdentifierName,
+  aLongIdentifierName),
 );
 for (
-  aLongIdentifierName = 0,
-    aLongIdentifierName = 0,
-    aLongIdentifierName = 0,
+  (aLongIdentifierName = 0),
+    (aLongIdentifierName = 0),
+    (aLongIdentifierName = 0),
     aLongIdentifierName = 0;
   test;
   update
```

# Output

```js
const f = (argument1, argument2, argument3) => (doSomethingWithArgument(
  argument1,
),
doSomethingWithArgument(argument2),
argument1);
(function () {
  return (
    aLongIdentifierName,
    aLongIdentifierName,
    aLongIdentifierName,
    aLongIdentifierName
  );
});
aLongIdentifierName,
  aLongIdentifierName,
  aLongIdentifierName,
  aLongIdentifierName;
a.then(
  () => (aLongIdentifierName,
  aLongIdentifierName,
  aLongIdentifierName,
  aLongIdentifierName),
);
for (
  (aLongIdentifierName = 0),
    (aLongIdentifierName = 0),
    (aLongIdentifierName = 0),
    aLongIdentifierName = 0;
  test;
  update
) {}
(a = b
  ? c
  : function () {
      return 0;
    }),
  (a = b
    ? c
    : function () {
        return 0;
      }),
  (a = b
    ? c
    : function () {
        return 0;
      }),
  (a = b
    ? c
    : function () {
        return 0;
      }),
  (a = b
    ? c
    : function () {
        return 0;
      });
```



