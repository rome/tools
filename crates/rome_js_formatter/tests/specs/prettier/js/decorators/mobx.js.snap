---
source: crates/rome_js_formatter/tests/prettier_tests.rs
assertion_line: 144
expression: mobx.js

---
# Input
```js
import {observable} from "mobx";

@observer class OrderLine {
  @observable price:number = 0;
  @observable amount:number = 1;

  constructor(price) {
    this.price = price;
  }

  @computed get total() {
    return this.price * this.amount;
  }

  @action.bound setPrice(price) {
    this.price = price;
  }

  @computed
  get total() {
    return this.price * this.amount;
  }

  @action.bound
  setPrice(price) {
    this.price = price;
  }
  
  @computed @computed @computed @computed @computed @computed @computed get total() {
    return this.price * this.amount;
  }

  @action handleDecrease = (event: React.ChangeEvent<HTMLInputElement>) => this.count--;
  
  @action handleSomething = (event: React.ChangeEvent<HTMLInputElement>) => doSomething();
}

```

# Output
```js
import { observable } from "mobx";

@observer class OrderLine {
  @observable price:number = 0;
  @observable amount:number = 1;

  constructor(price) {
    this.price = price;
  }

  @computed get total() {
    return this.price * this.amount;
  }

  @action.bound setPrice(price) {
    this.price = price;
  }

  @computed
  get total() {
    return this.price * this.amount;
  }

  @action.bound
  setPrice(price) {
    this.price = price;
  }

  @computed @computed @computed @computed @computed @computed @computed get total() {
    return this.price * this.amount;
  }

  @action handleDecrease = (event: React.ChangeEvent<HTMLInputElement>) =>
    this.count--;

  @action handleSomething = (event: React.ChangeEvent<HTMLInputElement>) =>
    doSomething();
}

```

# Errors
```
error[SyntaxError]: return types can only be used in TypeScript files
  ┌─ mobx.js:4:20
  │
4 │   @observable price:number = 0;
  │                    ^^^^^^^ remove this type annotation

error[SyntaxError]: return types can only be used in TypeScript files
  ┌─ mobx.js:5:21
  │
5 │   @observable amount:number = 1;
  │                     ^^^^^^^ remove this type annotation

error[SyntaxError]: Type annotations are a TypeScript only feature. Convert your file to a TypeScript file or remove the syntax.
   ┌─ mobx.js:33:34
   │
33 │   @action handleDecrease = (event: React.ChangeEvent<HTMLInputElement>) => this.count--;
   │                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TypeScript only syntax

error[SyntaxError]: Type annotations are a TypeScript only feature. Convert your file to a TypeScript file or remove the syntax.
   ┌─ mobx.js:35:35
   │
35 │   @action handleSomething = (event: React.ChangeEvent<HTMLInputElement>) => doSomething();
   │                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TypeScript only syntax


```


