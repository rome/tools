---
source: crates/rome_js_formatter/tests/prettier_tests.rs
assertion_line: 181
expression: css-prop.js
---
# Input
```js
function SomeComponent (props) {
  // Create styles as if you're calling css and the class will be applied to the component
  return (<div css={`
    color: blue;
    font-size: 17 px;

    &:hover {
      color: green;
    }

    & .some-class {
      font-size: 20px;
    }
  `}>
    This will be blue until hovered.
    <div className="some-class">
      This font size will be 20px
    </div>
  </div>)
}

const TestComponent = ({ children, ...props }) => (
  <div css={`color: white; background: black`}>
    {children}
  </div>
);

```

# Output
```js
function SomeComponent(props) {
  // Create styles as if you're calling css and the class will be applied to the component
  return (
    <div css={`
    color: blue;
    font-size: 17 px;

    &:hover {
      color: green;
    }

    & .some-class {
      font-size: 20px;
    }
  `}>
      This will be blue until hovered.
      <div className="some-class">This font size will be 20px</div>
    </div>
  );
}

const TestComponent = ({ children, ...props }) => (
  <div css={`color: white; background: black`}>{children}</div>
);

```

# Lines exceeding max width of 80 characters
```
    2:   // Create styles as if you're calling css and the class will be applied to the component
```

