---
source: crates/rome_js_formatter/tests/prettier_tests.rs
---

# Input

```js
// from https://github.com/babel/babel/pull/13122/
expect(
  do {
    var bar = "foo";
    if (!bar) throw new Error(
      "unreachable"
    )
    bar;
  }
).toBe("foo");
expect(bar).toBe("foo");

var x = do {
  var bar = "foo";
  if (!bar) throw new Error(
    "unreachable"
  )
  bar;
};

expect(
  do {
    var bar = "foo";
    bar;
  }
).toBe("foo");
expect(bar).toBe("foo");

var x = do {
  var bar = "foo";
  bar;
};

expect(
  () => do {
    () => {
      var bar = "foo";
    };
    bar;
  }
).toThrow(ReferenceError);
```


# Prettier differences

```diff
--- Prettier
+++ Rome
@@ -1,24 +1,36 @@
 // from https://github.com/babel/babel/pull/13122/
-expect(do {
-  var bar = "foo";
-  if (!bar) throw new Error("unreachable");
-  bar;
-}).toBe("foo");
+expect(
+do {
+    var bar = "foo";
+    if (!bar) throw new Error(
+      "unreachable"
+    )
+    bar;
+  }
+)
+.toBe("foo")
 expect(bar).toBe("foo");
 
-var x = do {
+var x =
+do {
   var bar = "foo";
-  if (!bar) throw new Error("unreachable");
+  if (!bar) throw new Error(
+    "unreachable"
+  )
   bar;
 };
 
-expect(do {
-  var bar = "foo";
-  bar;
-}).toBe("foo");
+expect(
+do {
+    var bar = "foo";
+    bar;
+  }
+)
+.toBe("foo")
 expect(bar).toBe("foo");
 
-var x = do {
+var x =
+do {
   var bar = "foo";
   bar;
 };
@@ -28,6 +40,6 @@
     () => {
       var bar = "foo";
     };
-    bar;
-  },
-).toThrow(ReferenceError);
+bar;
+}
+).toThrow(ReferenceError)
```

# Output

```js
// from https://github.com/babel/babel/pull/13122/
expect(
do {
    var bar = "foo";
    if (!bar) throw new Error(
      "unreachable"
    )
    bar;
  }
)
.toBe("foo")
expect(bar).toBe("foo");

var x =
do {
  var bar = "foo";
  if (!bar) throw new Error(
    "unreachable"
  )
  bar;
};

expect(
do {
    var bar = "foo";
    bar;
  }
)
.toBe("foo")
expect(bar).toBe("foo");

var x =
do {
  var bar = "foo";
  bar;
};

expect(
  () => do {
    () => {
      var bar = "foo";
    };
bar;
}
).toThrow(ReferenceError)
```


# Errors
```
error[SyntaxError]: expected an expression but instead found 'do'
  ┌─ call-arguments.js:3:3
  │
3 │   do {
  │   ^^ Expected an expression here

error[SyntaxError]: expected `while` but instead found `)`
   ┌─ call-arguments.js:10:1
   │
10 │ ).toBe("foo");
   │ ^ unexpected

error[SyntaxError]: expected a statement but instead found '.toBe("foo")'
   ┌─ call-arguments.js:10:2
   │
10 │ ).toBe("foo");
   │  ^^^^^^^^^^^^ Expected a statement here

error[SyntaxError]: expected an expression, or an assignment but instead found 'do'
   ┌─ call-arguments.js:13:9
   │
13 │ var x = do {
   │         ^^ Expected an expression, or an assignment here

error[SyntaxError]: expected `while` but instead found `;`
   ┌─ call-arguments.js:19:2
   │
19 │ };
   │  ^ unexpected

error[SyntaxError]: expected an expression but instead found 'do'
   ┌─ call-arguments.js:22:3
   │
22 │   do {
   │   ^^ Expected an expression here

error[SyntaxError]: expected `while` but instead found `)`
   ┌─ call-arguments.js:26:1
   │
26 │ ).toBe("foo");
   │ ^ unexpected

error[SyntaxError]: expected a statement but instead found '.toBe("foo")'
   ┌─ call-arguments.js:26:2
   │
26 │ ).toBe("foo");
   │  ^^^^^^^^^^^^ Expected a statement here

error[SyntaxError]: expected an expression, or an assignment but instead found 'do'
   ┌─ call-arguments.js:29:9
   │
29 │ var x = do {
   │         ^^ Expected an expression, or an assignment here

error[SyntaxError]: expected `while` but instead found `;`
   ┌─ call-arguments.js:32:2
   │
32 │ };
   │  ^ unexpected

error[SyntaxError]: expected a function body, or an expression but instead found 'do'
   ┌─ call-arguments.js:35:9
   │
35 │   () => do {
   │         ^^ Expected a function body, or an expression here

error[SyntaxError]: expected `,` but instead found `(`
   ┌─ call-arguments.js:36:5
   │
36 │     () => {
   │     ^ unexpected

error[SyntaxError]: expected `,` but instead found `;`
   ┌─ call-arguments.js:38:6
   │
38 │     };
   │      ^ unexpected

error[SyntaxError]: expected a statement but instead found '}
).toThrow(ReferenceError)'
   ┌─ call-arguments.js:40:3
   │  
40 │ ┌   }
41 │ │ ).toThrow(ReferenceError);
   │ └─────────────────────────^ Expected a statement here


```


