---
source: crates/rome_formatter_test/src/snapshot_builder.rs
info: js/function-single-destructuring/tuple-and-record.js
---

# Input

```js
function StatelessFunctionalComponent1({
  isActive = true,
  onFiltersUpdated = () => null,
  onSelect = () => null,
  onSubmitAndDeselect = () => null,
  onCancel = () => null,
  searchFilters = null,
  title = '',
  items = [],
} = {}) {
}

function StatelessFunctionalComponent2({
  isActive = true,
  onFiltersUpdated = () => null,
  onSelect = () => null,
  onSubmitAndDeselect = () => null,
  onCancel = () => null,
  searchFilters = null,
  title = '',
  items = [],
} = #{}) {
}

function StatelessFunctionalComponent3([
  isActive = true,
  onFiltersUpdated = () => null,
  onSelect = () => null,
  onSubmitAndDeselect = () => null,
  onCancel = () => null,
  searchFilters = null,
  title = '',
  items = [],
] = []) {
}

function StatelessFunctionalComponent4([
  isActive = true,
  onFiltersUpdated = () => null,
  onSelect = () => null,
  onSubmitAndDeselect = () => null,
  onCancel = () => null,
  searchFilters = null,
  title = '',
  items = [],
] = #[]) {
}

```


# Prettier differences

```diff
--- Prettier
+++ Rome
@@ -16,9 +16,10 @@
   onSubmitAndDeselect = () => null,
   onCancel = () => null,
   searchFilters = null,
-  title = "",
+  title = '',
   items = [],
-} = #{}) {}
+} = #{}) {
+}
 
 function StatelessFunctionalComponent3([
   isActive = true,
@@ -38,6 +39,7 @@
   onSubmitAndDeselect = () => null,
   onCancel = () => null,
   searchFilters = null,
-  title = "",
+  title = '',
   items = [],
-] = #[]) {}
+] = #[]) {
+}
```

# Output

```js
function StatelessFunctionalComponent1({
  isActive = true,
  onFiltersUpdated = () => null,
  onSelect = () => null,
  onSubmitAndDeselect = () => null,
  onCancel = () => null,
  searchFilters = null,
  title = "",
  items = [],
} = {}) {}

function StatelessFunctionalComponent2({
  isActive = true,
  onFiltersUpdated = () => null,
  onSelect = () => null,
  onSubmitAndDeselect = () => null,
  onCancel = () => null,
  searchFilters = null,
  title = '',
  items = [],
} = #{}) {
}

function StatelessFunctionalComponent3([
  isActive = true,
  onFiltersUpdated = () => null,
  onSelect = () => null,
  onSubmitAndDeselect = () => null,
  onCancel = () => null,
  searchFilters = null,
  title = "",
  items = [],
] = []) {}

function StatelessFunctionalComponent4([
  isActive = true,
  onFiltersUpdated = () => null,
  onSelect = () => null,
  onSubmitAndDeselect = () => null,
  onCancel = () => null,
  searchFilters = null,
  title = '',
  items = [],
] = #[]) {
}
```

# Errors
```
tuple-and-record.js:22:6 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected an identifier but instead found '{'
  
    20 │   title = '',
    21 │   items = [],
  > 22 │ } = #{}) {
       │      ^
    23 │ }
    24 │ 
  
  i Expected an identifier here
  
    20 │   title = '',
    21 │   items = [],
  > 22 │ } = #{}) {
       │      ^
    23 │ }
    24 │ 
  
tuple-and-record.js:22:5 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Private names are only allowed on the left side of a 'in' expression
  
    20 │   title = '',
    21 │   items = [],
  > 22 │ } = #{}) {
       │     ^
    23 │ }
    24 │ 
  
tuple-and-record.js:22:6 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected `,` but instead found `{`
  
    20 │   title = '',
    21 │   items = [],
  > 22 │ } = #{}) {
       │      ^
    23 │ }
    24 │ 
  
  i Remove {
  
tuple-and-record.js:46:6 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected an identifier but instead found '['
  
    44 │   title = '',
    45 │   items = [],
  > 46 │ ] = #[]) {
       │      ^
    47 │ }
    48 │ 
  
  i Expected an identifier here
  
    44 │   title = '',
    45 │   items = [],
  > 46 │ ] = #[]) {
       │      ^
    47 │ }
    48 │ 
  
tuple-and-record.js:46:5 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Private names are only allowed on the left side of a 'in' expression
  
    44 │   title = '',
    45 │   items = [],
  > 46 │ ] = #[]) {
       │     ^
    47 │ }
    48 │ 
  
tuple-and-record.js:46:6 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected `,` but instead found `[`
  
    44 │   title = '',
    45 │   items = [],
  > 46 │ ] = #[]) {
       │      ^
    47 │ }
    48 │ 
  
  i Remove [
  

```


