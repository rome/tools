---
source: crates/rome_js_formatter/tests/prettier_tests.rs
---

# Input

```js
const formatData = pipe(
  zip,
  map(([ ref, data ]) => ({
    nodeId: ref.nodeId.toString(),
    ...attributeFromDataValue(ref.attributeId, data)
  })),
  groupBy(prop('nodeId')),
  map(mergeAll),
  values
);

export const setProp = y => ({
  ...y,
  a: 'very, very, very long very, very long text'
});

export const log = y => {
  console.log('very, very, very long very, very long text')
};
```


# Prettier differences

```diff
--- Prettier
+++ Rome
@@ -1,9 +1,11 @@
 const formatData = pipe(
   zip,
-  map(([ref, data]) => ({
-    nodeId: ref.nodeId.toString(),
-    ...attributeFromDataValue(ref.attributeId, data),
-  })),
+  map(
+    ([ref, data]) => ({
+      nodeId: ref.nodeId.toString(),
+      ...attributeFromDataValue(ref.attributeId, data),
+    }),
+  ),
   groupBy(prop("nodeId")),
   map(mergeAll),
   values,
```

# Output

```js
const formatData = pipe(
  zip,
  map(
    ([ref, data]) => ({
      nodeId: ref.nodeId.toString(),
      ...attributeFromDataValue(ref.attributeId, data),
    }),
  ),
  groupBy(prop("nodeId")),
  map(mergeAll),
  values,
);

export const setProp = (y) => ({
  ...y,
  a: "very, very, very long very, very long text",
});

export const log = (y) => {
  console.log("very, very, very long very, very long text");
};
```



