---
source: crates/rome_formatter_test/src/snapshot_builder.rs
info:
  test_file: js/module/arrow/params.js
---

# Input

```js
fooooooooooooooooooooooooooooooooooooooooooooooooooo(action => next =>
    dispatch(action),
);

foo(
  ({
    a,

    b
  }) => {}
);

foo(
  ({
    a,
    b

  }) => {}
);

foo(
  ({
    a,
    b
  }) => {}
);

foo(
  a,
  ({
    a,

    b
  }) => {}
)

foo(
  ({
    a,

    b
  }) => a
);

foo(
  ({
    a,
    b
  }) => a
);

foo(
  ({
    a,
    b

  }) => a
);

foo(
  ({
    a: {
      a,

      b
    }
  }) => {}
);

foo(
  ({
    a: {
      b: {
        c,

        d
      }
    }
  }) => {}
);

foo(
  ({
    a: {
      b: {
        c: {
          d,

          e
        }
      }
    }
  }) => {}
);

foo(
  ({
    a: {
      a,

      b
    }
  }) => a
);

foo(
  ({
    a: {
      b: {
        c,

        d
      }
    }
  }) => a
);

foo(
  ({
    a: {
      b: {
        c: {
          d,

          e
        }
      }
    }
  }) => a
);

foo(
  ([
    {
      a: {
        b: {
          c: {
            d,

            e
          }
        }
      }
    }
  ]) => {}
);

foo(
  ([
    ...{
      a: {
        b: {
          c: {
            d,

            e
          }
        }
      }
    }
  ]) => {}
);

foo(
  (
    n = {
      a: {
        b: {
          c: {
            d,

            e
          }
        }
      }
    }
  ) => {}
);

foo(
  ({
    x: [
      {
        a,

        b
      }
    ]
  }) => {}
);

foo(
  (
    a = [
      {
        a,

        b
      }
    ]
  ) => a
);

foo(
  ([
    [
      {
        a,

        b
      }
    ]
  ]) => {}
);

foo(
  ([
    [
      [
        [
          {
            a,
            b: {
              c,
              d: {
                e,

                f
              }
            }
          }
        ]
      ]
    ]
  ]) => {}
);

foo(
  (
    ...{
      a,

      b
    }
  ) => {}
);

foo(
  (
    ...[
      {
        a,

        b
      }
    ]
  ) => {}
);

foo(
  ([
    ...[
      {
        a,

        b
      }
    ]
  ]) => {}
);

foo(
  (
    a = [{
      a,

      b
    }]
  ) => {}
);

foo(
  (
    a = (({
      a,

      b
    }) => {})()
  ) => {}
);

foo(
  (
    a = f({
      a,

      b
    })
  ) => {}
);

foo(
  (
    a = ({
      a,

      b
    }) => {}
  ) => {}
);

foo(
  (
    a = 1 +
      f({
        a,

        b
      })
  ) => {}
);

```


=============================

# Outputs

## Output 1

-----
Indent style: Tab
Line width: 80
Quote style: Double Quotes
Quote properties: As needed
Trailing comma: All
Semicolons: Always
-----

```js
fooooooooooooooooooooooooooooooooooooooooooooooooooo(
	(action) => (next) => dispatch(action),
);

foo(
	({
		a,

		b,
	}) => {},
);

foo(({ a, b }) => {});

foo(({ a, b }) => {});

foo(
	a,
	({
		a,

		b,
	}) => {},
);

foo(
	({
		a,

		b,
	}) => a,
);

foo(({ a, b }) => a);

foo(({ a, b }) => a);

foo(
	({
		a: {
			a,

			b,
		},
	}) => {},
);

foo(
	({
		a: {
			b: {
				c,

				d,
			},
		},
	}) => {},
);

foo(
	({
		a: {
			b: {
				c: {
					d,

					e,
				},
			},
		},
	}) => {},
);

foo(
	({
		a: {
			a,

			b,
		},
	}) => a,
);

foo(
	({
		a: {
			b: {
				c,

				d,
			},
		},
	}) => a,
);

foo(
	({
		a: {
			b: {
				c: {
					d,

					e,
				},
			},
		},
	}) => a,
);

foo(
	([
		{
			a: {
				b: {
					c: {
						d,

						e,
					},
				},
			},
		},
	]) => {},
);

foo(
	([
		...{
			a: {
				b: {
					c: {
						d,

						e,
					},
				},
			},
		}
	]) => {},
);

foo(
	(
		n = {
			a: {
				b: {
					c: {
						d,

						e,
					},
				},
			},
		},
	) => {},
);

foo(
	({
		x: [
			{
				a,

				b,
			},
		],
	}) => {},
);

foo(
	(
		a = [
			{
				a,

				b,
			},
		],
	) => a,
);

foo(
	([
		[
			{
				a,

				b,
			},
		],
	]) => {},
);

foo(
	([
		[
			[
				[
					{
						a,
						b: {
							c,
							d: {
								e,

								f,
							},
						},
					},
				],
			],
		],
	]) => {},
);

foo(
	(
		...{
			a,

			b,
		}
	) => {},
);

foo(
	(
		...[
			{
				a,

				b,
			},
		]
	) => {},
);

foo(
	([
		...[
			{
				a,

				b,
			},
		]
	]) => {},
);

foo(
	(
		a = [
			{
				a,

				b,
			},
		],
	) => {},
);

foo(
	(
		a = (({
			a,

			b,
		}) => {})(),
	) => {},
);

foo(
	(
		a = f({
			a,

			b,
		}),
	) => {},
);

foo(
	(
		a = ({
			a,

			b,
		}) => {},
	) => {},
);

foo(
	(
		a = 1 +
			f({
				a,

				b,
			}),
	) => {},
);
```


