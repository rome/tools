---
source: crates/rome_js_formatter/tests/spec_test.rs
assertion_line: 259
expression: arrow_nested.js
---
# Input
Seq(typeDef.interface.groups).forEach(group =>
    Seq(group.members).forEach((member, memberName) =>
      markdownDoc(
        member.doc,
        { typePath: typePath.concat(memberName.slice(1)),
         signatures: member.signatures }
      )
    )
)

const promiseFromCallback = fn =>
    new Promise((resolve, reject) =>
      fn((err, result) => {
        if (err) return reject(err);
        return resolve(result);
      })
    );

runtimeAgent.getProperties(
    objectId,
    false, // ownProperties
    false, // accessorPropertiesOnly
    false, // generatePreview
    (error, properties, internalProperties) => {
      return 1
    },
);

=============================
# Outputs
## Output 1
-----
Indent style: Tab
Line width: 80
Quote style: Double Quotes
-----
Seq(typeDef.interface.groups).forEach(
	(group) =>
		Seq(group.members).forEach(
			(member, memberName) =>
				markdownDoc(member.doc, {
					typePath: typePath.concat(memberName.slice(1)),
					signatures: member.signatures,
				}),
		),
);

const promiseFromCallback = (fn) =>
	new Promise(
		(resolve, reject) =>
			fn((err, result) => {
				if (err) {
					return reject(err);
				}
				return resolve(result);
			}),
	);

runtimeAgent.getProperties(
	objectId,
	false, // ownProperties
	false, // accessorPropertiesOnly
	false, // generatePreview
	(error, properties, internalProperties) => {
		return 1;
	},
);

