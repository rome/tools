---
source: crates/rome_js_formatter/tests/spec_test.rs
assertion_line: 242
expression: parameter_quotes.ts
---
# Input
type X = {
    "member": string;
    // you stay like this
    "member-member": number,
    "4": number,
    "with_underscore": number
    "0197": number,
    "3n": number,
    "3p": number,
    "p9": number
    "_$_ff$_morning_not_quotes": number,
    "_$_ff$_morning_yes_quotes_@": number
};


interface Y {
    "member": string;
    // you stay like this
    "member-member": number,
    "4": number,
    "with_underscore": number
    "0197": number,
    "3n": number,
    "3p": number,
    "p9": number
    "_$_ff$_morning_not_quotes": number,
    "_$_ff$_morning_yes_quotes_@": number
}
=============================
# Outputs
## Output 1
-----
Indent style: Tab
Line width: 80
Quote style: Double Quotes
-----
type X = {
	member: string;
	// you stay like this
	"member-member": number;
	"4": number;
	with_underscore: number;
	"0197": number;
	"3n": number;
	"3p": number;
	p9: number;
	_$_ff$_morning_not_quotes: number;
	"_$_ff$_morning_yes_quotes_@": number;
};

interface Y {
	member: string;
	// you stay like this
	"member-member": number;
	"4": number;
	with_underscore: number;
	"0197": number;
	"3n": number;
	"3p": number;
	p9: number;
	_$_ff$_morning_not_quotes: number;
	"_$_ff$_morning_yes_quotes_@": number;
}
## Output 2
-----
Indent style: Tab
Line width: 80
Quote style: Single Quotes
-----
type X = {
	member: string;
	// you stay like this
	'member-member': number;
	'4': number;
	with_underscore: number;
	'0197': number;
	'3n': number;
	'3p': number;
	p9: number;
	_$_ff$_morning_not_quotes: number;
	'_$_ff$_morning_yes_quotes_@': number;
};

interface Y {
	member: string;
	// you stay like this
	'member-member': number;
	'4': number;
	with_underscore: number;
	'0197': number;
	'3n': number;
	'3p': number;
	p9: number;
	_$_ff$_morning_not_quotes: number;
	'_$_ff$_morning_yes_quotes_@': number;
}

