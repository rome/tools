---
source: crates/rome_js_analyze/tests/spec_tests.rs
expression: noDoubleEquals.jsx
---
# Input
```js
let a = <button
    className="SomeManyClasses"
    onClick={(event) => console.log(event.ctrlKey == true)}
    style="color: red"
>
    Some content
</button>;
```

# Diagnostics
```
noDoubleEquals.jsx:3:51 lint/correctness/noDoubleEquals  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use === instead of ==
  
    1 │ let a = <button
    2 │     className="SomeManyClasses"
  > 3 │     onClick={(event) => console.log(event.ctrlKey == true)}
      │                                                   ^^
    4 │     style="color: red"
    5 │ >
  
  i == is only allowed when comparing against null
  
    1 │ let a = <button
    2 │     className="SomeManyClasses"
  > 3 │     onClick={(event) => console.log(event.ctrlKey == true)}
      │                                                   ^^
    4 │     style="color: red"
    5 │ >
  
  i Using === may be unsafe if you are relying on type coercion
  
  i Safe fix: Suppress rule lint/correctness/noDoubleEquals
  
    1 1 │   let a = <button
    2 2 │       className="SomeManyClasses"
    3   │ - ····onClick={(event)·=>·console.log(event.ctrlKey·==·true)}
      3 │ + ····//·rome-ignore·lint/correctness/noDoubleEquals:·suppressed·
      4 │ + onClick={(event)·=>·console.log(event.ctrlKey·==·true)}
    4 5 │       style="color: red"
    5 6 │   >
  

```


