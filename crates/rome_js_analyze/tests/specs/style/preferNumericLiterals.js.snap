---
source: crates/rome_js_analyze/tests/spec_tests.rs
expression: preferNumericLiterals.js
---
# Input
```js
// Invalid
parseInt("111110111", 2) === 503;
parseInt(`111110111`, 2) === 503;
parseInt("767", 8) === 503;
parseInt("1F7", 16) === 503;
Number.parseInt("111110111", 2) === 503;
Number.parseInt("767", 8) === 503;
Number.parseInt("1F7", 16) === 503;

// Invalid, No fix
Number.parseInt("ZZZ", 16) === 503;

// Valid
parseInt(1);
parseInt(1, 3);
Number.parseInt(1);
Number.parseInt(1, 3);

0b111110111 === 503;
0o767 === 503;
0x1f7 === 503;

a[parseInt](1, 2);

parseInt(foo);
parseInt(foo, 2);
Number.parseInt(foo);
Number.parseInt(foo, 2);

```

# Diagnostics
```
preferNumericLiterals.js:2:1 lint/style/preferNumericLiterals  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use binary literals instead of parseInt()
  
    1 │ // Invalid
  > 2 │ parseInt("111110111", 2) === 503;
      │ ^^^^^^^^^^^^^^^^^^^^^^^^
    3 │ parseInt(`111110111`, 2) === 503;
    4 │ parseInt("767", 8) === 503;
  
  i Safe fix: Replace with binary literals
  
     1  1 │   // Invalid
     2    │ - parseInt("111110111",·2)·===·503;
        2 │ + 0b111110111·===·503;
     3  3 │   parseInt(`111110111`, 2) === 503;
     4  4 │   parseInt("767", 8) === 503;
  

```

```
preferNumericLiterals.js:3:1 lint/style/preferNumericLiterals  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use binary literals instead of parseInt()
  
    1 │ // Invalid
    2 │ parseInt("111110111", 2) === 503;
  > 3 │ parseInt(`111110111`, 2) === 503;
      │ ^^^^^^^^^^^^^^^^^^^^^^^^
    4 │ parseInt("767", 8) === 503;
    5 │ parseInt("1F7", 16) === 503;
  
  i Safe fix: Replace with binary literals
  
     1  1 │   // Invalid
     2  2 │   parseInt("111110111", 2) === 503;
     3    │ - parseInt(`111110111`,·2)·===·503;
        3 │ + 0b1111011·===·503;
     4  4 │   parseInt("767", 8) === 503;
     5  5 │   parseInt("1F7", 16) === 503;
  

```

```
preferNumericLiterals.js:4:1 lint/style/preferNumericLiterals  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use octal literals instead of parseInt()
  
    2 │ parseInt("111110111", 2) === 503;
    3 │ parseInt(`111110111`, 2) === 503;
  > 4 │ parseInt("767", 8) === 503;
      │ ^^^^^^^^^^^^^^^^^^
    5 │ parseInt("1F7", 16) === 503;
    6 │ Number.parseInt("111110111", 2) === 503;
  
  i Safe fix: Replace with octal literals
  
     2  2 │   parseInt("111110111", 2) === 503;
     3  3 │   parseInt(`111110111`, 2) === 503;
     4    │ - parseInt("767",·8)·===·503;
        4 │ + 0o767·===·503;
     5  5 │   parseInt("1F7", 16) === 503;
     6  6 │   Number.parseInt("111110111", 2) === 503;
  

```

```
preferNumericLiterals.js:5:1 lint/style/preferNumericLiterals  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use hexadecimal literals instead of parseInt()
  
    3 │ parseInt(`111110111`, 2) === 503;
    4 │ parseInt("767", 8) === 503;
  > 5 │ parseInt("1F7", 16) === 503;
      │ ^^^^^^^^^^^^^^^^^^^
    6 │ Number.parseInt("111110111", 2) === 503;
    7 │ Number.parseInt("767", 8) === 503;
  
  i Safe fix: Replace with hexadecimal literals
  
     3  3 │   parseInt(`111110111`, 2) === 503;
     4  4 │   parseInt("767", 8) === 503;
     5    │ - parseInt("1F7",·16)·===·503;
        5 │ + 0x1F7·===·503;
     6  6 │   Number.parseInt("111110111", 2) === 503;
     7  7 │   Number.parseInt("767", 8) === 503;
  

```

```
preferNumericLiterals.js:6:1 lint/style/preferNumericLiterals  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use binary literals instead of parseInt()
  
    4 │ parseInt("767", 8) === 503;
    5 │ parseInt("1F7", 16) === 503;
  > 6 │ Number.parseInt("111110111", 2) === 503;
      │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    7 │ Number.parseInt("767", 8) === 503;
    8 │ Number.parseInt("1F7", 16) === 503;
  
  i Safe fix: Replace with binary literals
  
     4  4 │   parseInt("767", 8) === 503;
     5  5 │   parseInt("1F7", 16) === 503;
     6    │ - Number.parseInt("111110111",·2)·===·503;
        6 │ + 0b111110111·===·503;
     7  7 │   Number.parseInt("767", 8) === 503;
     8  8 │   Number.parseInt("1F7", 16) === 503;
  

```

```
preferNumericLiterals.js:7:1 lint/style/preferNumericLiterals  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use octal literals instead of parseInt()
  
    5 │ parseInt("1F7", 16) === 503;
    6 │ Number.parseInt("111110111", 2) === 503;
  > 7 │ Number.parseInt("767", 8) === 503;
      │ ^^^^^^^^^^^^^^^^^^^^^^^^^
    8 │ Number.parseInt("1F7", 16) === 503;
    9 │ 
  
  i Safe fix: Replace with octal literals
  
     5  5 │   parseInt("1F7", 16) === 503;
     6  6 │   Number.parseInt("111110111", 2) === 503;
     7    │ - Number.parseInt("767",·8)·===·503;
        7 │ + 0o767·===·503;
     8  8 │   Number.parseInt("1F7", 16) === 503;
     9  9 │   
  

```

```
preferNumericLiterals.js:8:1 lint/style/preferNumericLiterals  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use hexadecimal literals instead of parseInt()
  
     6 │ Number.parseInt("111110111", 2) === 503;
     7 │ Number.parseInt("767", 8) === 503;
   > 8 │ Number.parseInt("1F7", 16) === 503;
       │ ^^^^^^^^^^^^^^^^^^^^^^^^^^
     9 │ 
    10 │ // Invalid, No fix
  
  i Safe fix: Replace with hexadecimal literals
  
     6  6 │   Number.parseInt("111110111", 2) === 503;
     7  7 │   Number.parseInt("767", 8) === 503;
     8    │ - Number.parseInt("1F7",·16)·===·503;
        8 │ + 0x1F7·===·503;
     9  9 │   
    10 10 │   // Invalid, No fix
  

```

```
preferNumericLiterals.js:11:1 lint/style/preferNumericLiterals ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use hexadecimal literals instead of parseInt()
  
    10 │ // Invalid, No fix
  > 11 │ Number.parseInt("ZZZ", 16) === 503;
       │ ^^^^^^^^^^^^^^^^^^^^^^^^^^
    12 │ 
    13 │ // Valid
  

```


