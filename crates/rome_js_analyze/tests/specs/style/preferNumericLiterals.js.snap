---
source: crates/rome_js_analyze/tests/spec_tests.rs
expression: preferNumericLiterals.js
---
# Input
```js
// Invalid
parseInt("111110111", 2);
parseInt(`111110111`, 2);
parseInt("767", 8);
parseInt("1F7", 16);

Number.parseInt("111110111", 2);
Number.parseInt("767", 8);
Number.parseInt("1F7", 16);

Number["parseInt"]("1F7", 16);
Number['parseInt']("1F7", 16);
Number[`parseInt`]("1F7", 16);

// Invalid, No fix
Number.parseInt("ZZZ", 16);

// Valid
parseInt(1);
parseInt(1, 3);
Number.parseInt(1);
Number.parseInt(1, 3);

0b111110111;
0o767;
0x1f7;

a[parseInt](1, 2);

parseInt(foo);
parseInt(foo, 2);
Number.parseInt(foo);
Number.parseInt(foo, 2);

```

# Diagnostics
```
preferNumericLiterals.js:2:1 lint/style/preferNumericLiterals  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use binary literals instead of parseInt()
  
    1 │ // Invalid
  > 2 │ parseInt("111110111", 2);
      │ ^^^^^^^^^^^^^^^^^^^^^^^^
    3 │ parseInt(`111110111`, 2);
    4 │ parseInt("767", 8);
  
  i Safe fix: Replace with binary literals
  
     1  1 │   // Invalid
     2    │ - parseInt("111110111",·2);
        2 │ + 0b111110111;
     3  3 │   parseInt(`111110111`, 2);
     4  4 │   parseInt("767", 8);
  

```

```
preferNumericLiterals.js:3:1 lint/style/preferNumericLiterals  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use binary literals instead of parseInt()
  
    1 │ // Invalid
    2 │ parseInt("111110111", 2);
  > 3 │ parseInt(`111110111`, 2);
      │ ^^^^^^^^^^^^^^^^^^^^^^^^
    4 │ parseInt("767", 8);
    5 │ parseInt("1F7", 16);
  
  i Safe fix: Replace with binary literals
  
     1  1 │   // Invalid
     2  2 │   parseInt("111110111", 2);
     3    │ - parseInt(`111110111`,·2);
        3 │ + 0b111110111;
     4  4 │   parseInt("767", 8);
     5  5 │   parseInt("1F7", 16);
  

```

```
preferNumericLiterals.js:4:1 lint/style/preferNumericLiterals  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use octal literals instead of parseInt()
  
    2 │ parseInt("111110111", 2);
    3 │ parseInt(`111110111`, 2);
  > 4 │ parseInt("767", 8);
      │ ^^^^^^^^^^^^^^^^^^
    5 │ parseInt("1F7", 16);
    6 │ 
  
  i Safe fix: Replace with octal literals
  
     2  2 │   parseInt("111110111", 2);
     3  3 │   parseInt(`111110111`, 2);
     4    │ - parseInt("767",·8);
        4 │ + 0o767;
     5  5 │   parseInt("1F7", 16);
     6  6 │   
  

```

```
preferNumericLiterals.js:5:1 lint/style/preferNumericLiterals  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use hexadecimal literals instead of parseInt()
  
    3 │ parseInt(`111110111`, 2);
    4 │ parseInt("767", 8);
  > 5 │ parseInt("1F7", 16);
      │ ^^^^^^^^^^^^^^^^^^^
    6 │ 
    7 │ Number.parseInt("111110111", 2);
  
  i Safe fix: Replace with hexadecimal literals
  
     3  3 │   parseInt(`111110111`, 2);
     4  4 │   parseInt("767", 8);
     5    │ - parseInt("1F7",·16);
        5 │ + 0x1F7;
     6  6 │   
     7  7 │   Number.parseInt("111110111", 2);
  

```

```
preferNumericLiterals.js:7:1 lint/style/preferNumericLiterals  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use binary literals instead of parseInt()
  
    5 │ parseInt("1F7", 16);
    6 │ 
  > 7 │ Number.parseInt("111110111", 2);
      │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    8 │ Number.parseInt("767", 8);
    9 │ Number.parseInt("1F7", 16);
  
  i Safe fix: Replace with binary literals
  
     5  5 │   parseInt("1F7", 16);
     6  6 │   
     7    │ - Number.parseInt("111110111",·2);
        7 │ + 0b111110111;
     8  8 │   Number.parseInt("767", 8);
     9  9 │   Number.parseInt("1F7", 16);
  

```

```
preferNumericLiterals.js:8:1 lint/style/preferNumericLiterals  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use octal literals instead of parseInt()
  
     7 │ Number.parseInt("111110111", 2);
   > 8 │ Number.parseInt("767", 8);
       │ ^^^^^^^^^^^^^^^^^^^^^^^^^
     9 │ Number.parseInt("1F7", 16);
    10 │ 
  
  i Safe fix: Replace with octal literals
  
     6  6 │   
     7  7 │   Number.parseInt("111110111", 2);
     8    │ - Number.parseInt("767",·8);
        8 │ + 0o767;
     9  9 │   Number.parseInt("1F7", 16);
    10 10 │   
  

```

```
preferNumericLiterals.js:9:1 lint/style/preferNumericLiterals  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use hexadecimal literals instead of parseInt()
  
     7 │ Number.parseInt("111110111", 2);
     8 │ Number.parseInt("767", 8);
   > 9 │ Number.parseInt("1F7", 16);
       │ ^^^^^^^^^^^^^^^^^^^^^^^^^^
    10 │ 
    11 │ Number["parseInt"]("1F7", 16);
  
  i Safe fix: Replace with hexadecimal literals
  
     7  7 │   Number.parseInt("111110111", 2);
     8  8 │   Number.parseInt("767", 8);
     9    │ - Number.parseInt("1F7",·16);
        9 │ + 0x1F7;
    10 10 │   
    11 11 │   Number["parseInt"]("1F7", 16);
  

```

```
preferNumericLiterals.js:11:1 lint/style/preferNumericLiterals  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use hexadecimal literals instead of parseInt()
  
     9 │ Number.parseInt("1F7", 16);
    10 │ 
  > 11 │ Number["parseInt"]("1F7", 16);
       │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    12 │ Number['parseInt']("1F7", 16);
    13 │ Number[`parseInt`]("1F7", 16);
  
  i Safe fix: Replace with hexadecimal literals
  
     9  9 │   Number.parseInt("1F7", 16);
    10 10 │   
    11    │ - Number["parseInt"]("1F7",·16);
       11 │ + 0x1F7;
    12 12 │   Number['parseInt']("1F7", 16);
    13 13 │   Number[`parseInt`]("1F7", 16);
  

```

```
preferNumericLiterals.js:12:1 lint/style/preferNumericLiterals  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use hexadecimal literals instead of parseInt()
  
    11 │ Number["parseInt"]("1F7", 16);
  > 12 │ Number['parseInt']("1F7", 16);
       │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    13 │ Number[`parseInt`]("1F7", 16);
    14 │ 
  
  i Safe fix: Replace with hexadecimal literals
  
    10 10 │   
    11 11 │   Number["parseInt"]("1F7", 16);
    12    │ - Number['parseInt']("1F7",·16);
       12 │ + 0x1F7;
    13 13 │   Number[`parseInt`]("1F7", 16);
    14 14 │   
  

```

```
preferNumericLiterals.js:13:1 lint/style/preferNumericLiterals  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use hexadecimal literals instead of parseInt()
  
    11 │ Number["parseInt"]("1F7", 16);
    12 │ Number['parseInt']("1F7", 16);
  > 13 │ Number[`parseInt`]("1F7", 16);
       │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    14 │ 
    15 │ // Invalid, No fix
  
  i Safe fix: Replace with hexadecimal literals
  
    11 11 │   Number["parseInt"]("1F7", 16);
    12 12 │   Number['parseInt']("1F7", 16);
    13    │ - Number[`parseInt`]("1F7",·16);
       13 │ + 0x1F7;
    14 14 │   
    15 15 │   // Invalid, No fix
  

```

```
preferNumericLiterals.js:16:1 lint/style/preferNumericLiterals ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use hexadecimal literals instead of parseInt()
  
    15 │ // Invalid, No fix
  > 16 │ Number.parseInt("ZZZ", 16);
       │ ^^^^^^^^^^^^^^^^^^^^^^^^^^
    17 │ 
    18 │ // Valid
  

```


