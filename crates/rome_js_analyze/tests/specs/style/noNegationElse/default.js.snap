---
source: crates/rome_js_analyze/tests/spec_tests.rs
expression: default.js
---
# Input
```js
// valid
if (!true) {
	consequent;
}
true ? consequent : alternate;
// invalid
if (!true) {
	consequent;
} else {
	alternate;
}
!condition ? consequent : alternate;

let a = !test ? c : d;
```

# Diagnostics
```
default.js:7:1 lint/style/noNegationElse  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Invert blocks when performing a negation test.
  
     5 │ true ? consequent : alternate;
     6 │ // invalid
   > 7 │ if (!true) {
       │ ^^^^^^^^^^^^
   > 8 │ 	consequent;
   > 9 │ } else {
  > 10 │ 	alternate;
  > 11 │ }
       │ ^
    12 │ !condition ? consequent : alternate;
    13 │ 
  
  i Suggested fix: Exchange alternate and consequent of the node
  
     5  5 │   true·?·consequent·:·alternate;
     6  6 │   //·invalid
     7    │ - if·(!true)·{
     8    │ - → consequent;
        7 │ + if·(true)·{
        8 │ + → alternate;
     9  9 │   }·else·{
    10    │ - → alternate;
       10 │ + → consequent;
    11 11 │   }
    12 12 │   !condition·?·consequent·:·alternate;
  

```

```
default.js:12:1 lint/style/noNegationElse  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Invert blocks when performing a negation test.
  
    10 │ 	alternate;
    11 │ }
  > 12 │ !condition ? consequent : alternate;
       │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    13 │ 
    14 │ let a = !test ? c : d;
  
  i Suggested fix: Exchange alternate and consequent of the node
  
    10 10 │   → alternate;
    11 11 │   }
    12    │ - !condition·?·consequent·:·alternate;
       12 │ + condition·?·alternate·:·consequent;
    13 13 │   
    14 14 │   let·a·=·!test·?·c·:·d;
  

```

```
default.js:14:9 lint/style/noNegationElse  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Invert blocks when performing a negation test.
  
    12 │ !condition ? consequent : alternate;
    13 │ 
  > 14 │ let a = !test ? c : d;
       │         ^^^^^^^^^^^^^
  
  i Suggested fix: Exchange alternate and consequent of the node
  
    12 12 │   !condition·?·consequent·:·alternate;
    13 13 │   
    14    │ - let·a·=·!test·?·c·:·d;
       14 │ + let·a·=·test·?·d·:·c;
  

```


