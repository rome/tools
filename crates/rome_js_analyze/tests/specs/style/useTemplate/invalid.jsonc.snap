---
source: crates/rome_js_analyze/tests/spec_tests.rs
expression: invalid.jsonc
---
# Input
```js
const foo = 'bar';
```

# Input
```js
console.log(foo + 'baz');
```

# Diagnostics
```
invalid.jsonc:1:13 lint/style/useTemplate  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Template literals are preferred over string concatenation.
  
  > 1 │ console.log(foo + 'baz');
      │             ^^^^^^^^^^^
  
  i Suggested fix: Use a TemplateLiteral.
  
  - console.log(foo·+·'baz');
  + console.log(`${foo}baz`);
  

```

# Input
```js
console.log(1 * 2 + 'foo');
```

# Diagnostics
```
invalid.jsonc:1:13 lint/style/useTemplate  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Template literals are preferred over string concatenation.
  
  > 1 │ console.log(1 * 2 + 'foo');
      │             ^^^^^^^^^^^^^
  
  i Suggested fix: Use a TemplateLiteral.
  
  - console.log(1·*·2·+·'foo');
  + console.log(`${1·*·2}foo`);
  

```

# Input
```js
console.log(1 + 'foo' + 2 + 'bar' + 'baz' + 3);
```

# Diagnostics
```
invalid.jsonc:1:13 lint/style/useTemplate  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Template literals are preferred over string concatenation.
  
  > 1 │ console.log(1 + 'foo' + 2 + 'bar' + 'baz' + 3);
      │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Suggested fix: Use a TemplateLiteral.
  
  - console.log(1·+·'foo'·+·2·+·'bar'·+·'baz'·+·3);
  + console.log(`${1}foo${2}barbaz${3}`);
  

```

# Input
```js
console.log((1 + 'foo') * 2);
```

# Diagnostics
```
invalid.jsonc:1:14 lint/style/useTemplate  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Template literals are preferred over string concatenation.
  
  > 1 │ console.log((1 + 'foo') * 2);
      │              ^^^^^^^^^
  
  i Suggested fix: Use a TemplateLiteral.
  
  - console.log((1·+·'foo')·*·2);
  + console.log((`${1}foo`)·*·2);
  

```

# Input
```js
console.log(1 * (2 + 'foo') + 'bar');
```

# Diagnostics
```
invalid.jsonc:1:13 lint/style/useTemplate  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Template literals are preferred over string concatenation.
  
  > 1 │ console.log(1 * (2 + 'foo') + 'bar');
      │             ^^^^^^^^^^^^^^^^^^^^^^^
  
  i Suggested fix: Use a TemplateLiteral.
  
  - console.log(1·*·(2·+·'foo')·+·'bar');
  + console.log(`${1·*·(2·+·'foo')}bar`);
  

```

```
invalid.jsonc:1:18 lint/style/useTemplate  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Template literals are preferred over string concatenation.
  
  > 1 │ console.log(1 * (2 + 'foo') + 'bar');
      │                  ^^^^^^^^^
  
  i Suggested fix: Use a TemplateLiteral.
  
  - console.log(1·*·(2·+·'foo')·+·'bar');
  + console.log(1·*·(`${2}foo`)·+·'bar');
  

```

# Input
```js
console.log('foo' + 1);
```

# Diagnostics
```
invalid.jsonc:1:13 lint/style/useTemplate  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Template literals are preferred over string concatenation.
  
  > 1 │ console.log('foo' + 1);
      │             ^^^^^^^^^
  
  i Suggested fix: Use a TemplateLiteral.
  
  - console.log('foo'·+·1);
  + console.log(`foo${1}`);
  

```

# Input
```js
console.log('foo' + `bar${`baz${'bat' + 'bam'}`}` + 'boo');
```

# Diagnostics
```
invalid.jsonc:1:13 lint/style/useTemplate  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Template literals are preferred over string concatenation.
  
  > 1 │ console.log('foo' + `bar${`baz${'bat' + 'bam'}`}` + 'boo');
      │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Suggested fix: Use a TemplateLiteral.
  
  - console.log('foo'·+·`bar${`baz${'bat'·+·'bam'}`}`·+·'boo');
  + console.log(`foobarbaz${'bat'·+·'bam'}boo`);
  

```

# Input
```js
console.log('foo' + 1 + 2);
```

# Diagnostics
```
invalid.jsonc:1:13 lint/style/useTemplate  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Template literals are preferred over string concatenation.
  
  > 1 │ console.log('foo' + 1 + 2);
      │             ^^^^^^^^^^^^^
  
  i Suggested fix: Use a TemplateLiteral.
  
  - console.log('foo'·+·1·+·2);
  + console.log(`foo${1}${2}`);
  

```

# Input
```js
1 + '2' - 3;
```

# Diagnostics
```
invalid.jsonc:1:1 lint/style/useTemplate  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Template literals are preferred over string concatenation.
  
  > 1 │ 1 + '2' - 3;
      │ ^^^^^^^
  
  i Suggested fix: Use a TemplateLiteral.
  
  - 1·+·'2'·-·3;
  + `${1}2`·-·3;
  

```

# Input
```js
foo() + ' bar';
```

# Diagnostics
```
invalid.jsonc:1:1 lint/style/useTemplate  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Template literals are preferred over string concatenation.
  
  > 1 │ foo() + ' bar';
      │ ^^^^^^^^^^^^^^
  
  i Suggested fix: Use a TemplateLiteral.
  
  - foo()·+·'·bar';
  + `${foo()}·bar`;
  

```

# Input
```js
1 * /**leading*/'foo'    /**trailing */                   + 'bar'
```

# Diagnostics
```
invalid.jsonc:1:1 lint/style/useTemplate  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Template literals are preferred over string concatenation.
  
  > 1 │ 1 * /**leading*/'foo'    /**trailing */                   + 'bar'
      │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Suggested fix: Use a TemplateLiteral.
  
  - 1·*·/**leading*/'foo'····/**trailing·*/···················+·'bar'
  + `${1·*·/**leading*/'foo'····/**trailing·*/}bar`
  

```

# Input
```js
console.log('${foo.' + bar + '.baz}');
```

# Diagnostics
```
invalid.jsonc:1:13 lint/style/useTemplate  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Template literals are preferred over string concatenation.
  
  > 1 │ console.log('${foo.' + bar + '.baz}');
      │             ^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Suggested fix: Use a TemplateLiteral.
  
  - console.log('${foo.'·+·bar·+·'.baz}');
  + console.log(`\${foo.${bar}.baz}`);
  

```

# Input
```js
console.log('foo: ${bar.' + baz + '.bat}');
```

# Diagnostics
```
invalid.jsonc:1:13 lint/style/useTemplate  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Template literals are preferred over string concatenation.
  
  > 1 │ console.log('foo: ${bar.' + baz + '.bat}');
      │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Suggested fix: Use a TemplateLiteral.
  
  - console.log('foo:·${bar.'·+·baz·+·'.bat}');
  + console.log(`foo:·\${bar.${baz}.bat}`);
  

```

# Input
```js
console.log('foo: `bar.' + baz + '.bat}');
```

# Diagnostics
```
invalid.jsonc:1:13 lint/style/useTemplate  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Template literals are preferred over string concatenation.
  
  > 1 │ console.log('foo: `bar.' + baz + '.bat}');
      │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Suggested fix: Use a TemplateLiteral.
  
  - console.log('foo:·`bar.'·+·baz·+·'.bat}');
  + console.log(`foo:·\`bar.${baz}.bat}`);
  

```

# Input
```js
console.log('${foo}: `bar.' + baz + '.bat}');
```

# Diagnostics
```
invalid.jsonc:1:13 lint/style/useTemplate  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Template literals are preferred over string concatenation.
  
  > 1 │ console.log('${foo}: `bar.' + baz + '.bat}');
      │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Suggested fix: Use a TemplateLiteral.
  
  - console.log('${foo}:·`bar.'·+·baz·+·'.bat}');
  + console.log(`\${foo}:·\`bar.${baz}.bat}`);
  

```

# Input
```js
console.log('foo: ${bar.' + baz + '.bat}');
```

# Diagnostics
```
invalid.jsonc:1:13 lint/style/useTemplate  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Template literals are preferred over string concatenation.
  
  > 1 │ console.log('foo: ${bar.' + baz + '.bat}');
      │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Suggested fix: Use a TemplateLiteral.
  
  - console.log('foo:·${bar.'·+·baz·+·'.bat}');
  + console.log(`foo:·\${bar.${baz}.bat}`);
  

```

# Input
```js
console.log('foo: `bar.' + baz + '.bat}');
```

# Diagnostics
```
invalid.jsonc:1:13 lint/style/useTemplate  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Template literals are preferred over string concatenation.
  
  > 1 │ console.log('foo: `bar.' + baz + '.bat}');
      │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Suggested fix: Use a TemplateLiteral.
  
  - console.log('foo:·`bar.'·+·baz·+·'.bat}');
  + console.log(`foo:·\`bar.${baz}.bat}`);
  

```

# Input
```js
console.log('foo: \${bar.' + baz + '.bat}');
```

# Diagnostics
```
invalid.jsonc:1:13 lint/style/useTemplate  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Template literals are preferred over string concatenation.
  
  > 1 │ console.log('foo: \${bar.' + baz + '.bat}');
      │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Suggested fix: Use a TemplateLiteral.
  
  - console.log('foo:·\${bar.'·+·baz·+·'.bat}');
  + console.log(`foo:·\${bar.${baz}.bat}`);
  

```

# Input
```js
console.log('foo: \${bar.' + baz + '.bat}');
```

# Diagnostics
```
invalid.jsonc:1:13 lint/style/useTemplate  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Template literals are preferred over string concatenation.
  
  > 1 │ console.log('foo: \${bar.' + baz + '.bat}');
      │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Suggested fix: Use a TemplateLiteral.
  
  - console.log('foo:·\${bar.'·+·baz·+·'.bat}');
  + console.log(`foo:·\${bar.${baz}.bat}`);
  

```


