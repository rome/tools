---
source: crates/rome_js_analyze/tests/spec_tests.rs
expression: JsTryStatement.js
---
# Input
```js
function JsTryStatement1() {
    try {
        tryBlock();
        return;
    } catch (err) {
        catchClause();
        return;
    }

    afterTryCatchReturn();
}

function JsTryStatement2() {
    try {
        tryBlock();
        return;
    } catch (err) {
        catchClause();
    }

    afterTryCatchReturn();
}

function JsTryStatement3() {
    return;

    try {
        tryBlock();
    } catch (err) {
        catchClause();
    }
}

function JsTryStatement4() {
    try {
    } catch (err) {
        catchClause();
    }
}

```

# Diagnostics
```
warning[noDeadCode]: This code is unreachable
   ┌─ JsTryStatement.js:10:5
   │
 4 │         return;
   │         ------- Either this statement ...
   ·
 7 │         return;
   │         ------- ... or this statement will return from the function ...
   ·
10 │     afterTryCatchReturn();
   │     ---------------------- ... before it can reach this code


```

```
warning[noDeadCode]: This code is unreachable
   ┌─ JsTryStatement.js:28:9
   │
25 │     return;
   │     ------- This statement will return from the function ...
   ·
28 │         tryBlock();
   │         ----------- ... before it can reach this code


```

```
warning[noDeadCode]: This code is unreachable
   ┌─ JsTryStatement.js:30:9
   │
25 │     return;
   │     ------- This statement will return from the function ...
   ·
30 │         catchClause();
   │         -------------- ... before it can reach this code


```

```
warning[noDeadCode]: This code is unreachable
   ┌─ JsTryStatement.js:37:9
   │
37 │         catchClause();
   │         --------------


```


