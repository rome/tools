---
source: crates/rome_js_analyze/tests/spec_tests.rs
expression: noEmptyPattern.js
---
# Input
```js
// valid
var {a = {}} = foo;
var {a, b = {}} = foo;
var {a = []} = foo;
function foo({a = {}}) {}
function foo({a = []}) {}
var [a] = foo;
// invalid
var {} = foo;
var [] = foo;
var {a: {}} = foo;
var {a, b: {}} = foo;
var {a: []} = foo;
function foo({}) {};
function foo([]) {};
function foo({a: {}}) {};
function foo({a: []}) {};
```

# Diagnostics
```
warning[correctness/noEmptyPattern]: Unexpected empty object pattern.
  ┌─ noEmptyPattern.js:9:5
  │
9 │ var {} = foo;
  │     --


```

```
warning[correctness/noEmptyPattern]: Unexpected empty array pattern.
   ┌─ noEmptyPattern.js:10:5
   │
10 │ var [] = foo;
   │     --


```

```
warning[correctness/noEmptyPattern]: Unexpected empty object pattern.
   ┌─ noEmptyPattern.js:11:9
   │
11 │ var {a: {}} = foo;
   │         --


```

```
warning[correctness/noEmptyPattern]: Unexpected empty object pattern.
   ┌─ noEmptyPattern.js:12:12
   │
12 │ var {a, b: {}} = foo;
   │            --


```

```
warning[correctness/noEmptyPattern]: Unexpected empty array pattern.
   ┌─ noEmptyPattern.js:13:9
   │
13 │ var {a: []} = foo;
   │         --


```

```
warning[correctness/noEmptyPattern]: Unexpected empty object pattern.
   ┌─ noEmptyPattern.js:14:14
   │
14 │ function foo({}) {};
   │              --


```

```
warning[correctness/noEmptyPattern]: Unexpected empty array pattern.
   ┌─ noEmptyPattern.js:15:14
   │
15 │ function foo([]) {};
   │              --


```

```
warning[correctness/noEmptyPattern]: Unexpected empty object pattern.
   ┌─ noEmptyPattern.js:16:18
   │
16 │ function foo({a: {}}) {};
   │                  --


```

```
warning[correctness/noEmptyPattern]: Unexpected empty array pattern.
   ┌─ noEmptyPattern.js:17:18
   │
17 │ function foo({a: []}) {};
   │                  --


```


