---
source: crates/rome_js_analyze/tests/spec_tests.rs
expression: noFunctionAssign.js
---
# Input
```js
function foo() { };
foo = bar;

function foo2() { foo2 = bar; }

foo3 = bar;
function foo3() { };

[foo4] = bar;
function foo4() { };

({ x: foo5 = 0 } = bar);
function foo5() { };

function foo6() { [foo6] = bar; }

(function () { ({ x: foo7 = 0 } = bar); function foo7() { }; })();

// Valid
function foo8() { var foo8 = bar; }
function foo9(foo9) { foo9 = bar; }
function foo10() { var foo10; foo10 = bar; }
var foo11 = () => { }; foo11 = bar;
var foo12 = function () { }; foo12 = bar;
var foo13 = function () { foo13 = bar; };
```

# Diagnostics
```
noFunctionAssign.js:1:10 lint/correctness/noFunctionAssign ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not reassign a function declaration.
  
    ┌─ noFunctionAssign.js:1:10
    │
  1 │ function foo() { };
    │          ^^^
  
  i Reassigned here.
  
    ┌─ noFunctionAssign.js:2:1
    │
  2 │ foo = bar;
    │ ^^^
  
  i Use a local variable instead.
  

```

```
noFunctionAssign.js:4:10 lint/correctness/noFunctionAssign ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not reassign a function declaration.
  
    ┌─ noFunctionAssign.js:4:10
    │
  4 │ function foo2() { foo2 = bar; }
    │          ^^^^
  
  i Reassigned here.
  
    ┌─ noFunctionAssign.js:4:19
    │
  4 │ function foo2() { foo2 = bar; }
    │                   ^^^^
  
  i Use a local variable instead.
  

```

```
noFunctionAssign.js:7:10 lint/correctness/noFunctionAssign ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not reassign a function declaration.
  
    ┌─ noFunctionAssign.js:7:10
    │
  7 │ function foo3() { };
    │          ^^^^
  
  i Reassigned here.
  
    ┌─ noFunctionAssign.js:6:1
    │
  6 │ foo3 = bar;
    │ ^^^^
  
  i Reassignment happens here because the function declaration is hoisted.
  
  i Use a local variable instead.
  

```

```
noFunctionAssign.js:10:10 lint/correctness/noFunctionAssign ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not reassign a function declaration.
  
     ┌─ noFunctionAssign.js:10:10
     │
  10 │ function foo4() { };
     │          ^^^^
  
  i Reassigned here.
  
    ┌─ noFunctionAssign.js:9:2
    │
  9 │ [foo4] = bar;
    │  ^^^^
  
  i Reassignment happens here because the function declaration is hoisted.
  
  i Use a local variable instead.
  

```

```
noFunctionAssign.js:13:10 lint/correctness/noFunctionAssign ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not reassign a function declaration.
  
     ┌─ noFunctionAssign.js:13:10
     │
  13 │ function foo5() { };
     │          ^^^^
  
  i Reassigned here.
  
     ┌─ noFunctionAssign.js:12:7
     │
  12 │ ({ x: foo5 = 0 } = bar);
     │       ^^^^
  
  i Reassignment happens here because the function declaration is hoisted.
  
  i Use a local variable instead.
  

```

```
noFunctionAssign.js:15:10 lint/correctness/noFunctionAssign ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not reassign a function declaration.
  
     ┌─ noFunctionAssign.js:15:10
     │
  15 │ function foo6() { [foo6] = bar; }
     │          ^^^^
  
  i Reassigned here.
  
     ┌─ noFunctionAssign.js:15:20
     │
  15 │ function foo6() { [foo6] = bar; }
     │                    ^^^^
  
  i Use a local variable instead.
  

```

```
noFunctionAssign.js:17:50 lint/correctness/noFunctionAssign ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Do not reassign a function declaration.
  
     ┌─ noFunctionAssign.js:17:50
     │
  17 │ (function () { ({ x: foo7 = 0 } = bar); function foo7() { }; })();
     │                                                  ^^^^
  
  i Reassigned here.
  
     ┌─ noFunctionAssign.js:17:22
     │
  17 │ (function () { ({ x: foo7 = 0 } = bar); function foo7() { }; })();
     │                      ^^^^
  
  i Reassignment happens here because the function declaration is hoisted.
  
  i Use a local variable instead.
  

```


