---
source: crates/rome_js_analyze/tests/spec_tests.rs
expression: noExtraBooleanCast.js
---
# Input
```js
// invalid
if (Boolean(foo)) {
}
if (!!Boolean(foo)) {
}
if (!Boolean(foo)) {
}
while (!!foo) {}
let x = 1;
do {
	1 + 1;
} while (Boolean(x));

for (; !!foo; ) {}

new Boolean(!!x);

!!!x;

!Boolean(x);
// valid
Boolean(!x);

!x;

!!x;

Boolean(!!x, b);;

```

# Diagnostics
```
noExtraBooleanCast.js:2:5 lint/correctness/noExtraBooleanCast  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Avoid redundant `Boolean` call
  
    1 │ // invalid
  > 2 │ if (Boolean(foo)) {
      │     ^^^^^^^^^^^^
    3 │ }
    4 │ if (!!Boolean(foo)) {
  
  i It is not necessary to use `Boolean` call when a value will already be coerced to a boolean.
  
  i Suggested fix: Remove redundant `Boolean` call
  
    2 │ if·(Boolean(foo))·{
      │     --------   -   

```

```
noExtraBooleanCast.js:4:5 lint/correctness/noExtraBooleanCast  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Avoid redundant double-negation.
  
    2 │ if (Boolean(foo)) {
    3 │ }
  > 4 │ if (!!Boolean(foo)) {
      │     ^^^^^^^^^^^^^^
    5 │ }
    6 │ if (!Boolean(foo)) {
  
  i It is not necessary to use double-negation when a value will already be coerced to a boolean.
  
  i Suggested fix: Remove redundant double-negation
  
    4 │ if·(!!Boolean(foo))·{
      │     --               

```

```
noExtraBooleanCast.js:4:7 lint/correctness/noExtraBooleanCast  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Avoid redundant `Boolean` call
  
    2 │ if (Boolean(foo)) {
    3 │ }
  > 4 │ if (!!Boolean(foo)) {
      │       ^^^^^^^^^^^^
    5 │ }
    6 │ if (!Boolean(foo)) {
  
  i It is not necessary to use `Boolean` call when a value will already be coerced to a boolean.
  
  i Suggested fix: Remove redundant `Boolean` call
  
    4 │ if·(!!Boolean(foo))·{
      │       --------   -   

```

```
noExtraBooleanCast.js:6:6 lint/correctness/noExtraBooleanCast  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Avoid redundant `Boolean` call
  
    4 │ if (!!Boolean(foo)) {
    5 │ }
  > 6 │ if (!Boolean(foo)) {
      │      ^^^^^^^^^^^^
    7 │ }
    8 │ while (!!foo) {}
  
  i It is not necessary to use `Boolean` call when a value will already be coerced to a boolean.
  
  i Suggested fix: Remove redundant `Boolean` call
  
    6 │ if·(!Boolean(foo))·{
      │      --------   -   

```

```
noExtraBooleanCast.js:8:8 lint/correctness/noExtraBooleanCast  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Avoid redundant double-negation.
  
     6 │ if (!Boolean(foo)) {
     7 │ }
   > 8 │ while (!!foo) {}
       │        ^^^^^
     9 │ let x = 1;
    10 │ do {
  
  i It is not necessary to use double-negation when a value will already be coerced to a boolean.
  
  i Suggested fix: Remove redundant double-negation
  
    8 │ while·(!!foo)·{}
      │        --       

```

```
noExtraBooleanCast.js:12:10 lint/correctness/noExtraBooleanCast  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Avoid redundant `Boolean` call
  
    10 │ do {
    11 │ 	1 + 1;
  > 12 │ } while (Boolean(x));
       │          ^^^^^^^^^^
    13 │ 
    14 │ for (; !!foo; ) {}
  
  i It is not necessary to use `Boolean` call when a value will already be coerced to a boolean.
  
  i Suggested fix: Remove redundant `Boolean` call
  
    12 │ }·while·(Boolean(x));
       │          -------- -  

```

```
noExtraBooleanCast.js:14:8 lint/correctness/noExtraBooleanCast  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Avoid redundant double-negation.
  
    12 │ } while (Boolean(x));
    13 │ 
  > 14 │ for (; !!foo; ) {}
       │        ^^^^^
    15 │ 
    16 │ new Boolean(!!x);
  
  i It is not necessary to use double-negation when a value will already be coerced to a boolean.
  
  i Suggested fix: Remove redundant double-negation
  
    14 │ for·(;·!!foo;·)·{}
       │        --         

```

```
noExtraBooleanCast.js:16:13 lint/correctness/noExtraBooleanCast  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Avoid redundant double-negation.
  
    14 │ for (; !!foo; ) {}
    15 │ 
  > 16 │ new Boolean(!!x);
       │             ^^^
    17 │ 
    18 │ !!!x;
  
  i It is not necessary to use double-negation when a value will already be coerced to a boolean.
  
  i Suggested fix: Remove redundant double-negation
  
    16 │ new·Boolean(!!x);
       │             --   

```

```
noExtraBooleanCast.js:18:2 lint/correctness/noExtraBooleanCast  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Avoid redundant double-negation.
  
    16 │ new Boolean(!!x);
    17 │ 
  > 18 │ !!!x;
       │  ^^^
    19 │ 
    20 │ !Boolean(x);
  
  i It is not necessary to use double-negation when a value will already be coerced to a boolean.
  
  i Suggested fix: Remove redundant double-negation
  
    18 │ !!!x;
       │  --  

```

```
noExtraBooleanCast.js:20:2 lint/correctness/noExtraBooleanCast  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Avoid redundant `Boolean` call
  
    18 │ !!!x;
    19 │ 
  > 20 │ !Boolean(x);
       │  ^^^^^^^^^^
    21 │ // valid
    22 │ Boolean(!x);
  
  i It is not necessary to use `Boolean` call when a value will already be coerced to a boolean.
  
  i Suggested fix: Remove redundant `Boolean` call
  
    20 │ !Boolean(x);
       │  -------- - 

```


