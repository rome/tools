---
source: crates/rome_js_analyze/tests/spec_tests.rs
expression: noDoubleEquals.js
---
# Input
```js
const isZero = a == 0;
const isNonZero = a != 0;

const isNull = a == null;
const isNonNull = a != null;

```

# Diagnostics
```
noDoubleEquals.js:1:18 lint/correctness/noDoubleEquals  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use === instead of ==
  
  > 1 │ const isZero = a == 0;
      │                  ^^
    2 │ const isNonZero = a != 0;
    3 │ 
  
  i == is only allowed when comparing against null
  
  i Using === may be unsafe if you are relying on type coercion
  
  i Suggested fix: Use ===
  
    1 │ const·isZero·=·a·===·0;
      │                    +   

```

```
noDoubleEquals.js:2:21 lint/correctness/noDoubleEquals  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use !== instead of !=
  
    1 │ const isZero = a == 0;
  > 2 │ const isNonZero = a != 0;
      │                     ^^
    3 │ 
    4 │ const isNull = a == null;
  
  i != is only allowed when comparing against null
  
  i Using !== may be unsafe if you are relying on type coercion
  
  i Suggested fix: Use !==
  
    2 │ const·isNonZero·=·a·!==·0;
      │                       +   

```


