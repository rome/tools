---
source: crates/rome_js_analyze/tests/spec_tests.rs
expression: inJsx.jsx
---
# Input
```js
<>
    <br>invalid child</br>
    <img alt="some text">invalid child</img>
    <img alt="some text" dangerouslySetInnerHTML={{ __html: "text" }}></img>
    <img alt="some text" children={"some child"}></img>
    <img alt="some text" children={"some child"} />
    <img alt="some text" dangerouslySetInnerHTML={{ __html: "text" }} >invalid child</img>
</>

```

# Diagnostics
```
inJsx.jsx:2:5 lint/correctness/noVoidElementsWithChildren  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! br is a void element tag and must not have children.
  
    1 │ <>
  > 2 │     <br>invalid child</br>
      │     ^^^^^^^^^^^^^^^^^^^^^^
    3 │     <img alt="some text">invalid child</img>
    4 │     <img alt="some text" dangerouslySetInnerHTML={{ __html: "text" }}></img>
  
  i Suggested fix: Remove the children.
  
    2 │ ····<br>invalid·child</br>
      │        --------------- -- 

```

```
inJsx.jsx:3:5 lint/correctness/noVoidElementsWithChildren  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! img is a void element tag and must not have children.
  
    1 │ <>
    2 │     <br>invalid child</br>
  > 3 │     <img alt="some text">invalid child</img>
      │     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    4 │     <img alt="some text" dangerouslySetInnerHTML={{ __html: "text" }}></img>
    5 │     <img alt="some text" children={"some child"}></img>
  
  i Suggested fix: Remove the children.
  
    3 │ ····<img·alt="some·text">invalid·child</img>
      │                         --------------- --- 

```

```
inJsx.jsx:4:5 lint/correctness/noVoidElementsWithChildren  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! img is a void element tag and must not have the dangerouslySetInnerHTML prop.
  
    2 │     <br>invalid child</br>
    3 │     <img alt="some text">invalid child</img>
  > 4 │     <img alt="some text" dangerouslySetInnerHTML={{ __html: "text" }}></img>
      │     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    5 │     <img alt="some text" children={"some child"}></img>
    6 │     <img alt="some text" children={"some child"} />
  
  i Suggested fix: Remove the dangerouslySetInnerHTML prop.
  
    4 │ ····<img·alt="some·text"·dangerouslySetInnerHTML={{·__html:·"text"·}}></img>
      │                          ---------------------------------------------- --- 

```

```
inJsx.jsx:5:5 lint/correctness/noVoidElementsWithChildren  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! img is a void element tag and must not have children.
  
    3 │     <img alt="some text">invalid child</img>
    4 │     <img alt="some text" dangerouslySetInnerHTML={{ __html: "text" }}></img>
  > 5 │     <img alt="some text" children={"some child"}></img>
      │     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    6 │     <img alt="some text" children={"some child"} />
    7 │     <img alt="some text" dangerouslySetInnerHTML={{ __html: "text" }} >invalid child</img>
  
  i Suggested fix: Remove the children.
  
    5 │ ····<img·alt="some·text"·children={"some·child"}></img>
      │                          ------------------------- --- 

```

```
inJsx.jsx:6:5 lint/correctness/noVoidElementsWithChildren  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! img is a void element tag and must not have children.
  
    4 │     <img alt="some text" dangerouslySetInnerHTML={{ __html: "text" }}></img>
    5 │     <img alt="some text" children={"some child"}></img>
  > 6 │     <img alt="some text" children={"some child"} />
      │     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    7 │     <img alt="some text" dangerouslySetInnerHTML={{ __html: "text" }} >invalid child</img>
    8 │ </>
  
  i Suggested fix: Remove the children.
  
    6 │ ····<img·alt="some·text"·children={"some·child"}·/>
      │                          ------------------------  

```

```
inJsx.jsx:7:5 lint/correctness/noVoidElementsWithChildren  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! img is a void element tag and must not have children, or the dangerouslySetInnerHTML prop.
  
    5 │     <img alt="some text" children={"some child"}></img>
    6 │     <img alt="some text" children={"some child"} />
  > 7 │     <img alt="some text" dangerouslySetInnerHTML={{ __html: "text" }} >invalid child</img>
      │     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    8 │ </>
    9 │ 
  
  i Suggested fix: Remove the children and the dangerouslySetInnerHTML prop.
  
    7 │ ····<img·alt="some·text"·dangerouslySetInnerHTML={{·__html:·"text"·}}·>invalid·child</img>
      │                          ------------------------------------------------------------ --- 

```


