---
source: crates/rome_js_analyze/tests/spec_tests.rs
expression: noAsyncPromiseExecutor.js
---
# Input
```js
// valid
new Promise((resolve, reject) => {})
new Promise((resolve, reject) => {}, async function unrelated() {})
new Foo(async (resolve, reject) => {})
new Foo((( (resolve, reject) => {} )))
// invalid
new Promise(async function foo(resolve, reject) {})
new Promise(async (resolve, reject) => {})
new Promise(((((async () => {})))))
```

# Diagnostics
```
noAsyncPromiseExecutor.js:7:13 lint/correctness/noAsyncPromiseExecutor ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Promise executor functions should not be `async`.
  
    ┌─ noAsyncPromiseExecutor.js:7:13
    │
  7 │ new Promise(async function foo(resolve, reject) {})
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  

```

```
noAsyncPromiseExecutor.js:8:13 lint/correctness/noAsyncPromiseExecutor ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Promise executor functions should not be `async`.
  
    ┌─ noAsyncPromiseExecutor.js:8:13
    │
  8 │ new Promise(async (resolve, reject) => {})
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  

```

```
noAsyncPromiseExecutor.js:9:17 lint/correctness/noAsyncPromiseExecutor ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Promise executor functions should not be `async`.
  
    ┌─ noAsyncPromiseExecutor.js:9:17
    │
  9 │ new Promise(((((async () => {})))))
    │                 ^^^^^^^^^^^^^^
  

```


