---
source: crates/rome_js_analyze/tests/spec_tests.rs
expression: invalid.js
---
# Input
```js
class A {
	constructor() {
		return 0;
	}
}

class B {
	constructor() {
		return this;
	}
}

class C {
	constructor(x) {
		this.x = x;
		return x;
	}
}

class D {
	constructor(x) {
		if (x > 0) {
			this.x = x;
			return x;
		}
		this.x = 0;
	}
}
```

# Diagnostics
```
invalid.js:3:3 lint/correctness/noConstructorReturn ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! The constructor should not return a value.
  
    1 │ class A {
    2 │ 	constructor() {
  > 3 │ 		return 0;
      │ 		^^^^^^^^^
    4 │ 	}
    5 │ }
  
  i The constructor is here:
  
    1 │ class A {
  > 2 │ 	constructor() {
      │ 	^^^^^^^^^^^^^^^
  > 3 │ 		return 0;
  > 4 │ 	}
      │ 	^
    5 │ }
    6 │ 
  
  i Returning a value from a constructor is ignored.
  

```

```
invalid.js:9:3 lint/correctness/noConstructorReturn ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! The constructor should not return a value.
  
     7 │ class B {
     8 │ 	constructor() {
   > 9 │ 		return this;
       │ 		^^^^^^^^^^^^
    10 │ 	}
    11 │ }
  
  i The constructor is here:
  
     7 │ class B {
   > 8 │ 	constructor() {
       │ 	^^^^^^^^^^^^^^^
   > 9 │ 		return this;
  > 10 │ 	}
       │ 	^
    11 │ }
    12 │ 
  
  i Returning a value from a constructor is ignored.
  

```

```
invalid.js:16:3 lint/correctness/noConstructorReturn ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! The constructor should not return a value.
  
    14 │ 	constructor(x) {
    15 │ 		this.x = x;
  > 16 │ 		return x;
       │ 		^^^^^^^^^
    17 │ 	}
    18 │ }
  
  i The constructor is here:
  
    13 │ class C {
  > 14 │ 	constructor(x) {
       │ 	^^^^^^^^^^^^^^^^
  > 15 │ 		this.x = x;
  > 16 │ 		return x;
  > 17 │ 	}
       │ 	^
    18 │ }
    19 │ 
  
  i Returning a value from a constructor is ignored.
  

```

```
invalid.js:24:4 lint/correctness/noConstructorReturn ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! The constructor should not return a value.
  
    22 │ 		if (x > 0) {
    23 │ 			this.x = x;
  > 24 │ 			return x;
       │ 			^^^^^^^^^
    25 │ 		}
    26 │ 		this.x = 0;
  
  i The constructor is here:
  
    20 │ class D {
  > 21 │ 	constructor(x) {
       │ 	^^^^^^^^^^^^^^^^
  > 22 │ 		if (x > 0) {
  > 23 │ 			this.x = x;
  > 24 │ 			return x;
  > 25 │ 		}
  > 26 │ 		this.x = 0;
  > 27 │ 	}
       │ 	^
    28 │ }
  
  i Returning a value from a constructor is ignored.
  

```


