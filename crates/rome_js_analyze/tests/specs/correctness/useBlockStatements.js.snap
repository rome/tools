---
source: crates/rome_js_analyze/tests/spec_tests.rs
expression: useBlockStatements.js
---
# Input
```js
// invalid
if (x) x;
if (x) {
  x;
} else y;
if (x) {
  x;
} else if (y) y;
for (;;);
for (p in obj);
for (x of xs);
do;
while (x);
while (x);

if (x);

if (test);
else if (test);
else;

while (test)
  bar

  while (test)
    bar

if (test)
  bar
else if(test)
  bar
else
  bar

  if (test)
    bar
  else if(test)
    bar
  else
    bar

if (test) {
  correct;
} else console.log("false") // comment

```

# Diagnostics
```
useBlockStatements.js:2:1 lint/correctness/useBlockStatements  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Block statements are preferred in this position.
  
    1 │ // invalid
  > 2 │ if (x) x;
      │ ^^^^^^^^^
    3 │ if (x) {
    4 │   x;
  
  i Suggested fix: Wrap the statement with a `JsBlockStatement`
  
    2 │ if·(x)·{·x;·}
      │        ++  ++

```

```
useBlockStatements.js:5:3 lint/correctness/useBlockStatements  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Block statements are preferred in this position.
  
    3 │ if (x) {
    4 │   x;
  > 5 │ } else y;
      │   ^^^^^^^
    6 │ if (x) {
    7 │   x;
  
  i Suggested fix: Wrap the statement with a `JsBlockStatement`
  
    5 │ }·else·{·y;·}
      │        ++  ++

```

```
useBlockStatements.js:8:8 lint/correctness/useBlockStatements  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Block statements are preferred in this position.
  
     6 │ if (x) {
     7 │   x;
   > 8 │ } else if (y) y;
       │        ^^^^^^^^^
     9 │ for (;;);
    10 │ for (p in obj);
  
  i Suggested fix: Wrap the statement with a `JsBlockStatement`
  
    8 │ }·else·if·(y)·{·y;·}
      │               ++  ++

```

```
useBlockStatements.js:9:1 lint/correctness/useBlockStatements  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Block statements are preferred in this position.
  
     7 │   x;
     8 │ } else if (y) y;
   > 9 │ for (;;);
       │ ^^^^^^^^^
    10 │ for (p in obj);
    11 │ for (x of xs);
  
  i Suggested fix: Wrap the statement with a `JsBlockStatement`
  
     7  7 │   ··x;
     8  8 │   }·else·if·(y)·y;
     9    │ - for·(;;);
        9 │ + for·(;;)·{}
    10 10 │   for·(p·in·obj);
    11 11 │   for·(x·of·xs);
  

```

```
useBlockStatements.js:10:1 lint/correctness/useBlockStatements  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Block statements are preferred in this position.
  
     8 │ } else if (y) y;
     9 │ for (;;);
  > 10 │ for (p in obj);
       │ ^^^^^^^^^^^^^^^
    11 │ for (x of xs);
    12 │ do;
  
  i Suggested fix: Wrap the statement with a `JsBlockStatement`
  
     8  8 │   }·else·if·(y)·y;
     9  9 │   for·(;;);
    10    │ - for·(p·in·obj);
       10 │ + for·(p·in·obj)·{}
    11 11 │   for·(x·of·xs);
    12 12 │   do;
  

```

```
useBlockStatements.js:11:1 lint/correctness/useBlockStatements  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Block statements are preferred in this position.
  
     9 │ for (;;);
    10 │ for (p in obj);
  > 11 │ for (x of xs);
       │ ^^^^^^^^^^^^^^
    12 │ do;
    13 │ while (x);
  
  i Suggested fix: Wrap the statement with a `JsBlockStatement`
  
     9  9 │   for·(;;);
    10 10 │   for·(p·in·obj);
    11    │ - for·(x·of·xs);
       11 │ + for·(x·of·xs)·{}
    12 12 │   do;
    13 13 │   while·(x);
  

```

```
useBlockStatements.js:12:1 lint/correctness/useBlockStatements  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Block statements are preferred in this position.
  
    10 │ for (p in obj);
    11 │ for (x of xs);
  > 12 │ do;
       │ ^^^
  > 13 │ while (x);
       │ ^^^^^^^^^^
    14 │ while (x);
    15 │ 
  
  i Suggested fix: Wrap the statement with a `JsBlockStatement`
  
    10 10 │   for·(p·in·obj);
    11 11 │   for·(x·of·xs);
    12    │ - do;
       12 │ + do·{}
    13 13 │   while·(x);
    14 14 │   while·(x);
  

```

```
useBlockStatements.js:14:1 lint/correctness/useBlockStatements  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Block statements are preferred in this position.
  
    12 │ do;
    13 │ while (x);
  > 14 │ while (x);
       │ ^^^^^^^^^^
    15 │ 
    16 │ if (x);
  
  i Suggested fix: Wrap the statement with a `JsBlockStatement`
  
    12 12 │   do;
    13 13 │   while·(x);
    14    │ - while·(x);
       14 │ + while·(x)·{}
    15 15 │   
    16 16 │   if·(x);
  

```

```
useBlockStatements.js:16:1 lint/correctness/useBlockStatements  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Block statements are preferred in this position.
  
    14 │ while (x);
    15 │ 
  > 16 │ if (x);
       │ ^^^^^^^
    17 │ 
    18 │ if (test);
  
  i Suggested fix: Wrap the statement with a `JsBlockStatement`
  
    14 14 │   while·(x);
    15 15 │   
    16    │ - if·(x);
       16 │ + if·(x)·{}
    17 17 │   
    18 18 │   if·(test);
  

```

```
useBlockStatements.js:18:1 lint/correctness/useBlockStatements  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Block statements are preferred in this position.
  
    16 │ if (x);
    17 │ 
  > 18 │ if (test);
       │ ^^^^^^^^^^
  > 19 │ else if (test);
  > 20 │ else;
       │ ^^^^^
    21 │ 
    22 │ while (test)
  
  i Suggested fix: Wrap the statement with a `JsBlockStatement`
  
    16 16 │   if·(x);
    17 17 │   
    18    │ - if·(test);
       18 │ + if·(test)·{}
    19 19 │   else·if·(test);
    20 20 │   else;
  

```

```
useBlockStatements.js:19:6 lint/correctness/useBlockStatements  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Block statements are preferred in this position.
  
    18 │ if (test);
  > 19 │ else if (test);
       │      ^^^^^^^^^^
  > 20 │ else;
       │ ^^^^^
    21 │ 
    22 │ while (test)
  
  i Suggested fix: Wrap the statement with a `JsBlockStatement`
  
    17 17 │   
    18 18 │   if·(test);
    19    │ - else·if·(test);
       19 │ + else·if·(test)·{}
    20 20 │   else;
    21 21 │   
  

```

```
useBlockStatements.js:20:1 lint/correctness/useBlockStatements  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Block statements are preferred in this position.
  
    18 │ if (test);
    19 │ else if (test);
  > 20 │ else;
       │ ^^^^^
    21 │ 
    22 │ while (test)
  
  i Suggested fix: Wrap the statement with a `JsBlockStatement`
  
    18 18 │   if·(test);
    19 19 │   else·if·(test);
    20    │ - else;
       20 │ + else·{}
    21 21 │   
    22 22 │   while·(test)
  

```

```
useBlockStatements.js:22:1 lint/correctness/useBlockStatements  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Block statements are preferred in this position.
  
    20 │ else;
    21 │ 
  > 22 │ while (test)
       │ ^^^^^^^^^^^^
  > 23 │   bar
       │   ^^^
    24 │ 
    25 │   while (test)
  
  i Suggested fix: Wrap the statement with a `JsBlockStatement`
  
    20 20 │   else;
    21 21 │   
    22    │ - while·(test)
       22 │ + while·(test)·{
    23 23 │   ··bar
       24 │ + }
    24 25 │   
    25 26 │   ··while·(test)
  

```

```
useBlockStatements.js:25:3 lint/correctness/useBlockStatements  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Block statements are preferred in this position.
  
    23 │   bar
    24 │ 
  > 25 │   while (test)
       │   ^^^^^^^^^^^^
  > 26 │     bar
       │     ^^^
    27 │ 
    28 │ if (test)
  
  i Suggested fix: Wrap the statement with a `JsBlockStatement`
  
    23 23 │   ··bar
    24 24 │   
    25    │ - ··while·(test)
       25 │ + ··while·(test)·{
    26 26 │   ····bar
       27 │ + ··}
    27 28 │   
    28 29 │   if·(test)
  

```

```
useBlockStatements.js:28:1 lint/correctness/useBlockStatements  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Block statements are preferred in this position.
  
    26 │     bar
    27 │ 
  > 28 │ if (test)
       │ ^^^^^^^^^
  > 29 │   bar
  > 30 │ else if(test)
  > 31 │   bar
  > 32 │ else
  > 33 │   bar
       │   ^^^
    34 │ 
    35 │   if (test)
  
  i Suggested fix: Wrap the statement with a `JsBlockStatement`
  
    26 26 │   ····bar
    27 27 │   
    28    │ - if·(test)
       28 │ + if·(test)·{
    29 29 │   ··bar
       30 │ + }
    30 31 │   else·if(test)
    31 32 │   ··bar
  

```

```
useBlockStatements.js:30:6 lint/correctness/useBlockStatements  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Block statements are preferred in this position.
  
    28 │ if (test)
    29 │   bar
  > 30 │ else if(test)
       │      ^^^^^^^^
  > 31 │   bar
  > 32 │ else
  > 33 │   bar
       │   ^^^
    34 │ 
    35 │   if (test)
  
  i Suggested fix: Wrap the statement with a `JsBlockStatement`
  
    28 28 │   if·(test)
    29 29 │   ··bar
    30    │ - else·if(test)
       30 │ + else·if(test)·{
    31 31 │   ··bar
       32 │ + }
    32 33 │   else
    33 34 │   ··bar
  

```

```
useBlockStatements.js:32:1 lint/correctness/useBlockStatements  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Block statements are preferred in this position.
  
    30 │ else if(test)
    31 │   bar
  > 32 │ else
       │ ^^^^
  > 33 │   bar
       │   ^^^
    34 │ 
    35 │   if (test)
  
  i Suggested fix: Wrap the statement with a `JsBlockStatement`
  
    30 30 │   else·if(test)
    31 31 │   ··bar
    32    │ - else
       32 │ + else·{
    33 33 │   ··bar
       34 │ + }
    34 35 │   
    35 36 │   ··if·(test)
  

```

```
useBlockStatements.js:35:3 lint/correctness/useBlockStatements  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Block statements are preferred in this position.
  
    33 │   bar
    34 │ 
  > 35 │   if (test)
       │   ^^^^^^^^^
  > 36 │     bar
  > 37 │   else if(test)
  > 38 │     bar
  > 39 │   else
  > 40 │     bar
       │     ^^^
    41 │ 
    42 │ if (test) {
  
  i Suggested fix: Wrap the statement with a `JsBlockStatement`
  
    33 33 │   ··bar
    34 34 │   
    35    │ - ··if·(test)
       35 │ + ··if·(test)·{
    36 36 │   ····bar
    37    │ - ··else·if(test)
       37 │ + ··}
       38 │ + ··else·if(test)
    38 39 │   ····bar
    39 40 │   ··else
  

```

```
useBlockStatements.js:37:8 lint/correctness/useBlockStatements  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Block statements are preferred in this position.
  
    35 │   if (test)
    36 │     bar
  > 37 │   else if(test)
       │        ^^^^^^^^
  > 38 │     bar
  > 39 │   else
  > 40 │     bar
       │     ^^^
    41 │ 
    42 │ if (test) {
  
  i Suggested fix: Wrap the statement with a `JsBlockStatement`
  
    35 35 │   ··if·(test)
    36 36 │   ····bar
    37    │ - ··else·if(test)
       37 │ + ··else·if(test)·{
    38 38 │   ····bar
    39    │ - ··else
       39 │ + ··}
       40 │ + ··else
    40 41 │   ····bar
    41 42 │   
  

```

```
useBlockStatements.js:39:3 lint/correctness/useBlockStatements  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Block statements are preferred in this position.
  
    37 │   else if(test)
    38 │     bar
  > 39 │   else
       │   ^^^^
  > 40 │     bar
       │     ^^^
    41 │ 
    42 │ if (test) {
  
  i Suggested fix: Wrap the statement with a `JsBlockStatement`
  
    37 37 │   ··else·if(test)
    38 38 │   ····bar
    39    │ - ··else
       39 │ + ··else·{
    40 40 │   ····bar
       41 │ + ··}
    41 42 │   
    42 43 │   if·(test)·{
  

```

```
useBlockStatements.js:44:3 lint/correctness/useBlockStatements  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Block statements are preferred in this position.
  
    42 │ if (test) {
    43 │   correct;
  > 44 │ } else console.log("false") // comment
       │   ^^^^^^^^^^^^^^^^^^^^^^^^^
    45 │ 
  
  i Suggested fix: Wrap the statement with a `JsBlockStatement`
  
    42 42 │   if·(test)·{
    43 43 │   ··correct;
    44    │ - }·else·console.log("false")·//·comment
       44 │ + }·else·{·console.log("false")·//·comment
       45 │ + }
    45 46 │   
  

```


