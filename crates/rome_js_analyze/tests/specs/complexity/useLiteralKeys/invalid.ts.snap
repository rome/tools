---
source: crates/rome_js_analyze/tests/spec_tests.rs
expression: invalid.ts
---
# Input
```js
export interface I {
	["p1"]: number

	"p2": number

	get ["p3"](): number

	get "p4"(): number

	set ["p3"](x: number)

	set "p4"(x: number)

	["m1"](): void

	"m2"(): void
}

export type T = {
	["p1"]: number

	"p2": number

	get ["p3"](): number

	get "p4"(): number

	set ["p3"](x: number)

	set "p4"(x: number)

	["m1"](): void

	"m2"(): void
}

```

# Diagnostics
```
invalid.ts:2:3 lint/complexity/useLiteralKeys  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! The computed expression can be simplified without the use of a string literal.
  
    1 │ export interface I {
  > 2 │ 	["p1"]: number
      │ 	 ^^^^
    3 │ 
    4 │ 	"p2": number
  
  i Suggested fix: Use a literal key instead.
  
    2 │ → ["p1"]:·number
      │   --  --        

```

```
invalid.ts:4:2 lint/complexity/useLiteralKeys  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! The computed expression can be simplified without the use of a string literal.
  
    2 │ 	["p1"]: number
    3 │ 
  > 4 │ 	"p2": number
      │ 	^^^^
    5 │ 
    6 │ 	get ["p3"](): number
  
  i Suggested fix: Use a literal key instead.
  
    4 │ → "p2":·number
      │   -  -        

```

```
invalid.ts:6:7 lint/complexity/useLiteralKeys  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! The computed expression can be simplified without the use of a string literal.
  
    4 │ 	"p2": number
    5 │ 
  > 6 │ 	get ["p3"](): number
      │ 	     ^^^^
    7 │ 
    8 │ 	get "p4"(): number
  
  i Suggested fix: Use a literal key instead.
  
    6 │ → get·["p3"]():·number
      │       --  --          

```

```
invalid.ts:8:6 lint/complexity/useLiteralKeys  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! The computed expression can be simplified without the use of a string literal.
  
     6 │ 	get ["p3"](): number
     7 │ 
   > 8 │ 	get "p4"(): number
       │ 	    ^^^^
     9 │ 
    10 │ 	set ["p3"](x: number)
  
  i Suggested fix: Use a literal key instead.
  
    8 │ → get·"p4"():·number
      │       -  -          

```

```
invalid.ts:10:7 lint/complexity/useLiteralKeys  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! The computed expression can be simplified without the use of a string literal.
  
     8 │ 	get "p4"(): number
     9 │ 
  > 10 │ 	set ["p3"](x: number)
       │ 	     ^^^^
    11 │ 
    12 │ 	set "p4"(x: number)
  
  i Suggested fix: Use a literal key instead.
  
    10 │ → set·["p3"](x:·number)
       │       --  --           

```

```
invalid.ts:12:6 lint/complexity/useLiteralKeys  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! The computed expression can be simplified without the use of a string literal.
  
    10 │ 	set ["p3"](x: number)
    11 │ 
  > 12 │ 	set "p4"(x: number)
       │ 	    ^^^^
    13 │ 
    14 │ 	["m1"](): void
  
  i Suggested fix: Use a literal key instead.
  
    12 │ → set·"p4"(x:·number)
       │       -  -           

```

```
invalid.ts:14:3 lint/complexity/useLiteralKeys  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! The computed expression can be simplified without the use of a string literal.
  
    12 │ 	set "p4"(x: number)
    13 │ 
  > 14 │ 	["m1"](): void
       │ 	 ^^^^
    15 │ 
    16 │ 	"m2"(): void
  
  i Suggested fix: Use a literal key instead.
  
    14 │ → ["m1"]():·void
       │   --  --        

```

```
invalid.ts:16:2 lint/complexity/useLiteralKeys  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! The computed expression can be simplified without the use of a string literal.
  
    14 │ 	["m1"](): void
    15 │ 
  > 16 │ 	"m2"(): void
       │ 	^^^^
    17 │ }
    18 │ 
  
  i Suggested fix: Use a literal key instead.
  
    16 │ → "m2"():·void
       │   -  -        

```

```
invalid.ts:20:3 lint/complexity/useLiteralKeys  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! The computed expression can be simplified without the use of a string literal.
  
    19 │ export type T = {
  > 20 │ 	["p1"]: number
       │ 	 ^^^^
    21 │ 
    22 │ 	"p2": number
  
  i Suggested fix: Use a literal key instead.
  
    20 │ → ["p1"]:·number
       │   --  --        

```

```
invalid.ts:22:2 lint/complexity/useLiteralKeys  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! The computed expression can be simplified without the use of a string literal.
  
    20 │ 	["p1"]: number
    21 │ 
  > 22 │ 	"p2": number
       │ 	^^^^
    23 │ 
    24 │ 	get ["p3"](): number
  
  i Suggested fix: Use a literal key instead.
  
    22 │ → "p2":·number
       │   -  -        

```

```
invalid.ts:24:7 lint/complexity/useLiteralKeys  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! The computed expression can be simplified without the use of a string literal.
  
    22 │ 	"p2": number
    23 │ 
  > 24 │ 	get ["p3"](): number
       │ 	     ^^^^
    25 │ 
    26 │ 	get "p4"(): number
  
  i Suggested fix: Use a literal key instead.
  
    24 │ → get·["p3"]():·number
       │       --  --          

```

```
invalid.ts:26:6 lint/complexity/useLiteralKeys  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! The computed expression can be simplified without the use of a string literal.
  
    24 │ 	get ["p3"](): number
    25 │ 
  > 26 │ 	get "p4"(): number
       │ 	    ^^^^
    27 │ 
    28 │ 	set ["p3"](x: number)
  
  i Suggested fix: Use a literal key instead.
  
    26 │ → get·"p4"():·number
       │       -  -          

```

```
invalid.ts:28:7 lint/complexity/useLiteralKeys  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! The computed expression can be simplified without the use of a string literal.
  
    26 │ 	get "p4"(): number
    27 │ 
  > 28 │ 	set ["p3"](x: number)
       │ 	     ^^^^
    29 │ 
    30 │ 	set "p4"(x: number)
  
  i Suggested fix: Use a literal key instead.
  
    28 │ → set·["p3"](x:·number)
       │       --  --           

```

```
invalid.ts:30:6 lint/complexity/useLiteralKeys  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! The computed expression can be simplified without the use of a string literal.
  
    28 │ 	set ["p3"](x: number)
    29 │ 
  > 30 │ 	set "p4"(x: number)
       │ 	    ^^^^
    31 │ 
    32 │ 	["m1"](): void
  
  i Suggested fix: Use a literal key instead.
  
    30 │ → set·"p4"(x:·number)
       │       -  -           

```

```
invalid.ts:32:3 lint/complexity/useLiteralKeys  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! The computed expression can be simplified without the use of a string literal.
  
    30 │ 	set "p4"(x: number)
    31 │ 
  > 32 │ 	["m1"](): void
       │ 	 ^^^^
    33 │ 
    34 │ 	"m2"(): void
  
  i Suggested fix: Use a literal key instead.
  
    32 │ → ["m1"]():·void
       │   --  --        

```

```
invalid.ts:34:2 lint/complexity/useLiteralKeys  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! The computed expression can be simplified without the use of a string literal.
  
    32 │ 	["m1"](): void
    33 │ 
  > 34 │ 	"m2"(): void
       │ 	^^^^
    35 │ }
    36 │ 
  
  i Suggested fix: Use a literal key instead.
  
    34 │ → "m2"():·void
       │   -  -        

```


