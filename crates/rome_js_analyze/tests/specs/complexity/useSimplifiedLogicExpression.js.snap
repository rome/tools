---
source: crates/rome_js_analyze/tests/spec_tests.rs
expression: useSimplifiedLogicExpression.js
---
# Input
```js
// valid 
const boolExpr3 = true;
const boolExpr4 = false;
const r5 = !(boolExpr1 && boolExpr2);
const boolExpr5 = true;
const boolExpr6 = false;
const r6 = !!boolExpr1 || !!boolExpr2;
!!x
// invalid
const boolExp = true;
const r = true && boolExp;
const boolExp2 = true;
const r2 = boolExp || true;
const nonNullExp = 123;
const r3 = null ?? nonNullExp;
const boolExpr1 = true;
const boolExpr2 = false;
const r4 = !boolExpr1 || !boolExpr2;

```

# Diagnostics
```
useSimplifiedLogicExpression.js:11:11 lint/complexity/useSimplifiedLogicExpression  FIXABLE  ━━━━━━━━━━

  ! Logical expression contains unnecessary complexity.
  
     9 │ // invalid
    10 │ const boolExp = true;
  > 11 │ const r = true && boolExp;
       │           ^^^^^^^^^^^^^^^
    12 │ const boolExp2 = true;
    13 │ const r2 = boolExp || true;
  
  i Suggested fix: Discard redundant terms from the logical expression.
  
    11 │ const·r·=·true·&&·boolExp;
       │           --------        

```

```
useSimplifiedLogicExpression.js:13:12 lint/complexity/useSimplifiedLogicExpression  FIXABLE  ━━━━━━━━━━

  ! Logical expression contains unnecessary complexity.
  
    11 │ const r = true && boolExp;
    12 │ const boolExp2 = true;
  > 13 │ const r2 = boolExp || true;
       │            ^^^^^^^^^^^^^^^
    14 │ const nonNullExp = 123;
    15 │ const r3 = null ?? nonNullExp;
  
  i Suggested fix: Discard redundant terms from the logical expression.
  
    13 │ const·r2·=·boolExp·||·true;
       │            -----------     

```

```
useSimplifiedLogicExpression.js:15:12 lint/complexity/useSimplifiedLogicExpression  FIXABLE  ━━━━━━━━━━

  ! Logical expression contains unnecessary complexity.
  
    13 │ const r2 = boolExp || true;
    14 │ const nonNullExp = 123;
  > 15 │ const r3 = null ?? nonNullExp;
       │            ^^^^^^^^^^^^^^^^^^
    16 │ const boolExpr1 = true;
    17 │ const boolExpr2 = false;
  
  i Suggested fix: Discard redundant terms from the logical expression.
  
    15 │ const·r3·=·null·??·nonNullExp;
       │            --------           

```

```
useSimplifiedLogicExpression.js:18:12 lint/complexity/useSimplifiedLogicExpression  FIXABLE  ━━━━━━━━━━

  ! Logical expression contains unnecessary complexity.
  
    16 │ const boolExpr1 = true;
    17 │ const boolExpr2 = false;
  > 18 │ const r4 = !boolExpr1 || !boolExpr2;
       │            ^^^^^^^^^^^^^^^^^^^^^^^^
    19 │ 
  
  i Suggested fix: Reduce the complexity of the logical expression.
  
    16 16 │   const boolExpr1 = true;
    17 17 │   const boolExpr2 = false;
    18    │ - const·r4·=·!boolExpr1·||·!boolExpr2;
       18 │ + const·r4·=·!(boolExpr1·&&·boolExpr2);
    19 19 │   
  

```


