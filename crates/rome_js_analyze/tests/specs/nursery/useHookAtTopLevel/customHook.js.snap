---
source: crates/rome_js_analyze/tests/spec_tests.rs
expression: customHook.js
---
# Input
```js
function MyComponent() {
    // This is valid
    const { a } = useCustomHook();

    // This is invalid
    if (a) {
        const { a } = useCustomHook();
    }
}
```

# Diagnostics
```
customHook.js:7:23 lint/nursery/useHookAtTopLevel ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! This hook is not necessarily being called from the Top Level of the component function.
  
    5 │     // This is invalid
    6 │     if (a) {
  > 7 │         const { a } = useCustomHook();
      │                       ^^^^^^^^^^^^^
    8 │     }
    9 │ }
  
  i For React to preserve state between calls, hooks needs to be called always in the same order.
  
  i See https://reactjs.org/docs/hooks-rules.html#only-call-hooks-at-the-top-level
  

```


