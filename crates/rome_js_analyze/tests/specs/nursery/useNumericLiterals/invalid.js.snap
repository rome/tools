---
source: crates/rome_js_analyze/tests/spec_tests.rs
expression: invalid.js
---
# Input
```js
parseInt("111110111", 2) === 503;
parseInt("767", 8) === 503;
parseInt("1F7", 16) === 255;
Number.parseInt("111110111", 2) === 503;
Number.parseInt("767", 8) === 503;
Number.parseInt("1F7", 16) === 255;
parseInt('7999', 8);
parseInt('1234', 2);
parseInt('1234.5', 8);
parseInt('1️⃣3️⃣3️⃣7️⃣', 16);
Number.parseInt('7999', 8);
Number.parseInt('1234', 2);
Number.parseInt('1234.5', 8);
Number.parseInt('1️⃣3️⃣3️⃣7️⃣', 16);
parseInt(`111110111`, 2) === 503;
parseInt(`767`, 8) === 503;
parseInt(`1F7`, 16) === 255;
parseInt('', 8);
parseInt(``, 8);
parseInt(`7999`, 8);
parseInt(`1234`, 2);
parseInt(`1234.5`, 8);
parseInt('11', 2)
Number.parseInt('67', 8)
5+parseInt('A', 16)
function *f(){ yield(Number).parseInt('11', 2) }
function *f(){ yield(Number.parseInt)('67', 8) }
function *f(){ yield(parseInt)('A', 16) }
function *f(){ yield Number.parseInt('11', 2) }
function *f(){ yield/**/Number.parseInt('67', 8) }
function *f(){ yield(parseInt('A', 16)) }
parseInt('11', 2)+5
Number.parseInt('17', 8)+5
parseInt('A', 16)+5
parseInt('11', 2)in foo
Number.parseInt('17', 8)in foo
parseInt('A', 16)in foo
parseInt('11', 2) in foo
Number.parseInt('17', 8)/**/in foo
(parseInt('A', 16))in foo
/* comment */Number.parseInt('11', 2);
Number/**/.parseInt('11', 2);
Number//
.parseInt('11', 2);
Number./**/parseInt('11', 2);
Number.parseInt(/**/'11', 2);
Number.parseInt('11', /**/2);
Number.parseInt('11', 2)/* comment */;
parseInt/**/('11', 2);
parseInt(//
'11', 2);
parseInt('11'/**/, 2);
parseInt(`11`/**/, 2);
parseInt('11', 2 /**/);
parseInt('11', 2)//comment
;
parseInt?.("1F7", 16) === 255;
Number?.parseInt("1F7", 16) === 255;
Number?.parseInt?.("1F7", 16) === 255;
(Number?.parseInt)("1F7", 16) === 255;
(Number?.parseInt)?.("1F7", 16) === 255;
parseInt('1_0', 2);
Number.parseInt('5_000', 8);
parseInt('0_1', 16);
Number.parseInt('0_0', 16);

```

# Diagnostics
```
invalid.js:1:1 lint/nursery/useNumericLiterals  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use binary literals instead of parseInt()
  
  > 1 │ parseInt("111110111", 2) === 503;
      │ ^^^^^^^^^^^^^^^^^^^^^^^^
    2 │ parseInt("767", 8) === 503;
    3 │ parseInt("1F7", 16) === 255;
  
  i Suggested fix: Replace with binary literals
  
     1    │ - parseInt("111110111",·2)·===·503;
        1 │ + 0b111110111·===·503;
     2  2 │   parseInt("767", 8) === 503;
     3  3 │   parseInt("1F7", 16) === 255;
  

```

```
invalid.js:2:1 lint/nursery/useNumericLiterals  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use octal literals instead of parseInt()
  
    1 │ parseInt("111110111", 2) === 503;
  > 2 │ parseInt("767", 8) === 503;
      │ ^^^^^^^^^^^^^^^^^^
    3 │ parseInt("1F7", 16) === 255;
    4 │ Number.parseInt("111110111", 2) === 503;
  
  i Suggested fix: Replace with octal literals
  
     1  1 │   parseInt("111110111", 2) === 503;
     2    │ - parseInt("767",·8)·===·503;
        2 │ + 0o767·===·503;
     3  3 │   parseInt("1F7", 16) === 255;
     4  4 │   Number.parseInt("111110111", 2) === 503;
  

```

```
invalid.js:3:1 lint/nursery/useNumericLiterals  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use hexadecimal literals instead of parseInt()
  
    1 │ parseInt("111110111", 2) === 503;
    2 │ parseInt("767", 8) === 503;
  > 3 │ parseInt("1F7", 16) === 255;
      │ ^^^^^^^^^^^^^^^^^^^
    4 │ Number.parseInt("111110111", 2) === 503;
    5 │ Number.parseInt("767", 8) === 503;
  
  i Suggested fix: Replace with hexadecimal literals
  
     1  1 │   parseInt("111110111", 2) === 503;
     2  2 │   parseInt("767", 8) === 503;
     3    │ - parseInt("1F7",·16)·===·255;
        3 │ + 0x1F7·===·255;
     4  4 │   Number.parseInt("111110111", 2) === 503;
     5  5 │   Number.parseInt("767", 8) === 503;
  

```

```
invalid.js:4:1 lint/nursery/useNumericLiterals  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use binary literals instead of Number.parseInt()
  
    2 │ parseInt("767", 8) === 503;
    3 │ parseInt("1F7", 16) === 255;
  > 4 │ Number.parseInt("111110111", 2) === 503;
      │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    5 │ Number.parseInt("767", 8) === 503;
    6 │ Number.parseInt("1F7", 16) === 255;
  
  i Suggested fix: Replace with binary literals
  
     2  2 │   parseInt("767", 8) === 503;
     3  3 │   parseInt("1F7", 16) === 255;
     4    │ - Number.parseInt("111110111",·2)·===·503;
        4 │ + 0b111110111·===·503;
     5  5 │   Number.parseInt("767", 8) === 503;
     6  6 │   Number.parseInt("1F7", 16) === 255;
  

```

```
invalid.js:5:1 lint/nursery/useNumericLiterals  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use octal literals instead of Number.parseInt()
  
    3 │ parseInt("1F7", 16) === 255;
    4 │ Number.parseInt("111110111", 2) === 503;
  > 5 │ Number.parseInt("767", 8) === 503;
      │ ^^^^^^^^^^^^^^^^^^^^^^^^^
    6 │ Number.parseInt("1F7", 16) === 255;
    7 │ parseInt('7999', 8);
  
  i Suggested fix: Replace with octal literals
  
     3  3 │   parseInt("1F7", 16) === 255;
     4  4 │   Number.parseInt("111110111", 2) === 503;
     5    │ - Number.parseInt("767",·8)·===·503;
        5 │ + 0o767·===·503;
     6  6 │   Number.parseInt("1F7", 16) === 255;
     7  7 │   parseInt('7999', 8);
  

```

```
invalid.js:6:1 lint/nursery/useNumericLiterals  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use hexadecimal literals instead of Number.parseInt()
  
    4 │ Number.parseInt("111110111", 2) === 503;
    5 │ Number.parseInt("767", 8) === 503;
  > 6 │ Number.parseInt("1F7", 16) === 255;
      │ ^^^^^^^^^^^^^^^^^^^^^^^^^^
    7 │ parseInt('7999', 8);
    8 │ parseInt('1234', 2);
  
  i Suggested fix: Replace with hexadecimal literals
  
     4  4 │   Number.parseInt("111110111", 2) === 503;
     5  5 │   Number.parseInt("767", 8) === 503;
     6    │ - Number.parseInt("1F7",·16)·===·255;
        6 │ + 0x1F7·===·255;
     7  7 │   parseInt('7999', 8);
     8  8 │   parseInt('1234', 2);
  

```

```
invalid.js:7:1 lint/nursery/useNumericLiterals ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use octal literals instead of parseInt()
  
    5 │ Number.parseInt("767", 8) === 503;
    6 │ Number.parseInt("1F7", 16) === 255;
  > 7 │ parseInt('7999', 8);
      │ ^^^^^^^^^^^^^^^^^^^
    8 │ parseInt('1234', 2);
    9 │ parseInt('1234.5', 8);
  

```

```
invalid.js:8:1 lint/nursery/useNumericLiterals ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use binary literals instead of parseInt()
  
     6 │ Number.parseInt("1F7", 16) === 255;
     7 │ parseInt('7999', 8);
   > 8 │ parseInt('1234', 2);
       │ ^^^^^^^^^^^^^^^^^^^
     9 │ parseInt('1234.5', 8);
    10 │ parseInt('1��3��3��7��', 16);
  

```

```
invalid.js:9:1 lint/nursery/useNumericLiterals ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use octal literals instead of parseInt()
  
     7 │ parseInt('7999', 8);
     8 │ parseInt('1234', 2);
   > 9 │ parseInt('1234.5', 8);
       │ ^^^^^^^^^^^^^^^^^^^^^
    10 │ parseInt('1��3��3��7��', 16);
    11 │ Number.parseInt('7999', 8);
  

```

```
invalid.js:10:1 lint/nursery/useNumericLiterals ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use hexadecimal literals instead of parseInt()
  
     8 │ parseInt('1234', 2);
     9 │ parseInt('1234.5', 8);
  > 10 │ parseInt('1��3��3��7��', 16);
       │ ^^^^^^^^^^^^^^^^^^^^
    11 │ Number.parseInt('7999', 8);
    12 │ Number.parseInt('1234', 2);
  

```

```
invalid.js:11:1 lint/nursery/useNumericLiterals ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use octal literals instead of Number.parseInt()
  
     9 │ parseInt('1234.5', 8);
    10 │ parseInt('1��3��3��7��', 16);
  > 11 │ Number.parseInt('7999', 8);
       │ ^^^^^^^^^^^^^^^^^^^^^^^^^^
    12 │ Number.parseInt('1234', 2);
    13 │ Number.parseInt('1234.5', 8);
  

```

```
invalid.js:12:1 lint/nursery/useNumericLiterals ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use binary literals instead of Number.parseInt()
  
    10 │ parseInt('1��3��3��7��', 16);
    11 │ Number.parseInt('7999', 8);
  > 12 │ Number.parseInt('1234', 2);
       │ ^^^^^^^^^^^^^^^^^^^^^^^^^^
    13 │ Number.parseInt('1234.5', 8);
    14 │ Number.parseInt('1��3��3��7��', 16);
  

```

```
invalid.js:13:1 lint/nursery/useNumericLiterals ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use octal literals instead of Number.parseInt()
  
    11 │ Number.parseInt('7999', 8);
    12 │ Number.parseInt('1234', 2);
  > 13 │ Number.parseInt('1234.5', 8);
       │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    14 │ Number.parseInt('1��3��3��7��', 16);
    15 │ parseInt(`111110111`, 2) === 503;
  

```

```
invalid.js:14:1 lint/nursery/useNumericLiterals ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use hexadecimal literals instead of Number.parseInt()
  
    12 │ Number.parseInt('1234', 2);
    13 │ Number.parseInt('1234.5', 8);
  > 14 │ Number.parseInt('1��3��3��7��', 16);
       │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    15 │ parseInt(`111110111`, 2) === 503;
    16 │ parseInt(`767`, 8) === 503;
  

```

```
invalid.js:15:1 lint/nursery/useNumericLiterals  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use binary literals instead of parseInt()
  
    13 │ Number.parseInt('1234.5', 8);
    14 │ Number.parseInt('1��3��3��7��', 16);
  > 15 │ parseInt(`111110111`, 2) === 503;
       │ ^^^^^^^^^^^^^^^^^^^^^^^^
    16 │ parseInt(`767`, 8) === 503;
    17 │ parseInt(`1F7`, 16) === 255;
  
  i Suggested fix: Replace with binary literals
  
    13 13 │   Number.parseInt('1234.5', 8);
    14 14 │   Number.parseInt('1��3��3��7��', 16);
    15    │ - parseInt(`111110111`,·2)·===·503;
       15 │ + 0b111110111·===·503;
    16 16 │   parseInt(`767`, 8) === 503;
    17 17 │   parseInt(`1F7`, 16) === 255;
  

```

```
invalid.js:16:1 lint/nursery/useNumericLiterals  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use octal literals instead of parseInt()
  
    14 │ Number.parseInt('1��3��3��7��', 16);
    15 │ parseInt(`111110111`, 2) === 503;
  > 16 │ parseInt(`767`, 8) === 503;
       │ ^^^^^^^^^^^^^^^^^^
    17 │ parseInt(`1F7`, 16) === 255;
    18 │ parseInt('', 8);
  
  i Suggested fix: Replace with octal literals
  
    14 14 │   Number.parseInt('1��3��3��7��', 16);
    15 15 │   parseInt(`111110111`, 2) === 503;
    16    │ - parseInt(`767`,·8)·===·503;
       16 │ + 0o767·===·503;
    17 17 │   parseInt(`1F7`, 16) === 255;
    18 18 │   parseInt('', 8);
  

```

```
invalid.js:17:1 lint/nursery/useNumericLiterals  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use hexadecimal literals instead of parseInt()
  
    15 │ parseInt(`111110111`, 2) === 503;
    16 │ parseInt(`767`, 8) === 503;
  > 17 │ parseInt(`1F7`, 16) === 255;
       │ ^^^^^^^^^^^^^^^^^^^
    18 │ parseInt('', 8);
    19 │ parseInt(``, 8);
  
  i Suggested fix: Replace with hexadecimal literals
  
    15 15 │   parseInt(`111110111`, 2) === 503;
    16 16 │   parseInt(`767`, 8) === 503;
    17    │ - parseInt(`1F7`,·16)·===·255;
       17 │ + 0x1F7·===·255;
    18 18 │   parseInt('', 8);
    19 19 │   parseInt(``, 8);
  

```

```
invalid.js:18:1 lint/nursery/useNumericLiterals ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use octal literals instead of parseInt()
  
    16 │ parseInt(`767`, 8) === 503;
    17 │ parseInt(`1F7`, 16) === 255;
  > 18 │ parseInt('', 8);
       │ ^^^^^^^^^^^^^^^
    19 │ parseInt(``, 8);
    20 │ parseInt(`7999`, 8);
  

```

```
invalid.js:20:1 lint/nursery/useNumericLiterals ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use octal literals instead of parseInt()
  
    18 │ parseInt('', 8);
    19 │ parseInt(``, 8);
  > 20 │ parseInt(`7999`, 8);
       │ ^^^^^^^^^^^^^^^^^^^
    21 │ parseInt(`1234`, 2);
    22 │ parseInt(`1234.5`, 8);
  

```

```
invalid.js:21:1 lint/nursery/useNumericLiterals ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use binary literals instead of parseInt()
  
    19 │ parseInt(``, 8);
    20 │ parseInt(`7999`, 8);
  > 21 │ parseInt(`1234`, 2);
       │ ^^^^^^^^^^^^^^^^^^^
    22 │ parseInt(`1234.5`, 8);
    23 │ parseInt('11', 2)
  

```

```
invalid.js:22:1 lint/nursery/useNumericLiterals ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use octal literals instead of parseInt()
  
    20 │ parseInt(`7999`, 8);
    21 │ parseInt(`1234`, 2);
  > 22 │ parseInt(`1234.5`, 8);
       │ ^^^^^^^^^^^^^^^^^^^^^
    23 │ parseInt('11', 2)
    24 │ Number.parseInt('67', 8)
  

```

```
invalid.js:23:1 lint/nursery/useNumericLiterals  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use binary literals instead of parseInt()
  
    21 │ parseInt(`1234`, 2);
    22 │ parseInt(`1234.5`, 8);
  > 23 │ parseInt('11', 2)
       │ ^^^^^^^^^^^^^^^^^
    24 │ Number.parseInt('67', 8)
    25 │ 5+parseInt('A', 16)
  
  i Suggested fix: Replace with binary literals
  
    21 21 │   parseInt(`1234`, 2);
    22 22 │   parseInt(`1234.5`, 8);
    23    │ - parseInt('11',·2)
       23 │ + 0b11
    24 24 │   Number.parseInt('67', 8)
    25 25 │   5+parseInt('A', 16)
  

```

```
invalid.js:24:1 lint/nursery/useNumericLiterals  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use octal literals instead of Number.parseInt()
  
    22 │ parseInt(`1234.5`, 8);
    23 │ parseInt('11', 2)
  > 24 │ Number.parseInt('67', 8)
       │ ^^^^^^^^^^^^^^^^^^^^^^^^
    25 │ 5+parseInt('A', 16)
    26 │ function *f(){ yield(Number).parseInt('11', 2) }
  
  i Suggested fix: Replace with octal literals
  
    22 22 │   parseInt(`1234.5`, 8);
    23 23 │   parseInt('11', 2)
    24    │ - Number.parseInt('67',·8)
       24 │ + 0o67
    25 25 │   5+parseInt('A', 16)
    26 26 │   function *f(){ yield(Number).parseInt('11', 2) }
  

```

```
invalid.js:25:3 lint/nursery/useNumericLiterals  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use hexadecimal literals instead of parseInt()
  
    23 │ parseInt('11', 2)
    24 │ Number.parseInt('67', 8)
  > 25 │ 5+parseInt('A', 16)
       │   ^^^^^^^^^^^^^^^^^
    26 │ function *f(){ yield(Number).parseInt('11', 2) }
    27 │ function *f(){ yield(Number.parseInt)('67', 8) }
  
  i Suggested fix: Replace with hexadecimal literals
  
    23 23 │   parseInt('11', 2)
    24 24 │   Number.parseInt('67', 8)
    25    │ - 5+parseInt('A',·16)
       25 │ + 5+0xA
    26 26 │   function *f(){ yield(Number).parseInt('11', 2) }
    27 27 │   function *f(){ yield(Number.parseInt)('67', 8) }
  

```

```
invalid.js:26:21 lint/nursery/useNumericLiterals  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use binary literals instead of Number.parseInt()
  
    24 │ Number.parseInt('67', 8)
    25 │ 5+parseInt('A', 16)
  > 26 │ function *f(){ yield(Number).parseInt('11', 2) }
       │                     ^^^^^^^^^^^^^^^^^^^^^^^^^^
    27 │ function *f(){ yield(Number.parseInt)('67', 8) }
    28 │ function *f(){ yield(parseInt)('A', 16) }
  
  i Suggested fix: Replace with binary literals
  
    24 24 │   Number.parseInt('67', 8)
    25 25 │   5+parseInt('A', 16)
    26    │ - function·*f(){·yield(Number).parseInt('11',·2)·}
       26 │ + function·*f(){·yield·0b11·}
    27 27 │   function *f(){ yield(Number.parseInt)('67', 8) }
    28 28 │   function *f(){ yield(parseInt)('A', 16) }
  

```

```
invalid.js:27:21 lint/nursery/useNumericLiterals  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use octal literals instead of Number.parseInt()
  
    25 │ 5+parseInt('A', 16)
    26 │ function *f(){ yield(Number).parseInt('11', 2) }
  > 27 │ function *f(){ yield(Number.parseInt)('67', 8) }
       │                     ^^^^^^^^^^^^^^^^^^^^^^^^^^
    28 │ function *f(){ yield(parseInt)('A', 16) }
    29 │ function *f(){ yield Number.parseInt('11', 2) }
  
  i Suggested fix: Replace with octal literals
  
    25 25 │   5+parseInt('A', 16)
    26 26 │   function *f(){ yield(Number).parseInt('11', 2) }
    27    │ - function·*f(){·yield(Number.parseInt)('67',·8)·}
       27 │ + function·*f(){·yield·0o67·}
    28 28 │   function *f(){ yield(parseInt)('A', 16) }
    29 29 │   function *f(){ yield Number.parseInt('11', 2) }
  

```

```
invalid.js:28:21 lint/nursery/useNumericLiterals  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use hexadecimal literals instead of parseInt()
  
    26 │ function *f(){ yield(Number).parseInt('11', 2) }
    27 │ function *f(){ yield(Number.parseInt)('67', 8) }
  > 28 │ function *f(){ yield(parseInt)('A', 16) }
       │                     ^^^^^^^^^^^^^^^^^^^
    29 │ function *f(){ yield Number.parseInt('11', 2) }
    30 │ function *f(){ yield/**/Number.parseInt('67', 8) }
  
  i Suggested fix: Replace with hexadecimal literals
  
    26 26 │   function *f(){ yield(Number).parseInt('11', 2) }
    27 27 │   function *f(){ yield(Number.parseInt)('67', 8) }
    28    │ - function·*f(){·yield(parseInt)('A',·16)·}
       28 │ + function·*f(){·yield·0xA·}
    29 29 │   function *f(){ yield Number.parseInt('11', 2) }
    30 30 │   function *f(){ yield/**/Number.parseInt('67', 8) }
  

```

```
invalid.js:29:22 lint/nursery/useNumericLiterals  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use binary literals instead of Number.parseInt()
  
    27 │ function *f(){ yield(Number.parseInt)('67', 8) }
    28 │ function *f(){ yield(parseInt)('A', 16) }
  > 29 │ function *f(){ yield Number.parseInt('11', 2) }
       │                      ^^^^^^^^^^^^^^^^^^^^^^^^
    30 │ function *f(){ yield/**/Number.parseInt('67', 8) }
    31 │ function *f(){ yield(parseInt('A', 16)) }
  
  i Suggested fix: Replace with binary literals
  
    27 27 │   function *f(){ yield(Number.parseInt)('67', 8) }
    28 28 │   function *f(){ yield(parseInt)('A', 16) }
    29    │ - function·*f(){·yield·Number.parseInt('11',·2)·}
       29 │ + function·*f(){·yield·0b11·}
    30 30 │   function *f(){ yield/**/Number.parseInt('67', 8) }
    31 31 │   function *f(){ yield(parseInt('A', 16)) }
  

```

```
invalid.js:30:25 lint/nursery/useNumericLiterals  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use octal literals instead of Number.parseInt()
  
    28 │ function *f(){ yield(parseInt)('A', 16) }
    29 │ function *f(){ yield Number.parseInt('11', 2) }
  > 30 │ function *f(){ yield/**/Number.parseInt('67', 8) }
       │                         ^^^^^^^^^^^^^^^^^^^^^^^^
    31 │ function *f(){ yield(parseInt('A', 16)) }
    32 │ parseInt('11', 2)+5
  
  i Suggested fix: Replace with octal literals
  
    28 28 │   function *f(){ yield(parseInt)('A', 16) }
    29 29 │   function *f(){ yield Number.parseInt('11', 2) }
    30    │ - function·*f(){·yield/**/Number.parseInt('67',·8)·}
       30 │ + function·*f(){·yield/**/0o67·}
    31 31 │   function *f(){ yield(parseInt('A', 16)) }
    32 32 │   parseInt('11', 2)+5
  

```

```
invalid.js:31:22 lint/nursery/useNumericLiterals  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use hexadecimal literals instead of parseInt()
  
    29 │ function *f(){ yield Number.parseInt('11', 2) }
    30 │ function *f(){ yield/**/Number.parseInt('67', 8) }
  > 31 │ function *f(){ yield(parseInt('A', 16)) }
       │                      ^^^^^^^^^^^^^^^^^
    32 │ parseInt('11', 2)+5
    33 │ Number.parseInt('17', 8)+5
  
  i Suggested fix: Replace with hexadecimal literals
  
    29 29 │   function *f(){ yield Number.parseInt('11', 2) }
    30 30 │   function *f(){ yield/**/Number.parseInt('67', 8) }
    31    │ - function·*f(){·yield(parseInt('A',·16))·}
       31 │ + function·*f(){·yield(0xA)·}
    32 32 │   parseInt('11', 2)+5
    33 33 │   Number.parseInt('17', 8)+5
  

```

```
invalid.js:32:1 lint/nursery/useNumericLiterals  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use binary literals instead of parseInt()
  
    30 │ function *f(){ yield/**/Number.parseInt('67', 8) }
    31 │ function *f(){ yield(parseInt('A', 16)) }
  > 32 │ parseInt('11', 2)+5
       │ ^^^^^^^^^^^^^^^^^
    33 │ Number.parseInt('17', 8)+5
    34 │ parseInt('A', 16)+5
  
  i Suggested fix: Replace with binary literals
  
    30 30 │   function *f(){ yield/**/Number.parseInt('67', 8) }
    31 31 │   function *f(){ yield(parseInt('A', 16)) }
    32    │ - parseInt('11',·2)+5
       32 │ + 0b11+5
    33 33 │   Number.parseInt('17', 8)+5
    34 34 │   parseInt('A', 16)+5
  

```

```
invalid.js:33:1 lint/nursery/useNumericLiterals  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use octal literals instead of Number.parseInt()
  
    31 │ function *f(){ yield(parseInt('A', 16)) }
    32 │ parseInt('11', 2)+5
  > 33 │ Number.parseInt('17', 8)+5
       │ ^^^^^^^^^^^^^^^^^^^^^^^^
    34 │ parseInt('A', 16)+5
    35 │ parseInt('11', 2)in foo
  
  i Suggested fix: Replace with octal literals
  
    31 31 │   function *f(){ yield(parseInt('A', 16)) }
    32 32 │   parseInt('11', 2)+5
    33    │ - Number.parseInt('17',·8)+5
       33 │ + 0o17+5
    34 34 │   parseInt('A', 16)+5
    35 35 │   parseInt('11', 2)in foo
  

```

```
invalid.js:34:1 lint/nursery/useNumericLiterals  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use hexadecimal literals instead of parseInt()
  
    32 │ parseInt('11', 2)+5
    33 │ Number.parseInt('17', 8)+5
  > 34 │ parseInt('A', 16)+5
       │ ^^^^^^^^^^^^^^^^^
    35 │ parseInt('11', 2)in foo
    36 │ Number.parseInt('17', 8)in foo
  
  i Suggested fix: Replace with hexadecimal literals
  
    32 32 │   parseInt('11', 2)+5
    33 33 │   Number.parseInt('17', 8)+5
    34    │ - parseInt('A',·16)+5
       34 │ + 0xA+5
    35 35 │   parseInt('11', 2)in foo
    36 36 │   Number.parseInt('17', 8)in foo
  

```

```
invalid.js:35:1 lint/nursery/useNumericLiterals  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use binary literals instead of parseInt()
  
    33 │ Number.parseInt('17', 8)+5
    34 │ parseInt('A', 16)+5
  > 35 │ parseInt('11', 2)in foo
       │ ^^^^^^^^^^^^^^^^^
    36 │ Number.parseInt('17', 8)in foo
    37 │ parseInt('A', 16)in foo
  
  i Suggested fix: Replace with binary literals
  
    33 33 │   Number.parseInt('17', 8)+5
    34 34 │   parseInt('A', 16)+5
    35    │ - parseInt('11',·2)in·foo
       35 │ + 0b11·in·foo
    36 36 │   Number.parseInt('17', 8)in foo
    37 37 │   parseInt('A', 16)in foo
  

```

```
invalid.js:36:1 lint/nursery/useNumericLiterals  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use octal literals instead of Number.parseInt()
  
    34 │ parseInt('A', 16)+5
    35 │ parseInt('11', 2)in foo
  > 36 │ Number.parseInt('17', 8)in foo
       │ ^^^^^^^^^^^^^^^^^^^^^^^^
    37 │ parseInt('A', 16)in foo
    38 │ parseInt('11', 2) in foo
  
  i Suggested fix: Replace with octal literals
  
    34 34 │   parseInt('A', 16)+5
    35 35 │   parseInt('11', 2)in foo
    36    │ - Number.parseInt('17',·8)in·foo
       36 │ + 0o17·in·foo
    37 37 │   parseInt('A', 16)in foo
    38 38 │   parseInt('11', 2) in foo
  

```

```
invalid.js:37:1 lint/nursery/useNumericLiterals  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use hexadecimal literals instead of parseInt()
  
    35 │ parseInt('11', 2)in foo
    36 │ Number.parseInt('17', 8)in foo
  > 37 │ parseInt('A', 16)in foo
       │ ^^^^^^^^^^^^^^^^^
    38 │ parseInt('11', 2) in foo
    39 │ Number.parseInt('17', 8)/**/in foo
  
  i Suggested fix: Replace with hexadecimal literals
  
    35 35 │   parseInt('11', 2)in foo
    36 36 │   Number.parseInt('17', 8)in foo
    37    │ - parseInt('A',·16)in·foo
       37 │ + 0xA·in·foo
    38 38 │   parseInt('11', 2) in foo
    39 39 │   Number.parseInt('17', 8)/**/in foo
  

```

```
invalid.js:38:1 lint/nursery/useNumericLiterals  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use binary literals instead of parseInt()
  
    36 │ Number.parseInt('17', 8)in foo
    37 │ parseInt('A', 16)in foo
  > 38 │ parseInt('11', 2) in foo
       │ ^^^^^^^^^^^^^^^^^
    39 │ Number.parseInt('17', 8)/**/in foo
    40 │ (parseInt('A', 16))in foo
  
  i Suggested fix: Replace with binary literals
  
    36 36 │   Number.parseInt('17', 8)in foo
    37 37 │   parseInt('A', 16)in foo
    38    │ - parseInt('11',·2)·in·foo
       38 │ + 0b11·in·foo
    39 39 │   Number.parseInt('17', 8)/**/in foo
    40 40 │   (parseInt('A', 16))in foo
  

```

```
invalid.js:39:1 lint/nursery/useNumericLiterals  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use octal literals instead of Number.parseInt()
  
    37 │ parseInt('A', 16)in foo
    38 │ parseInt('11', 2) in foo
  > 39 │ Number.parseInt('17', 8)/**/in foo
       │ ^^^^^^^^^^^^^^^^^^^^^^^^
    40 │ (parseInt('A', 16))in foo
    41 │ /* comment */Number.parseInt('11', 2);
  
  i Suggested fix: Replace with octal literals
  
    37 37 │   parseInt('A', 16)in foo
    38 38 │   parseInt('11', 2) in foo
    39    │ - Number.parseInt('17',·8)/**/in·foo
       39 │ + 0o17/**/in·foo
    40 40 │   (parseInt('A', 16))in foo
    41 41 │   /* comment */Number.parseInt('11', 2);
  

```

```
invalid.js:40:2 lint/nursery/useNumericLiterals  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use hexadecimal literals instead of parseInt()
  
    38 │ parseInt('11', 2) in foo
    39 │ Number.parseInt('17', 8)/**/in foo
  > 40 │ (parseInt('A', 16))in foo
       │  ^^^^^^^^^^^^^^^^^
    41 │ /* comment */Number.parseInt('11', 2);
    42 │ Number/**/.parseInt('11', 2);
  
  i Suggested fix: Replace with hexadecimal literals
  
    38 38 │   parseInt('11', 2) in foo
    39 39 │   Number.parseInt('17', 8)/**/in foo
    40    │ - (parseInt('A',·16))in·foo
       40 │ + (0xA)in·foo
    41 41 │   /* comment */Number.parseInt('11', 2);
    42 42 │   Number/**/.parseInt('11', 2);
  

```

```
invalid.js:41:14 lint/nursery/useNumericLiterals  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use binary literals instead of Number.parseInt()
  
    39 │ Number.parseInt('17', 8)/**/in foo
    40 │ (parseInt('A', 16))in foo
  > 41 │ /* comment */Number.parseInt('11', 2);
       │              ^^^^^^^^^^^^^^^^^^^^^^^^
    42 │ Number/**/.parseInt('11', 2);
    43 │ Number//
  
  i Suggested fix: Replace with binary literals
  
    39 39 │   Number.parseInt('17', 8)/**/in foo
    40 40 │   (parseInt('A', 16))in foo
    41    │ - /*·comment·*/Number.parseInt('11',·2);
       41 │ + /*·comment·*/0b11;
    42 42 │   Number/**/.parseInt('11', 2);
    43 43 │   Number//
  

```

```
invalid.js:42:1 lint/nursery/useNumericLiterals  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use binary literals instead of Number.parseInt()
  
    40 │ (parseInt('A', 16))in foo
    41 │ /* comment */Number.parseInt('11', 2);
  > 42 │ Number/**/.parseInt('11', 2);
       │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    43 │ Number//
    44 │ .parseInt('11', 2);
  
  i Suggested fix: Replace with binary literals
  
    40 40 │   (parseInt('A', 16))in foo
    41 41 │   /* comment */Number.parseInt('11', 2);
    42    │ - Number/**/.parseInt('11',·2);
       42 │ + 0b11;
    43 43 │   Number//
    44 44 │   .parseInt('11', 2);
  

```

```
invalid.js:43:1 lint/nursery/useNumericLiterals  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use binary literals instead of Number.parseInt()
  
    41 │ /* comment */Number.parseInt('11', 2);
    42 │ Number/**/.parseInt('11', 2);
  > 43 │ Number//
       │ ^^^^^^^^
  > 44 │ .parseInt('11', 2);
       │ ^^^^^^^^^^^^^^^^^^
    45 │ Number./**/parseInt('11', 2);
    46 │ Number.parseInt(/**/'11', 2);
  
  i Suggested fix: Replace with binary literals
  
    41 41 │   /* comment */Number.parseInt('11', 2);
    42 42 │   Number/**/.parseInt('11', 2);
    43    │ - Number//
    44    │ - .parseInt('11',·2);
       43 │ + 0b11;
    45 44 │   Number./**/parseInt('11', 2);
    46 45 │   Number.parseInt(/**/'11', 2);
  

```

```
invalid.js:45:1 lint/nursery/useNumericLiterals  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use binary literals instead of Number.parseInt()
  
    43 │ Number//
    44 │ .parseInt('11', 2);
  > 45 │ Number./**/parseInt('11', 2);
       │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    46 │ Number.parseInt(/**/'11', 2);
    47 │ Number.parseInt('11', /**/2);
  
  i Suggested fix: Replace with binary literals
  
    43 43 │   Number//
    44 44 │   .parseInt('11', 2);
    45    │ - Number./**/parseInt('11',·2);
       45 │ + 0b11;
    46 46 │   Number.parseInt(/**/'11', 2);
    47 47 │   Number.parseInt('11', /**/2);
  

```

```
invalid.js:46:1 lint/nursery/useNumericLiterals  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use binary literals instead of Number.parseInt()
  
    44 │ .parseInt('11', 2);
    45 │ Number./**/parseInt('11', 2);
  > 46 │ Number.parseInt(/**/'11', 2);
       │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    47 │ Number.parseInt('11', /**/2);
    48 │ Number.parseInt('11', 2)/* comment */;
  
  i Suggested fix: Replace with binary literals
  
    44 44 │   .parseInt('11', 2);
    45 45 │   Number./**/parseInt('11', 2);
    46    │ - Number.parseInt(/**/'11',·2);
       46 │ + 0b11;
    47 47 │   Number.parseInt('11', /**/2);
    48 48 │   Number.parseInt('11', 2)/* comment */;
  

```

```
invalid.js:47:1 lint/nursery/useNumericLiterals  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use binary literals instead of Number.parseInt()
  
    45 │ Number./**/parseInt('11', 2);
    46 │ Number.parseInt(/**/'11', 2);
  > 47 │ Number.parseInt('11', /**/2);
       │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    48 │ Number.parseInt('11', 2)/* comment */;
    49 │ parseInt/**/('11', 2);
  
  i Suggested fix: Replace with binary literals
  
    45 45 │   Number./**/parseInt('11', 2);
    46 46 │   Number.parseInt(/**/'11', 2);
    47    │ - Number.parseInt('11',·/**/2);
       47 │ + 0b11;
    48 48 │   Number.parseInt('11', 2)/* comment */;
    49 49 │   parseInt/**/('11', 2);
  

```

```
invalid.js:48:1 lint/nursery/useNumericLiterals  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use binary literals instead of Number.parseInt()
  
    46 │ Number.parseInt(/**/'11', 2);
    47 │ Number.parseInt('11', /**/2);
  > 48 │ Number.parseInt('11', 2)/* comment */;
       │ ^^^^^^^^^^^^^^^^^^^^^^^^
    49 │ parseInt/**/('11', 2);
    50 │ parseInt(//
  
  i Suggested fix: Replace with binary literals
  
    46 46 │   Number.parseInt(/**/'11', 2);
    47 47 │   Number.parseInt('11', /**/2);
    48    │ - Number.parseInt('11',·2)/*·comment·*/;
       48 │ + 0b11/*·comment·*/;
    49 49 │   parseInt/**/('11', 2);
    50 50 │   parseInt(//
  

```

```
invalid.js:49:1 lint/nursery/useNumericLiterals  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use binary literals instead of parseInt()
  
    47 │ Number.parseInt('11', /**/2);
    48 │ Number.parseInt('11', 2)/* comment */;
  > 49 │ parseInt/**/('11', 2);
       │ ^^^^^^^^^^^^^^^^^^^^^
    50 │ parseInt(//
    51 │ '11', 2);
  
  i Suggested fix: Replace with binary literals
  
    47 47 │   Number.parseInt('11', /**/2);
    48 48 │   Number.parseInt('11', 2)/* comment */;
    49    │ - parseInt/**/('11',·2);
       49 │ + 0b11;
    50 50 │   parseInt(//
    51 51 │   '11', 2);
  

```

```
invalid.js:50:1 lint/nursery/useNumericLiterals  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use binary literals instead of parseInt()
  
    48 │ Number.parseInt('11', 2)/* comment */;
    49 │ parseInt/**/('11', 2);
  > 50 │ parseInt(//
       │ ^^^^^^^^^^^
  > 51 │ '11', 2);
       │ ^^^^^^^^
    52 │ parseInt('11'/**/, 2);
    53 │ parseInt(`11`/**/, 2);
  
  i Suggested fix: Replace with binary literals
  
    48 48 │   Number.parseInt('11', 2)/* comment */;
    49 49 │   parseInt/**/('11', 2);
    50    │ - parseInt(//
    51    │ - '11',·2);
       50 │ + 0b11;
    52 51 │   parseInt('11'/**/, 2);
    53 52 │   parseInt(`11`/**/, 2);
  

```

```
invalid.js:52:1 lint/nursery/useNumericLiterals  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use binary literals instead of parseInt()
  
    50 │ parseInt(//
    51 │ '11', 2);
  > 52 │ parseInt('11'/**/, 2);
       │ ^^^^^^^^^^^^^^^^^^^^^
    53 │ parseInt(`11`/**/, 2);
    54 │ parseInt('11', 2 /**/);
  
  i Suggested fix: Replace with binary literals
  
    50 50 │   parseInt(//
    51 51 │   '11', 2);
    52    │ - parseInt('11'/**/,·2);
       52 │ + 0b11;
    53 53 │   parseInt(`11`/**/, 2);
    54 54 │   parseInt('11', 2 /**/);
  

```

```
invalid.js:53:1 lint/nursery/useNumericLiterals  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use binary literals instead of parseInt()
  
    51 │ '11', 2);
    52 │ parseInt('11'/**/, 2);
  > 53 │ parseInt(`11`/**/, 2);
       │ ^^^^^^^^^^^^^^^^^^^^^
    54 │ parseInt('11', 2 /**/);
    55 │ parseInt('11', 2)//comment
  
  i Suggested fix: Replace with binary literals
  
    51 51 │   '11', 2);
    52 52 │   parseInt('11'/**/, 2);
    53    │ - parseInt(`11`/**/,·2);
       53 │ + 0b11;
    54 54 │   parseInt('11', 2 /**/);
    55 55 │   parseInt('11', 2)//comment
  

```

```
invalid.js:55:1 lint/nursery/useNumericLiterals  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use binary literals instead of parseInt()
  
    53 │ parseInt(`11`/**/, 2);
    54 │ parseInt('11', 2 /**/);
  > 55 │ parseInt('11', 2)//comment
       │ ^^^^^^^^^^^^^^^^^
    56 │ ;
    57 │ parseInt?.("1F7", 16) === 255;
  
  i Suggested fix: Replace with binary literals
  
    53 53 │   parseInt(`11`/**/, 2);
    54 54 │   parseInt('11', 2 /**/);
    55    │ - parseInt('11',·2)//comment
       55 │ + 0b11//comment
    56 56 │   ;
    57 57 │   parseInt?.("1F7", 16) === 255;
  

```

```
invalid.js:57:1 lint/nursery/useNumericLiterals  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use hexadecimal literals instead of parseInt()
  
    55 │ parseInt('11', 2)//comment
    56 │ ;
  > 57 │ parseInt?.("1F7", 16) === 255;
       │ ^^^^^^^^^^^^^^^^^^^^^
    58 │ Number?.parseInt("1F7", 16) === 255;
    59 │ Number?.parseInt?.("1F7", 16) === 255;
  
  i Suggested fix: Replace with hexadecimal literals
  
    55 55 │   parseInt('11', 2)//comment
    56 56 │   ;
    57    │ - parseInt?.("1F7",·16)·===·255;
       57 │ + 0x1F7·===·255;
    58 58 │   Number?.parseInt("1F7", 16) === 255;
    59 59 │   Number?.parseInt?.("1F7", 16) === 255;
  

```

```
invalid.js:58:1 lint/nursery/useNumericLiterals  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use hexadecimal literals instead of Number.parseInt()
  
    56 │ ;
    57 │ parseInt?.("1F7", 16) === 255;
  > 58 │ Number?.parseInt("1F7", 16) === 255;
       │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    59 │ Number?.parseInt?.("1F7", 16) === 255;
    60 │ (Number?.parseInt)("1F7", 16) === 255;
  
  i Suggested fix: Replace with hexadecimal literals
  
    56 56 │   ;
    57 57 │   parseInt?.("1F7", 16) === 255;
    58    │ - Number?.parseInt("1F7",·16)·===·255;
       58 │ + 0x1F7·===·255;
    59 59 │   Number?.parseInt?.("1F7", 16) === 255;
    60 60 │   (Number?.parseInt)("1F7", 16) === 255;
  

```

```
invalid.js:59:1 lint/nursery/useNumericLiterals  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use hexadecimal literals instead of Number.parseInt()
  
    57 │ parseInt?.("1F7", 16) === 255;
    58 │ Number?.parseInt("1F7", 16) === 255;
  > 59 │ Number?.parseInt?.("1F7", 16) === 255;
       │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    60 │ (Number?.parseInt)("1F7", 16) === 255;
    61 │ (Number?.parseInt)?.("1F7", 16) === 255;
  
  i Suggested fix: Replace with hexadecimal literals
  
    57 57 │   parseInt?.("1F7", 16) === 255;
    58 58 │   Number?.parseInt("1F7", 16) === 255;
    59    │ - Number?.parseInt?.("1F7",·16)·===·255;
       59 │ + 0x1F7·===·255;
    60 60 │   (Number?.parseInt)("1F7", 16) === 255;
    61 61 │   (Number?.parseInt)?.("1F7", 16) === 255;
  

```

```
invalid.js:60:1 lint/nursery/useNumericLiterals  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use hexadecimal literals instead of Number.parseInt()
  
    58 │ Number?.parseInt("1F7", 16) === 255;
    59 │ Number?.parseInt?.("1F7", 16) === 255;
  > 60 │ (Number?.parseInt)("1F7", 16) === 255;
       │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    61 │ (Number?.parseInt)?.("1F7", 16) === 255;
    62 │ parseInt('1_0', 2);
  
  i Suggested fix: Replace with hexadecimal literals
  
    58 58 │   Number?.parseInt("1F7", 16) === 255;
    59 59 │   Number?.parseInt?.("1F7", 16) === 255;
    60    │ - (Number?.parseInt)("1F7",·16)·===·255;
       60 │ + 0x1F7·===·255;
    61 61 │   (Number?.parseInt)?.("1F7", 16) === 255;
    62 62 │   parseInt('1_0', 2);
  

```

```
invalid.js:61:1 lint/nursery/useNumericLiterals  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use hexadecimal literals instead of Number.parseInt()
  
    59 │ Number?.parseInt?.("1F7", 16) === 255;
    60 │ (Number?.parseInt)("1F7", 16) === 255;
  > 61 │ (Number?.parseInt)?.("1F7", 16) === 255;
       │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    62 │ parseInt('1_0', 2);
    63 │ Number.parseInt('5_000', 8);
  
  i Suggested fix: Replace with hexadecimal literals
  
    59 59 │   Number?.parseInt?.("1F7", 16) === 255;
    60 60 │   (Number?.parseInt)("1F7", 16) === 255;
    61    │ - (Number?.parseInt)?.("1F7",·16)·===·255;
       61 │ + 0x1F7·===·255;
    62 62 │   parseInt('1_0', 2);
    63 63 │   Number.parseInt('5_000', 8);
  

```

```
invalid.js:62:1 lint/nursery/useNumericLiterals ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use binary literals instead of parseInt()
  
    60 │ (Number?.parseInt)("1F7", 16) === 255;
    61 │ (Number?.parseInt)?.("1F7", 16) === 255;
  > 62 │ parseInt('1_0', 2);
       │ ^^^^^^^^^^^^^^^^^^
    63 │ Number.parseInt('5_000', 8);
    64 │ parseInt('0_1', 16);
  

```

```
invalid.js:63:1 lint/nursery/useNumericLiterals ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use octal literals instead of Number.parseInt()
  
    61 │ (Number?.parseInt)?.("1F7", 16) === 255;
    62 │ parseInt('1_0', 2);
  > 63 │ Number.parseInt('5_000', 8);
       │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    64 │ parseInt('0_1', 16);
    65 │ Number.parseInt('0_0', 16);
  

```

```
invalid.js:64:1 lint/nursery/useNumericLiterals ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use hexadecimal literals instead of parseInt()
  
    62 │ parseInt('1_0', 2);
    63 │ Number.parseInt('5_000', 8);
  > 64 │ parseInt('0_1', 16);
       │ ^^^^^^^^^^^^^^^^^^^
    65 │ Number.parseInt('0_0', 16);
    66 │ 
  

```

```
invalid.js:65:1 lint/nursery/useNumericLiterals ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use hexadecimal literals instead of Number.parseInt()
  
    63 │ Number.parseInt('5_000', 8);
    64 │ parseInt('0_1', 16);
  > 65 │ Number.parseInt('0_0', 16);
       │ ^^^^^^^^^^^^^^^^^^^^^^^^^^
    66 │ 
  

```


