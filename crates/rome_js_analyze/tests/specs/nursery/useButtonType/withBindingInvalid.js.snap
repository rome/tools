---
source: crates/rome_js_analyze/tests/spec_tests.rs
expression: withBindingInvalid.js
---
# Input
```js
import React, { createElement } from "react";

React.createElement('button');
React.createElement('button', {
    "type": "bar"
});

createElement('button', {
    "type": "bar"
});
```

# Diagnostics
```
withBindingInvalid.js:3:21 lint/nursery/useButtonType ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Provide an explicit type prop for the button element.
  
    1 │ import React, { createElement } from "react";
    2 │ 
  > 3 │ React.createElement('button');
      │                     ^^^^^^^^
    4 │ React.createElement('button', {
    5 │     "type": "bar"
  
  i The default  type of a button is submit, which causes the submission of a form when placed inside a `form` element. This is likely not the behaviour that you want inside a React application.
  
  i Allowed button types are: submit, button or reset
  

```

```
withBindingInvalid.js:5:13 lint/nursery/useButtonType ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Provide a valid type prop for the button element.
  
    3 │ React.createElement('button');
    4 │ React.createElement('button', {
  > 5 │     "type": "bar"
      │             ^^^^^
    6 │ });
    7 │ 
  
  i The default  type of a button is submit, which causes the submission of a form when placed inside a `form` element. This is likely not the behaviour that you want inside a React application.
  
  i Allowed button types are: submit, button or reset
  

```

```
withBindingInvalid.js:9:13 lint/nursery/useButtonType ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Provide a valid type prop for the button element.
  
     8 │ createElement('button', {
   > 9 │     "type": "bar"
       │             ^^^^^
    10 │ });
  
  i The default  type of a button is submit, which causes the submission of a form when placed inside a `form` element. This is likely not the behaviour that you want inside a React application.
  
  i Allowed button types are: submit, button or reset
  

```


