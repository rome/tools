---
source: crates/rome_js_analyze/tests/spec_tests.rs
expression: withRenamedImportInvalid.js
---
# Input
```js
import AwesomeReact, { createElement as awesomeCreateElement } from "react";

AwesomeReact.createElement('button');
AwesomeReact.createElement('button', {
    "type": "AwesomeReact"
});

awesomeCreateElement('button', {
    "type": "awesomeCreateElement"
});
```

# Diagnostics
```
warning[nursery/useButtonType]: Provide an explicit type prop for the button element.
  ┌─ withRenamedImportInvalid.js:3:28
  │
3 │ AwesomeReact.createElement('button');
  │                            --------

=  note: The default  type of a button is submit, which causes the submission of a form when placed inside a `form` element. This is likely not the behaviour that you want inside a React application.
= help: Allowed button types are: submit, button or reset


```

```
warning[nursery/useButtonType]: Provide a correct type prop for the button element.
  ┌─ withRenamedImportInvalid.js:5:13
  │
5 │     "type": "AwesomeReact"
  │             --------------

=  note: The default  type of a button is submit, which causes the submission of a form when placed inside a `form` element. This is likely not the behaviour that you want inside a React application.
= help: Allowed button types are: submit, button or reset


```

```
warning[nursery/useButtonType]: Provide a correct type prop for the button element.
  ┌─ withRenamedImportInvalid.js:9:13
  │
9 │     "type": "awesomeCreateElement"
  │             ----------------------

=  note: The default  type of a button is submit, which causes the submission of a form when placed inside a `form` element. This is likely not the behaviour that you want inside a React application.
= help: Allowed button types are: submit, button or reset


```


