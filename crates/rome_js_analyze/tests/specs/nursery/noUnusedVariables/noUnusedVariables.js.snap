---
source: crates/rome_js_analyze/tests/spec_tests.rs
expression: noUnusedVariables.js
---
# Input
```js
import React from 'react';

const a = 1;
const b = 2,
	c = 3;
console.log(c);

function f1() {}

function f2() {
	f2();
}

function f3() {
	function g() {
		f3();
	}
	g();
}

function f41(a) {}
f41();

function f42(a, b) {
	console.log(a);
}
f42();

function f43(a, b) {
	console.log(a);
}
f43();

const f5 = () => {};

const f6 = () => {
	f6();
};

try {
} catch (e) {}

export function exported_function() {}

function exported_function_2() {}
export { exported_function_2 };

let value;
function Button() {}
console.log(<Button att={value}/>);

(function f(_a){})()

new (class C {

})
```

# Diagnostics
```
warning[nursery/noUnusedVariables]: This variable is unused.
  ┌─ noUnusedVariables.js:3:7
  │
3 │ const a = 1;
  │       -

=  note: Unused variables usually are result of incomplete refactoring, typos and other source of bugs.


```

```
warning[nursery/noUnusedVariables]: This variable is unused.
  ┌─ noUnusedVariables.js:4:7
  │
4 │ const b = 2,
  │       -

=  note: Unused variables usually are result of incomplete refactoring, typos and other source of bugs.


```

```
warning[nursery/noUnusedVariables]: This function is unused.
  ┌─ noUnusedVariables.js:8:10
  │
8 │ function f1() {}
  │          --

=  note: Unused variables usually are result of incomplete refactoring, typos and other source of bugs.


```

```
warning[nursery/noUnusedVariables]: This function is unused.
   ┌─ noUnusedVariables.js:10:10
   │
10 │ function f2() {
   │          --

=  note: Unused variables usually are result of incomplete refactoring, typos and other source of bugs.


```

```
warning[nursery/noUnusedVariables]: This function is unused.
   ┌─ noUnusedVariables.js:14:10
   │
14 │ function f3() {
   │          --

=  note: Unused variables usually are result of incomplete refactoring, typos and other source of bugs.


```

```
warning[nursery/noUnusedVariables]: This parameter is unused.
   ┌─ noUnusedVariables.js:21:14
   │
21 │ function f41(a) {}
   │              -

=  note: Unused variables usually are result of incomplete refactoring, typos and other source of bugs.


```

```
warning[nursery/noUnusedVariables]: This parameter is unused.
   ┌─ noUnusedVariables.js:24:17
   │
24 │ function f42(a, b) {
   │                 -

=  note: Unused variables usually are result of incomplete refactoring, typos and other source of bugs.


```

```
warning[nursery/noUnusedVariables]: This parameter is unused.
   ┌─ noUnusedVariables.js:29:17
   │
29 │ function f43(a, b) {
   │                 -

=  note: Unused variables usually are result of incomplete refactoring, typos and other source of bugs.


```

```
warning[nursery/noUnusedVariables]: This variable is unused.
   ┌─ noUnusedVariables.js:34:7
   │
34 │ const f5 = () => {};
   │       --

=  note: Unused variables usually are result of incomplete refactoring, typos and other source of bugs.


```

```
warning[nursery/noUnusedVariables]: This variable is unused.
   ┌─ noUnusedVariables.js:36:7
   │
36 │ const f6 = () => {
   │       --

=  note: Unused variables usually are result of incomplete refactoring, typos and other source of bugs.


```

```
warning[nursery/noUnusedVariables]: This variable is unused.
   ┌─ noUnusedVariables.js:41:10
   │
41 │ } catch (e) {}
   │          -

=  note: Unused variables usually are result of incomplete refactoring, typos and other source of bugs.


```


