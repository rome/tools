---
source: crates/rome_js_analyze/tests/spec_tests.rs
expression: invalid.js
---
# Input
```js
a["b"];
a.b["c"];
a.b["c"].d.e["f"];
a.b[`c`];
a.b[c["d"]];

```

# Diagnostics
```
invalid.js:1:3 lint/nursery/useLiteralKeys  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! The computed expression can be simplified without the use of a string literal.
  
  > 1 │ a["b"];
      │   ^^^
    2 │ a.b["c"];
    3 │ a.b["c"].d.e["f"];
  
  i Suggested fix: Replace it with a static expression.
  
    1   │ - a["b"];
      1 │ + a.b;
    2 2 │   a.b["c"];
    3 3 │   a.b["c"].d.e["f"];
  

```

```
invalid.js:2:5 lint/nursery/useLiteralKeys  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! The computed expression can be simplified without the use of a string literal.
  
    1 │ a["b"];
  > 2 │ a.b["c"];
      │     ^^^
    3 │ a.b["c"].d.e["f"];
    4 │ a.b[`c`];
  
  i Suggested fix: Replace it with a static expression.
  
    1 1 │   a["b"];
    2   │ - a.b["c"];
      2 │ + a.b.c;
    3 3 │   a.b["c"].d.e["f"];
    4 4 │   a.b[`c`];
  

```

```
invalid.js:3:5 lint/nursery/useLiteralKeys  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! The computed expression can be simplified without the use of a string literal.
  
    1 │ a["b"];
    2 │ a.b["c"];
  > 3 │ a.b["c"].d.e["f"];
      │     ^^^
    4 │ a.b[`c`];
    5 │ a.b[c["d"]];
  
  i Suggested fix: Replace it with a static expression.
  
    1 1 │   a["b"];
    2 2 │   a.b["c"];
    3   │ - a.b["c"].d.e["f"];
      3 │ + a.b.c.d.e["f"];
    4 4 │   a.b[`c`];
    5 5 │   a.b[c["d"]];
  

```

```
invalid.js:3:14 lint/nursery/useLiteralKeys  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! The computed expression can be simplified without the use of a string literal.
  
    1 │ a["b"];
    2 │ a.b["c"];
  > 3 │ a.b["c"].d.e["f"];
      │              ^^^
    4 │ a.b[`c`];
    5 │ a.b[c["d"]];
  
  i Suggested fix: Replace it with a static expression.
  
    1 1 │   a["b"];
    2 2 │   a.b["c"];
    3   │ - a.b["c"].d.e["f"];
      3 │ + a.b["c"].d.e.f;
    4 4 │   a.b[`c`];
    5 5 │   a.b[c["d"]];
  

```

```
invalid.js:4:5 lint/nursery/useLiteralKeys  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! The computed expression can be simplified without the use of a string literal.
  
    2 │ a.b["c"];
    3 │ a.b["c"].d.e["f"];
  > 4 │ a.b[`c`];
      │     ^^^
    5 │ a.b[c["d"]];
    6 │ 
  
  i Suggested fix: Replace it with a static expression.
  
    2 2 │   a.b["c"];
    3 3 │   a.b["c"].d.e["f"];
    4   │ - a.b[`c`];
      4 │ + a.b.c;
    5 5 │   a.b[c["d"]];
    6 6 │   
  

```

```
invalid.js:5:7 lint/nursery/useLiteralKeys  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! The computed expression can be simplified without the use of a string literal.
  
    3 │ a.b["c"].d.e["f"];
    4 │ a.b[`c`];
  > 5 │ a.b[c["d"]];
      │       ^^^
    6 │ 
  
  i Suggested fix: Replace it with a static expression.
  
    3 3 │   a.b["c"].d.e["f"];
    4 4 │   a.b[`c`];
    5   │ - a.b[c["d"]];
      5 │ + a.b[c.d];
    6 6 │   
  

```


