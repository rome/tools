---
source: crates/rome_js_analyze/tests/spec_tests.rs
expression: useFragmentSyntax.jsx
---
# Input
```js
import React, {Fragment} from "react";

<div>
    {/* invalid */}
    <Fragment>
        <p>Lorem</p>
        <strong>Ipsum</strong>
    </Fragment>

    <React.Fragment>
        <acronym>Lorem</acronym>
        <aside>Ipsum</aside>
    </React.Fragment>

    </*comment*/Fragment>
        <p>Lorem</p>
        <strong>Ipsum</strong>
    </ /*comment*/Fragment>

    {/* valid */}
    <Fragment key="1">
        <p>Lorem</p>
        <strong>Ipsum</strong>
    </Fragment>

    <React.Fragment key="1">
        <acronym>Lorem</acronym>
        <aside>Ipsum</aside>
    </React.Fragment>
</div>
```

# Diagnostics
```
useFragmentSyntax.jsx:5:5 lint/nursery/useFragmentSyntax  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use shorthand syntax for Fragment elements instead of standard syntax.
  
    ┌─ useFragmentSyntax.jsx:5:5
    │  
  5 │ ┌     <Fragment>
  6 │ │         <p>Lorem</p>
  7 │ │         <strong>Ipsum</strong>
  8 │ │     </Fragment>
    │ └───────────────^
  
  i Shorthand fragment syntax saves keystrokes and is only inapplicable when keys are required.
  
  i Suggested fix: Replace <Fragment> with the fragment syntax
  
      | @@ -2,10 +2,10 @@
  1 1 |   
  2 2 |   <div>
  3 3 |       {/* invalid */}
  4   | -     <Fragment>
    4 | +     <>
  5 5 |           <p>Lorem</p>
  6 6 |           <strong>Ipsum</strong>
  7   | -     </Fragment>
    7 | +     </>
  8 8 |   
  9 9 |       <React.Fragment>
  10 10 |           <acronym>Lorem</acronym>
  

```

```
useFragmentSyntax.jsx:10:5 lint/nursery/useFragmentSyntax  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use shorthand syntax for Fragment elements instead of standard syntax.
  
     ┌─ useFragmentSyntax.jsx:10:5
     │  
  10 │ ┌     <React.Fragment>
  11 │ │         <acronym>Lorem</acronym>
  12 │ │         <aside>Ipsum</aside>
  13 │ │     </React.Fragment>
     │ └─────────────────────^
  
  i Shorthand fragment syntax saves keystrokes and is only inapplicable when keys are required.
  
  i Suggested fix: Replace <Fragment> with the fragment syntax
  
        | @@ -7,10 +7,10 @@
   6  6 |           <strong>Ipsum</strong>
   7  7 |       </Fragment>
   8  8 |   
   9    | -     <React.Fragment>
      9 | +     <>
  10 10 |           <acronym>Lorem</acronym>
  11 11 |           <aside>Ipsum</aside>
  12    | -     </React.Fragment>
     12 | +     </>
  13 13 |   
  14 14 |       </*comment*/Fragment>
  15 15 |           <p>Lorem</p>
  

```

```
useFragmentSyntax.jsx:15:5 lint/nursery/useFragmentSyntax  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Use shorthand syntax for Fragment elements instead of standard syntax.
  
     ┌─ useFragmentSyntax.jsx:15:5
     │  
  15 │ ┌     </*comment*/Fragment>
  16 │ │         <p>Lorem</p>
  17 │ │         <strong>Ipsum</strong>
  18 │ │     </ /*comment*/Fragment>
     │ └───────────────────────────^
  
  i Shorthand fragment syntax saves keystrokes and is only inapplicable when keys are required.
  
  i Suggested fix: Replace <Fragment> with the fragment syntax
  
        | @@ -12,10 +12,10 @@
  11 11 |           <aside>Ipsum</aside>
  12 12 |       </React.Fragment>
  13 13 |   
  14    | -     </*comment*/Fragment>
     14 | +     </*comment*/>
  15 15 |           <p>Lorem</p>
  16 16 |           <strong>Ipsum</strong>
  17    | -     </ /*comment*/Fragment>
     17 | +     </ /*comment*/>
  18 18 |   
  19 19 |       {/* valid */}
  20 20 |       <Fragment key="1">
  

```


