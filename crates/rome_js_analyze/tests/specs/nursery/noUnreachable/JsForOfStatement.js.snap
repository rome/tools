---
source: crates/rome_js_analyze/tests/spec_tests.rs
expression: JsForOfStatement.js
---
# Input
```js
function JsForOfStatement1() {
    for (const key of value) {
        break;
        afterBreak();
    }
}

function JsForOfStatement2() {
    for (const key of value) {
        continue;
        afterContinue();
    }
}

```

# Diagnostics
```
JsForOfStatement.js:4:9 lint/nursery/noUnreachable ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! This code is unreachable
  
  ! ... before it can reach this code
  
    2 │     for (const key of value) {
    3 │         break;
  > 4 │         afterBreak();
      │         ^^^^^^^^^^^^^
    5 │     }
    6 │ }
  
  i This statement will break the flow of the code ...
  
    1 │ function JsForOfStatement1() {
    2 │     for (const key of value) {
  > 3 │         break;
      │         ^^^^^^
    4 │         afterBreak();
    5 │     }
  

```

```
JsForOfStatement.js:11:9 lint/nursery/noUnreachable ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! This code is unreachable
  
  ! ... before it can reach this code
  
     9 │     for (const key of value) {
    10 │         continue;
  > 11 │         afterContinue();
       │         ^^^^^^^^^^^^^^^^
    12 │     }
    13 │ }
  
  i This statement will continue the loop ...
  
     8 │ function JsForOfStatement2() {
     9 │     for (const key of value) {
  > 10 │         continue;
       │         ^^^^^^^^^
    11 │         afterContinue();
    12 │     }
  

```


