---
source: crates/rome_js_analyze/tests/spec_tests.rs
expression: HighComplexity.js
---
# Input
```js
function HighComplexity1() {
    if (a) { func() } else { func() };
    if (a) { func() } else { func() };
    if (a) { func() } else { func() };
    if (a) { func() } else { func() };
    if (a) { func() } else { func() };
    if (a) { func() } else { func() };
    if (a) { func() } else { func() };
    if (a) { func() } else { func() };
    if (a) { func() } else { func() };
    if (a) { func() } else { func() };
    if (a) { func() } else { func() };
    if (a) { func() } else { func() };
    if (a) { func() } else { func() };
    if (a) { func() } else { func() };
    if (a) { func() } else { func() };
    if (a) { func() } else { func() };
    if (a) { func() } else { func() };
    if (a) { func() } else { func() };
    if (a) { func() } else { func() };
    if (a) { func() } else { func() };
    if (a) { func() } else { func() };
    if (a) { func() } else { func() };
    if (a) { func() } else { func() };
    if (a) { func() } else { func() };
    if (a) { func() } else { func() };

    return;
    afterReturn();
}

function HighComplexity2() {
    try {
        !a && !a;
    } catch (err) {
        err = 2;
    }
    try {
        !a && !a;
    } catch (err) {
        err = 2;
    }
    try {
        !a && !a;
    } catch (err) {
        err = 2;
    }
    try {
        !a && !a;
    } catch (err) {
        err = 2;
    }
    try {
        !a && !a;
    } catch (err) {
        err = 2;
    }
    try {
        !a && !a;
    } catch (err) {
        err = 2;
    }
    try {
        !a && !a;
    } catch (err) {
        err = 2;
    }
    try {
        !a && !a;
    } catch (err) {
        err = 2;
    }
    try {
        !a && !a;
    } catch (err) {
        err = 2;
    }
    try {
        !a && !a;
    } catch (err) {
        err = 2;
    }
    try {
        !a && !a;
    } catch (err) {
        err = 2;
    }
    try {
        !a && !a;
    } catch (err) {
        err = 2;
    }
    try {
        !a && !a;
    } catch (err) {
        err = 2;
    }
    try {
        !a && !a;
    } catch (err) {
        err = 2;
    }
    try {
        !a && !a;
    } catch (err) {
        err = 2;
    }
    try {
        !a && !a;
    } catch (err) {
        err = 2;
    }
    try {
        !a && !a;
    } catch (err) {
        err = 2;
    }
    try {
        !a && !a;
    } catch (err) {
        err = 2;
    }
    try {
        !a && !a;
    } catch (err) {
        err = 2;
    }
    try {
        !a && !a;
    } catch (err) {
        err = 2;
    }
    try {
        !a && !a;
    } catch (err) {
        err = 2;
    }
    try {
        !a && !a;
    } catch (err) {
        err = 2;
    }
    try {
        !a && !a;
    } catch (err) {
        err = 2;
    }
    try {
        !a && !a;
    } catch (err) {
        err = 2;
    }
    try {
        !a && !a;
    } catch (err) {
        err = 2;
    }
    try {
        !a && !a;
    } catch (err) {
        err = 2;
    }
    try {
        !a && !a;
    } catch (err) {
        err = 2;
    }
    try {
        !a && !a;
    } catch (err) {
        err = 2;
    }
    try {
        !a && !a;
    } catch (err) {
        err = 2;
    }
    try {
        !a && !a;
    } catch (err) {
        err = 2;
    }
    try {
        !a && !a;
    } catch (err) {
        err = 2;
    }
    try {
        !a && !a;
    } catch (err) {
        err = 2;
    }
    try {
        !a && !a;
    } catch (err) {
        err = 2;
    }
    try {
        !a && !a;
    } catch (err) {
        err = 2;
    }
    try {
        !a && !a;
    } catch (err) {
        err = 2;
    }
    try {
        !a && !a;
    } catch (err) {
        err = 2;
    }
    try {
        !a && !a;
    } catch (err) {
        err = 2;
    }
    try {
        !a && !a;
    } catch (err) {
        err = 2;
    }
    try {
        !a && !a;
    } catch (err) {
        err = 2;
    }
    try {
        !a && !a;
    } catch (err) {
        err = 2;
    }
    try {
        !a && !a;
    } catch (err) {
        err = 2;
    }

    return;
    afterReturn();
}

```

# Diagnostics
```
warning[nursery/noUnreachable]: This code is unreachable
   ┌─ HighComplexity.js:29:5
   │
29 │     afterReturn();
   │     --------------


```

```
warning[nursery/noUnreachable]: This code is unreachable
    ┌─ HighComplexity.js:240:5
    │
240 │     afterReturn();
    │     --------------


```


