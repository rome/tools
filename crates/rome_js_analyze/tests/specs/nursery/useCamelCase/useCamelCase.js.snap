---
source: crates/rome_js_analyze/tests/spec_tests.rs
expression: useCamelCase.js
---
# Input
```js
let snake_case;
snake_case = 1;
let _snake_case;
console.log(_snake_case);

function snake_function(snake_case, PascalCase) {}

class PascalCase {
	snake_property = 1;
	#private_snake_property = 2;
	#validPrivateMember = 3;

	snake_function() {}

	get snake_getter() {}
	set snake_setter(v) {
		console.log(v);
	}
}

console.log({
	snake_function() {},
	get snake_getter() {},
	set snake_setter(v) {
		console.log(v);
	},
});

let camelCase;
let longCamelCase;

let UPPER_CASE = 1;
let { UPPER_CASE } = env;
let [ UPPER_CASE ] = env;

const THIS_IS_OK = 1;
const { THIS_IS_OK } = env;
const [ THIS_IS_OK ] = env;

function PascalCaseOkBecauseNew() { }
console.log(new PascalCaseOkBecauseNew());

function PascalCaseOkBecauseExport() { }
export default PascalCaseOkBecauseExport;

function PascalCaseNOk() { }
console.log(PascalCaseNOk());

```

# Diagnostics
```
useCamelCase.js:1:5 lint/nursery/useCamelCase  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Prefer variables names in camel case.
  
  > 1 │ let snake_case;
      │     ^^^^^^^^^^
    2 │ snake_case = 1;
    3 │ let _snake_case;
  
  i Safe fix: Rename this symbol to camel case
  
     1    │ - let·snake_case;
     2    │ - snake_case·=·1;
        1 │ + let·snakeCase;
        2 │ + snakeCase·=·1;
     3  3 │   let _snake_case;
     4  4 │   console.log(_snake_case);
  

```

```
useCamelCase.js:6:10 lint/nursery/useCamelCase  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Prefer functions names in camel case.
  
    4 │ console.log(_snake_case);
    5 │ 
  > 6 │ function snake_function(snake_case, PascalCase) {}
      │          ^^^^^^^^^^^^^^
    7 │ 
    8 │ class PascalCase {
  
  i Safe fix: Rename this symbol to camel case
  
     4  4 │   console.log(_snake_case);
     5  5 │   
     6    │ - function·snake_function(snake_case,·PascalCase)·{}
        6 │ + function·snakeFunction(snake_case,·PascalCase)·{}
     7  7 │   
     8  8 │   class PascalCase {
  

```

```
useCamelCase.js:6:25 lint/nursery/useCamelCase  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Prefer parameters names in camel case.
  
    4 │ console.log(_snake_case);
    5 │ 
  > 6 │ function snake_function(snake_case, PascalCase) {}
      │                         ^^^^^^^^^^
    7 │ 
    8 │ class PascalCase {
  
  i Safe fix: Rename this symbol to camel case
  
     4  4 │   console.log(_snake_case);
     5  5 │   
     6    │ - function·snake_function(snake_case,·PascalCase)·{}
        6 │ + function·snake_function(snakeCase,·PascalCase)·{}
     7  7 │   
     8  8 │   class PascalCase {
  

```

```
useCamelCase.js:6:37 lint/nursery/useCamelCase  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Prefer parameters names in camel case.
  
    4 │ console.log(_snake_case);
    5 │ 
  > 6 │ function snake_function(snake_case, PascalCase) {}
      │                                     ^^^^^^^^^^
    7 │ 
    8 │ class PascalCase {
  
  i Safe fix: Rename this symbol to camel case
  
     4  4 │   console.log(_snake_case);
     5  5 │   
     6    │ - function·snake_function(snake_case,·PascalCase)·{}
        6 │ + function·snake_function(snake_case,·pascalCase)·{}
     7  7 │   
     8  8 │   class PascalCase {
  

```

```
useCamelCase.js:9:2 lint/nursery/useCamelCase ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Prefer properties names in camel case.
  
     8 │ class PascalCase {
   > 9 │ 	snake_property = 1;
       │ 	^^^^^^^^^^^^^^
    10 │ 	#private_snake_property = 2;
    11 │ 	#validPrivateMember = 3;
  

```

```
useCamelCase.js:10:2 lint/nursery/useCamelCase ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Prefer properties names in camel case.
  
     8 │ class PascalCase {
     9 │ 	snake_property = 1;
  > 10 │ 	#private_snake_property = 2;
       │ 	^^^^^^^^^^^^^^^^^^^^^^^
    11 │ 	#validPrivateMember = 3;
    12 │ 
  

```

```
useCamelCase.js:13:2 lint/nursery/useCamelCase ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Prefer methods names in camel case.
  
    11 │ 	#validPrivateMember = 3;
    12 │ 
  > 13 │ 	snake_function() {}
       │ 	^^^^^^^^^^^^^^
    14 │ 
    15 │ 	get snake_getter() {}
  

```

```
useCamelCase.js:15:6 lint/nursery/useCamelCase ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Prefer methods names in camel case.
  
    13 │ 	snake_function() {}
    14 │ 
  > 15 │ 	get snake_getter() {}
       │ 	    ^^^^^^^^^^^^
    16 │ 	set snake_setter(v) {
    17 │ 		console.log(v);
  

```

```
useCamelCase.js:16:6 lint/nursery/useCamelCase ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Prefer methods names in camel case.
  
    15 │ 	get snake_getter() {}
  > 16 │ 	set snake_setter(v) {
       │ 	    ^^^^^^^^^^^^
    17 │ 		console.log(v);
    18 │ 	}
  

```

```
useCamelCase.js:32:5 lint/nursery/useCamelCase  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Prefer variables names in camel case.
  
    30 │ let longCamelCase;
    31 │ 
  > 32 │ let UPPER_CASE = 1;
       │     ^^^^^^^^^^
    33 │ let { UPPER_CASE } = env;
    34 │ let [ UPPER_CASE ] = env;
  
  i Safe fix: Rename this symbol to camel case
  
    30 30 │   let longCamelCase;
    31 31 │   
    32    │ - let·UPPER_CASE·=·1;
       32 │ + let·uPPERCASE·=·1;
    33 33 │   let { UPPER_CASE } = env;
    34 34 │   let [ UPPER_CASE ] = env;
  

```

```
useCamelCase.js:46:10 lint/nursery/useCamelCase  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Prefer functions names in camel case.
  
    44 │ export default PascalCaseOkBecauseExport;
    45 │ 
  > 46 │ function PascalCaseNOk() { }
       │          ^^^^^^^^^^^^^
    47 │ console.log(PascalCaseNOk());
    48 │ 
  
  i Safe fix: Rename this symbol to camel case
  
    44 44 │   export default PascalCaseOkBecauseExport;
    45 45 │   
    46    │ - function·PascalCaseNOk()·{·}
    47    │ - console.log(PascalCaseNOk());
       46 │ + function·pascalCaseNOk()·{·}
       47 │ + console.log(pascalCaseNOk());
    48 48 │   
  

```


