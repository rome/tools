---
source: crates/rome_js_analyze/tests/spec_tests.rs
assertion_line: 86
expression: invalid.js
---
# Input
```js
// js module
function foo() {
	"use strict";
}

class C1 {
	// All code here is evaluated in strict mode
	test() {
		"use strict";
	}
}

const C2 = class {
	// All code here is evaluated in strict mode
	test() {
		"use strict";
	}
};

```

# Diagnostics
```
invalid.js:3:2 lint/nursery/noRedundantUseStrict  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Redundant use strict directive.
  
    1 │ // js module
    2 │ function foo() {
  > 3 │ 	"use strict";
      │ 	^^^^^^^^^^^^^
    4 │ }
    5 │ 
  
  i The entire contents of JavaScript modules are automatically in strict mode, with no statement needed to initiate it.
  
  i Safe fix: Remove the redundant "use strict" directive
  
     1  1 │   // js module
     2  2 │   function foo() {
     3    │ - → "use·strict";
     4  3 │   }
     5  4 │   
  

```

```
invalid.js:9:3 lint/nursery/noRedundantUseStrict  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Redundant use strict directive.
  
     7 │ 	// All code here is evaluated in strict mode
     8 │ 	test() {
   > 9 │ 		"use strict";
       │ 		^^^^^^^^^^^^^
    10 │ 	}
    11 │ }
  
  i The entire contents of JavaScript modules are automatically in strict mode, with no statement needed to initiate it.
  
  i Safe fix: Remove the redundant "use strict" directive
  
     7  7 │   	// All code here is evaluated in strict mode
     8  8 │   	test() {
     9    │ - → → "use·strict";
    10    │ - → }
        9 │ + → }
    11 10 │   }
    12 11 │   
  

```

```
invalid.js:16:3 lint/nursery/noRedundantUseStrict  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Redundant use strict directive.
  
    14 │ 	// All code here is evaluated in strict mode
    15 │ 	test() {
  > 16 │ 		"use strict";
       │ 		^^^^^^^^^^^^^
    17 │ 	}
    18 │ };
  
  i The entire contents of JavaScript modules are automatically in strict mode, with no statement needed to initiate it.
  
  i Safe fix: Remove the redundant "use strict" directive
  
    14 14 │   	// All code here is evaluated in strict mode
    15 15 │   	test() {
    16    │ - → → "use·strict";
    17    │ - → }
       16 │ + → }
    18 17 │   };
    19 18 │   
  

```


