---
source: crates/rome_js_analyze/tests/spec_tests.rs
assertion_line: 98
expression: logicalAndCases.js
---
# Input
```js
// base cases


// case with a call expr inside the chain for some inefficient reason
foo != undefined && foo.bar() != undefined && foo.bar().baz != undefined && foo.bar().baz.buzz != undefined && foo.bar().baz.buzz()

// chained calls with element access
foo != undefined && foo.bar != undefined && foo.bar.baz != undefined && foo.bar.baz[buzz]()
foo != undefined && foo.bar != undefined && foo.bar.baz != undefined && foo.bar.baz[buzz] != undefined && foo.bar.baz[buzz]()

// (partially) pre-optional chained
foo != undefined && foo?.bar != undefined && foo?.bar.baz != undefined && foo?.bar.baz[buzz] != undefined && foo?.bar.baz[buzz]()
foo != undefined && foo?.bar.baz != undefined && foo?.bar.baz[buzz]
foo != undefined && foo?.() != undefined && foo?.().bar
foo.bar != undefined && foo.bar?.() != undefined && foo.bar?.().baz

//private static member name
foo && foo.#bar
foo.#bar && foo.#bar.#baz
foo.#bar && foo.#bar()
foo && foo.#bar && foo.#bar.#baz && foo.#bar.#baz.#buzz
foo.#bar && foo.#bar.#baz && foo.#bar.#baz.#buzz

// two  errors
foo && foo.bar && foo.bar.baz || baz && baz.bar && baz.bar.foo

// case with inconsistent checks
foo && foo.bar != null && foo.bar.baz !== undefined && foo.bar.baz.buzz;

foo.bar && foo.bar.baz != null && foo.bar.baz.qux !== undefined && foo.bar.baz.qux.buzz;

// ensure essential whitespace isn't removed
foo && foo.bar(baz => <This Requires Spaces />);
foo && foo.bar(baz => typeof baz);
foo && foo["some long string"] && foo["some long string"].baz
foo && foo[`some long string`] && foo[`some long string`].baz
foo && foo['some long string'] && foo['some long string'].baz;

// other literal expressions
foo && foo[123] && foo[123].baz;
foo && foo[true] && foo[true].baz;
foo && foo[null] && foo[null].baz;
foo && foo[12n] && foo[12n].baz;
foo && foo[/\w+/] && foo[/\w+/].baz;


// should preserve comments in a call expression
foo && foo.bar(/* comment */a,
	// comment2
	b, );

// ensure binary expressions that are the last expression do not get removed
foo && foo.bar != null;
foo && foo.bar != undefined;
foo && foo.bar != null && baz;

// other weird cases
foo && foo?.();
foo.bar && foo.bar?.();

// comments
foo && foo.bar && /*0*/foo/*1*/./*2*/bar/*3*/./*4*/baz/*5*/;
foo && foo[bar] && /*0*/foo/*1*/[/*2*/bar/*3*/]/*4*/[/*5*/baz/*6*/]/*7*/;

foo && foo[bar] && /*0*/foo/*1*/?./*2*/[/*3*/bar/*4*/]/*5*/?./*6*/[/*7*/baz/*8*/]/*9*/;

```

# Diagnostics
```
warning[nursery/useOptionalChain]: Change to an optional chain.
  ┌─ logicalAndCases.js:5:1
  │
5 │ foo != undefined && foo.bar() != undefined && foo.bar().baz != undefined && foo.bar().baz.buzz != undefined && foo.bar().baz.buzz()
  │ -----------------------------------------------------------------------------------------------------------------------------------

Suggested fix: Change to an optional chain.
    | @@ -2,7 +2,7 @@
1 1 |   
2 2 |   
3 3 |   // case with a call expr inside the chain for some inefficient reason
4   | - foo != undefined && foo.bar() != undefined && foo.bar().baz != undefined && foo.bar().baz.buzz != undefined && foo.bar().baz.buzz()
  4 | + foo?.bar()?.baz?.buzz?.()
5 5 |   
6 6 |   // chained calls with element access
7 7 |   foo != undefined && foo.bar != undefined && foo.bar.baz != undefined && foo.bar.baz[buzz]()


```

```
warning[nursery/useOptionalChain]: Change to an optional chain.
  ┌─ logicalAndCases.js:8:1
  │
8 │ foo != undefined && foo.bar != undefined && foo.bar.baz != undefined && foo.bar.baz[buzz]()
  │ -------------------------------------------------------------------------------------------

Suggested fix: Change to an optional chain.
    | @@ -5,7 +5,7 @@
4 4 |   foo != undefined && foo.bar() != undefined && foo.bar().baz != undefined && foo.bar().baz.buzz != undefined && foo.bar().baz.buzz()
5 5 |   
6 6 |   // chained calls with element access
7   | - foo != undefined && foo.bar != undefined && foo.bar.baz != undefined && foo.bar.baz[buzz]()
  7 | + foo?.bar?.baz?.[buzz]()
8 8 |   foo != undefined && foo.bar != undefined && foo.bar.baz != undefined && foo.bar.baz[buzz] != undefined && foo.bar.baz[buzz]()
9 9 |   
10 10 |   // (partially) pre-optional chained


```

```
warning[nursery/useOptionalChain]: Change to an optional chain.
  ┌─ logicalAndCases.js:9:1
  │
9 │ foo != undefined && foo.bar != undefined && foo.bar.baz != undefined && foo.bar.baz[buzz] != undefined && foo.bar.baz[buzz]()
  │ -----------------------------------------------------------------------------------------------------------------------------

Suggested fix: Change to an optional chain.
    | @@ -6,7 +6,7 @@
5 5 |   
6 6 |   // chained calls with element access
7 7 |   foo != undefined && foo.bar != undefined && foo.bar.baz != undefined && foo.bar.baz[buzz]()
8   | - foo != undefined && foo.bar != undefined && foo.bar.baz != undefined && foo.bar.baz[buzz] != undefined && foo.bar.baz[buzz]()
  8 | + foo?.bar?.baz?.[buzz]?.()
9 9 |   
10 10 |   // (partially) pre-optional chained
11 11 |   foo != undefined && foo?.bar != undefined && foo?.bar.baz != undefined && foo?.bar.baz[buzz] != undefined && foo?.bar.baz[buzz]()


```

```
warning[nursery/useOptionalChain]: Change to an optional chain.
   ┌─ logicalAndCases.js:12:1
   │
12 │ foo != undefined && foo?.bar != undefined && foo?.bar.baz != undefined && foo?.bar.baz[buzz] != undefined && foo?.bar.baz[buzz]()
   │ ---------------------------------------------------------------------------------------------------------------------------------

Suggested fix: Change to an optional chain.
      | @@ -9,7 +9,7 @@
 8  8 |   foo != undefined && foo.bar != undefined && foo.bar.baz != undefined && foo.bar.baz[buzz] != undefined && foo.bar.baz[buzz]()
 9  9 |   
10 10 |   // (partially) pre-optional chained
11    | - foo != undefined && foo?.bar != undefined && foo?.bar.baz != undefined && foo?.bar.baz[buzz] != undefined && foo?.bar.baz[buzz]()
   11 | + foo?.bar?.baz?.[buzz]?.()
12 12 |   foo != undefined && foo?.bar.baz != undefined && foo?.bar.baz[buzz]
13 13 |   foo != undefined && foo?.() != undefined && foo?.().bar
14 14 |   foo.bar != undefined && foo.bar?.() != undefined && foo.bar?.().baz


```

```
warning[nursery/useOptionalChain]: Change to an optional chain.
   ┌─ logicalAndCases.js:13:1
   │
13 │ foo != undefined && foo?.bar.baz != undefined && foo?.bar.baz[buzz]
   │ -------------------------------------------------------------------

Suggested fix: Change to an optional chain.
      | @@ -10,7 +10,7 @@
 9  9 |   
10 10 |   // (partially) pre-optional chained
11 11 |   foo != undefined && foo?.bar != undefined && foo?.bar.baz != undefined && foo?.bar.baz[buzz] != undefined && foo?.bar.baz[buzz]()
12    | - foo != undefined && foo?.bar.baz != undefined && foo?.bar.baz[buzz]
   12 | + foo?.bar.baz?.[buzz]
13 13 |   foo != undefined && foo?.() != undefined && foo?.().bar
14 14 |   foo.bar != undefined && foo.bar?.() != undefined && foo.bar?.().baz
15 15 |   


```

```
warning[nursery/useOptionalChain]: Change to an optional chain.
   ┌─ logicalAndCases.js:14:1
   │
14 │ foo != undefined && foo?.() != undefined && foo?.().bar
   │ -------------------------------------------------------

Suggested fix: Change to an optional chain.
      | @@ -11,7 +11,7 @@
10 10 |   // (partially) pre-optional chained
11 11 |   foo != undefined && foo?.bar != undefined && foo?.bar.baz != undefined && foo?.bar.baz[buzz] != undefined && foo?.bar.baz[buzz]()
12 12 |   foo != undefined && foo?.bar.baz != undefined && foo?.bar.baz[buzz]
13    | - foo != undefined && foo?.() != undefined && foo?.().bar
   13 | + foo?.()?.bar
14 14 |   foo.bar != undefined && foo.bar?.() != undefined && foo.bar?.().baz
15 15 |   
16 16 |   //private static member name


```

```
warning[nursery/useOptionalChain]: Change to an optional chain.
   ┌─ logicalAndCases.js:15:1
   │
15 │ foo.bar != undefined && foo.bar?.() != undefined && foo.bar?.().baz
   │ -------------------------------------------------------------------

Suggested fix: Change to an optional chain.
      | @@ -12,7 +12,7 @@
11 11 |   foo != undefined && foo?.bar != undefined && foo?.bar.baz != undefined && foo?.bar.baz[buzz] != undefined && foo?.bar.baz[buzz]()
12 12 |   foo != undefined && foo?.bar.baz != undefined && foo?.bar.baz[buzz]
13 13 |   foo != undefined && foo?.() != undefined && foo?.().bar
14    | - foo.bar != undefined && foo.bar?.() != undefined && foo.bar?.().baz
   14 | + foo.bar?.()?.baz
15 15 |   
16 16 |   //private static member name
17 17 |   foo && foo.#bar


```

```
warning[nursery/useOptionalChain]: Change to an optional chain.
   ┌─ logicalAndCases.js:18:1
   │
18 │ foo && foo.#bar
   │ ---------------

Suggested fix: Change to an optional chain.
      | @@ -15,7 +15,7 @@
14 14 |   foo.bar != undefined && foo.bar?.() != undefined && foo.bar?.().baz
15 15 |   
16 16 |   //private static member name
17    | - foo && foo.#bar
   17 | + foo?.#bar
18 18 |   foo.#bar && foo.#bar.#baz
19 19 |   foo.#bar && foo.#bar()
20 20 |   foo && foo.#bar && foo.#bar.#baz && foo.#bar.#baz.#buzz


```

```
warning[nursery/useOptionalChain]: Change to an optional chain.
   ┌─ logicalAndCases.js:19:1
   │
19 │ foo.#bar && foo.#bar.#baz
   │ -------------------------

Suggested fix: Change to an optional chain.
      | @@ -16,7 +16,7 @@
15 15 |   
16 16 |   //private static member name
17 17 |   foo && foo.#bar
18    | - foo.#bar && foo.#bar.#baz
   18 | + foo.#bar?.#baz
19 19 |   foo.#bar && foo.#bar()
20 20 |   foo && foo.#bar && foo.#bar.#baz && foo.#bar.#baz.#buzz
21 21 |   foo.#bar && foo.#bar.#baz && foo.#bar.#baz.#buzz


```

```
warning[nursery/useOptionalChain]: Change to an optional chain.
   ┌─ logicalAndCases.js:20:1
   │
20 │ foo.#bar && foo.#bar()
   │ ----------------------

Suggested fix: Change to an optional chain.
      | @@ -17,7 +17,7 @@
16 16 |   //private static member name
17 17 |   foo && foo.#bar
18 18 |   foo.#bar && foo.#bar.#baz
19    | - foo.#bar && foo.#bar()
   19 | + foo.#bar?.()
20 20 |   foo && foo.#bar && foo.#bar.#baz && foo.#bar.#baz.#buzz
21 21 |   foo.#bar && foo.#bar.#baz && foo.#bar.#baz.#buzz
22 22 |   


```

```
warning[nursery/useOptionalChain]: Change to an optional chain.
   ┌─ logicalAndCases.js:21:1
   │
21 │ foo && foo.#bar && foo.#bar.#baz && foo.#bar.#baz.#buzz
   │ -------------------------------------------------------

Suggested fix: Change to an optional chain.
      | @@ -18,7 +18,7 @@
17 17 |   foo && foo.#bar
18 18 |   foo.#bar && foo.#bar.#baz
19 19 |   foo.#bar && foo.#bar()
20    | - foo && foo.#bar && foo.#bar.#baz && foo.#bar.#baz.#buzz
   20 | + foo?.#bar?.#baz?.#buzz
21 21 |   foo.#bar && foo.#bar.#baz && foo.#bar.#baz.#buzz
22 22 |   
23 23 |   // two  errors


```

```
warning[nursery/useOptionalChain]: Change to an optional chain.
   ┌─ logicalAndCases.js:22:1
   │
22 │ foo.#bar && foo.#bar.#baz && foo.#bar.#baz.#buzz
   │ ------------------------------------------------

Suggested fix: Change to an optional chain.
      | @@ -19,7 +19,7 @@
18 18 |   foo.#bar && foo.#bar.#baz
19 19 |   foo.#bar && foo.#bar()
20 20 |   foo && foo.#bar && foo.#bar.#baz && foo.#bar.#baz.#buzz
21    | - foo.#bar && foo.#bar.#baz && foo.#bar.#baz.#buzz
   21 | + foo.#bar?.#baz?.#buzz
22 22 |   
23 23 |   // two  errors
24 24 |   foo && foo.bar && foo.bar.baz || baz && baz.bar && baz.bar.foo


```

```
warning[nursery/useOptionalChain]: Change to an optional chain.
   ┌─ logicalAndCases.js:25:1
   │
25 │ foo && foo.bar && foo.bar.baz || baz && baz.bar && baz.bar.foo
   │ -----------------------------

Suggested fix: Change to an optional chain.
      | @@ -22,7 +22,7 @@
21 21 |   foo.#bar && foo.#bar.#baz && foo.#bar.#baz.#buzz
22 22 |   
23 23 |   // two  errors
24    | - foo && foo.bar && foo.bar.baz || baz && baz.bar && baz.bar.foo
   24 | + foo?.bar?.baz || baz && baz.bar && baz.bar.foo
25 25 |   
26 26 |   // case with inconsistent checks
27 27 |   foo && foo.bar != null && foo.bar.baz !== undefined && foo.bar.baz.buzz;


```

```
warning[nursery/useOptionalChain]: Change to an optional chain.
   ┌─ logicalAndCases.js:25:34
   │
25 │ foo && foo.bar && foo.bar.baz || baz && baz.bar && baz.bar.foo
   │                                  -----------------------------

Suggested fix: Change to an optional chain.
      | @@ -22,7 +22,7 @@
21 21 |   foo.#bar && foo.#bar.#baz && foo.#bar.#baz.#buzz
22 22 |   
23 23 |   // two  errors
24    | - foo && foo.bar && foo.bar.baz || baz && baz.bar && baz.bar.foo
   24 | + foo && foo.bar && foo.bar.baz || baz?.bar?.foo
25 25 |   
26 26 |   // case with inconsistent checks
27 27 |   foo && foo.bar != null && foo.bar.baz !== undefined && foo.bar.baz.buzz;


```

```
warning[nursery/useOptionalChain]: Change to an optional chain.
   ┌─ logicalAndCases.js:28:1
   │
28 │ foo && foo.bar != null && foo.bar.baz !== undefined && foo.bar.baz.buzz;
   │ -----------------------------------------------------------------------

Suggested fix: Change to an optional chain.
      | @@ -25,7 +25,7 @@
24 24 |   foo && foo.bar && foo.bar.baz || baz && baz.bar && baz.bar.foo
25 25 |   
26 26 |   // case with inconsistent checks
27    | - foo && foo.bar != null && foo.bar.baz !== undefined && foo.bar.baz.buzz;
   27 | + foo?.bar?.baz?.buzz;
28 28 |   
29 29 |   foo.bar && foo.bar.baz != null && foo.bar.baz.qux !== undefined && foo.bar.baz.qux.buzz;
30 30 |   


```

```
warning[nursery/useOptionalChain]: Change to an optional chain.
   ┌─ logicalAndCases.js:30:1
   │
30 │ foo.bar && foo.bar.baz != null && foo.bar.baz.qux !== undefined && foo.bar.baz.qux.buzz;
   │ ---------------------------------------------------------------------------------------

Suggested fix: Change to an optional chain.
      | @@ -27,7 +27,7 @@
26 26 |   // case with inconsistent checks
27 27 |   foo && foo.bar != null && foo.bar.baz !== undefined && foo.bar.baz.buzz;
28 28 |   
29    | - foo.bar && foo.bar.baz != null && foo.bar.baz.qux !== undefined && foo.bar.baz.qux.buzz;
   29 | + foo.bar?.baz?.qux?.buzz;
30 30 |   
31 31 |   // ensure essential whitespace isn't removed
32 32 |   foo && foo.bar(baz => <This Requires Spaces />);


```

```
warning[nursery/useOptionalChain]: Change to an optional chain.
   ┌─ logicalAndCases.js:33:1
   │
33 │ foo && foo.bar(baz => <This Requires Spaces />);
   │ -----------------------------------------------

Suggested fix: Change to an optional chain.
      | @@ -30,7 +30,7 @@
29 29 |   foo.bar && foo.bar.baz != null && foo.bar.baz.qux !== undefined && foo.bar.baz.qux.buzz;
30 30 |   
31 31 |   // ensure essential whitespace isn't removed
32    | - foo && foo.bar(baz => <This Requires Spaces />);
   32 | + foo?.bar(baz => <This Requires Spaces />);
33 33 |   foo && foo.bar(baz => typeof baz);
34 34 |   foo && foo["some long string"] && foo["some long string"].baz
35 35 |   foo && foo[`some long string`] && foo[`some long string`].baz


```

```
warning[nursery/useOptionalChain]: Change to an optional chain.
   ┌─ logicalAndCases.js:34:1
   │
34 │ foo && foo.bar(baz => typeof baz);
   │ ---------------------------------

Suggested fix: Change to an optional chain.
      | @@ -31,7 +31,7 @@
30 30 |   
31 31 |   // ensure essential whitespace isn't removed
32 32 |   foo && foo.bar(baz => <This Requires Spaces />);
33    | - foo && foo.bar(baz => typeof baz);
   33 | + foo?.bar(baz => typeof baz);
34 34 |   foo && foo["some long string"] && foo["some long string"].baz
35 35 |   foo && foo[`some long string`] && foo[`some long string`].baz
36 36 |   foo && foo['some long string'] && foo['some long string'].baz;


```

```
warning[nursery/useOptionalChain]: Change to an optional chain.
   ┌─ logicalAndCases.js:35:1
   │
35 │ foo && foo["some long string"] && foo["some long string"].baz
   │ -------------------------------------------------------------

Suggested fix: Change to an optional chain.
      | @@ -32,7 +32,7 @@
31 31 |   // ensure essential whitespace isn't removed
32 32 |   foo && foo.bar(baz => <This Requires Spaces />);
33 33 |   foo && foo.bar(baz => typeof baz);
34    | - foo && foo["some long string"] && foo["some long string"].baz
   34 | + foo?.["some long string"]?.baz
35 35 |   foo && foo[`some long string`] && foo[`some long string`].baz
36 36 |   foo && foo['some long string'] && foo['some long string'].baz;
37 37 |   


```

```
warning[nursery/useOptionalChain]: Change to an optional chain.
   ┌─ logicalAndCases.js:36:1
   │
36 │ foo && foo[`some long string`] && foo[`some long string`].baz
   │ ------------------------------

Suggested fix: Change to an optional chain.
      | @@ -33,7 +33,7 @@
32 32 |   foo && foo.bar(baz => <This Requires Spaces />);
33 33 |   foo && foo.bar(baz => typeof baz);
34 34 |   foo && foo["some long string"] && foo["some long string"].baz
35    | - foo && foo[`some long string`] && foo[`some long string`].baz
   35 | + foo?.[`some long string`] && foo[`some long string`].baz
36 36 |   foo && foo['some long string'] && foo['some long string'].baz;
37 37 |   
38 38 |   // other literal expressions


```

```
warning[nursery/useOptionalChain]: Change to an optional chain.
   ┌─ logicalAndCases.js:37:1
   │
37 │ foo && foo['some long string'] && foo['some long string'].baz;
   │ -------------------------------------------------------------

Suggested fix: Change to an optional chain.
      | @@ -34,7 +34,7 @@
33 33 |   foo && foo.bar(baz => typeof baz);
34 34 |   foo && foo["some long string"] && foo["some long string"].baz
35 35 |   foo && foo[`some long string`] && foo[`some long string`].baz
36    | - foo && foo['some long string'] && foo['some long string'].baz;
   36 | + foo?.['some long string']?.baz;
37 37 |   
38 38 |   // other literal expressions
39 39 |   foo && foo[123] && foo[123].baz;


```

```
warning[nursery/useOptionalChain]: Change to an optional chain.
   ┌─ logicalAndCases.js:40:1
   │
40 │ foo && foo[123] && foo[123].baz;
   │ -------------------------------

Suggested fix: Change to an optional chain.
      | @@ -37,7 +37,7 @@
36 36 |   foo && foo['some long string'] && foo['some long string'].baz;
37 37 |   
38 38 |   // other literal expressions
39    | - foo && foo[123] && foo[123].baz;
   39 | + foo?.[123]?.baz;
40 40 |   foo && foo[true] && foo[true].baz;
41 41 |   foo && foo[null] && foo[null].baz;
42 42 |   foo && foo[12n] && foo[12n].baz;


```

```
warning[nursery/useOptionalChain]: Change to an optional chain.
   ┌─ logicalAndCases.js:41:1
   │
41 │ foo && foo[true] && foo[true].baz;
   │ ---------------------------------

Suggested fix: Change to an optional chain.
      | @@ -38,7 +38,7 @@
37 37 |   
38 38 |   // other literal expressions
39 39 |   foo && foo[123] && foo[123].baz;
40    | - foo && foo[true] && foo[true].baz;
   40 | + foo?.[true]?.baz;
41 41 |   foo && foo[null] && foo[null].baz;
42 42 |   foo && foo[12n] && foo[12n].baz;
43 43 |   foo && foo[/\w+/] && foo[/\w+/].baz;


```

```
warning[nursery/useOptionalChain]: Change to an optional chain.
   ┌─ logicalAndCases.js:42:1
   │
42 │ foo && foo[null] && foo[null].baz;
   │ ---------------------------------

Suggested fix: Change to an optional chain.
      | @@ -39,7 +39,7 @@
38 38 |   // other literal expressions
39 39 |   foo && foo[123] && foo[123].baz;
40 40 |   foo && foo[true] && foo[true].baz;
41    | - foo && foo[null] && foo[null].baz;
   41 | + foo?.[null]?.baz;
42 42 |   foo && foo[12n] && foo[12n].baz;
43 43 |   foo && foo[/\w+/] && foo[/\w+/].baz;
44 44 |   


```

```
warning[nursery/useOptionalChain]: Change to an optional chain.
   ┌─ logicalAndCases.js:43:1
   │
43 │ foo && foo[12n] && foo[12n].baz;
   │ -------------------------------

Suggested fix: Change to an optional chain.
      | @@ -40,7 +40,7 @@
39 39 |   foo && foo[123] && foo[123].baz;
40 40 |   foo && foo[true] && foo[true].baz;
41 41 |   foo && foo[null] && foo[null].baz;
42    | - foo && foo[12n] && foo[12n].baz;
   42 | + foo?.[12n]?.baz;
43 43 |   foo && foo[/\w+/] && foo[/\w+/].baz;
44 44 |   
45 45 |   


```

```
warning[nursery/useOptionalChain]: Change to an optional chain.
   ┌─ logicalAndCases.js:44:1
   │
44 │ foo && foo[/\w+/] && foo[/\w+/].baz;
   │ -----------------------------------

Suggested fix: Change to an optional chain.
      | @@ -41,7 +41,7 @@
40 40 |   foo && foo[true] && foo[true].baz;
41 41 |   foo && foo[null] && foo[null].baz;
42 42 |   foo && foo[12n] && foo[12n].baz;
43    | - foo && foo[/\w+/] && foo[/\w+/].baz;
   43 | + foo?.[/\w+/]?.baz;
44 44 |   
45 45 |   
46 46 |   // should preserve comments in a call expression


```

```
warning[nursery/useOptionalChain]: Change to an optional chain.
   ┌─ logicalAndCases.js:48:1
   │  
48 │ ┌ foo && foo.bar(/* comment */a,
49 │ │     // comment2
50 │ │     b, );
   │ └────────'

Suggested fix: Change to an optional chain.
      | @@ -45,7 +45,7 @@
44 44 |   
45 45 |   
46 46 |   // should preserve comments in a call expression
47    | - foo && foo.bar(/* comment */a,
   47 | + foo?.bar(/* comment */a,
48 48 |   	// comment2
49 49 |   	b, );
50 50 |   


```

```
warning[nursery/useOptionalChain]: Change to an optional chain.
   ┌─ logicalAndCases.js:53:1
   │
53 │ foo && foo.bar != null;
   │ ----------------------

Suggested fix: Change to an optional chain.
      | @@ -50,7 +50,7 @@
49 49 |   	b, );
50 50 |   
51 51 |   // ensure binary expressions that are the last expression do not get removed
52    | - foo && foo.bar != null;
   52 | + foo?.bar != null;
53 53 |   foo && foo.bar != undefined;
54 54 |   foo && foo.bar != null && baz;
55 55 |   


```

```
warning[nursery/useOptionalChain]: Change to an optional chain.
   ┌─ logicalAndCases.js:54:1
   │
54 │ foo && foo.bar != undefined;
   │ ---------------------------

Suggested fix: Change to an optional chain.
      | @@ -51,7 +51,7 @@
50 50 |   
51 51 |   // ensure binary expressions that are the last expression do not get removed
52 52 |   foo && foo.bar != null;
53    | - foo && foo.bar != undefined;
   53 | + foo?.bar != undefined;
54 54 |   foo && foo.bar != null && baz;
55 55 |   
56 56 |   // other weird cases


```

```
warning[nursery/useOptionalChain]: Change to an optional chain.
   ┌─ logicalAndCases.js:55:1
   │
55 │ foo && foo.bar != null && baz;
   │ ----------------------

Suggested fix: Change to an optional chain.
      | @@ -52,7 +52,7 @@
51 51 |   // ensure binary expressions that are the last expression do not get removed
52 52 |   foo && foo.bar != null;
53 53 |   foo && foo.bar != undefined;
54    | - foo && foo.bar != null && baz;
   54 | + foo?.bar != null && baz;
55 55 |   
56 56 |   // other weird cases
57 57 |   foo && foo?.();


```

```
warning[nursery/useOptionalChain]: Change to an optional chain.
   ┌─ logicalAndCases.js:58:1
   │
58 │ foo && foo?.();
   │ --------------

Suggested fix: Change to an optional chain.
      | @@ -55,7 +55,7 @@
54 54 |   foo && foo.bar != null && baz;
55 55 |   
56 56 |   // other weird cases
57    | - foo && foo?.();
   57 | + foo?.();
58 58 |   foo.bar && foo.bar?.();
59 59 |   
60 60 |   // comments


```

```
warning[nursery/useOptionalChain]: Change to an optional chain.
   ┌─ logicalAndCases.js:59:1
   │
59 │ foo.bar && foo.bar?.();
   │ ----------------------

Suggested fix: Change to an optional chain.
      | @@ -56,7 +56,7 @@
55 55 |   
56 56 |   // other weird cases
57 57 |   foo && foo?.();
58    | - foo.bar && foo.bar?.();
   58 | + foo.bar?.();
59 59 |   
60 60 |   // comments
61 61 |   foo && foo.bar && /*0*/foo/*1*/./*2*/bar/*3*/./*4*/baz/*5*/;


```

```
warning[nursery/useOptionalChain]: Change to an optional chain.
   ┌─ logicalAndCases.js:62:1
   │
62 │ foo && foo.bar && /*0*/foo/*1*/./*2*/bar/*3*/./*4*/baz/*5*/;
   │ ------------------------------------------------------

Suggested fix: Change to an optional chain.
      | @@ -59,7 +59,7 @@
58 58 |   foo.bar && foo.bar?.();
59 59 |   
60 60 |   // comments
61    | - foo && foo.bar && /*0*/foo/*1*/./*2*/bar/*3*/./*4*/baz/*5*/;
   61 | + foo/*1*/?./*2*/bar/*3*/?./*4*/baz/*5*/;
62 62 |   foo && foo[bar] && /*0*/foo/*1*/[/*2*/bar/*3*/]/*4*/[/*5*/baz/*6*/]/*7*/;
63 63 |   
64 64 |   foo && foo[bar] && /*0*/foo/*1*/?./*2*/[/*3*/bar/*4*/]/*5*/?./*6*/[/*7*/baz/*8*/]/*9*/;


```

```
warning[nursery/useOptionalChain]: Change to an optional chain.
   ┌─ logicalAndCases.js:63:1
   │
63 │ foo && foo[bar] && /*0*/foo/*1*/[/*2*/bar/*3*/]/*4*/[/*5*/baz/*6*/]/*7*/;
   │ -------------------------------------------------------------------

Suggested fix: Change to an optional chain.
      | @@ -60,6 +60,6 @@
59 59 |   
60 60 |   // comments
61 61 |   foo && foo.bar && /*0*/foo/*1*/./*2*/bar/*3*/./*4*/baz/*5*/;
62    | - foo && foo[bar] && /*0*/foo/*1*/[/*2*/bar/*3*/]/*4*/[/*5*/baz/*6*/]/*7*/;
   62 | + foo/*1*/?.[/*2*/bar/*3*/]/*4*/?.[/*5*/baz/*6*/]/*7*/;
63 63 |   
64 64 |   foo && foo[bar] && /*0*/foo/*1*/?./*2*/[/*3*/bar/*4*/]/*5*/?./*6*/[/*7*/baz/*8*/]/*9*/;


```

```
warning[nursery/useOptionalChain]: Change to an optional chain.
   ┌─ logicalAndCases.js:65:1
   │
65 │ foo && foo[bar] && /*0*/foo/*1*/?./*2*/[/*3*/bar/*4*/]/*5*/?./*6*/[/*7*/baz/*8*/]/*9*/;
   │ ---------------------------------------------------------------------------------

Suggested fix: Change to an optional chain.
      | @@ -62,4 +62,4 @@
61 61 |   foo && foo.bar && /*0*/foo/*1*/./*2*/bar/*3*/./*4*/baz/*5*/;
62 62 |   foo && foo[bar] && /*0*/foo/*1*/[/*2*/bar/*3*/]/*4*/[/*5*/baz/*6*/]/*7*/;
63 63 |   
64    | - foo && foo[bar] && /*0*/foo/*1*/?./*2*/[/*3*/bar/*4*/]/*5*/?./*6*/[/*7*/baz/*8*/]/*9*/;
   64 | + foo/*1*/?./*2*/[/*3*/bar/*4*/]/*5*/?./*6*/[/*7*/baz/*8*/]/*9*/;


```


