---
source: crates/rome_js_analyze/tests/spec_tests.rs
expression: logicalAndCases4.js
---
# Input
```js
// chained calls with element access
foo !== null && foo.bar !== null && foo.bar.baz !== null && foo.bar.baz[buzz]()
foo !== null && foo.bar !== null && foo.bar.baz !== null && foo.bar.baz[buzz] !== null && foo.bar.baz[buzz]()

// (partially) pre-optional chained
foo !== null && foo?.bar !== null && foo?.bar.baz !== null && foo?.bar.baz[buzz] !== null && foo?.bar.baz[buzz]()
foo !== null && foo?.bar.baz !== null && foo?.bar.baz[buzz]
foo !== null && foo?.() !== null && foo?.().bar
foo.bar !== null && foo.bar?.() !== null && foo.bar?.().baz

// chained members
foo !== undefined && foo.bar
foo.bar !== undefined && foo.bar.baz
foo !== undefined && foo()
foo.bar !== undefined && foo.bar()
foo !== undefined && foo.bar !== undefined && foo.bar.baz !== undefined && foo.bar.baz.buzz
foo.bar !== undefined && foo.bar.baz !== undefined && foo.bar.baz.buzz

// case with a jump (i.e. a non-nullish prop)
foo !== undefined && foo.bar !== undefined && foo.bar.baz.buzz
foo.bar !== undefined && foo.bar.baz.buzz

// case where for some reason there is a doubled up expression
foo !== undefined && foo.bar !== undefined && foo.bar.baz !== undefined && foo.bar.baz !== undefined && foo.bar.baz.buzz
foo.bar !== undefined && foo.bar.baz !== undefined && foo.bar.baz !== undefined && foo.bar.baz.buzz

// chained members with element access
foo !== undefined && foo[bar] !== undefined && foo[bar].baz !== undefined && foo[bar].baz.buzz

// case with a jump (i.e. a non-nullish prop)
foo !== undefined && foo[bar].baz !== undefined && foo[bar].baz.buzz

// chained calls
foo !== undefined && foo.bar !== undefined && foo.bar.baz !== undefined && foo.bar.baz.buzz()
foo !== undefined && foo.bar !== undefined && foo.bar.baz !== undefined && foo.bar.baz.buzz !== undefined && foo.bar.baz.buzz()
foo.bar !== undefined && foo.bar.baz !== undefined && foo.bar.baz.buzz !== undefined && foo.bar.baz.buzz()

// case with a jump (i.e. a non-nullish prop)
foo !== undefined && foo.bar !== undefined && foo.bar.baz.buzz()
foo.bar !== undefined && foo.bar.baz.buzz()

// case with a jump (i.e. a non-nullish prop)
foo !== undefined && foo.bar !== undefined && foo.bar.baz.buzz !== undefined && foo.bar.baz.buzz()

// case with a call expr inside the chain for some inefficient reason
foo !== undefined && foo.bar() !== undefined && foo.bar().baz !== undefined && foo.bar().baz.buzz !== undefined && foo.bar().baz.buzz()

// chained calls with element access
foo !== undefined && foo.bar !== undefined && foo.bar.baz !== undefined && foo.bar.baz[buzz]()
foo !== undefined && foo.bar !== undefined && foo.bar.baz !== undefined && foo.bar.baz[buzz] !== undefined && foo.bar.baz[buzz]()

// (partially) pre-optional chained
foo !== undefined && foo?.bar !== undefined && foo?.bar.baz !== undefined && foo?.bar.baz[buzz] !== undefined && foo?.bar.baz[buzz]()
foo !== undefined && foo?.bar.baz !== undefined && foo?.bar.baz[buzz]
foo !== undefined && foo?.() !== undefined && foo?.().bar
foo.bar !== undefined && foo.bar?.() !== undefined && foo.bar?.().baz

// chained members
foo != null && foo.bar
foo.bar != null && foo.bar.baz
foo != null && foo()
foo.bar != null && foo.bar()
foo != null && foo.bar != null && foo.bar.baz != null && foo.bar.baz.buzz
foo.bar != null && foo.bar.baz != null && foo.bar.baz.buzz

```

# Diagnostics
```
logicalAndCases4.js:2:1 lint/nursery/useOptionalChain  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Change to an optional chain.
  
    ┌─ logicalAndCases4.js:2:1
    │
  2 │ foo !== null && foo.bar !== null && foo.bar.baz !== null && foo.bar.baz[buzz]()
    │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Suggested fix: Change to an optional chain.
  
      | @@ -1,5 +1,5 @@
  0 0 |   // chained calls with element access
  1   | - foo !== null && foo.bar !== null && foo.bar.baz !== null && foo.bar.baz[buzz]()
    1 | + foo?.bar?.baz?.[buzz]()
  2 2 |   foo !== null && foo.bar !== null && foo.bar.baz !== null && foo.bar.baz[buzz] !== null && foo.bar.baz[buzz]()
  3 3 |   
  4 4 |   // (partially) pre-optional chained
  

```

```
logicalAndCases4.js:3:1 lint/nursery/useOptionalChain  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Change to an optional chain.
  
    ┌─ logicalAndCases4.js:3:1
    │
  3 │ foo !== null && foo.bar !== null && foo.bar.baz !== null && foo.bar.baz[buzz] !== null && foo.bar.baz[buzz]()
    │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Suggested fix: Change to an optional chain.
  
      | @@ -1,6 +1,6 @@
  0 0 |   // chained calls with element access
  1 1 |   foo !== null && foo.bar !== null && foo.bar.baz !== null && foo.bar.baz[buzz]()
  2   | - foo !== null && foo.bar !== null && foo.bar.baz !== null && foo.bar.baz[buzz] !== null && foo.bar.baz[buzz]()
    2 | + foo?.bar?.baz?.[buzz]?.()
  3 3 |   
  4 4 |   // (partially) pre-optional chained
  5 5 |   foo !== null && foo?.bar !== null && foo?.bar.baz !== null && foo?.bar.baz[buzz] !== null && foo?.bar.baz[buzz]()
  

```

```
logicalAndCases4.js:6:1 lint/nursery/useOptionalChain  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Change to an optional chain.
  
    ┌─ logicalAndCases4.js:6:1
    │
  6 │ foo !== null && foo?.bar !== null && foo?.bar.baz !== null && foo?.bar.baz[buzz] !== null && foo?.bar.baz[buzz]()
    │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Suggested fix: Change to an optional chain.
  
      | @@ -3,7 +3,7 @@
  2 2 |   foo !== null && foo.bar !== null && foo.bar.baz !== null && foo.bar.baz[buzz] !== null && foo.bar.baz[buzz]()
  3 3 |   
  4 4 |   // (partially) pre-optional chained
  5   | - foo !== null && foo?.bar !== null && foo?.bar.baz !== null && foo?.bar.baz[buzz] !== null && foo?.bar.baz[buzz]()
    5 | + foo?.bar?.baz?.[buzz]?.()
  6 6 |   foo !== null && foo?.bar.baz !== null && foo?.bar.baz[buzz]
  7 7 |   foo !== null && foo?.() !== null && foo?.().bar
  8 8 |   foo.bar !== null && foo.bar?.() !== null && foo.bar?.().baz
  

```

```
logicalAndCases4.js:7:1 lint/nursery/useOptionalChain  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Change to an optional chain.
  
    ┌─ logicalAndCases4.js:7:1
    │
  7 │ foo !== null && foo?.bar.baz !== null && foo?.bar.baz[buzz]
    │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Suggested fix: Change to an optional chain.
  
      | @@ -4,7 +4,7 @@
  3 3 |   
  4 4 |   // (partially) pre-optional chained
  5 5 |   foo !== null && foo?.bar !== null && foo?.bar.baz !== null && foo?.bar.baz[buzz] !== null && foo?.bar.baz[buzz]()
  6   | - foo !== null && foo?.bar.baz !== null && foo?.bar.baz[buzz]
    6 | + foo?.bar.baz?.[buzz]
  7 7 |   foo !== null && foo?.() !== null && foo?.().bar
  8 8 |   foo.bar !== null && foo.bar?.() !== null && foo.bar?.().baz
  9 9 |   
  

```

```
logicalAndCases4.js:8:1 lint/nursery/useOptionalChain  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Change to an optional chain.
  
    ┌─ logicalAndCases4.js:8:1
    │
  8 │ foo !== null && foo?.() !== null && foo?.().bar
    │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Suggested fix: Change to an optional chain.
  
      | @@ -5,7 +5,7 @@
  4 4 |   // (partially) pre-optional chained
  5 5 |   foo !== null && foo?.bar !== null && foo?.bar.baz !== null && foo?.bar.baz[buzz] !== null && foo?.bar.baz[buzz]()
  6 6 |   foo !== null && foo?.bar.baz !== null && foo?.bar.baz[buzz]
  7   | - foo !== null && foo?.() !== null && foo?.().bar
    7 | + foo?.()?.bar
  8 8 |   foo.bar !== null && foo.bar?.() !== null && foo.bar?.().baz
  9 9 |   
  10 10 |   // chained members
  

```

```
logicalAndCases4.js:9:1 lint/nursery/useOptionalChain  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Change to an optional chain.
  
    ┌─ logicalAndCases4.js:9:1
    │
  9 │ foo.bar !== null && foo.bar?.() !== null && foo.bar?.().baz
    │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Suggested fix: Change to an optional chain.
  
      | @@ -6,7 +6,7 @@
  5 5 |   foo !== null && foo?.bar !== null && foo?.bar.baz !== null && foo?.bar.baz[buzz] !== null && foo?.bar.baz[buzz]()
  6 6 |   foo !== null && foo?.bar.baz !== null && foo?.bar.baz[buzz]
  7 7 |   foo !== null && foo?.() !== null && foo?.().bar
  8   | - foo.bar !== null && foo.bar?.() !== null && foo.bar?.().baz
    8 | + foo.bar?.()?.baz
  9 9 |   
  10 10 |   // chained members
  11 11 |   foo !== undefined && foo.bar
  

```

```
logicalAndCases4.js:12:1 lint/nursery/useOptionalChain  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Change to an optional chain.
  
     ┌─ logicalAndCases4.js:12:1
     │
  12 │ foo !== undefined && foo.bar
     │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Suggested fix: Change to an optional chain.
  
        | @@ -9,7 +9,7 @@
   8  8 |   foo.bar !== null && foo.bar?.() !== null && foo.bar?.().baz
   9  9 |   
  10 10 |   // chained members
  11    | - foo !== undefined && foo.bar
     11 | + foo?.bar
  12 12 |   foo.bar !== undefined && foo.bar.baz
  13 13 |   foo !== undefined && foo()
  14 14 |   foo.bar !== undefined && foo.bar()
  

```

```
logicalAndCases4.js:13:1 lint/nursery/useOptionalChain  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Change to an optional chain.
  
     ┌─ logicalAndCases4.js:13:1
     │
  13 │ foo.bar !== undefined && foo.bar.baz
     │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Suggested fix: Change to an optional chain.
  
        | @@ -10,7 +10,7 @@
   9  9 |   
  10 10 |   // chained members
  11 11 |   foo !== undefined && foo.bar
  12    | - foo.bar !== undefined && foo.bar.baz
     12 | + foo.bar?.baz
  13 13 |   foo !== undefined && foo()
  14 14 |   foo.bar !== undefined && foo.bar()
  15 15 |   foo !== undefined && foo.bar !== undefined && foo.bar.baz !== undefined && foo.bar.baz.buzz
  

```

```
logicalAndCases4.js:14:1 lint/nursery/useOptionalChain  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Change to an optional chain.
  
     ┌─ logicalAndCases4.js:14:1
     │
  14 │ foo !== undefined && foo()
     │ ^^^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Suggested fix: Change to an optional chain.
  
        | @@ -11,7 +11,7 @@
  10 10 |   // chained members
  11 11 |   foo !== undefined && foo.bar
  12 12 |   foo.bar !== undefined && foo.bar.baz
  13    | - foo !== undefined && foo()
     13 | + foo?.()
  14 14 |   foo.bar !== undefined && foo.bar()
  15 15 |   foo !== undefined && foo.bar !== undefined && foo.bar.baz !== undefined && foo.bar.baz.buzz
  16 16 |   foo.bar !== undefined && foo.bar.baz !== undefined && foo.bar.baz.buzz
  

```

```
logicalAndCases4.js:15:1 lint/nursery/useOptionalChain  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Change to an optional chain.
  
     ┌─ logicalAndCases4.js:15:1
     │
  15 │ foo.bar !== undefined && foo.bar()
     │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Suggested fix: Change to an optional chain.
  
        | @@ -12,7 +12,7 @@
  11 11 |   foo !== undefined && foo.bar
  12 12 |   foo.bar !== undefined && foo.bar.baz
  13 13 |   foo !== undefined && foo()
  14    | - foo.bar !== undefined && foo.bar()
     14 | + foo.bar?.()
  15 15 |   foo !== undefined && foo.bar !== undefined && foo.bar.baz !== undefined && foo.bar.baz.buzz
  16 16 |   foo.bar !== undefined && foo.bar.baz !== undefined && foo.bar.baz.buzz
  17 17 |   
  

```

```
logicalAndCases4.js:16:1 lint/nursery/useOptionalChain  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Change to an optional chain.
  
     ┌─ logicalAndCases4.js:16:1
     │
  16 │ foo !== undefined && foo.bar !== undefined && foo.bar.baz !== undefined && foo.bar.baz.buzz
     │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Suggested fix: Change to an optional chain.
  
        | @@ -13,7 +13,7 @@
  12 12 |   foo.bar !== undefined && foo.bar.baz
  13 13 |   foo !== undefined && foo()
  14 14 |   foo.bar !== undefined && foo.bar()
  15    | - foo !== undefined && foo.bar !== undefined && foo.bar.baz !== undefined && foo.bar.baz.buzz
     15 | + foo?.bar?.baz?.buzz
  16 16 |   foo.bar !== undefined && foo.bar.baz !== undefined && foo.bar.baz.buzz
  17 17 |   
  18 18 |   // case with a jump (i.e. a non-nullish prop)
  

```

```
logicalAndCases4.js:17:1 lint/nursery/useOptionalChain  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Change to an optional chain.
  
     ┌─ logicalAndCases4.js:17:1
     │
  17 │ foo.bar !== undefined && foo.bar.baz !== undefined && foo.bar.baz.buzz
     │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Suggested fix: Change to an optional chain.
  
        | @@ -14,7 +14,7 @@
  13 13 |   foo !== undefined && foo()
  14 14 |   foo.bar !== undefined && foo.bar()
  15 15 |   foo !== undefined && foo.bar !== undefined && foo.bar.baz !== undefined && foo.bar.baz.buzz
  16    | - foo.bar !== undefined && foo.bar.baz !== undefined && foo.bar.baz.buzz
     16 | + foo.bar?.baz?.buzz
  17 17 |   
  18 18 |   // case with a jump (i.e. a non-nullish prop)
  19 19 |   foo !== undefined && foo.bar !== undefined && foo.bar.baz.buzz
  

```

```
logicalAndCases4.js:20:1 lint/nursery/useOptionalChain  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Change to an optional chain.
  
     ┌─ logicalAndCases4.js:20:1
     │
  20 │ foo !== undefined && foo.bar !== undefined && foo.bar.baz.buzz
     │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Suggested fix: Change to an optional chain.
  
        | @@ -17,7 +17,7 @@
  16 16 |   foo.bar !== undefined && foo.bar.baz !== undefined && foo.bar.baz.buzz
  17 17 |   
  18 18 |   // case with a jump (i.e. a non-nullish prop)
  19    | - foo !== undefined && foo.bar !== undefined && foo.bar.baz.buzz
     19 | + foo?.bar?.baz.buzz
  20 20 |   foo.bar !== undefined && foo.bar.baz.buzz
  21 21 |   
  22 22 |   // case where for some reason there is a doubled up expression
  

```

```
logicalAndCases4.js:21:1 lint/nursery/useOptionalChain  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Change to an optional chain.
  
     ┌─ logicalAndCases4.js:21:1
     │
  21 │ foo.bar !== undefined && foo.bar.baz.buzz
     │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Suggested fix: Change to an optional chain.
  
        | @@ -18,7 +18,7 @@
  17 17 |   
  18 18 |   // case with a jump (i.e. a non-nullish prop)
  19 19 |   foo !== undefined && foo.bar !== undefined && foo.bar.baz.buzz
  20    | - foo.bar !== undefined && foo.bar.baz.buzz
     20 | + foo.bar?.baz.buzz
  21 21 |   
  22 22 |   // case where for some reason there is a doubled up expression
  23 23 |   foo !== undefined && foo.bar !== undefined && foo.bar.baz !== undefined && foo.bar.baz !== undefined && foo.bar.baz.buzz
  

```

```
logicalAndCases4.js:24:1 lint/nursery/useOptionalChain  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Change to an optional chain.
  
     ┌─ logicalAndCases4.js:24:1
     │
  24 │ foo !== undefined && foo.bar !== undefined && foo.bar.baz !== undefined && foo.bar.baz !== undefined && foo.bar.baz.buzz
     │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Suggested fix: Change to an optional chain.
  
        | @@ -21,7 +21,7 @@
  20 20 |   foo.bar !== undefined && foo.bar.baz.buzz
  21 21 |   
  22 22 |   // case where for some reason there is a doubled up expression
  23    | - foo !== undefined && foo.bar !== undefined && foo.bar.baz !== undefined && foo.bar.baz !== undefined && foo.bar.baz.buzz
     23 | + foo?.bar?.baz?.buzz
  24 24 |   foo.bar !== undefined && foo.bar.baz !== undefined && foo.bar.baz !== undefined && foo.bar.baz.buzz
  25 25 |   
  26 26 |   // chained members with element access
  

```

```
logicalAndCases4.js:25:1 lint/nursery/useOptionalChain  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Change to an optional chain.
  
     ┌─ logicalAndCases4.js:25:1
     │
  25 │ foo.bar !== undefined && foo.bar.baz !== undefined && foo.bar.baz !== undefined && foo.bar.baz.buzz
     │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Suggested fix: Change to an optional chain.
  
        | @@ -22,7 +22,7 @@
  21 21 |   
  22 22 |   // case where for some reason there is a doubled up expression
  23 23 |   foo !== undefined && foo.bar !== undefined && foo.bar.baz !== undefined && foo.bar.baz !== undefined && foo.bar.baz.buzz
  24    | - foo.bar !== undefined && foo.bar.baz !== undefined && foo.bar.baz !== undefined && foo.bar.baz.buzz
     24 | + foo.bar?.baz?.buzz
  25 25 |   
  26 26 |   // chained members with element access
  27 27 |   foo !== undefined && foo[bar] !== undefined && foo[bar].baz !== undefined && foo[bar].baz.buzz
  

```

```
logicalAndCases4.js:28:1 lint/nursery/useOptionalChain  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Change to an optional chain.
  
     ┌─ logicalAndCases4.js:28:1
     │
  28 │ foo !== undefined && foo[bar] !== undefined && foo[bar].baz !== undefined && foo[bar].baz.buzz
     │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Suggested fix: Change to an optional chain.
  
        | @@ -25,7 +25,7 @@
  24 24 |   foo.bar !== undefined && foo.bar.baz !== undefined && foo.bar.baz !== undefined && foo.bar.baz.buzz
  25 25 |   
  26 26 |   // chained members with element access
  27    | - foo !== undefined && foo[bar] !== undefined && foo[bar].baz !== undefined && foo[bar].baz.buzz
     27 | + foo?.[bar]?.baz?.buzz
  28 28 |   
  29 29 |   // case with a jump (i.e. a non-nullish prop)
  30 30 |   foo !== undefined && foo[bar].baz !== undefined && foo[bar].baz.buzz
  

```

```
logicalAndCases4.js:31:1 lint/nursery/useOptionalChain  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Change to an optional chain.
  
     ┌─ logicalAndCases4.js:31:1
     │
  31 │ foo !== undefined && foo[bar].baz !== undefined && foo[bar].baz.buzz
     │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Suggested fix: Change to an optional chain.
  
        | @@ -28,7 +28,7 @@
  27 27 |   foo !== undefined && foo[bar] !== undefined && foo[bar].baz !== undefined && foo[bar].baz.buzz
  28 28 |   
  29 29 |   // case with a jump (i.e. a non-nullish prop)
  30    | - foo !== undefined && foo[bar].baz !== undefined && foo[bar].baz.buzz
     30 | + foo?.[bar].baz?.buzz
  31 31 |   
  32 32 |   // chained calls
  33 33 |   foo !== undefined && foo.bar !== undefined && foo.bar.baz !== undefined && foo.bar.baz.buzz()
  

```

```
logicalAndCases4.js:34:1 lint/nursery/useOptionalChain  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Change to an optional chain.
  
     ┌─ logicalAndCases4.js:34:1
     │
  34 │ foo !== undefined && foo.bar !== undefined && foo.bar.baz !== undefined && foo.bar.baz.buzz()
     │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Suggested fix: Change to an optional chain.
  
        | @@ -31,7 +31,7 @@
  30 30 |   foo !== undefined && foo[bar].baz !== undefined && foo[bar].baz.buzz
  31 31 |   
  32 32 |   // chained calls
  33    | - foo !== undefined && foo.bar !== undefined && foo.bar.baz !== undefined && foo.bar.baz.buzz()
     33 | + foo?.bar?.baz?.buzz()
  34 34 |   foo !== undefined && foo.bar !== undefined && foo.bar.baz !== undefined && foo.bar.baz.buzz !== undefined && foo.bar.baz.buzz()
  35 35 |   foo.bar !== undefined && foo.bar.baz !== undefined && foo.bar.baz.buzz !== undefined && foo.bar.baz.buzz()
  36 36 |   
  

```

```
logicalAndCases4.js:35:1 lint/nursery/useOptionalChain  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Change to an optional chain.
  
     ┌─ logicalAndCases4.js:35:1
     │
  35 │ foo !== undefined && foo.bar !== undefined && foo.bar.baz !== undefined && foo.bar.baz.buzz !== undefined && foo.bar.baz.buzz()
     │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Suggested fix: Change to an optional chain.
  
        | @@ -32,7 +32,7 @@
  31 31 |   
  32 32 |   // chained calls
  33 33 |   foo !== undefined && foo.bar !== undefined && foo.bar.baz !== undefined && foo.bar.baz.buzz()
  34    | - foo !== undefined && foo.bar !== undefined && foo.bar.baz !== undefined && foo.bar.baz.buzz !== undefined && foo.bar.baz.buzz()
     34 | + foo?.bar?.baz?.buzz?.()
  35 35 |   foo.bar !== undefined && foo.bar.baz !== undefined && foo.bar.baz.buzz !== undefined && foo.bar.baz.buzz()
  36 36 |   
  37 37 |   // case with a jump (i.e. a non-nullish prop)
  

```

```
logicalAndCases4.js:36:1 lint/nursery/useOptionalChain  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Change to an optional chain.
  
     ┌─ logicalAndCases4.js:36:1
     │
  36 │ foo.bar !== undefined && foo.bar.baz !== undefined && foo.bar.baz.buzz !== undefined && foo.bar.baz.buzz()
     │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Suggested fix: Change to an optional chain.
  
        | @@ -33,7 +33,7 @@
  32 32 |   // chained calls
  33 33 |   foo !== undefined && foo.bar !== undefined && foo.bar.baz !== undefined && foo.bar.baz.buzz()
  34 34 |   foo !== undefined && foo.bar !== undefined && foo.bar.baz !== undefined && foo.bar.baz.buzz !== undefined && foo.bar.baz.buzz()
  35    | - foo.bar !== undefined && foo.bar.baz !== undefined && foo.bar.baz.buzz !== undefined && foo.bar.baz.buzz()
     35 | + foo.bar?.baz?.buzz?.()
  36 36 |   
  37 37 |   // case with a jump (i.e. a non-nullish prop)
  38 38 |   foo !== undefined && foo.bar !== undefined && foo.bar.baz.buzz()
  

```

```
logicalAndCases4.js:39:1 lint/nursery/useOptionalChain  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Change to an optional chain.
  
     ┌─ logicalAndCases4.js:39:1
     │
  39 │ foo !== undefined && foo.bar !== undefined && foo.bar.baz.buzz()
     │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Suggested fix: Change to an optional chain.
  
        | @@ -36,7 +36,7 @@
  35 35 |   foo.bar !== undefined && foo.bar.baz !== undefined && foo.bar.baz.buzz !== undefined && foo.bar.baz.buzz()
  36 36 |   
  37 37 |   // case with a jump (i.e. a non-nullish prop)
  38    | - foo !== undefined && foo.bar !== undefined && foo.bar.baz.buzz()
     38 | + foo?.bar?.baz.buzz()
  39 39 |   foo.bar !== undefined && foo.bar.baz.buzz()
  40 40 |   
  41 41 |   // case with a jump (i.e. a non-nullish prop)
  

```

```
logicalAndCases4.js:40:1 lint/nursery/useOptionalChain  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Change to an optional chain.
  
     ┌─ logicalAndCases4.js:40:1
     │
  40 │ foo.bar !== undefined && foo.bar.baz.buzz()
     │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Suggested fix: Change to an optional chain.
  
        | @@ -37,7 +37,7 @@
  36 36 |   
  37 37 |   // case with a jump (i.e. a non-nullish prop)
  38 38 |   foo !== undefined && foo.bar !== undefined && foo.bar.baz.buzz()
  39    | - foo.bar !== undefined && foo.bar.baz.buzz()
     39 | + foo.bar?.baz.buzz()
  40 40 |   
  41 41 |   // case with a jump (i.e. a non-nullish prop)
  42 42 |   foo !== undefined && foo.bar !== undefined && foo.bar.baz.buzz !== undefined && foo.bar.baz.buzz()
  

```

```
logicalAndCases4.js:43:1 lint/nursery/useOptionalChain  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Change to an optional chain.
  
     ┌─ logicalAndCases4.js:43:1
     │
  43 │ foo !== undefined && foo.bar !== undefined && foo.bar.baz.buzz !== undefined && foo.bar.baz.buzz()
     │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Suggested fix: Change to an optional chain.
  
        | @@ -40,7 +40,7 @@
  39 39 |   foo.bar !== undefined && foo.bar.baz.buzz()
  40 40 |   
  41 41 |   // case with a jump (i.e. a non-nullish prop)
  42    | - foo !== undefined && foo.bar !== undefined && foo.bar.baz.buzz !== undefined && foo.bar.baz.buzz()
     42 | + foo?.bar?.baz.buzz?.()
  43 43 |   
  44 44 |   // case with a call expr inside the chain for some inefficient reason
  45 45 |   foo !== undefined && foo.bar() !== undefined && foo.bar().baz !== undefined && foo.bar().baz.buzz !== undefined && foo.bar().baz.buzz()
  

```

```
logicalAndCases4.js:46:1 lint/nursery/useOptionalChain  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Change to an optional chain.
  
     ┌─ logicalAndCases4.js:46:1
     │
  46 │ foo !== undefined && foo.bar() !== undefined && foo.bar().baz !== undefined && foo.bar().baz.buzz !== undefined && foo.bar().baz.buzz()
     │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Suggested fix: Change to an optional chain.
  
        | @@ -43,7 +43,7 @@
  42 42 |   foo !== undefined && foo.bar !== undefined && foo.bar.baz.buzz !== undefined && foo.bar.baz.buzz()
  43 43 |   
  44 44 |   // case with a call expr inside the chain for some inefficient reason
  45    | - foo !== undefined && foo.bar() !== undefined && foo.bar().baz !== undefined && foo.bar().baz.buzz !== undefined && foo.bar().baz.buzz()
     45 | + foo?.bar()?.baz?.buzz?.()
  46 46 |   
  47 47 |   // chained calls with element access
  48 48 |   foo !== undefined && foo.bar !== undefined && foo.bar.baz !== undefined && foo.bar.baz[buzz]()
  

```

```
logicalAndCases4.js:49:1 lint/nursery/useOptionalChain  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Change to an optional chain.
  
     ┌─ logicalAndCases4.js:49:1
     │
  49 │ foo !== undefined && foo.bar !== undefined && foo.bar.baz !== undefined && foo.bar.baz[buzz]()
     │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Suggested fix: Change to an optional chain.
  
        | @@ -46,7 +46,7 @@
  45 45 |   foo !== undefined && foo.bar() !== undefined && foo.bar().baz !== undefined && foo.bar().baz.buzz !== undefined && foo.bar().baz.buzz()
  46 46 |   
  47 47 |   // chained calls with element access
  48    | - foo !== undefined && foo.bar !== undefined && foo.bar.baz !== undefined && foo.bar.baz[buzz]()
     48 | + foo?.bar?.baz?.[buzz]()
  49 49 |   foo !== undefined && foo.bar !== undefined && foo.bar.baz !== undefined && foo.bar.baz[buzz] !== undefined && foo.bar.baz[buzz]()
  50 50 |   
  51 51 |   // (partially) pre-optional chained
  

```

```
logicalAndCases4.js:50:1 lint/nursery/useOptionalChain  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Change to an optional chain.
  
     ┌─ logicalAndCases4.js:50:1
     │
  50 │ foo !== undefined && foo.bar !== undefined && foo.bar.baz !== undefined && foo.bar.baz[buzz] !== undefined && foo.bar.baz[buzz]()
     │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Suggested fix: Change to an optional chain.
  
        | @@ -47,7 +47,7 @@
  46 46 |   
  47 47 |   // chained calls with element access
  48 48 |   foo !== undefined && foo.bar !== undefined && foo.bar.baz !== undefined && foo.bar.baz[buzz]()
  49    | - foo !== undefined && foo.bar !== undefined && foo.bar.baz !== undefined && foo.bar.baz[buzz] !== undefined && foo.bar.baz[buzz]()
     49 | + foo?.bar?.baz?.[buzz]?.()
  50 50 |   
  51 51 |   // (partially) pre-optional chained
  52 52 |   foo !== undefined && foo?.bar !== undefined && foo?.bar.baz !== undefined && foo?.bar.baz[buzz] !== undefined && foo?.bar.baz[buzz]()
  

```

```
logicalAndCases4.js:53:1 lint/nursery/useOptionalChain  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Change to an optional chain.
  
     ┌─ logicalAndCases4.js:53:1
     │
  53 │ foo !== undefined && foo?.bar !== undefined && foo?.bar.baz !== undefined && foo?.bar.baz[buzz] !== undefined && foo?.bar.baz[buzz]()
     │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Suggested fix: Change to an optional chain.
  
        | @@ -50,7 +50,7 @@
  49 49 |   foo !== undefined && foo.bar !== undefined && foo.bar.baz !== undefined && foo.bar.baz[buzz] !== undefined && foo.bar.baz[buzz]()
  50 50 |   
  51 51 |   // (partially) pre-optional chained
  52    | - foo !== undefined && foo?.bar !== undefined && foo?.bar.baz !== undefined && foo?.bar.baz[buzz] !== undefined && foo?.bar.baz[buzz]()
     52 | + foo?.bar?.baz?.[buzz]?.()
  53 53 |   foo !== undefined && foo?.bar.baz !== undefined && foo?.bar.baz[buzz]
  54 54 |   foo !== undefined && foo?.() !== undefined && foo?.().bar
  55 55 |   foo.bar !== undefined && foo.bar?.() !== undefined && foo.bar?.().baz
  

```

```
logicalAndCases4.js:54:1 lint/nursery/useOptionalChain  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Change to an optional chain.
  
     ┌─ logicalAndCases4.js:54:1
     │
  54 │ foo !== undefined && foo?.bar.baz !== undefined && foo?.bar.baz[buzz]
     │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Suggested fix: Change to an optional chain.
  
        | @@ -51,7 +51,7 @@
  50 50 |   
  51 51 |   // (partially) pre-optional chained
  52 52 |   foo !== undefined && foo?.bar !== undefined && foo?.bar.baz !== undefined && foo?.bar.baz[buzz] !== undefined && foo?.bar.baz[buzz]()
  53    | - foo !== undefined && foo?.bar.baz !== undefined && foo?.bar.baz[buzz]
     53 | + foo?.bar.baz?.[buzz]
  54 54 |   foo !== undefined && foo?.() !== undefined && foo?.().bar
  55 55 |   foo.bar !== undefined && foo.bar?.() !== undefined && foo.bar?.().baz
  56 56 |   
  

```

```
logicalAndCases4.js:55:1 lint/nursery/useOptionalChain  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Change to an optional chain.
  
     ┌─ logicalAndCases4.js:55:1
     │
  55 │ foo !== undefined && foo?.() !== undefined && foo?.().bar
     │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Suggested fix: Change to an optional chain.
  
        | @@ -52,7 +52,7 @@
  51 51 |   // (partially) pre-optional chained
  52 52 |   foo !== undefined && foo?.bar !== undefined && foo?.bar.baz !== undefined && foo?.bar.baz[buzz] !== undefined && foo?.bar.baz[buzz]()
  53 53 |   foo !== undefined && foo?.bar.baz !== undefined && foo?.bar.baz[buzz]
  54    | - foo !== undefined && foo?.() !== undefined && foo?.().bar
     54 | + foo?.()?.bar
  55 55 |   foo.bar !== undefined && foo.bar?.() !== undefined && foo.bar?.().baz
  56 56 |   
  57 57 |   // chained members
  

```

```
logicalAndCases4.js:56:1 lint/nursery/useOptionalChain  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Change to an optional chain.
  
     ┌─ logicalAndCases4.js:56:1
     │
  56 │ foo.bar !== undefined && foo.bar?.() !== undefined && foo.bar?.().baz
     │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Suggested fix: Change to an optional chain.
  
        | @@ -53,7 +53,7 @@
  52 52 |   foo !== undefined && foo?.bar !== undefined && foo?.bar.baz !== undefined && foo?.bar.baz[buzz] !== undefined && foo?.bar.baz[buzz]()
  53 53 |   foo !== undefined && foo?.bar.baz !== undefined && foo?.bar.baz[buzz]
  54 54 |   foo !== undefined && foo?.() !== undefined && foo?.().bar
  55    | - foo.bar !== undefined && foo.bar?.() !== undefined && foo.bar?.().baz
     55 | + foo.bar?.()?.baz
  56 56 |   
  57 57 |   // chained members
  58 58 |   foo != null && foo.bar
  

```

```
logicalAndCases4.js:59:1 lint/nursery/useOptionalChain  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Change to an optional chain.
  
     ┌─ logicalAndCases4.js:59:1
     │
  59 │ foo != null && foo.bar
     │ ^^^^^^^^^^^^^^^^^^^^^^
  
  i Suggested fix: Change to an optional chain.
  
        | @@ -56,7 +56,7 @@
  55 55 |   foo.bar !== undefined && foo.bar?.() !== undefined && foo.bar?.().baz
  56 56 |   
  57 57 |   // chained members
  58    | - foo != null && foo.bar
     58 | + foo?.bar
  59 59 |   foo.bar != null && foo.bar.baz
  60 60 |   foo != null && foo()
  61 61 |   foo.bar != null && foo.bar()
  

```

```
logicalAndCases4.js:60:1 lint/nursery/useOptionalChain  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Change to an optional chain.
  
     ┌─ logicalAndCases4.js:60:1
     │
  60 │ foo.bar != null && foo.bar.baz
     │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Suggested fix: Change to an optional chain.
  
        | @@ -57,7 +57,7 @@
  56 56 |   
  57 57 |   // chained members
  58 58 |   foo != null && foo.bar
  59    | - foo.bar != null && foo.bar.baz
     59 | + foo.bar?.baz
  60 60 |   foo != null && foo()
  61 61 |   foo.bar != null && foo.bar()
  62 62 |   foo != null && foo.bar != null && foo.bar.baz != null && foo.bar.baz.buzz
  

```

```
logicalAndCases4.js:61:1 lint/nursery/useOptionalChain  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Change to an optional chain.
  
     ┌─ logicalAndCases4.js:61:1
     │
  61 │ foo != null && foo()
     │ ^^^^^^^^^^^^^^^^^^^^
  
  i Suggested fix: Change to an optional chain.
  
        | @@ -58,7 +58,7 @@
  57 57 |   // chained members
  58 58 |   foo != null && foo.bar
  59 59 |   foo.bar != null && foo.bar.baz
  60    | - foo != null && foo()
     60 | + foo?.()
  61 61 |   foo.bar != null && foo.bar()
  62 62 |   foo != null && foo.bar != null && foo.bar.baz != null && foo.bar.baz.buzz
  63 63 |   foo.bar != null && foo.bar.baz != null && foo.bar.baz.buzz
  

```

```
logicalAndCases4.js:62:1 lint/nursery/useOptionalChain  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Change to an optional chain.
  
     ┌─ logicalAndCases4.js:62:1
     │
  62 │ foo.bar != null && foo.bar()
     │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Suggested fix: Change to an optional chain.
  
        | @@ -59,6 +59,6 @@
  58 58 |   foo != null && foo.bar
  59 59 |   foo.bar != null && foo.bar.baz
  60 60 |   foo != null && foo()
  61    | - foo.bar != null && foo.bar()
     61 | + foo.bar?.()
  62 62 |   foo != null && foo.bar != null && foo.bar.baz != null && foo.bar.baz.buzz
  63 63 |   foo.bar != null && foo.bar.baz != null && foo.bar.baz.buzz
  

```

```
logicalAndCases4.js:63:1 lint/nursery/useOptionalChain  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Change to an optional chain.
  
     ┌─ logicalAndCases4.js:63:1
     │
  63 │ foo != null && foo.bar != null && foo.bar.baz != null && foo.bar.baz.buzz
     │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Suggested fix: Change to an optional chain.
  
        | @@ -60,5 +60,5 @@
  59 59 |   foo.bar != null && foo.bar.baz
  60 60 |   foo != null && foo()
  61 61 |   foo.bar != null && foo.bar()
  62    | - foo != null && foo.bar != null && foo.bar.baz != null && foo.bar.baz.buzz
     62 | + foo?.bar?.baz?.buzz
  63 63 |   foo.bar != null && foo.bar.baz != null && foo.bar.baz.buzz
  

```

```
logicalAndCases4.js:64:1 lint/nursery/useOptionalChain  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Change to an optional chain.
  
     ┌─ logicalAndCases4.js:64:1
     │
  64 │ foo.bar != null && foo.bar.baz != null && foo.bar.baz.buzz
     │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Suggested fix: Change to an optional chain.
  
        | @@ -61,4 +61,4 @@
  60 60 |   foo != null && foo()
  61 61 |   foo.bar != null && foo.bar()
  62 62 |   foo != null && foo.bar != null && foo.bar.baz != null && foo.bar.baz.buzz
  63    | - foo.bar != null && foo.bar.baz != null && foo.bar.baz.buzz
     63 | + foo.bar?.baz?.buzz
  

```


