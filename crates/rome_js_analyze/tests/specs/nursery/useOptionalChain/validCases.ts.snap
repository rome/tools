---
source: crates/rome_js_analyze/tests/spec_tests.rs
expression: validCases.ts
---
# Input
```js
//valid
foo || {};
foo || ({} as any);
(foo || { bar: 1 }).bar;
(undefined && (foo || {})).bar;
foo ||= bar;
foo ||= bar || {};
foo ||= bar?.baz;
foo ||= bar?.baz || {};
foo ||= bar?.baz?.buzz;
(foo1 ? foo2 : foo3 || {}).foo4;
(foo = 2 || {}).bar;
func(foo || {}).bar;
foo ?? {};
foo ||= bar ?? {};
foo && bar;
foo && foo;
foo || bar;
foo ?? bar;
foo || foo.bar;
foo ?? foo.bar;
file !== 'index.ts' && file.endsWith('.ts');
nextToken && sourceCode.isSpaceBetweenTokens(prevToken, nextToken);
result && this.options.shouldPreserveNodeMaps;
foo && fooBar.baz;
match && match$1 !== undefined;
foo !== null && foo !== undefined;
x['y'] !== undefined && x['y'] !== null;

foo["some long"] && foo["some long string"].baz
foo[`some long`] && foo[`some long string`].baz
foo['some long'] && foo['some long string'].baz;
foo[123] && foo[1234].baz;
foo[true] && foo[false].baz;
foo[12n] && foo[123n].baz;
foo[/\w+/] && foo[/ab+c/].baz;

((foo || {})()).bar;

(new foo || {}).bar

```

# Diagnostics
```
validCases.ts:40:1 lint/nursery/useOptionalChain  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Change to an optional chain.
  
    38 │ ((foo || {})()).bar;
    39 │ 
  > 40 │ (new foo || {}).bar
       │ ^^^^^^^^^^^^^^^^^^^
    41 │ 
  
  i Suggested fix: Change to an optional chain.
  
        | @@ -37,4 +37,4 @@
  36 36 |   
  37 37 |   ((foo || {})()).bar;
  38 38 |   
  39    | - (new foo || {}).bar
     39 | + (new foo)?.bar
  

```


