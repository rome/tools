---
source: crates/rome_js_analyze/tests/spec_tests.rs
expression: useKeyWithMouseEvents.jsx
---
# Input
```js
// invalid
<div onMouseOver={() => {}} />;
<div onMouseOut={() => {}} />;
<div onMouseOver={() => {}} onFocus={undefined} />;
<div onMouseOut={() => {}} onBlur={undefined} />;
<div onMouseOver={() => {}} onFocus={null} />;
<div onMouseOut={() => {}} onBlur={null} />;
<div onMouseOver={() => {}} {...props} />;
<div onMouseOut={() => {}} {...props} />;
<div onMouseOver={() => {}}></div>;
<div onMouseOut={() => {}}></div>;

// valid
<div onMouseOver={() => {}} onFocus={() => {}} />;
<div onMouseOver={() => {}} onFocus={() => {}} {...props} />;
<div onMouseOver={handleMouseOver} onFocus={handleFocus} />;
<div onMouseOver={handleMouseOver} onFocus={handleFocus} {...props} />;
<div />;
<div onBlur={() => {}} />;
<div onFocus={() => {}} />;
<div onMouseOut={() => {}} onBlur={() => {}} />;
<div onMouseOut={() => {}} onBlur={() => {}} {...props} />;
<div onMouseOut={handleMouseOut} onBlur={handleOnBlur} />;
<div onMouseOut={handleMouseOut} onBlur={handleOnBlur} {...props} />;
<MyComponent />;
<MyComponent onMouseOver={() => {}} />;
<MyComponent onMouseOut={() => {}} />;
<MyComponent onBlur={() => {}} />;
<MyComponent onFocus={() => {}} />;
<MyComponent onMouseOver={() => {}} {...props} />;
<MyComponent onMouseOut={() => {}} {...props} />;
<MyComponent onBlur={() => {}} {...props} />;
<MyComponent onFocus={() => {}} {...props} />;


```

# Diagnostics
```
useKeyWithMouseEvents.jsx:2:1 lint/nursery/useKeyWithMouseEvents ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! onMouseOver must be accompanied by onFocus for accessibility.
  
    1 │ // invalid
  > 2 │ <div onMouseOver={() => {}} />;
      │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    3 │ <div onMouseOut={() => {}} />;
    4 │ <div onMouseOver={() => {}} onFocus={undefined} />;
  
  i Actions triggered using mouse events should have corresponding events to account for keyboard-only navigation.
  

```

```
useKeyWithMouseEvents.jsx:3:1 lint/nursery/useKeyWithMouseEvents ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! onMouseOut must be accompanied by onBlur for accessibility.
  
    1 │ // invalid
    2 │ <div onMouseOver={() => {}} />;
  > 3 │ <div onMouseOut={() => {}} />;
      │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    4 │ <div onMouseOver={() => {}} onFocus={undefined} />;
    5 │ <div onMouseOut={() => {}} onBlur={undefined} />;
  
  i Actions triggered using mouse events should have corresponding events to account for keyboard-only navigation.
  

```

```
useKeyWithMouseEvents.jsx:4:1 lint/nursery/useKeyWithMouseEvents ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! onMouseOver must be accompanied by onFocus for accessibility.
  
    2 │ <div onMouseOver={() => {}} />;
    3 │ <div onMouseOut={() => {}} />;
  > 4 │ <div onMouseOver={() => {}} onFocus={undefined} />;
      │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    5 │ <div onMouseOut={() => {}} onBlur={undefined} />;
    6 │ <div onMouseOver={() => {}} onFocus={null} />;
  
  i Actions triggered using mouse events should have corresponding events to account for keyboard-only navigation.
  

```

```
useKeyWithMouseEvents.jsx:5:1 lint/nursery/useKeyWithMouseEvents ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! onMouseOut must be accompanied by onBlur for accessibility.
  
    3 │ <div onMouseOut={() => {}} />;
    4 │ <div onMouseOver={() => {}} onFocus={undefined} />;
  > 5 │ <div onMouseOut={() => {}} onBlur={undefined} />;
      │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    6 │ <div onMouseOver={() => {}} onFocus={null} />;
    7 │ <div onMouseOut={() => {}} onBlur={null} />;
  
  i Actions triggered using mouse events should have corresponding events to account for keyboard-only navigation.
  

```

```
useKeyWithMouseEvents.jsx:8:1 lint/nursery/useKeyWithMouseEvents ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! onMouseOver must be accompanied by onFocus for accessibility.
  
     6 │ <div onMouseOver={() => {}} onFocus={null} />;
     7 │ <div onMouseOut={() => {}} onBlur={null} />;
   > 8 │ <div onMouseOver={() => {}} {...props} />;
       │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     9 │ <div onMouseOut={() => {}} {...props} />;
    10 │ <div onMouseOver={() => {}}></div>;
  
  i Actions triggered using mouse events should have corresponding events to account for keyboard-only navigation.
  

```

```
useKeyWithMouseEvents.jsx:9:1 lint/nursery/useKeyWithMouseEvents ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! onMouseOut must be accompanied by onBlur for accessibility.
  
     7 │ <div onMouseOut={() => {}} onBlur={null} />;
     8 │ <div onMouseOver={() => {}} {...props} />;
   > 9 │ <div onMouseOut={() => {}} {...props} />;
       │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    10 │ <div onMouseOver={() => {}}></div>;
    11 │ <div onMouseOut={() => {}}></div>;
  
  i Actions triggered using mouse events should have corresponding events to account for keyboard-only navigation.
  

```

```
useKeyWithMouseEvents.jsx:10:1 lint/nursery/useKeyWithMouseEvents ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! onMouseOver must be accompanied by onFocus for accessibility.
  
     8 │ <div onMouseOver={() => {}} {...props} />;
     9 │ <div onMouseOut={() => {}} {...props} />;
  > 10 │ <div onMouseOver={() => {}}></div>;
       │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    11 │ <div onMouseOut={() => {}}></div>;
    12 │ 
  
  i Actions triggered using mouse events should have corresponding events to account for keyboard-only navigation.
  

```

```
useKeyWithMouseEvents.jsx:11:1 lint/nursery/useKeyWithMouseEvents ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! onMouseOut must be accompanied by onBlur for accessibility.
  
     9 │ <div onMouseOut={() => {}} {...props} />;
    10 │ <div onMouseOver={() => {}}></div>;
  > 11 │ <div onMouseOut={() => {}}></div>;
       │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    12 │ 
    13 │ // valid
  
  i Actions triggered using mouse events should have corresponding events to account for keyboard-only navigation.
  

```


