---
source: crates/rome_js_analyze/tests/spec_tests.rs
expression: thisBeforeSuper.js
---
# Input
```js
// valid
class B extends A {
    constructor() {
        super();
        this.field = "value";
    }
}

// valid
class C extends A {
    constructor(cond) {
        if (cond) {
            super(true);
        } else {
            super(false);
        }

        this.field = "value";
    }
}

// invalid
class D extends A {
    constructor() {
        this.field = "value";
        super();
    }
}

// invalid
class E extends A {
    constructor(cond) {
        this.field = "value";

        if (cond) {
            super(true);
        } else {
            super(false);
        }
    }
}

// invalid
class F extends A {
    constructor(cond) {
        if (cond) {
            super(true);
        }

        this.field = "value";
    }
}

```

# Diagnostics
```
thisBeforeSuper.js:25:9 lint/nursery/noUnreachableSuper ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! `this` is accessed before `super()` is called.
  
    23 │ class D extends A {
    24 │     constructor() {
  > 25 │         this.field = "value";
       │         ^^^^
    26 │         super();
    27 │     }
  
  i `super()` is only called here
  
    24 │     constructor() {
    25 │         this.field = "value";
  > 26 │         super();
       │         ^^^^^
    27 │     }
    28 │ }
  

```

```
thisBeforeSuper.js:33:9 lint/nursery/noUnreachableSuper ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! `this` is accessed without calling `super()` first.
  
    31 │ class E extends A {
    32 │     constructor(cond) {
  > 33 │         this.field = "value";
       │         ^^^^
    34 │ 
    35 │         if (cond) {
  

```

```
thisBeforeSuper.js:50:9 lint/nursery/noUnreachableSuper ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! `this` is accessed without calling `super()` first.
  
    48 │         }
    49 │ 
  > 50 │         this.field = "value";
       │         ^^^^
    51 │     }
    52 │ }
  

```


