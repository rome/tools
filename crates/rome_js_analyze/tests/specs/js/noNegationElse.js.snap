---
source: crates/rome_js_analyze/tests/spec_tests.rs
assertion_line: 97
expression: noNegationElse.js
---
# Input
```js
// valid
if (!true) {consequent;};
// https://github.com/rome/tools/issues/2999
if (!/^NCT/.test(input)) {
	messages.push("NCT Number must start with NCT");
} else if (!/^NCT\d{8}$/.test(input)) {
	messages.push("NCT Number must have exactly 8 digits after NCT");
}
true ? consequent : alternate;
// invalid
if (!true) {
  consequent;
} else {
  alternate;
}
!condition ? consequent : alternate;

let a = !test ? c : d;
```

# Diagnostics
```
warning[js/noNegationElse]: Invert blocks when performing a negation test.
   ┌─ noNegationElse.js:11:1
   │  
11 │ ┌ if (!true) {
12 │ │   consequent;
13 │ │ } else {
14 │ │   alternate;
15 │ │ }
   │ └─'

Suggested fix: Exchange alternate and consequent of the node
      | @@ -8,10 +8,10 @@
 7  7 |   }
 8  8 |   true ? consequent : alternate;
 9  9 |   // invalid
10    | - if (!true) {
   10 | + if (true) {
   11 | +   alternate;
   12 | + } else {
11 13 |     consequent;
12    | - } else {
13    | -   alternate;
14 14 |   }
15 15 |   !condition ? consequent : alternate;
16 16 |   


```

```
warning[js/noNegationElse]: Invert blocks when performing a negation test.
   ┌─ noNegationElse.js:16:1
   │
16 │ !condition ? consequent : alternate;
   │ -----------------------------------

Suggested fix: Exchange alternate and consequent of the node
      | @@ -13,6 +13,6 @@
12 12 |   } else {
13 13 |     alternate;
14 14 |   }
15    | - !condition ? consequent : alternate;
   15 | + condition ? alternate : consequent;
16 16 |   
17 17 |   let a = !test ? c : d;


```

```
warning[js/noNegationElse]: Invert blocks when performing a negation test.
   ┌─ noNegationElse.js:18:9
   │
18 │ let a = !test ? c : d;
   │         -------------

Suggested fix: Exchange alternate and consequent of the node
      | @@ -15,4 +15,4 @@
14 14 |   }
15 15 |   !condition ? consequent : alternate;
16 16 |   
17    | - let a = !test ? c : d;
   17 | + let a = test ? d : c;


```


