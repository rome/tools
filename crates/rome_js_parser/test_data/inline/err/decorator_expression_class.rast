JsModule {
    interpreter_token: missing (optional),
    directives: JsDirectiveList [],
    items: JsModuleItemList [
        JsBogusStatement {
            items: [
                JsBogus {
                    items: [
                        LET_KW@0..4 "let" [] [Whitespace(" ")],
                        JsBogus {
                            items: [
                                JsBogus {
                                    items: [
                                        JsIdentifierBinding {
                                            name_token: IDENT@4..6 "a" [] [Whitespace(" ")],
                                        },
                                        JsBogus {
                                            items: [
                                                EQ@6..8 "=" [] [Whitespace(" ")],
                                                JsBogusExpression {
                                                    items: [
                                                        JsDecorator {
                                                            at_token: AT@8..9 "@" [] [],
                                                            expression: JsCallExpression {
                                                                callee: JsIdentifierExpression {
                                                                    name: JsReferenceIdentifier {
                                                                        value_token: IDENT@9..19 "decorator" [] [Whitespace(" ")],
                                                                    },
                                                                },
                                                                optional_chain_token: missing (optional),
                                                                type_arguments: missing (optional),
                                                                arguments: JsCallArguments {
                                                                    l_paren_token: L_PAREN@19..20 "(" [] [],
                                                                    args: JsCallArgumentList [],
                                                                    r_paren_token: R_PAREN@20..22 ")" [] [Whitespace(" ")],
                                                                },
                                                            },
                                                        },
                                                    ],
                                                },
                                                JsArrowFunctionExpression {
                                                    async_token: missing (optional),
                                                    type_parameters: missing (optional),
                                                    parameters: missing (required),
                                                    return_type_annotation: missing (optional),
                                                    fat_arrow_token: FAT_ARROW@22..25 "=>" [] [Whitespace(" ")],
                                                    body: JsFunctionBody {
                                                        l_curly_token: L_CURLY@25..26 "{" [] [],
                                                        directives: JsDirectiveList [],
                                                        statements: JsStatementList [],
                                                        r_curly_token: R_CURLY@26..27 "}" [] [],
                                                    },
                                                },
                                            ],
                                        },
                                    ],
                                },
                            ],
                        },
                    ],
                },
                SEMICOLON@27..28 ";" [] [],
            ],
        },
        JsBogusStatement {
            items: [
                JsBogus {
                    items: [
                        LET_KW@28..33 "let" [Newline("\n")] [Whitespace(" ")],
                        JsBogus {
                            items: [
                                JsBogus {
                                    items: [
                                        JsIdentifierBinding {
                                            name_token: IDENT@33..35 "b" [] [Whitespace(" ")],
                                        },
                                        JsBogus {
                                            items: [
                                                EQ@35..37 "=" [] [Whitespace(" ")],
                                                JsBogusExpression {
                                                    items: [
                                                        JsDecorator {
                                                            at_token: AT@37..38 "@" [] [],
                                                            expression: JsIdentifierExpression {
                                                                name: JsReferenceIdentifier {
                                                                    value_token: IDENT@38..44 "first" [] [Whitespace(" ")],
                                                                },
                                                            },
                                                        },
                                                        JsDecorator {
                                                            at_token: AT@44..45 "@" [] [],
                                                            expression: JsIdentifierExpression {
                                                                name: JsReferenceIdentifier {
                                                                    value_token: IDENT@45..52 "second" [] [Whitespace(" ")],
                                                                },
                                                            },
                                                        },
                                                    ],
                                                },
                                                JsFunctionExpression {
                                                    async_token: missing (optional),
                                                    function_token: FUNCTION_KW@52..61 "function" [] [Whitespace(" ")],
                                                    star_token: missing (optional),
                                                    id: JsIdentifierBinding {
                                                        name_token: IDENT@61..64 "foo" [] [],
                                                    },
                                                    type_parameters: missing (optional),
                                                    parameters: JsParameters {
                                                        l_paren_token: L_PAREN@64..65 "(" [] [],
                                                        items: JsParameterList [],
                                                        r_paren_token: R_PAREN@65..67 ")" [] [Whitespace(" ")],
                                                    },
                                                    return_type_annotation: missing (optional),
                                                    body: JsFunctionBody {
                                                        l_curly_token: L_CURLY@67..68 "{" [] [],
                                                        directives: JsDirectiveList [],
                                                        statements: JsStatementList [],
                                                        r_curly_token: R_CURLY@68..69 "}" [] [],
                                                    },
                                                },
                                            ],
                                        },
                                    ],
                                },
                            ],
                        },
                    ],
                },
            ],
        },
        JsVariableStatement {
            declaration: JsVariableDeclaration {
                await_token: missing (optional),
                kind: LET_KW@69..74 "let" [Newline("\n")] [Whitespace(" ")],
                declarators: JsVariableDeclaratorList [
                    JsVariableDeclarator {
                        id: JsIdentifierBinding {
                            name_token: IDENT@74..76 "a" [] [Whitespace(" ")],
                        },
                        variable_annotation: missing (optional),
                        initializer: JsInitializerClause {
                            eq_token: EQ@76..78 "=" [] [Whitespace(" ")],
                            expression: JsBogusExpression {
                                items: [
                                    JsDecorator {
                                        at_token: AT@78..79 "@" [] [],
                                        expression: JsCallExpression {
                                            callee: JsIdentifierExpression {
                                                name: JsReferenceIdentifier {
                                                    value_token: IDENT@79..89 "decorator" [] [Whitespace(" ")],
                                                },
                                            },
                                            optional_chain_token: missing (optional),
                                            type_arguments: missing (optional),
                                            arguments: JsCallArguments {
                                                l_paren_token: L_PAREN@89..91 "(" [] [Whitespace(" ")],
                                                args: JsCallArgumentList [
                                                    JsArrowFunctionExpression {
                                                        async_token: missing (optional),
                                                        type_parameters: missing (optional),
                                                        parameters: JsParameters {
                                                            l_paren_token: L_PAREN@91..92 "(" [] [],
                                                            items: JsParameterList [],
                                                            r_paren_token: R_PAREN@92..94 ")" [] [Whitespace(" ")],
                                                        },
                                                        return_type_annotation: missing (optional),
                                                        fat_arrow_token: FAT_ARROW@94..97 "=>" [] [Whitespace(" ")],
                                                        body: JsFunctionBody {
                                                            l_curly_token: L_CURLY@97..98 "{" [] [],
                                                            directives: JsDirectiveList [],
                                                            statements: JsStatementList [],
                                                            r_curly_token: R_CURLY@98..100 "}" [] [Whitespace(" ")],
                                                        },
                                                    },
                                                ],
                                                r_paren_token: R_PAREN@100..101 ")" [] [],
                                            },
                                        },
                                    },
                                ],
                            },
                        },
                    },
                ],
            },
            semicolon_token: missing (optional),
        },
    ],
    eof_token: EOF@101..102 "" [Newline("\n")] [],
}

0: JS_MODULE@0..102
  0: (empty)
  1: JS_DIRECTIVE_LIST@0..0
  2: JS_MODULE_ITEM_LIST@0..101
    0: JS_BOGUS_STATEMENT@0..28
      0: JS_BOGUS@0..27
        0: LET_KW@0..4 "let" [] [Whitespace(" ")]
        1: JS_BOGUS@4..27
          0: JS_BOGUS@4..27
            0: JS_IDENTIFIER_BINDING@4..6
              0: IDENT@4..6 "a" [] [Whitespace(" ")]
            1: JS_BOGUS@6..27
              0: EQ@6..8 "=" [] [Whitespace(" ")]
              1: JS_BOGUS_EXPRESSION@8..22
                0: JS_DECORATOR@8..22
                  0: AT@8..9 "@" [] []
                  1: JS_CALL_EXPRESSION@9..22
                    0: JS_IDENTIFIER_EXPRESSION@9..19
                      0: JS_REFERENCE_IDENTIFIER@9..19
                        0: IDENT@9..19 "decorator" [] [Whitespace(" ")]
                    1: (empty)
                    2: (empty)
                    3: JS_CALL_ARGUMENTS@19..22
                      0: L_PAREN@19..20 "(" [] []
                      1: JS_CALL_ARGUMENT_LIST@20..20
                      2: R_PAREN@20..22 ")" [] [Whitespace(" ")]
              2: JS_ARROW_FUNCTION_EXPRESSION@22..27
                0: (empty)
                1: (empty)
                2: (empty)
                3: (empty)
                4: FAT_ARROW@22..25 "=>" [] [Whitespace(" ")]
                5: JS_FUNCTION_BODY@25..27
                  0: L_CURLY@25..26 "{" [] []
                  1: JS_DIRECTIVE_LIST@26..26
                  2: JS_STATEMENT_LIST@26..26
                  3: R_CURLY@26..27 "}" [] []
      1: SEMICOLON@27..28 ";" [] []
    1: JS_BOGUS_STATEMENT@28..69
      0: JS_BOGUS@28..69
        0: LET_KW@28..33 "let" [Newline("\n")] [Whitespace(" ")]
        1: JS_BOGUS@33..69
          0: JS_BOGUS@33..69
            0: JS_IDENTIFIER_BINDING@33..35
              0: IDENT@33..35 "b" [] [Whitespace(" ")]
            1: JS_BOGUS@35..69
              0: EQ@35..37 "=" [] [Whitespace(" ")]
              1: JS_BOGUS_EXPRESSION@37..52
                0: JS_DECORATOR@37..44
                  0: AT@37..38 "@" [] []
                  1: JS_IDENTIFIER_EXPRESSION@38..44
                    0: JS_REFERENCE_IDENTIFIER@38..44
                      0: IDENT@38..44 "first" [] [Whitespace(" ")]
                1: JS_DECORATOR@44..52
                  0: AT@44..45 "@" [] []
                  1: JS_IDENTIFIER_EXPRESSION@45..52
                    0: JS_REFERENCE_IDENTIFIER@45..52
                      0: IDENT@45..52 "second" [] [Whitespace(" ")]
              2: JS_FUNCTION_EXPRESSION@52..69
                0: (empty)
                1: FUNCTION_KW@52..61 "function" [] [Whitespace(" ")]
                2: (empty)
                3: JS_IDENTIFIER_BINDING@61..64
                  0: IDENT@61..64 "foo" [] []
                4: (empty)
                5: JS_PARAMETERS@64..67
                  0: L_PAREN@64..65 "(" [] []
                  1: JS_PARAMETER_LIST@65..65
                  2: R_PAREN@65..67 ")" [] [Whitespace(" ")]
                6: (empty)
                7: JS_FUNCTION_BODY@67..69
                  0: L_CURLY@67..68 "{" [] []
                  1: JS_DIRECTIVE_LIST@68..68
                  2: JS_STATEMENT_LIST@68..68
                  3: R_CURLY@68..69 "}" [] []
    2: JS_VARIABLE_STATEMENT@69..101
      0: JS_VARIABLE_DECLARATION@69..101
        0: (empty)
        1: LET_KW@69..74 "let" [Newline("\n")] [Whitespace(" ")]
        2: JS_VARIABLE_DECLARATOR_LIST@74..101
          0: JS_VARIABLE_DECLARATOR@74..101
            0: JS_IDENTIFIER_BINDING@74..76
              0: IDENT@74..76 "a" [] [Whitespace(" ")]
            1: (empty)
            2: JS_INITIALIZER_CLAUSE@76..101
              0: EQ@76..78 "=" [] [Whitespace(" ")]
              1: JS_BOGUS_EXPRESSION@78..101
                0: JS_DECORATOR@78..101
                  0: AT@78..79 "@" [] []
                  1: JS_CALL_EXPRESSION@79..101
                    0: JS_IDENTIFIER_EXPRESSION@79..89
                      0: JS_REFERENCE_IDENTIFIER@79..89
                        0: IDENT@79..89 "decorator" [] [Whitespace(" ")]
                    1: (empty)
                    2: (empty)
                    3: JS_CALL_ARGUMENTS@89..101
                      0: L_PAREN@89..91 "(" [] [Whitespace(" ")]
                      1: JS_CALL_ARGUMENT_LIST@91..100
                        0: JS_ARROW_FUNCTION_EXPRESSION@91..100
                          0: (empty)
                          1: (empty)
                          2: JS_PARAMETERS@91..94
                            0: L_PAREN@91..92 "(" [] []
                            1: JS_PARAMETER_LIST@92..92
                            2: R_PAREN@92..94 ")" [] [Whitespace(" ")]
                          3: (empty)
                          4: FAT_ARROW@94..97 "=>" [] [Whitespace(" ")]
                          5: JS_FUNCTION_BODY@97..100
                            0: L_CURLY@97..98 "{" [] []
                            1: JS_DIRECTIVE_LIST@98..98
                            2: JS_STATEMENT_LIST@98..98
                            3: R_CURLY@98..100 "}" [] [Whitespace(" ")]
                      2: R_PAREN@100..101 ")" [] []
      1: (empty)
  3: EOF@101..102 "" [Newline("\n")] []
--
decorator_expression_class.js:1:9 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Decorators are not valid here.
  
  > 1 │ let a = @decorator () => {};
      │         ^^^^^^^^^^^^^
    2 │ let b = @first @second function foo() {}
    3 │ let a = @decorator ( () => {} )
  
  i Decorators are only valid on class declarations, class expressions, and class methods.
  
--
decorator_expression_class.js:1:23 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected a parenthesis '(' but instead found '=>'
  
  > 1 │ let a = @decorator () => {};
      │                       ^^
    2 │ let b = @first @second function foo() {}
    3 │ let a = @decorator ( () => {} )
  
  i Expected a parenthesis '(' here
  
  > 1 │ let a = @decorator () => {};
      │                       ^^
    2 │ let b = @first @second function foo() {}
    3 │ let a = @decorator ( () => {} )
  
--
decorator_expression_class.js:2:9 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Decorators are not valid here.
  
    1 │ let a = @decorator () => {};
  > 2 │ let b = @first @second function foo() {}
      │         ^^^^^^^^^^^^^^
    3 │ let a = @decorator ( () => {} )
    4 │ 
  
  i Decorators are only valid on class declarations, class expressions, and class methods.
  
--
decorator_expression_class.js:3:9 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Decorators are not valid here.
  
    1 │ let a = @decorator () => {};
    2 │ let b = @first @second function foo() {}
  > 3 │ let a = @decorator ( () => {} )
      │         ^^^^^^^^^^^^^^^^^^^^^^^
    4 │ 
  
  i Decorators are only valid on class declarations, class expressions, and class methods.
  
--
decorator_expression_class.js:4:1 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected an expression, or an assignment but instead found the end of the file
  
    2 │ let b = @first @second function foo() {}
    3 │ let a = @decorator ( () => {} )
  > 4 │ 
      │ 
  
  i Expected an expression, or an assignment here
  
    2 │ let b = @first @second function foo() {}
    3 │ let a = @decorator ( () => {} )
  > 4 │ 
      │ 
  
--
let a = @decorator () => {};
let b = @first @second function foo() {}
let a = @decorator ( () => {} )
