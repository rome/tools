JsModule {
    interpreter_token: missing (optional),
    directives: JsDirectiveList [],
    items: JsModuleItemList [
        JsExpressionStatement {
            expression: JsSequenceExpression {
                left: JsBinaryExpression {
                    left: JsIdentifierExpression {
                        name: JsReferenceIdentifier {
                            value_token: IDENT@0..4 "func" [] [],
                        },
                    },
                    operator_token: L_ANGLE@4..5 "<" [] [],
                    right: JsIdentifierExpression {
                        name: JsReferenceIdentifier {
                            value_token: IDENT@5..6 "T" [] [],
                        },
                    },
                },
                comma_token: COMMA@6..7 "," [] [],
                right: missing (required),
            },
            semicolon_token: missing (optional),
        },
    ],
    eof_token: EOF@7..8 "" [Newline("\n")] [],
}

0: JS_MODULE@0..8
  0: (empty)
  1: JS_DIRECTIVE_LIST@0..0
  2: JS_MODULE_ITEM_LIST@0..7
    0: JS_EXPRESSION_STATEMENT@0..7
      0: JS_SEQUENCE_EXPRESSION@0..7
        0: JS_BINARY_EXPRESSION@0..6
          0: JS_IDENTIFIER_EXPRESSION@0..4
            0: JS_REFERENCE_IDENTIFIER@0..4
              0: IDENT@0..4 "func" [] []
          1: L_ANGLE@4..5 "<" [] []
          2: JS_IDENTIFIER_EXPRESSION@5..6
            0: JS_REFERENCE_IDENTIFIER@5..6
              0: IDENT@5..6 "T" [] []
        1: COMMA@6..7 "," [] []
        2: (empty)
      1: (empty)
  3: EOF@7..8 "" [Newline("\n")] []
--
type_arguments_incomplete.ts:2:1 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected an expression but instead found the end of the file
  
    1 │ func<T,
  > 2 │ 
      │ 
  
  i Expected an expression here
  
    1 │ func<T,
  > 2 │ 
      │ 
  
--
func<T,
