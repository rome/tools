JsModule {
    interpreter_token: missing (optional),
    directives: JsDirectiveList [],
    items: JsModuleItemList [
        JsBogusStatement {
            items: [
                FUNCTION_KW@0..8 "function" [] [],
                STAR@8..10 "*" [] [Whitespace(" ")],
                JsIdentifierBinding {
                    name_token: IDENT@10..14 "test" [] [],
                },
                JsParameters {
                    l_paren_token: L_PAREN@14..15 "(" [] [],
                    items: JsParameterList [
                        JsFormalParameter {
                            decorators: JsDecoratorList [],
                            binding: JsIdentifierBinding {
                                name_token: IDENT@15..16 "a" [] [],
                            },
                            question_mark_token: missing (optional),
                            type_annotation: TsTypeAnnotation {
                                colon_token: COLON@16..18 ":" [] [Whitespace(" ")],
                                ty: TsStringType {
                                    string_token: STRING_KW@18..24 "string" [] [],
                                },
                            },
                            initializer: missing (optional),
                        },
                    ],
                    r_paren_token: R_PAREN@24..25 ")" [] [],
                },
                SEMICOLON@25..26 ";" [] [],
            ],
        },
        JsFunctionDeclaration {
            async_token: missing (optional),
            function_token: FUNCTION_KW@26..35 "function" [Newline("\n")] [],
            star_token: STAR@35..37 "*" [] [Whitespace(" ")],
            id: JsIdentifierBinding {
                name_token: IDENT@37..41 "test" [] [],
            },
            type_parameters: missing (optional),
            parameters: JsParameters {
                l_paren_token: L_PAREN@41..42 "(" [] [],
                items: JsParameterList [
                    JsFormalParameter {
                        decorators: JsDecoratorList [],
                        binding: JsIdentifierBinding {
                            name_token: IDENT@42..43 "a" [] [],
                        },
                        question_mark_token: missing (optional),
                        type_annotation: TsTypeAnnotation {
                            colon_token: COLON@43..45 ":" [] [Whitespace(" ")],
                            ty: TsStringType {
                                string_token: STRING_KW@45..51 "string" [] [],
                            },
                        },
                        initializer: missing (optional),
                    },
                ],
                r_paren_token: R_PAREN@51..53 ")" [] [Whitespace(" ")],
            },
            return_type_annotation: missing (optional),
            body: JsFunctionBody {
                l_curly_token: L_CURLY@53..54 "{" [] [],
                directives: JsDirectiveList [],
                statements: JsStatementList [],
                r_curly_token: R_CURLY@54..55 "}" [] [],
            },
        },
    ],
    eof_token: EOF@55..56 "" [Newline("\n")] [],
}

0: JS_MODULE@0..56
  0: (empty)
  1: JS_DIRECTIVE_LIST@0..0
  2: JS_MODULE_ITEM_LIST@0..55
    0: JS_BOGUS_STATEMENT@0..26
      0: FUNCTION_KW@0..8 "function" [] []
      1: STAR@8..10 "*" [] [Whitespace(" ")]
      2: JS_IDENTIFIER_BINDING@10..14
        0: IDENT@10..14 "test" [] []
      3: JS_PARAMETERS@14..25
        0: L_PAREN@14..15 "(" [] []
        1: JS_PARAMETER_LIST@15..24
          0: JS_FORMAL_PARAMETER@15..24
            0: JS_DECORATOR_LIST@15..15
            1: JS_IDENTIFIER_BINDING@15..16
              0: IDENT@15..16 "a" [] []
            2: (empty)
            3: TS_TYPE_ANNOTATION@16..24
              0: COLON@16..18 ":" [] [Whitespace(" ")]
              1: TS_STRING_TYPE@18..24
                0: STRING_KW@18..24 "string" [] []
            4: (empty)
        2: R_PAREN@24..25 ")" [] []
      4: SEMICOLON@25..26 ";" [] []
    1: JS_FUNCTION_DECLARATION@26..55
      0: (empty)
      1: FUNCTION_KW@26..35 "function" [Newline("\n")] []
      2: STAR@35..37 "*" [] [Whitespace(" ")]
      3: JS_IDENTIFIER_BINDING@37..41
        0: IDENT@37..41 "test" [] []
      4: (empty)
      5: JS_PARAMETERS@41..53
        0: L_PAREN@41..42 "(" [] []
        1: JS_PARAMETER_LIST@42..51
          0: JS_FORMAL_PARAMETER@42..51
            0: JS_DECORATOR_LIST@42..42
            1: JS_IDENTIFIER_BINDING@42..43
              0: IDENT@42..43 "a" [] []
            2: (empty)
            3: TS_TYPE_ANNOTATION@43..51
              0: COLON@43..45 ":" [] [Whitespace(" ")]
              1: TS_STRING_TYPE@45..51
                0: STRING_KW@45..51 "string" [] []
            4: (empty)
        2: R_PAREN@51..53 ")" [] [Whitespace(" ")]
      6: (empty)
      7: JS_FUNCTION_BODY@53..55
        0: L_CURLY@53..54 "{" [] []
        1: JS_DIRECTIVE_LIST@54..54
        2: JS_STATEMENT_LIST@54..54
        3: R_CURLY@54..55 "}" [] []
  3: EOF@55..56 "" [Newline("\n")] []
--
ts_function_overload_generator.ts:1:9 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × An overload signature cannot be declared as a generator.
  
  > 1 │ function* test(a: string);
      │         ^
    2 │ function* test(a: string) {}
    3 │ 
  
--
function* test(a: string);
function* test(a: string) {}
