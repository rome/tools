JsModule {
    interpreter_token: missing (optional),
    directives: JsDirectiveList [],
    items: JsModuleItemList [
        TsDeclareStatement {
            declare_token: DECLARE_KW@0..8 "declare" [] [Whitespace(" ")],
            declaration: JsClassDeclaration {
                abstract_token: missing (optional),
                class_token: CLASS_KW@8..14 "class" [] [Whitespace(" ")],
                id: JsIdentifierBinding {
                    name_token: IDENT@14..16 "A" [] [Whitespace(" ")],
                },
                type_parameters: missing (optional),
                extends_clause: missing (optional),
                implements_clause: missing (optional),
                l_curly_token: L_CURLY@16..18 "{" [] [Whitespace(" ")],
                members: JsClassMemberList [
                    TsMethodSignatureClassMember {
                        modifiers: TsMethodSignatureModifierList [],
                        async_token: missing (optional),
                        name: JsLiteralMemberName {
                            value: IDENT@18..24 "method" [] [],
                        },
                        question_mark_token: missing (optional),
                        type_parameters: missing (optional),
                        parameters: JsParameters {
                            l_paren_token: L_PAREN@24..25 "(" [] [],
                            items: JsParameterList [],
                            r_paren_token: R_PAREN@25..27 ")" [] [Whitespace(" ")],
                        },
                        return_type_annotation: missing (optional),
                        semicolon_token: missing (optional),
                    },
                    TsMethodSignatureClassMember {
                        modifiers: TsMethodSignatureModifierList [],
                        async_token: missing (optional),
                        name: JsLiteralMemberName {
                            value: IDENT@27..34 "method2" [] [],
                        },
                        question_mark_token: missing (optional),
                        type_parameters: missing (optional),
                        parameters: JsParameters {
                            l_paren_token: L_PAREN@34..35 "(" [] [],
                            items: JsParameterList [],
                            r_paren_token: R_PAREN@35..37 ")" [] [Whitespace(" ")],
                        },
                        return_type_annotation: missing (optional),
                        semicolon_token: missing (optional),
                    },
                    TsMethodSignatureClassMember {
                        modifiers: TsMethodSignatureModifierList [],
                        async_token: missing (optional),
                        name: JsLiteralMemberName {
                            value: IDENT@37..44 "method3" [] [],
                        },
                        question_mark_token: missing (optional),
                        type_parameters: missing (optional),
                        parameters: JsParameters {
                            l_paren_token: L_PAREN@44..45 "(" [] [],
                            items: JsParameterList [],
                            r_paren_token: R_PAREN@45..47 ")" [] [Whitespace(" ")],
                        },
                        return_type_annotation: missing (optional),
                        semicolon_token: missing (optional),
                    },
                ],
                r_curly_token: R_CURLY@47..48 "}" [] [],
            },
        },
    ],
    eof_token: EOF@48..49 "" [Newline("\n")] [],
}

0: JS_MODULE@0..49
  0: (empty)
  1: JS_DIRECTIVE_LIST@0..0
  2: JS_MODULE_ITEM_LIST@0..48
    0: TS_DECLARE_STATEMENT@0..48
      0: DECLARE_KW@0..8 "declare" [] [Whitespace(" ")]
      1: JS_CLASS_DECLARATION@8..48
        0: (empty)
        1: CLASS_KW@8..14 "class" [] [Whitespace(" ")]
        2: JS_IDENTIFIER_BINDING@14..16
          0: IDENT@14..16 "A" [] [Whitespace(" ")]
        3: (empty)
        4: (empty)
        5: (empty)
        6: L_CURLY@16..18 "{" [] [Whitespace(" ")]
        7: JS_CLASS_MEMBER_LIST@18..47
          0: TS_METHOD_SIGNATURE_CLASS_MEMBER@18..27
            0: TS_METHOD_SIGNATURE_MODIFIER_LIST@18..18
            1: (empty)
            2: JS_LITERAL_MEMBER_NAME@18..24
              0: IDENT@18..24 "method" [] []
            3: (empty)
            4: (empty)
            5: JS_PARAMETERS@24..27
              0: L_PAREN@24..25 "(" [] []
              1: JS_PARAMETER_LIST@25..25
              2: R_PAREN@25..27 ")" [] [Whitespace(" ")]
            6: (empty)
            7: (empty)
          1: TS_METHOD_SIGNATURE_CLASS_MEMBER@27..37
            0: TS_METHOD_SIGNATURE_MODIFIER_LIST@27..27
            1: (empty)
            2: JS_LITERAL_MEMBER_NAME@27..34
              0: IDENT@27..34 "method2" [] []
            3: (empty)
            4: (empty)
            5: JS_PARAMETERS@34..37
              0: L_PAREN@34..35 "(" [] []
              1: JS_PARAMETER_LIST@35..35
              2: R_PAREN@35..37 ")" [] [Whitespace(" ")]
            6: (empty)
            7: (empty)
          2: TS_METHOD_SIGNATURE_CLASS_MEMBER@37..47
            0: TS_METHOD_SIGNATURE_MODIFIER_LIST@37..37
            1: (empty)
            2: JS_LITERAL_MEMBER_NAME@37..44
              0: IDENT@37..44 "method3" [] []
            3: (empty)
            4: (empty)
            5: JS_PARAMETERS@44..47
              0: L_PAREN@44..45 "(" [] []
              1: JS_PARAMETER_LIST@45..45
              2: R_PAREN@45..47 ")" [] [Whitespace(" ")]
            6: (empty)
            7: (empty)
        8: R_CURLY@47..48 "}" [] []
  3: EOF@48..49 "" [Newline("\n")] []
--
error[SyntaxError]: expected a semicolon to end the method declaration, but found none
  ┌─ ts_ambient_context_semi.ts:1:19
  │
1 │ declare class A { method() method2() method3() }
  │                   ^^^^^^^^

--
error[SyntaxError]: expected a semicolon to end the method declaration, but found none
  ┌─ ts_ambient_context_semi.ts:1:28
  │
1 │ declare class A { method() method2() method3() }
  │                            ^^^^^^^^^

--
declare class A { method() method2() method3() }
