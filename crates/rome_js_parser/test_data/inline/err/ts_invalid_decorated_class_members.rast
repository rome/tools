JsModule {
    interpreter_token: missing (optional),
    directives: JsDirectiveList [],
    items: JsModuleItemList [
        JsClassDeclaration {
            decorators: JsDecoratorList [],
            abstract_token: ABSTRACT_KW@0..9 "abstract" [] [Whitespace(" ")],
            class_token: CLASS_KW@9..15 "class" [] [Whitespace(" ")],
            id: JsIdentifierBinding {
                name_token: IDENT@15..20 "Test" [] [Whitespace(" ")],
            },
            type_parameters: missing (optional),
            extends_clause: missing (optional),
            implements_clause: missing (optional),
            l_curly_token: L_CURLY@20..21 "{" [] [],
            members: JsClassMemberList [
                JsBogusMember {
                    items: [
                        JsBogus {
                            items: [
                                JsDecorator {
                                    at_token: AT@21..25 "@" [Newline("\n"), Whitespace("  ")] [],
                                    expression: JsIdentifierExpression {
                                        name: JsReferenceIdentifier {
                                            value_token: IDENT@25..30 "test" [] [Whitespace(" ")],
                                        },
                                    },
                                },
                            ],
                        },
                        JsLiteralMemberName {
                            value: IDENT@30..41 "constructor" [] [],
                        },
                        JsConstructorParameters {
                            l_paren_token: L_PAREN@41..42 "(" [] [],
                            parameters: JsConstructorParameterList [],
                            r_paren_token: R_PAREN@42..44 ")" [] [Whitespace(" ")],
                        },
                        JsFunctionBody {
                            l_curly_token: L_CURLY@44..45 "{" [] [],
                            directives: JsDirectiveList [],
                            statements: JsStatementList [],
                            r_curly_token: R_CURLY@45..46 "}" [] [],
                        },
                    ],
                },
                TsPropertySignatureClassMember {
                    modifiers: TsPropertySignatureModifierList [
                        JsDecorator {
                            at_token: AT@46..50 "@" [Newline("\n"), Whitespace("  ")] [],
                            expression: JsIdentifierExpression {
                                name: JsReferenceIdentifier {
                                    value_token: IDENT@50..55 "test" [] [Whitespace(" ")],
                                },
                            },
                        },
                        TsDeclareModifier {
                            modifier_token: DECLARE_KW@55..63 "declare" [] [Whitespace(" ")],
                        },
                    ],
                    name: JsLiteralMemberName {
                        value: IDENT@63..67 "prop" [] [],
                    },
                    property_annotation: missing (optional),
                    semicolon_token: SEMICOLON@67..68 ";" [] [],
                },
                JsBogusMember {
                    items: [
                        TsMethodSignatureModifierList [
                            JsDecorator {
                                at_token: AT@68..72 "@" [Newline("\n"), Whitespace("  ")] [],
                                expression: JsIdentifierExpression {
                                    name: JsReferenceIdentifier {
                                        value_token: IDENT@72..77 "test" [] [Whitespace(" ")],
                                    },
                                },
                            },
                        ],
                        JsLiteralMemberName {
                            value: IDENT@77..83 "method" [] [],
                        },
                        JsParameters {
                            l_paren_token: L_PAREN@83..84 "(" [] [],
                            items: JsParameterList [],
                            r_paren_token: R_PAREN@84..85 ")" [] [],
                        },
                        SEMICOLON@85..86 ";" [] [],
                    ],
                },
                JsBogusMember {
                    items: [
                        JsBogus {
                            items: [
                                JsDecorator {
                                    at_token: AT@86..90 "@" [Newline("\n"), Whitespace("  ")] [],
                                    expression: JsIdentifierExpression {
                                        name: JsReferenceIdentifier {
                                            value_token: IDENT@90..95 "test" [] [Whitespace(" ")],
                                        },
                                    },
                                },
                            ],
                        },
                        L_BRACK@95..96 "[" [] [],
                        TsIndexSignatureParameter {
                            binding: JsIdentifierBinding {
                                name_token: IDENT@96..101 "index" [] [],
                            },
                            type_annotation: TsTypeAnnotation {
                                colon_token: COLON@101..103 ":" [] [Whitespace(" ")],
                                ty: TsStringType {
                                    string_token: STRING_KW@103..109 "string" [] [],
                                },
                            },
                        },
                        R_BRACK@109..110 "]" [] [],
                        TsTypeAnnotation {
                            colon_token: COLON@110..112 ":" [] [Whitespace(" ")],
                            ty: TsStringType {
                                string_token: STRING_KW@112..118 "string" [] [],
                            },
                        },
                        SEMICOLON@118..119 ";" [] [],
                    ],
                },
                JsBogusMember {
                    items: [
                        TsMethodSignatureModifierList [
                            JsDecorator {
                                at_token: AT@119..123 "@" [Newline("\n"), Whitespace("  ")] [],
                                expression: JsIdentifierExpression {
                                    name: JsReferenceIdentifier {
                                        value_token: IDENT@123..128 "test" [] [Whitespace(" ")],
                                    },
                                },
                            },
                            TsAbstractModifier {
                                modifier_token: ABSTRACT_KW@128..137 "abstract" [] [Whitespace(" ")],
                            },
                        ],
                        JsLiteralMemberName {
                            value: IDENT@137..144 "method2" [] [],
                        },
                        JsParameters {
                            l_paren_token: L_PAREN@144..145 "(" [] [],
                            items: JsParameterList [],
                            r_paren_token: R_PAREN@145..146 ")" [] [],
                        },
                        SEMICOLON@146..147 ";" [] [],
                    ],
                },
                JsBogusMember {
                    items: [
                        TsMethodSignatureModifierList [
                            JsDecorator {
                                at_token: AT@147..151 "@" [Newline("\n"), Whitespace("  ")] [],
                                expression: JsIdentifierExpression {
                                    name: JsReferenceIdentifier {
                                        value_token: IDENT@151..156 "test" [] [Whitespace(" ")],
                                    },
                                },
                            },
                            TsAbstractModifier {
                                modifier_token: ABSTRACT_KW@156..165 "abstract" [] [Whitespace(" ")],
                            },
                        ],
                        GET_KW@165..169 "get" [] [Whitespace(" ")],
                        JsLiteralMemberName {
                            value: IDENT@169..175 "getter" [] [],
                        },
                        L_PAREN@175..176 "(" [] [],
                        R_PAREN@176..177 ")" [] [],
                        SEMICOLON@177..178 ";" [] [],
                    ],
                },
                JsBogusMember {
                    items: [
                        TsMethodSignatureModifierList [
                            JsDecorator {
                                at_token: AT@178..182 "@" [Newline("\n"), Whitespace("  ")] [],
                                expression: JsIdentifierExpression {
                                    name: JsReferenceIdentifier {
                                        value_token: IDENT@182..187 "test" [] [Whitespace(" ")],
                                    },
                                },
                            },
                            TsAbstractModifier {
                                modifier_token: ABSTRACT_KW@187..196 "abstract" [] [Whitespace(" ")],
                            },
                        ],
                        SET_KW@196..200 "set" [] [Whitespace(" ")],
                        JsLiteralMemberName {
                            value: IDENT@200..206 "setter" [] [],
                        },
                        L_PAREN@206..207 "(" [] [],
                        JsFormalParameter {
                            decorators: JsDecoratorList [],
                            binding: JsIdentifierBinding {
                                name_token: IDENT@207..210 "val" [] [],
                            },
                            question_mark_token: missing (optional),
                            type_annotation: missing (optional),
                            initializer: missing (optional),
                        },
                        R_PAREN@210..211 ")" [] [],
                        SEMICOLON@211..212 ";" [] [],
                    ],
                },
            ],
            r_curly_token: R_CURLY@212..214 "}" [Newline("\n")] [],
        },
    ],
    eof_token: EOF@214..215 "" [Newline("\n")] [],
}

0: JS_MODULE@0..215
  0: (empty)
  1: JS_DIRECTIVE_LIST@0..0
  2: JS_MODULE_ITEM_LIST@0..214
    0: JS_CLASS_DECLARATION@0..214
      0: JS_DECORATOR_LIST@0..0
      1: ABSTRACT_KW@0..9 "abstract" [] [Whitespace(" ")]
      2: CLASS_KW@9..15 "class" [] [Whitespace(" ")]
      3: JS_IDENTIFIER_BINDING@15..20
        0: IDENT@15..20 "Test" [] [Whitespace(" ")]
      4: (empty)
      5: (empty)
      6: (empty)
      7: L_CURLY@20..21 "{" [] []
      8: JS_CLASS_MEMBER_LIST@21..212
        0: JS_BOGUS_MEMBER@21..46
          0: JS_BOGUS@21..30
            0: JS_DECORATOR@21..30
              0: AT@21..25 "@" [Newline("\n"), Whitespace("  ")] []
              1: JS_IDENTIFIER_EXPRESSION@25..30
                0: JS_REFERENCE_IDENTIFIER@25..30
                  0: IDENT@25..30 "test" [] [Whitespace(" ")]
          1: JS_LITERAL_MEMBER_NAME@30..41
            0: IDENT@30..41 "constructor" [] []
          2: JS_CONSTRUCTOR_PARAMETERS@41..44
            0: L_PAREN@41..42 "(" [] []
            1: JS_CONSTRUCTOR_PARAMETER_LIST@42..42
            2: R_PAREN@42..44 ")" [] [Whitespace(" ")]
          3: JS_FUNCTION_BODY@44..46
            0: L_CURLY@44..45 "{" [] []
            1: JS_DIRECTIVE_LIST@45..45
            2: JS_STATEMENT_LIST@45..45
            3: R_CURLY@45..46 "}" [] []
        1: TS_PROPERTY_SIGNATURE_CLASS_MEMBER@46..68
          0: TS_PROPERTY_SIGNATURE_MODIFIER_LIST@46..63
            0: JS_DECORATOR@46..55
              0: AT@46..50 "@" [Newline("\n"), Whitespace("  ")] []
              1: JS_IDENTIFIER_EXPRESSION@50..55
                0: JS_REFERENCE_IDENTIFIER@50..55
                  0: IDENT@50..55 "test" [] [Whitespace(" ")]
            1: TS_DECLARE_MODIFIER@55..63
              0: DECLARE_KW@55..63 "declare" [] [Whitespace(" ")]
          1: JS_LITERAL_MEMBER_NAME@63..67
            0: IDENT@63..67 "prop" [] []
          2: (empty)
          3: SEMICOLON@67..68 ";" [] []
        2: JS_BOGUS_MEMBER@68..86
          0: TS_METHOD_SIGNATURE_MODIFIER_LIST@68..77
            0: JS_DECORATOR@68..77
              0: AT@68..72 "@" [Newline("\n"), Whitespace("  ")] []
              1: JS_IDENTIFIER_EXPRESSION@72..77
                0: JS_REFERENCE_IDENTIFIER@72..77
                  0: IDENT@72..77 "test" [] [Whitespace(" ")]
          1: JS_LITERAL_MEMBER_NAME@77..83
            0: IDENT@77..83 "method" [] []
          2: JS_PARAMETERS@83..85
            0: L_PAREN@83..84 "(" [] []
            1: JS_PARAMETER_LIST@84..84
            2: R_PAREN@84..85 ")" [] []
          3: SEMICOLON@85..86 ";" [] []
        3: JS_BOGUS_MEMBER@86..119
          0: JS_BOGUS@86..95
            0: JS_DECORATOR@86..95
              0: AT@86..90 "@" [Newline("\n"), Whitespace("  ")] []
              1: JS_IDENTIFIER_EXPRESSION@90..95
                0: JS_REFERENCE_IDENTIFIER@90..95
                  0: IDENT@90..95 "test" [] [Whitespace(" ")]
          1: L_BRACK@95..96 "[" [] []
          2: TS_INDEX_SIGNATURE_PARAMETER@96..109
            0: JS_IDENTIFIER_BINDING@96..101
              0: IDENT@96..101 "index" [] []
            1: TS_TYPE_ANNOTATION@101..109
              0: COLON@101..103 ":" [] [Whitespace(" ")]
              1: TS_STRING_TYPE@103..109
                0: STRING_KW@103..109 "string" [] []
          3: R_BRACK@109..110 "]" [] []
          4: TS_TYPE_ANNOTATION@110..118
            0: COLON@110..112 ":" [] [Whitespace(" ")]
            1: TS_STRING_TYPE@112..118
              0: STRING_KW@112..118 "string" [] []
          5: SEMICOLON@118..119 ";" [] []
        4: JS_BOGUS_MEMBER@119..147
          0: TS_METHOD_SIGNATURE_MODIFIER_LIST@119..137
            0: JS_DECORATOR@119..128
              0: AT@119..123 "@" [Newline("\n"), Whitespace("  ")] []
              1: JS_IDENTIFIER_EXPRESSION@123..128
                0: JS_REFERENCE_IDENTIFIER@123..128
                  0: IDENT@123..128 "test" [] [Whitespace(" ")]
            1: TS_ABSTRACT_MODIFIER@128..137
              0: ABSTRACT_KW@128..137 "abstract" [] [Whitespace(" ")]
          1: JS_LITERAL_MEMBER_NAME@137..144
            0: IDENT@137..144 "method2" [] []
          2: JS_PARAMETERS@144..146
            0: L_PAREN@144..145 "(" [] []
            1: JS_PARAMETER_LIST@145..145
            2: R_PAREN@145..146 ")" [] []
          3: SEMICOLON@146..147 ";" [] []
        5: JS_BOGUS_MEMBER@147..178
          0: TS_METHOD_SIGNATURE_MODIFIER_LIST@147..165
            0: JS_DECORATOR@147..156
              0: AT@147..151 "@" [Newline("\n"), Whitespace("  ")] []
              1: JS_IDENTIFIER_EXPRESSION@151..156
                0: JS_REFERENCE_IDENTIFIER@151..156
                  0: IDENT@151..156 "test" [] [Whitespace(" ")]
            1: TS_ABSTRACT_MODIFIER@156..165
              0: ABSTRACT_KW@156..165 "abstract" [] [Whitespace(" ")]
          1: GET_KW@165..169 "get" [] [Whitespace(" ")]
          2: JS_LITERAL_MEMBER_NAME@169..175
            0: IDENT@169..175 "getter" [] []
          3: L_PAREN@175..176 "(" [] []
          4: R_PAREN@176..177 ")" [] []
          5: SEMICOLON@177..178 ";" [] []
        6: JS_BOGUS_MEMBER@178..212
          0: TS_METHOD_SIGNATURE_MODIFIER_LIST@178..196
            0: JS_DECORATOR@178..187
              0: AT@178..182 "@" [Newline("\n"), Whitespace("  ")] []
              1: JS_IDENTIFIER_EXPRESSION@182..187
                0: JS_REFERENCE_IDENTIFIER@182..187
                  0: IDENT@182..187 "test" [] [Whitespace(" ")]
            1: TS_ABSTRACT_MODIFIER@187..196
              0: ABSTRACT_KW@187..196 "abstract" [] [Whitespace(" ")]
          1: SET_KW@196..200 "set" [] [Whitespace(" ")]
          2: JS_LITERAL_MEMBER_NAME@200..206
            0: IDENT@200..206 "setter" [] []
          3: L_PAREN@206..207 "(" [] []
          4: JS_FORMAL_PARAMETER@207..210
            0: JS_DECORATOR_LIST@207..207
            1: JS_IDENTIFIER_BINDING@207..210
              0: IDENT@207..210 "val" [] []
            2: (empty)
            3: (empty)
            4: (empty)
          5: R_PAREN@210..211 ")" [] []
          6: SEMICOLON@211..212 ";" [] []
      9: R_CURLY@212..214 "}" [Newline("\n")] []
  3: EOF@214..215 "" [Newline("\n")] []
--
ts_invalid_decorated_class_members.ts:2:3 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Decorators are not valid here.
  
    1 │ abstract class Test {
  > 2 │   @test constructor() {}
      │   ^^^^^
    3 │   @test declare prop;
    4 │   @test method();
  
  i Decorators are only valid on class declarations, class expressions, and class methods.
  
--
ts_invalid_decorated_class_members.ts:4:3 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Decorators are not valid here.
  
    2 │   @test constructor() {}
    3 │   @test declare prop;
  > 4 │   @test method();
      │   ^^^^^
    5 │   @test [index: string]: string;
    6 │   @test abstract method2();
  
  i Decorators are only valid on class declarations, class expressions, and class methods.
  
--
ts_invalid_decorated_class_members.ts:5:3 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Decorators are not valid here.
  
    3 │   @test declare prop;
    4 │   @test method();
  > 5 │   @test [index: string]: string;
      │   ^^^^^
    6 │   @test abstract method2();
    7 │   @test abstract get getter();
  
  i Decorators are only valid on class declarations, class expressions, and class methods.
  
--
ts_invalid_decorated_class_members.ts:6:3 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Decorators are not valid here.
  
    4 │   @test method();
    5 │   @test [index: string]: string;
  > 6 │   @test abstract method2();
      │   ^^^^^
    7 │   @test abstract get getter();
    8 │   @test abstract set setter(val);
  
  i Decorators are only valid on class declarations, class expressions, and class methods.
  
--
ts_invalid_decorated_class_members.ts:7:3 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Decorators are not valid here.
  
    5 │   @test [index: string]: string;
    6 │   @test abstract method2();
  > 7 │   @test abstract get getter();
      │   ^^^^^
    8 │   @test abstract set setter(val);
    9 │ }
  
  i Decorators are only valid on class declarations, class expressions, and class methods.
  
--
ts_invalid_decorated_class_members.ts:8:3 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Decorators are not valid here.
  
     6 │   @test abstract method2();
     7 │   @test abstract get getter();
   > 8 │   @test abstract set setter(val);
       │   ^^^^^
     9 │ }
    10 │ 
  
  i Decorators are only valid on class declarations, class expressions, and class methods.
  
--
abstract class Test {
  @test constructor() {}
  @test declare prop;
  @test method();
  @test [index: string]: string;
  @test abstract method2();
  @test abstract get getter();
  @test abstract set setter(val);
}
