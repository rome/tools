JsModule {
    interpreter_token: missing (optional),
    directives: JsDirectiveList [],
    items: JsModuleItemList [
        JsBogusStatement {
            items: [
                JsBogus {
                    items: [
                        LET_KW@0..4 "let" [] [Whitespace(" ")],
                        JsBogus {
                            items: [
                                JsBogus {
                                    items: [
                                        JsIdentifierBinding {
                                            name_token: IDENT@4..5 "a" [] [],
                                        },
                                        JsBogus {
                                            items: [
                                                COLON@5..7 ":" [] [Whitespace(" ")],
                                                TsStringType {
                                                    string_token: STRING_KW@7..13 "string" [] [],
                                                },
                                            ],
                                        },
                                    ],
                                },
                                COMMA@13..15 "," [] [Whitespace(" ")],
                                JsBogus {
                                    items: [
                                        JsIdentifierBinding {
                                            name_token: IDENT@15..16 "b" [] [],
                                        },
                                        JsBogus {
                                            items: [
                                                BANG@16..17 "!" [] [],
                                                TsTypeAnnotation {
                                                    colon_token: COLON@17..19 ":" [] [Whitespace(" ")],
                                                    ty: TsNumberType {
                                                        number_token: NUMBER_KW@19..25 "number" [] [],
                                                    },
                                                },
                                            ],
                                        },
                                    ],
                                },
                            ],
                        },
                    ],
                },
                SEMICOLON@25..26 ";" [] [],
            ],
        },
    ],
    eof_token: EOF@26..27 "" [Newline("\n")] [],
}

0: JS_MODULE@0..27
  0: (empty)
  1: JS_DIRECTIVE_LIST@0..0
  2: JS_MODULE_ITEM_LIST@0..26
    0: JS_BOGUS_STATEMENT@0..26
      0: JS_BOGUS@0..25
        0: LET_KW@0..4 "let" [] [Whitespace(" ")]
        1: JS_BOGUS@4..25
          0: JS_BOGUS@4..13
            0: JS_IDENTIFIER_BINDING@4..5
              0: IDENT@4..5 "a" [] []
            1: JS_BOGUS@5..13
              0: COLON@5..7 ":" [] [Whitespace(" ")]
              1: TS_STRING_TYPE@7..13
                0: STRING_KW@7..13 "string" [] []
          1: COMMA@13..15 "," [] [Whitespace(" ")]
          2: JS_BOGUS@15..25
            0: JS_IDENTIFIER_BINDING@15..16
              0: IDENT@15..16 "b" [] []
            1: JS_BOGUS@16..25
              0: BANG@16..17 "!" [] []
              1: TS_TYPE_ANNOTATION@17..25
                0: COLON@17..19 ":" [] [Whitespace(" ")]
                1: TS_NUMBER_TYPE@19..25
                  0: NUMBER_KW@19..25 "number" [] []
      1: SEMICOLON@25..26 ";" [] []
  3: EOF@26..27 "" [Newline("\n")] []
--
js_type_variable_annotation.js:1:6 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × type annotation are a TypeScript only feature. Convert your file to a TypeScript file or remove the syntax.
  
  > 1 │ let a: string, b!: number;
      │      ^^^^^^^^
    2 │ 
  
  i TypeScript only syntax
  
--
js_type_variable_annotation.js:1:17 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × definite assertion assignments are a TypeScript only feature. Convert your file to a TypeScript file or remove the syntax.
  
  > 1 │ let a: string, b!: number;
      │                 ^^^^^^^^^
    2 │ 
  
  i TypeScript only syntax
  
--
let a: string, b!: number;
