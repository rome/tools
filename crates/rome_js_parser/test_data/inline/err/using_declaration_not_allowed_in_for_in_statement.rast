JsModule {
    interpreter_token: missing (optional),
    directives: JsDirectiveList [],
    items: JsModuleItemList [
        JsForInStatement {
            for_token: FOR_KW@0..4 "for" [] [Whitespace(" ")],
            l_paren_token: L_PAREN@4..5 "(" [] [],
            initializer: JsForVariableDeclaration {
                await_token: missing (optional),
                kind_token: USING_KW@5..11 "using" [] [Whitespace(" ")],
                declarator: JsVariableDeclarator {
                    id: JsIdentifierBinding {
                        name_token: IDENT@11..13 "x" [] [Whitespace(" ")],
                    },
                    variable_annotation: missing (optional),
                    initializer: missing (optional),
                },
            },
            in_token: IN_KW@13..16 "in" [] [Whitespace(" ")],
            expression: JsIdentifierExpression {
                name: JsReferenceIdentifier {
                    value_token: IDENT@16..17 "y" [] [],
                },
            },
            r_paren_token: R_PAREN@17..19 ")" [] [Whitespace(" ")],
            body: JsBlockStatement {
                l_curly_token: L_CURLY@19..20 "{" [] [],
                statements: JsStatementList [],
                r_curly_token: R_CURLY@20..21 "}" [] [],
            },
        },
        JsEmptyStatement {
            semicolon_token: SEMICOLON@21..22 ";" [] [],
        },
        JsForInStatement {
            for_token: FOR_KW@22..27 "for" [Newline("\n")] [Whitespace(" ")],
            l_paren_token: L_PAREN@27..28 "(" [] [],
            initializer: JsForVariableDeclaration {
                await_token: AWAIT_KW@28..34 "await" [] [Whitespace(" ")],
                kind_token: USING_KW@34..40 "using" [] [Whitespace(" ")],
                declarator: JsVariableDeclarator {
                    id: JsIdentifierBinding {
                        name_token: IDENT@40..42 "x" [] [Whitespace(" ")],
                    },
                    variable_annotation: missing (optional),
                    initializer: missing (optional),
                },
            },
            in_token: IN_KW@42..45 "in" [] [Whitespace(" ")],
            expression: JsIdentifierExpression {
                name: JsReferenceIdentifier {
                    value_token: IDENT@45..46 "y" [] [],
                },
            },
            r_paren_token: R_PAREN@46..48 ")" [] [Whitespace(" ")],
            body: JsBlockStatement {
                l_curly_token: L_CURLY@48..49 "{" [] [],
                statements: JsStatementList [],
                r_curly_token: R_CURLY@49..50 "}" [] [],
            },
        },
        JsEmptyStatement {
            semicolon_token: SEMICOLON@50..51 ";" [] [],
        },
    ],
    eof_token: EOF@51..52 "" [Newline("\n")] [],
}

0: JS_MODULE@0..52
  0: (empty)
  1: JS_DIRECTIVE_LIST@0..0
  2: JS_MODULE_ITEM_LIST@0..51
    0: JS_FOR_IN_STATEMENT@0..21
      0: FOR_KW@0..4 "for" [] [Whitespace(" ")]
      1: L_PAREN@4..5 "(" [] []
      2: JS_FOR_VARIABLE_DECLARATION@5..13
        0: (empty)
        1: USING_KW@5..11 "using" [] [Whitespace(" ")]
        2: JS_VARIABLE_DECLARATOR@11..13
          0: JS_IDENTIFIER_BINDING@11..13
            0: IDENT@11..13 "x" [] [Whitespace(" ")]
          1: (empty)
          2: (empty)
      3: IN_KW@13..16 "in" [] [Whitespace(" ")]
      4: JS_IDENTIFIER_EXPRESSION@16..17
        0: JS_REFERENCE_IDENTIFIER@16..17
          0: IDENT@16..17 "y" [] []
      5: R_PAREN@17..19 ")" [] [Whitespace(" ")]
      6: JS_BLOCK_STATEMENT@19..21
        0: L_CURLY@19..20 "{" [] []
        1: JS_STATEMENT_LIST@20..20
        2: R_CURLY@20..21 "}" [] []
    1: JS_EMPTY_STATEMENT@21..22
      0: SEMICOLON@21..22 ";" [] []
    2: JS_FOR_IN_STATEMENT@22..50
      0: FOR_KW@22..27 "for" [Newline("\n")] [Whitespace(" ")]
      1: L_PAREN@27..28 "(" [] []
      2: JS_FOR_VARIABLE_DECLARATION@28..42
        0: AWAIT_KW@28..34 "await" [] [Whitespace(" ")]
        1: USING_KW@34..40 "using" [] [Whitespace(" ")]
        2: JS_VARIABLE_DECLARATOR@40..42
          0: JS_IDENTIFIER_BINDING@40..42
            0: IDENT@40..42 "x" [] [Whitespace(" ")]
          1: (empty)
          2: (empty)
      3: IN_KW@42..45 "in" [] [Whitespace(" ")]
      4: JS_IDENTIFIER_EXPRESSION@45..46
        0: JS_REFERENCE_IDENTIFIER@45..46
          0: IDENT@45..46 "y" [] []
      5: R_PAREN@46..48 ")" [] [Whitespace(" ")]
      6: JS_BLOCK_STATEMENT@48..50
        0: L_CURLY@48..49 "{" [] []
        1: JS_STATEMENT_LIST@49..49
        2: R_CURLY@49..50 "}" [] []
    3: JS_EMPTY_STATEMENT@50..51
      0: SEMICOLON@50..51 ";" [] []
  3: EOF@51..52 "" [Newline("\n")] []
--
using_declaration_not_allowed_in_for_in_statement.js:1:12 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × The left-hand side of a 'for...in' statement cannot be a 'using' declaration
  
  > 1 │ for (using x in y) {};
      │            ^
    2 │ for (await using x in y) {};
    3 │ 
  
--
using_declaration_not_allowed_in_for_in_statement.js:2:18 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × The left-hand side of a 'for...in' statement cannot be a 'using' declaration
  
    1 │ for (using x in y) {};
  > 2 │ for (await using x in y) {};
      │                  ^
    3 │ 
  
--
for (using x in y) {};
for (await using x in y) {};
