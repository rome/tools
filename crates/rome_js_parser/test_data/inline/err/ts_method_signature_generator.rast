JsModule {
    interpreter_token: missing (optional),
    directives: JsDirectiveList [],
    items: JsModuleItemList [
        TsDeclareStatement {
            declare_token: DECLARE_KW@0..8 "declare" [] [Whitespace(" ")],
            declaration: JsClassDeclaration {
                abstract_token: missing (optional),
                class_token: CLASS_KW@8..14 "class" [] [Whitespace(" ")],
                id: JsIdentifierBinding {
                    name_token: IDENT@14..16 "A" [] [Whitespace(" ")],
                },
                type_parameters: missing (optional),
                extends_clause: missing (optional),
                implements_clause: missing (optional),
                l_curly_token: L_CURLY@16..18 "{" [] [Whitespace(" ")],
                members: JsClassMemberList [
                    JsUnknownMember {
                        items: [
                            TsMethodSignatureModifierList [],
                            STAR@18..20 "*" [] [Whitespace(" ")],
                            JsLiteralMemberName {
                                value: IDENT@20..26 "method" [] [],
                            },
                            JsParameters {
                                l_paren_token: L_PAREN@26..27 "(" [] [],
                                items: JsParameterList [],
                                r_paren_token: R_PAREN@27..28 ")" [] [],
                            },
                            SEMICOLON@28..30 ";" [] [Whitespace(" ")],
                        ],
                    },
                ],
                r_curly_token: R_CURLY@30..31 "}" [] [],
            },
        },
        JsClassDeclaration {
            abstract_token: ABSTRACT_KW@31..41 "abstract" [Newline("\n")] [Whitespace(" ")],
            class_token: CLASS_KW@41..47 "class" [] [Whitespace(" ")],
            id: JsIdentifierBinding {
                name_token: IDENT@47..49 "B" [] [Whitespace(" ")],
            },
            type_parameters: missing (optional),
            extends_clause: missing (optional),
            implements_clause: missing (optional),
            l_curly_token: L_CURLY@49..51 "{" [] [Whitespace(" ")],
            members: JsClassMemberList [
                JsUnknownMember {
                    items: [
                        TsMethodSignatureModifierList [
                            TsAbstractModifier {
                                modifier_token: ABSTRACT_KW@51..60 "abstract" [] [Whitespace(" ")],
                            },
                        ],
                        STAR@60..62 "*" [] [Whitespace(" ")],
                        JsLiteralMemberName {
                            value: IDENT@62..68 "method" [] [],
                        },
                        JsParameters {
                            l_paren_token: L_PAREN@68..69 "(" [] [],
                            items: JsParameterList [],
                            r_paren_token: R_PAREN@69..70 ")" [] [],
                        },
                        SEMICOLON@70..72 ";" [] [Whitespace(" ")],
                    ],
                },
            ],
            r_curly_token: R_CURLY@72..73 "}" [] [],
        },
        JsClassDeclaration {
            abstract_token: missing (optional),
            class_token: CLASS_KW@73..80 "class" [Newline("\n")] [Whitespace(" ")],
            id: JsIdentifierBinding {
                name_token: IDENT@80..82 "C" [] [Whitespace(" ")],
            },
            type_parameters: missing (optional),
            extends_clause: missing (optional),
            implements_clause: missing (optional),
            l_curly_token: L_CURLY@82..83 "{" [] [],
            members: JsClassMemberList [
                JsUnknownMember {
                    items: [
                        TsMethodSignatureModifierList [],
                        STAR@83..91 "*" [Newline("\n"), Whitespace("     ")] [Whitespace(" ")],
                        JsLiteralMemberName {
                            value: IDENT@91..99 "overload" [] [],
                        },
                        JsParameters {
                            l_paren_token: L_PAREN@99..100 "(" [] [],
                            items: JsParameterList [],
                            r_paren_token: R_PAREN@100..101 ")" [] [],
                        },
                        SEMICOLON@101..102 ";" [] [],
                    ],
                },
                JsMethodClassMember {
                    modifiers: JsMethodModifierList [],
                    async_token: missing (optional),
                    star_token: STAR@102..110 "*" [Newline("\n"), Whitespace("     ")] [Whitespace(" ")],
                    name: JsLiteralMemberName {
                        value: IDENT@110..118 "overload" [] [],
                    },
                    question_mark_token: missing (optional),
                    type_parameters: missing (optional),
                    parameters: JsParameters {
                        l_paren_token: L_PAREN@118..119 "(" [] [],
                        items: JsParameterList [],
                        r_paren_token: R_PAREN@119..121 ")" [] [Whitespace(" ")],
                    },
                    return_type_annotation: missing (optional),
                    body: JsFunctionBody {
                        l_curly_token: L_CURLY@121..122 "{" [] [],
                        directives: JsDirectiveList [],
                        statements: JsStatementList [],
                        r_curly_token: R_CURLY@122..123 "}" [] [],
                    },
                },
            ],
            r_curly_token: R_CURLY@123..125 "}" [Newline("\n")] [],
        },
    ],
    eof_token: EOF@125..126 "" [Newline("\n")] [],
}

0: JS_MODULE@0..126
  0: (empty)
  1: JS_DIRECTIVE_LIST@0..0
  2: JS_MODULE_ITEM_LIST@0..125
    0: TS_DECLARE_STATEMENT@0..31
      0: DECLARE_KW@0..8 "declare" [] [Whitespace(" ")]
      1: JS_CLASS_DECLARATION@8..31
        0: (empty)
        1: CLASS_KW@8..14 "class" [] [Whitespace(" ")]
        2: JS_IDENTIFIER_BINDING@14..16
          0: IDENT@14..16 "A" [] [Whitespace(" ")]
        3: (empty)
        4: (empty)
        5: (empty)
        6: L_CURLY@16..18 "{" [] [Whitespace(" ")]
        7: JS_CLASS_MEMBER_LIST@18..30
          0: JS_UNKNOWN_MEMBER@18..30
            0: TS_METHOD_SIGNATURE_MODIFIER_LIST@18..18
            1: STAR@18..20 "*" [] [Whitespace(" ")]
            2: JS_LITERAL_MEMBER_NAME@20..26
              0: IDENT@20..26 "method" [] []
            3: JS_PARAMETERS@26..28
              0: L_PAREN@26..27 "(" [] []
              1: JS_PARAMETER_LIST@27..27
              2: R_PAREN@27..28 ")" [] []
            4: SEMICOLON@28..30 ";" [] [Whitespace(" ")]
        8: R_CURLY@30..31 "}" [] []
    1: JS_CLASS_DECLARATION@31..73
      0: ABSTRACT_KW@31..41 "abstract" [Newline("\n")] [Whitespace(" ")]
      1: CLASS_KW@41..47 "class" [] [Whitespace(" ")]
      2: JS_IDENTIFIER_BINDING@47..49
        0: IDENT@47..49 "B" [] [Whitespace(" ")]
      3: (empty)
      4: (empty)
      5: (empty)
      6: L_CURLY@49..51 "{" [] [Whitespace(" ")]
      7: JS_CLASS_MEMBER_LIST@51..72
        0: JS_UNKNOWN_MEMBER@51..72
          0: TS_METHOD_SIGNATURE_MODIFIER_LIST@51..60
            0: TS_ABSTRACT_MODIFIER@51..60
              0: ABSTRACT_KW@51..60 "abstract" [] [Whitespace(" ")]
          1: STAR@60..62 "*" [] [Whitespace(" ")]
          2: JS_LITERAL_MEMBER_NAME@62..68
            0: IDENT@62..68 "method" [] []
          3: JS_PARAMETERS@68..70
            0: L_PAREN@68..69 "(" [] []
            1: JS_PARAMETER_LIST@69..69
            2: R_PAREN@69..70 ")" [] []
          4: SEMICOLON@70..72 ";" [] [Whitespace(" ")]
      8: R_CURLY@72..73 "}" [] []
    2: JS_CLASS_DECLARATION@73..125
      0: (empty)
      1: CLASS_KW@73..80 "class" [Newline("\n")] [Whitespace(" ")]
      2: JS_IDENTIFIER_BINDING@80..82
        0: IDENT@80..82 "C" [] [Whitespace(" ")]
      3: (empty)
      4: (empty)
      5: (empty)
      6: L_CURLY@82..83 "{" [] []
      7: JS_CLASS_MEMBER_LIST@83..123
        0: JS_UNKNOWN_MEMBER@83..102
          0: TS_METHOD_SIGNATURE_MODIFIER_LIST@83..83
          1: STAR@83..91 "*" [Newline("\n"), Whitespace("     ")] [Whitespace(" ")]
          2: JS_LITERAL_MEMBER_NAME@91..99
            0: IDENT@91..99 "overload" [] []
          3: JS_PARAMETERS@99..101
            0: L_PAREN@99..100 "(" [] []
            1: JS_PARAMETER_LIST@100..100
            2: R_PAREN@100..101 ")" [] []
          4: SEMICOLON@101..102 ";" [] []
        1: JS_METHOD_CLASS_MEMBER@102..123
          0: JS_METHOD_MODIFIER_LIST@102..102
          1: (empty)
          2: STAR@102..110 "*" [Newline("\n"), Whitespace("     ")] [Whitespace(" ")]
          3: JS_LITERAL_MEMBER_NAME@110..118
            0: IDENT@110..118 "overload" [] []
          4: (empty)
          5: (empty)
          6: JS_PARAMETERS@118..121
            0: L_PAREN@118..119 "(" [] []
            1: JS_PARAMETER_LIST@119..119
            2: R_PAREN@119..121 ")" [] [Whitespace(" ")]
          7: (empty)
          8: JS_FUNCTION_BODY@121..123
            0: L_CURLY@121..122 "{" [] []
            1: JS_DIRECTIVE_LIST@122..122
            2: JS_STATEMENT_LIST@122..122
            3: R_CURLY@122..123 "}" [] []
      8: R_CURLY@123..125 "}" [Newline("\n")] []
  3: EOF@125..126 "" [Newline("\n")] []
--
ts_method_signature_generator.ts:1:19 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × A method signature cannot be declared as a generator.
  
    ┌─ ts_method_signature_generator.ts:1:19
    │
  1 │ declare class A { * method(); }
    │                   ^^^^^^^^^^^
  
--
ts_method_signature_generator.ts:2:20 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × A method signature cannot be declared as a generator.
  
    ┌─ ts_method_signature_generator.ts:2:20
    │
  2 │ abstract class B { abstract * method(); }
    │                    ^^^^^^^^^^^^^^^^^^^^
  
--
ts_method_signature_generator.ts:4:6 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × A method signature cannot be declared as a generator.
  
    ┌─ ts_method_signature_generator.ts:4:6
    │
  4 │      * overload();
    │      ^^^^^^^^^^^^^
  
--
declare class A { * method(); }
abstract class B { abstract * method(); }
class C {
     * overload();
     * overload() {}
}
