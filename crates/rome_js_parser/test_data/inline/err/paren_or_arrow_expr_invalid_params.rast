JsModule {
    interpreter_token: missing (optional),
    directives: JsDirectiveList [],
    items: JsModuleItemList [
        JsExpressionStatement {
            expression: JsParenthesizedExpression {
                l_paren_token: L_PAREN@0..1 "(" [] [],
                expression: JsBinaryExpression {
                    left: JsNumberLiteralExpression {
                        value_token: JS_NUMBER_LITERAL@1..3 "5" [] [Whitespace(" ")],
                    },
                    operator_token: PLUS@3..5 "+" [] [Whitespace(" ")],
                    right: JsNumberLiteralExpression {
                        value_token: JS_NUMBER_LITERAL@5..6 "5" [] [],
                    },
                },
                r_paren_token: R_PAREN@6..8 ")" [] [Whitespace(" ")],
            },
            semicolon_token: missing (optional),
        },
        JsBogusStatement {
            items: [
                FAT_ARROW@8..11 "=>" [] [Whitespace(" ")],
            ],
        },
        JsBlockStatement {
            l_curly_token: L_CURLY@11..12 "{" [] [],
            statements: JsStatementList [],
            r_curly_token: R_CURLY@12..13 "}" [] [],
        },
        JsExpressionStatement {
            expression: JsArrowFunctionExpression {
                async_token: missing (optional),
                type_parameters: missing (optional),
                parameters: JsParameters {
                    l_paren_token: L_PAREN@13..15 "(" [Newline("\n")] [],
                    items: JsParameterList [
                        JsFormalParameter {
                            decorators: JsDecoratorList [],
                            binding: JsIdentifierBinding {
                                name_token: IDENT@15..16 "a" [] [],
                            },
                            question_mark_token: missing (optional),
                            type_annotation: missing (optional),
                            initializer: missing (optional),
                        },
                        COMMA@16..18 "," [] [Whitespace(" ")],
                        missing element,
                        COMMA@18..19 "," [] [],
                        JsFormalParameter {
                            decorators: JsDecoratorList [],
                            binding: JsIdentifierBinding {
                                name_token: IDENT@19..20 "b" [] [],
                            },
                            question_mark_token: missing (optional),
                            type_annotation: missing (optional),
                            initializer: missing (optional),
                        },
                    ],
                    r_paren_token: R_PAREN@20..22 ")" [] [Whitespace(" ")],
                },
                return_type_annotation: missing (optional),
                fat_arrow_token: FAT_ARROW@22..25 "=>" [] [Whitespace(" ")],
                body: JsFunctionBody {
                    l_curly_token: L_CURLY@25..26 "{" [] [],
                    directives: JsDirectiveList [],
                    statements: JsStatementList [],
                    r_curly_token: R_CURLY@26..27 "}" [] [],
                },
            },
            semicolon_token: missing (optional),
        },
        JsExpressionStatement {
            expression: JsArrowFunctionExpression {
                async_token: missing (optional),
                type_parameters: missing (optional),
                parameters: JsParameters {
                    l_paren_token: L_PAREN@27..29 "(" [Newline("\n")] [],
                    items: JsParameterList [
                        JsFormalParameter {
                            decorators: JsDecoratorList [],
                            binding: JsIdentifierBinding {
                                name_token: IDENT@29..30 "a" [] [],
                            },
                            question_mark_token: missing (optional),
                            type_annotation: missing (optional),
                            initializer: missing (optional),
                        },
                        COMMA@30..32 "," [] [Whitespace(" ")],
                        JsFormalParameter {
                            decorators: JsDecoratorList [],
                            binding: JsIdentifierBinding {
                                name_token: IDENT@32..33 "b" [] [],
                            },
                            question_mark_token: missing (optional),
                            type_annotation: missing (optional),
                            initializer: missing (optional),
                        },
                    ],
                    r_paren_token: R_PAREN@33..35 ")" [] [Whitespace(" ")],
                },
                return_type_annotation: missing (optional),
                fat_arrow_token: FAT_ARROW@35..37 "=>" [] [],
                body: missing (required),
            },
            semicolon_token: SEMICOLON@37..38 ";" [] [],
        },
        JsExpressionStatement {
            expression: JsArrowFunctionExpression {
                async_token: missing (optional),
                type_parameters: missing (optional),
                parameters: JsParameters {
                    l_paren_token: L_PAREN@38..40 "(" [Newline("\n")] [],
                    items: JsParameterList [
                        JsBogusParameter {
                            items: [
                                JsDecoratorList [],
                                JsIdentifierBinding {
                                    name_token: IDENT@40..41 "a" [] [],
                                },
                                JsBogus {
                                    items: [
                                        COLON@41..43 ":" [] [Whitespace(" ")],
                                        TsStringType {
                                            string_token: STRING_KW@43..49 "string" [] [],
                                        },
                                    ],
                                },
                            ],
                        },
                    ],
                    r_paren_token: missing (required),
                },
                return_type_annotation: missing (optional),
                fat_arrow_token: missing (required),
                body: missing (required),
            },
            semicolon_token: SEMICOLON@49..50 ";" [] [],
        },
        JsExpressionStatement {
            expression: JsArrowFunctionExpression {
                async_token: missing (optional),
                type_parameters: missing (optional),
                parameters: JsParameters {
                    l_paren_token: L_PAREN@50..52 "(" [Newline("\n")] [],
                    items: JsParameterList [
                        JsFormalParameter {
                            decorators: JsDecoratorList [],
                            binding: JsIdentifierBinding {
                                name_token: IDENT@52..53 "a" [] [],
                            },
                            question_mark_token: missing (optional),
                            type_annotation: missing (optional),
                            initializer: missing (optional),
                        },
                        COMMA@53..55 "," [] [Whitespace(" ")],
                        JsFormalParameter {
                            decorators: JsDecoratorList [],
                            binding: JsIdentifierBinding {
                                name_token: IDENT@55..56 "b" [] [],
                            },
                            question_mark_token: missing (optional),
                            type_annotation: missing (optional),
                            initializer: missing (optional),
                        },
                    ],
                    r_paren_token: R_PAREN@56..57 ")" [] [],
                },
                return_type_annotation: missing (optional),
                fat_arrow_token: FAT_ARROW@57..62 "=>" [Newline("\n"), Whitespace(" ")] [Whitespace(" ")],
                body: JsFunctionBody {
                    l_curly_token: L_CURLY@62..63 "{" [] [],
                    directives: JsDirectiveList [],
                    statements: JsStatementList [],
                    r_curly_token: R_CURLY@63..64 "}" [] [],
                },
            },
            semicolon_token: missing (optional),
        },
    ],
    eof_token: EOF@64..65 "" [Newline("\n")] [],
}

0: JS_MODULE@0..65
  0: (empty)
  1: JS_DIRECTIVE_LIST@0..0
  2: JS_MODULE_ITEM_LIST@0..64
    0: JS_EXPRESSION_STATEMENT@0..8
      0: JS_PARENTHESIZED_EXPRESSION@0..8
        0: L_PAREN@0..1 "(" [] []
        1: JS_BINARY_EXPRESSION@1..6
          0: JS_NUMBER_LITERAL_EXPRESSION@1..3
            0: JS_NUMBER_LITERAL@1..3 "5" [] [Whitespace(" ")]
          1: PLUS@3..5 "+" [] [Whitespace(" ")]
          2: JS_NUMBER_LITERAL_EXPRESSION@5..6
            0: JS_NUMBER_LITERAL@5..6 "5" [] []
        2: R_PAREN@6..8 ")" [] [Whitespace(" ")]
      1: (empty)
    1: JS_BOGUS_STATEMENT@8..11
      0: FAT_ARROW@8..11 "=>" [] [Whitespace(" ")]
    2: JS_BLOCK_STATEMENT@11..13
      0: L_CURLY@11..12 "{" [] []
      1: JS_STATEMENT_LIST@12..12
      2: R_CURLY@12..13 "}" [] []
    3: JS_EXPRESSION_STATEMENT@13..27
      0: JS_ARROW_FUNCTION_EXPRESSION@13..27
        0: (empty)
        1: (empty)
        2: JS_PARAMETERS@13..22
          0: L_PAREN@13..15 "(" [Newline("\n")] []
          1: JS_PARAMETER_LIST@15..20
            0: JS_FORMAL_PARAMETER@15..16
              0: JS_DECORATOR_LIST@15..15
              1: JS_IDENTIFIER_BINDING@15..16
                0: IDENT@15..16 "a" [] []
              2: (empty)
              3: (empty)
              4: (empty)
            1: COMMA@16..18 "," [] [Whitespace(" ")]
            2: (empty)
            3: COMMA@18..19 "," [] []
            4: JS_FORMAL_PARAMETER@19..20
              0: JS_DECORATOR_LIST@19..19
              1: JS_IDENTIFIER_BINDING@19..20
                0: IDENT@19..20 "b" [] []
              2: (empty)
              3: (empty)
              4: (empty)
          2: R_PAREN@20..22 ")" [] [Whitespace(" ")]
        3: (empty)
        4: FAT_ARROW@22..25 "=>" [] [Whitespace(" ")]
        5: JS_FUNCTION_BODY@25..27
          0: L_CURLY@25..26 "{" [] []
          1: JS_DIRECTIVE_LIST@26..26
          2: JS_STATEMENT_LIST@26..26
          3: R_CURLY@26..27 "}" [] []
      1: (empty)
    4: JS_EXPRESSION_STATEMENT@27..38
      0: JS_ARROW_FUNCTION_EXPRESSION@27..37
        0: (empty)
        1: (empty)
        2: JS_PARAMETERS@27..35
          0: L_PAREN@27..29 "(" [Newline("\n")] []
          1: JS_PARAMETER_LIST@29..33
            0: JS_FORMAL_PARAMETER@29..30
              0: JS_DECORATOR_LIST@29..29
              1: JS_IDENTIFIER_BINDING@29..30
                0: IDENT@29..30 "a" [] []
              2: (empty)
              3: (empty)
              4: (empty)
            1: COMMA@30..32 "," [] [Whitespace(" ")]
            2: JS_FORMAL_PARAMETER@32..33
              0: JS_DECORATOR_LIST@32..32
              1: JS_IDENTIFIER_BINDING@32..33
                0: IDENT@32..33 "b" [] []
              2: (empty)
              3: (empty)
              4: (empty)
          2: R_PAREN@33..35 ")" [] [Whitespace(" ")]
        3: (empty)
        4: FAT_ARROW@35..37 "=>" [] []
        5: (empty)
      1: SEMICOLON@37..38 ";" [] []
    5: JS_EXPRESSION_STATEMENT@38..50
      0: JS_ARROW_FUNCTION_EXPRESSION@38..49
        0: (empty)
        1: (empty)
        2: JS_PARAMETERS@38..49
          0: L_PAREN@38..40 "(" [Newline("\n")] []
          1: JS_PARAMETER_LIST@40..49
            0: JS_BOGUS_PARAMETER@40..49
              0: JS_DECORATOR_LIST@40..40
              1: JS_IDENTIFIER_BINDING@40..41
                0: IDENT@40..41 "a" [] []
              2: JS_BOGUS@41..49
                0: COLON@41..43 ":" [] [Whitespace(" ")]
                1: TS_STRING_TYPE@43..49
                  0: STRING_KW@43..49 "string" [] []
          2: (empty)
        3: (empty)
        4: (empty)
        5: (empty)
      1: SEMICOLON@49..50 ";" [] []
    6: JS_EXPRESSION_STATEMENT@50..64
      0: JS_ARROW_FUNCTION_EXPRESSION@50..64
        0: (empty)
        1: (empty)
        2: JS_PARAMETERS@50..57
          0: L_PAREN@50..52 "(" [Newline("\n")] []
          1: JS_PARAMETER_LIST@52..56
            0: JS_FORMAL_PARAMETER@52..53
              0: JS_DECORATOR_LIST@52..52
              1: JS_IDENTIFIER_BINDING@52..53
                0: IDENT@52..53 "a" [] []
              2: (empty)
              3: (empty)
              4: (empty)
            1: COMMA@53..55 "," [] [Whitespace(" ")]
            2: JS_FORMAL_PARAMETER@55..56
              0: JS_DECORATOR_LIST@55..55
              1: JS_IDENTIFIER_BINDING@55..56
                0: IDENT@55..56 "b" [] []
              2: (empty)
              3: (empty)
              4: (empty)
          2: R_PAREN@56..57 ")" [] []
        3: (empty)
        4: FAT_ARROW@57..62 "=>" [Newline("\n"), Whitespace(" ")] [Whitespace(" ")]
        5: JS_FUNCTION_BODY@62..64
          0: L_CURLY@62..63 "{" [] []
          1: JS_DIRECTIVE_LIST@63..63
          2: JS_STATEMENT_LIST@63..63
          3: R_CURLY@63..64 "}" [] []
      1: (empty)
  3: EOF@64..65 "" [Newline("\n")] []
--
paren_or_arrow_expr_invalid_params.js:1:9 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Expected a semicolon or an implicit semicolon after a statement, but found none
  
  > 1 │ (5 + 5) => {}
      │         ^^
    2 │ (a, ,b) => {}
    3 │ (a, b) =>;
  
  i An explicit or implicit semicolon is expected here...
  
  > 1 │ (5 + 5) => {}
      │         ^^
    2 │ (a, ,b) => {}
    3 │ (a, b) =>;
  
  i ...Which is required to end this statement
  
  > 1 │ (5 + 5) => {}
      │ ^^^^^^^^^^
    2 │ (a, ,b) => {}
    3 │ (a, b) =>;
  
--
paren_or_arrow_expr_invalid_params.js:2:5 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected a parameter but instead found ','
  
    1 │ (5 + 5) => {}
  > 2 │ (a, ,b) => {}
      │     ^
    3 │ (a, b) =>;
    4 │ (a: string;
  
  i Expected a parameter here
  
    1 │ (5 + 5) => {}
  > 2 │ (a, ,b) => {}
      │     ^
    3 │ (a, b) =>;
    4 │ (a: string;
  
--
paren_or_arrow_expr_invalid_params.js:3:10 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected a function body, or an expression but instead found ';'
  
    1 │ (5 + 5) => {}
    2 │ (a, ,b) => {}
  > 3 │ (a, b) =>;
      │          ^
    4 │ (a: string;
    5 │ (a, b)
  
  i Expected a function body, or an expression here
  
    1 │ (5 + 5) => {}
    2 │ (a, ,b) => {}
  > 3 │ (a, b) =>;
      │          ^
    4 │ (a: string;
    5 │ (a, b)
  
--
paren_or_arrow_expr_invalid_params.js:4:3 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Type annotations are a TypeScript only feature. Convert your file to a TypeScript file or remove the syntax.
  
    2 │ (a, ,b) => {}
    3 │ (a, b) =>;
  > 4 │ (a: string;
      │   ^^^^^^^^
    5 │ (a, b)
    6 │  => {}
  
  i TypeScript only syntax
  
--
paren_or_arrow_expr_invalid_params.js:4:11 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected `,` but instead found `;`
  
    2 │ (a, ,b) => {}
    3 │ (a, b) =>;
  > 4 │ (a: string;
      │           ^
    5 │ (a, b)
    6 │  => {}
  
  i Remove ;
  
--
paren_or_arrow_expr_invalid_params.js:6:2 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Line terminator not permitted before arrow.
  
    4 │ (a: string;
    5 │ (a, b)
  > 6 │  => {}
      │  ^^
    7 │ 
  
--
(5 + 5) => {}
(a, ,b) => {}
(a, b) =>;
(a: string;
(a, b)
 => {}
