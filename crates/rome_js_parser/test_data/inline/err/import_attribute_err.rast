JsModule {
    interpreter_token: missing (optional),
    directives: JsDirectiveList [],
    items: JsModuleItemList [
        JsImport {
            import_token: IMPORT_KW@0..7 "import" [] [Whitespace(" ")],
            import_clause: JsImportBareClause {
                source: JsModuleSource {
                    value_token: JS_STRING_LITERAL@7..13 "\"foo\"" [] [Whitespace(" ")],
                },
                attribute: JsImportAttribute {
                    with_token: WITH_KW@13..18 "with" [] [Whitespace(" ")],
                    l_curly_token: L_CURLY@18..20 "{" [] [Whitespace(" ")],
                    attributes: JsImportAttributeEntryList [
                        JsImportAttributeEntry {
                            key: IDENT@20..24 "type" [] [],
                            colon_token: missing (required),
                            value_token: missing (required),
                        },
                        COMMA@24..26 "," [] [Whitespace(" ")],
                        JsImportAttributeEntry {
                            key: JS_STRING_LITERAL@26..33 "\"json\"" [] [Whitespace(" ")],
                            colon_token: missing (required),
                            value_token: missing (required),
                        },
                    ],
                    r_curly_token: R_CURLY@33..34 "}" [] [],
                },
            },
            semicolon_token: SEMICOLON@34..35 ";" [] [],
        },
        JsImport {
            import_token: IMPORT_KW@35..43 "import" [Newline("\n")] [Whitespace(" ")],
            import_clause: JsImportBareClause {
                source: JsModuleSource {
                    value_token: JS_STRING_LITERAL@43..49 "\"bar\"" [] [Whitespace(" ")],
                },
                attribute: missing (optional),
            },
            semicolon_token: missing (optional),
        },
        JsExpressionStatement {
            expression: JsIdentifierExpression {
                name: JsReferenceIdentifier {
                    value_token: IDENT@49..59 "\\u{61}ith" [] [Whitespace(" ")],
                },
            },
            semicolon_token: missing (optional),
        },
        JsBlockStatement {
            l_curly_token: L_CURLY@59..61 "{" [] [Whitespace(" ")],
            statements: JsStatementList [
                JsLabeledStatement {
                    label_token: IDENT@61..65 "type" [] [],
                    colon_token: COLON@65..67 ":" [] [Whitespace(" ")],
                    body: JsExpressionStatement {
                        expression: JsStringLiteralExpression {
                            value_token: JS_STRING_LITERAL@67..74 "\"json\"" [] [Whitespace(" ")],
                        },
                        semicolon_token: missing (optional),
                    },
                },
            ],
            r_curly_token: R_CURLY@74..75 "}" [] [],
        },
        JsEmptyStatement {
            semicolon_token: SEMICOLON@75..76 ";" [] [],
        },
        JsImport {
            import_token: IMPORT_KW@76..84 "import" [Newline("\n")] [Whitespace(" ")],
            import_clause: JsImportNamedClause {
                type_token: missing (optional),
                default_specifier: missing (optional),
                named_import: JsNamedImportSpecifiers {
                    l_curly_token: L_CURLY@84..86 "{" [] [Whitespace(" ")],
                    specifiers: JsNamedImportSpecifierList [
                        JsShorthandNamedImportSpecifier {
                            type_token: missing (optional),
                            local_name: JsIdentifierBinding {
                                name_token: IDENT@86..90 "foo" [] [Whitespace(" ")],
                            },
                        },
                    ],
                    r_curly_token: R_CURLY@90..92 "}" [] [Whitespace(" ")],
                },
                from_token: missing (required),
                source: missing (required),
                attribute: JsImportAttribute {
                    with_token: WITH_KW@92..97 "with" [] [Whitespace(" ")],
                    l_curly_token: L_CURLY@97..99 "{" [] [Whitespace(" ")],
                    attributes: JsImportAttributeEntryList [
                        JsImportAttributeEntry {
                            key: IDENT@99..103 "type" [] [],
                            colon_token: COLON@103..105 ":" [] [Whitespace(" ")],
                            value_token: JS_STRING_LITERAL@105..112 "\"json\"" [] [Whitespace(" ")],
                        },
                    ],
                    r_curly_token: R_CURLY@112..113 "}" [] [],
                },
            },
            semicolon_token: SEMICOLON@113..114 ";" [] [],
        },
        JsImport {
            import_token: IMPORT_KW@114..122 "import" [Newline("\n")] [Whitespace(" ")],
            import_clause: JsImportBareClause {
                source: JsModuleSource {
                    value_token: JS_STRING_LITERAL@122..129 "\"lorem\"" [] [],
                },
                attribute: missing (optional),
            },
            semicolon_token: missing (optional),
        },
        JsBogusStatement {
            items: [
                WITH_KW@129..135 "with" [Newline("\n")] [Whitespace(" ")],
                JsBlockStatement {
                    l_curly_token: L_CURLY@135..137 "{" [] [Whitespace(" ")],
                    statements: JsStatementList [
                        JsLabeledStatement {
                            label_token: IDENT@137..141 "type" [] [],
                            colon_token: COLON@141..143 ":" [] [Whitespace(" ")],
                            body: JsExpressionStatement {
                                expression: JsStringLiteralExpression {
                                    value_token: JS_STRING_LITERAL@143..150 "\"json\"" [] [Whitespace(" ")],
                                },
                                semicolon_token: missing (optional),
                            },
                        },
                    ],
                    r_curly_token: R_CURLY@150..151 "}" [] [],
                },
            ],
        },
        JsImport {
            import_token: IMPORT_KW@151..159 "import" [Newline("\n")] [Whitespace(" ")],
            import_clause: JsImportDefaultClause {
                type_token: missing (optional),
                local_name: JsIdentifierBinding {
                    name_token: IDENT@159..164 "foo2" [] [Whitespace(" ")],
                },
                from_token: FROM_KW@164..169 "from" [] [Whitespace(" ")],
                source: JsModuleSource {
                    value_token: JS_STRING_LITERAL@169..180 "\"foo.json\"" [] [Whitespace(" ")],
                },
                attribute: JsImportAttribute {
                    with_token: WITH_KW@180..185 "with" [] [Whitespace(" ")],
                    l_curly_token: L_CURLY@185..187 "{" [] [Whitespace(" ")],
                    attributes: JsImportAttributeEntryList [
                        JsImportAttributeEntry {
                            key: JS_STRING_LITERAL@187..193 "\"type\"" [] [],
                            colon_token: COLON@193..195 ":" [] [Whitespace(" ")],
                            value_token: JS_STRING_LITERAL@195..201 "\"json\"" [] [],
                        },
                        COMMA@201..203 "," [] [Whitespace(" ")],
                        JsBogusImportAttributeEntry {
                            items: [
                                IDENT@203..207 "type" [] [],
                                COLON@207..209 ":" [] [Whitespace(" ")],
                                JS_STRING_LITERAL@209..215 "\"html\"" [] [],
                            ],
                        },
                        COMMA@215..217 "," [] [Whitespace(" ")],
                        JsBogusImportAttributeEntry {
                            items: [
                                JS_STRING_LITERAL@217..223 "\"type\"" [] [],
                                COLON@223..225 ":" [] [Whitespace(" ")],
                                JS_STRING_LITERAL@225..230 "\"js\"" [] [Whitespace(" ")],
                            ],
                        },
                    ],
                    r_curly_token: R_CURLY@230..231 "}" [] [],
                },
            },
            semicolon_token: SEMICOLON@231..232 ";" [] [],
        },
        JsImport {
            import_token: IMPORT_KW@232..240 "import" [Newline("\n")] [Whitespace(" ")],
            import_clause: JsImportBareClause {
                source: JsModuleSource {
                    value_token: JS_STRING_LITERAL@240..244 "\"x\"" [] [Whitespace(" ")],
                },
                attribute: JsImportAttribute {
                    with_token: WITH_KW@244..248 "with" [] [],
                    l_curly_token: missing (required),
                    attributes: JsImportAttributeEntryList [],
                    r_curly_token: missing (required),
                },
            },
            semicolon_token: SEMICOLON@248..249 ";" [] [],
        },
        JsImport {
            import_token: IMPORT_KW@249..257 "import" [Newline("\n")] [Whitespace(" ")],
            import_clause: JsImportDefaultClause {
                type_token: missing (optional),
                local_name: JsIdentifierBinding {
                    name_token: IDENT@257..263 "ipsum" [] [Whitespace(" ")],
                },
                from_token: FROM_KW@263..268 "from" [] [Whitespace(" ")],
                source: JsModuleSource {
                    value_token: JS_STRING_LITERAL@268..281 "\"ipsum.json\"" [] [Whitespace(" ")],
                },
                attribute: JsImportAttribute {
                    with_token: WITH_KW@281..286 "with" [] [Whitespace(" ")],
                    l_curly_token: L_CURLY@286..288 "{" [] [Whitespace(" ")],
                    attributes: JsImportAttributeEntryList [
                        JsImportAttributeEntry {
                            key: IDENT@288..292 "type" [] [],
                            colon_token: COLON@292..294 ":" [] [Whitespace(" ")],
                            value_token: JS_STRING_LITERAL@294..300 "\"json\"" [] [],
                        },
                        COMMA@300..302 "," [] [Whitespace(" ")],
                        JsImportAttributeEntry {
                            key: IDENT@302..306 "lazy" [] [],
                            colon_token: COLON@306..308 ":" [] [Whitespace(" ")],
                            value_token: missing (required),
                        },
                        missing separator,
                        JsImportAttributeEntry {
                            key: IDENT@308..312 "true" [] [],
                            colon_token: missing (required),
                            value_token: missing (required),
                        },
                        COMMA@312..314 "," [] [Whitespace(" ")],
                        JsImportAttributeEntry {
                            key: IDENT@314..325 "startAtLine" [] [],
                            colon_token: COLON@325..327 ":" [] [Whitespace(" ")],
                            value_token: missing (required),
                        },
                        missing separator,
                        JsBogusImportAttributeEntry {
                            items: [
                                JS_NUMBER_LITERAL@327..329 "1" [] [Whitespace(" ")],
                            ],
                        },
                    ],
                    r_curly_token: R_CURLY@329..330 "}" [] [],
                },
            },
            semicolon_token: SEMICOLON@330..331 ";" [] [],
        },
        JsImport {
            import_token: IMPORT_KW@331..339 "import" [Newline("\n")] [Whitespace(" ")],
            import_clause: JsImportNamedClause {
                type_token: missing (optional),
                default_specifier: missing (optional),
                named_import: JsNamedImportSpecifiers {
                    l_curly_token: L_CURLY@339..341 "{" [] [Whitespace(" ")],
                    specifiers: JsNamedImportSpecifierList [
                        JsShorthandNamedImportSpecifier {
                            type_token: missing (optional),
                            local_name: JsIdentifierBinding {
                                name_token: IDENT@341..343 "a" [] [Whitespace(" ")],
                            },
                        },
                    ],
                    r_curly_token: R_CURLY@343..345 "}" [] [Whitespace(" ")],
                },
                from_token: FROM_KW@345..350 "from" [] [Whitespace(" ")],
                source: JsModuleSource {
                    value_token: JS_STRING_LITERAL@350..359 "\"a.json\"" [] [Whitespace(" ")],
                },
                attribute: JsImportAttribute {
                    with_token: WITH_KW@359..363 "with" [] [],
                    l_curly_token: missing (required),
                    attributes: JsImportAttributeEntryList [],
                    r_curly_token: missing (required),
                },
            },
            semicolon_token: missing (optional),
        },
    ],
    eof_token: EOF@363..364 "" [Newline("\n")] [],
}

0: JS_MODULE@0..364
  0: (empty)
  1: JS_DIRECTIVE_LIST@0..0
  2: JS_MODULE_ITEM_LIST@0..363
    0: JS_IMPORT@0..35
      0: IMPORT_KW@0..7 "import" [] [Whitespace(" ")]
      1: JS_IMPORT_BARE_CLAUSE@7..34
        0: JS_MODULE_SOURCE@7..13
          0: JS_STRING_LITERAL@7..13 "\"foo\"" [] [Whitespace(" ")]
        1: JS_IMPORT_ATTRIBUTE@13..34
          0: WITH_KW@13..18 "with" [] [Whitespace(" ")]
          1: L_CURLY@18..20 "{" [] [Whitespace(" ")]
          2: JS_IMPORT_ATTRIBUTE_ENTRY_LIST@20..33
            0: JS_IMPORT_ATTRIBUTE_ENTRY@20..24
              0: IDENT@20..24 "type" [] []
              1: (empty)
              2: (empty)
            1: COMMA@24..26 "," [] [Whitespace(" ")]
            2: JS_IMPORT_ATTRIBUTE_ENTRY@26..33
              0: JS_STRING_LITERAL@26..33 "\"json\"" [] [Whitespace(" ")]
              1: (empty)
              2: (empty)
          3: R_CURLY@33..34 "}" [] []
      2: SEMICOLON@34..35 ";" [] []
    1: JS_IMPORT@35..49
      0: IMPORT_KW@35..43 "import" [Newline("\n")] [Whitespace(" ")]
      1: JS_IMPORT_BARE_CLAUSE@43..49
        0: JS_MODULE_SOURCE@43..49
          0: JS_STRING_LITERAL@43..49 "\"bar\"" [] [Whitespace(" ")]
        1: (empty)
      2: (empty)
    2: JS_EXPRESSION_STATEMENT@49..59
      0: JS_IDENTIFIER_EXPRESSION@49..59
        0: JS_REFERENCE_IDENTIFIER@49..59
          0: IDENT@49..59 "\\u{61}ith" [] [Whitespace(" ")]
      1: (empty)
    3: JS_BLOCK_STATEMENT@59..75
      0: L_CURLY@59..61 "{" [] [Whitespace(" ")]
      1: JS_STATEMENT_LIST@61..74
        0: JS_LABELED_STATEMENT@61..74
          0: IDENT@61..65 "type" [] []
          1: COLON@65..67 ":" [] [Whitespace(" ")]
          2: JS_EXPRESSION_STATEMENT@67..74
            0: JS_STRING_LITERAL_EXPRESSION@67..74
              0: JS_STRING_LITERAL@67..74 "\"json\"" [] [Whitespace(" ")]
            1: (empty)
      2: R_CURLY@74..75 "}" [] []
    4: JS_EMPTY_STATEMENT@75..76
      0: SEMICOLON@75..76 ";" [] []
    5: JS_IMPORT@76..114
      0: IMPORT_KW@76..84 "import" [Newline("\n")] [Whitespace(" ")]
      1: JS_IMPORT_NAMED_CLAUSE@84..113
        0: (empty)
        1: (empty)
        2: JS_NAMED_IMPORT_SPECIFIERS@84..92
          0: L_CURLY@84..86 "{" [] [Whitespace(" ")]
          1: JS_NAMED_IMPORT_SPECIFIER_LIST@86..90
            0: JS_SHORTHAND_NAMED_IMPORT_SPECIFIER@86..90
              0: (empty)
              1: JS_IDENTIFIER_BINDING@86..90
                0: IDENT@86..90 "foo" [] [Whitespace(" ")]
          2: R_CURLY@90..92 "}" [] [Whitespace(" ")]
        3: (empty)
        4: (empty)
        5: JS_IMPORT_ATTRIBUTE@92..113
          0: WITH_KW@92..97 "with" [] [Whitespace(" ")]
          1: L_CURLY@97..99 "{" [] [Whitespace(" ")]
          2: JS_IMPORT_ATTRIBUTE_ENTRY_LIST@99..112
            0: JS_IMPORT_ATTRIBUTE_ENTRY@99..112
              0: IDENT@99..103 "type" [] []
              1: COLON@103..105 ":" [] [Whitespace(" ")]
              2: JS_STRING_LITERAL@105..112 "\"json\"" [] [Whitespace(" ")]
          3: R_CURLY@112..113 "}" [] []
      2: SEMICOLON@113..114 ";" [] []
    6: JS_IMPORT@114..129
      0: IMPORT_KW@114..122 "import" [Newline("\n")] [Whitespace(" ")]
      1: JS_IMPORT_BARE_CLAUSE@122..129
        0: JS_MODULE_SOURCE@122..129
          0: JS_STRING_LITERAL@122..129 "\"lorem\"" [] []
        1: (empty)
      2: (empty)
    7: JS_BOGUS_STATEMENT@129..151
      0: WITH_KW@129..135 "with" [Newline("\n")] [Whitespace(" ")]
      1: JS_BLOCK_STATEMENT@135..151
        0: L_CURLY@135..137 "{" [] [Whitespace(" ")]
        1: JS_STATEMENT_LIST@137..150
          0: JS_LABELED_STATEMENT@137..150
            0: IDENT@137..141 "type" [] []
            1: COLON@141..143 ":" [] [Whitespace(" ")]
            2: JS_EXPRESSION_STATEMENT@143..150
              0: JS_STRING_LITERAL_EXPRESSION@143..150
                0: JS_STRING_LITERAL@143..150 "\"json\"" [] [Whitespace(" ")]
              1: (empty)
        2: R_CURLY@150..151 "}" [] []
    8: JS_IMPORT@151..232
      0: IMPORT_KW@151..159 "import" [Newline("\n")] [Whitespace(" ")]
      1: JS_IMPORT_DEFAULT_CLAUSE@159..231
        0: (empty)
        1: JS_IDENTIFIER_BINDING@159..164
          0: IDENT@159..164 "foo2" [] [Whitespace(" ")]
        2: FROM_KW@164..169 "from" [] [Whitespace(" ")]
        3: JS_MODULE_SOURCE@169..180
          0: JS_STRING_LITERAL@169..180 "\"foo.json\"" [] [Whitespace(" ")]
        4: JS_IMPORT_ATTRIBUTE@180..231
          0: WITH_KW@180..185 "with" [] [Whitespace(" ")]
          1: L_CURLY@185..187 "{" [] [Whitespace(" ")]
          2: JS_IMPORT_ATTRIBUTE_ENTRY_LIST@187..230
            0: JS_IMPORT_ATTRIBUTE_ENTRY@187..201
              0: JS_STRING_LITERAL@187..193 "\"type\"" [] []
              1: COLON@193..195 ":" [] [Whitespace(" ")]
              2: JS_STRING_LITERAL@195..201 "\"json\"" [] []
            1: COMMA@201..203 "," [] [Whitespace(" ")]
            2: JS_BOGUS_IMPORT_ATTRIBUTE_ENTRY@203..215
              0: IDENT@203..207 "type" [] []
              1: COLON@207..209 ":" [] [Whitespace(" ")]
              2: JS_STRING_LITERAL@209..215 "\"html\"" [] []
            3: COMMA@215..217 "," [] [Whitespace(" ")]
            4: JS_BOGUS_IMPORT_ATTRIBUTE_ENTRY@217..230
              0: JS_STRING_LITERAL@217..223 "\"type\"" [] []
              1: COLON@223..225 ":" [] [Whitespace(" ")]
              2: JS_STRING_LITERAL@225..230 "\"js\"" [] [Whitespace(" ")]
          3: R_CURLY@230..231 "}" [] []
      2: SEMICOLON@231..232 ";" [] []
    9: JS_IMPORT@232..249
      0: IMPORT_KW@232..240 "import" [Newline("\n")] [Whitespace(" ")]
      1: JS_IMPORT_BARE_CLAUSE@240..248
        0: JS_MODULE_SOURCE@240..244
          0: JS_STRING_LITERAL@240..244 "\"x\"" [] [Whitespace(" ")]
        1: JS_IMPORT_ATTRIBUTE@244..248
          0: WITH_KW@244..248 "with" [] []
          1: (empty)
          2: JS_IMPORT_ATTRIBUTE_ENTRY_LIST@248..248
          3: (empty)
      2: SEMICOLON@248..249 ";" [] []
    10: JS_IMPORT@249..331
      0: IMPORT_KW@249..257 "import" [Newline("\n")] [Whitespace(" ")]
      1: JS_IMPORT_DEFAULT_CLAUSE@257..330
        0: (empty)
        1: JS_IDENTIFIER_BINDING@257..263
          0: IDENT@257..263 "ipsum" [] [Whitespace(" ")]
        2: FROM_KW@263..268 "from" [] [Whitespace(" ")]
        3: JS_MODULE_SOURCE@268..281
          0: JS_STRING_LITERAL@268..281 "\"ipsum.json\"" [] [Whitespace(" ")]
        4: JS_IMPORT_ATTRIBUTE@281..330
          0: WITH_KW@281..286 "with" [] [Whitespace(" ")]
          1: L_CURLY@286..288 "{" [] [Whitespace(" ")]
          2: JS_IMPORT_ATTRIBUTE_ENTRY_LIST@288..329
            0: JS_IMPORT_ATTRIBUTE_ENTRY@288..300
              0: IDENT@288..292 "type" [] []
              1: COLON@292..294 ":" [] [Whitespace(" ")]
              2: JS_STRING_LITERAL@294..300 "\"json\"" [] []
            1: COMMA@300..302 "," [] [Whitespace(" ")]
            2: JS_IMPORT_ATTRIBUTE_ENTRY@302..308
              0: IDENT@302..306 "lazy" [] []
              1: COLON@306..308 ":" [] [Whitespace(" ")]
              2: (empty)
            3: (empty)
            4: JS_IMPORT_ATTRIBUTE_ENTRY@308..312
              0: IDENT@308..312 "true" [] []
              1: (empty)
              2: (empty)
            5: COMMA@312..314 "," [] [Whitespace(" ")]
            6: JS_IMPORT_ATTRIBUTE_ENTRY@314..327
              0: IDENT@314..325 "startAtLine" [] []
              1: COLON@325..327 ":" [] [Whitespace(" ")]
              2: (empty)
            7: (empty)
            8: JS_BOGUS_IMPORT_ATTRIBUTE_ENTRY@327..329
              0: JS_NUMBER_LITERAL@327..329 "1" [] [Whitespace(" ")]
          3: R_CURLY@329..330 "}" [] []
      2: SEMICOLON@330..331 ";" [] []
    11: JS_IMPORT@331..363
      0: IMPORT_KW@331..339 "import" [Newline("\n")] [Whitespace(" ")]
      1: JS_IMPORT_NAMED_CLAUSE@339..363
        0: (empty)
        1: (empty)
        2: JS_NAMED_IMPORT_SPECIFIERS@339..345
          0: L_CURLY@339..341 "{" [] [Whitespace(" ")]
          1: JS_NAMED_IMPORT_SPECIFIER_LIST@341..343
            0: JS_SHORTHAND_NAMED_IMPORT_SPECIFIER@341..343
              0: (empty)
              1: JS_IDENTIFIER_BINDING@341..343
                0: IDENT@341..343 "a" [] [Whitespace(" ")]
          2: R_CURLY@343..345 "}" [] [Whitespace(" ")]
        3: FROM_KW@345..350 "from" [] [Whitespace(" ")]
        4: JS_MODULE_SOURCE@350..359
          0: JS_STRING_LITERAL@350..359 "\"a.json\"" [] [Whitespace(" ")]
        5: JS_IMPORT_ATTRIBUTE@359..363
          0: WITH_KW@359..363 "with" [] []
          1: (empty)
          2: JS_IMPORT_ATTRIBUTE_ENTRY_LIST@363..363
          3: (empty)
      2: (empty)
  3: EOF@363..364 "" [Newline("\n")] []
--
import_attribute_err.js:1:25 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected `:` but instead found `,`
  
  > 1 │ import "foo" with { type, "json" };
      │                         ^
    2 │ import "bar" \u{61}ith { type: "json" };
    3 │ import { foo } with { type: "json" };
  
  i Remove ,
  
--
import_attribute_err.js:1:34 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected `:` but instead found `}`
  
  > 1 │ import "foo" with { type, "json" };
      │                                  ^
    2 │ import "bar" \u{61}ith { type: "json" };
    3 │ import { foo } with { type: "json" };
  
  i Remove }
  
--
import_attribute_err.js:2:14 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Expected a semicolon or an implicit semicolon after a statement, but found none
  
    1 │ import "foo" with { type, "json" };
  > 2 │ import "bar" \u{61}ith { type: "json" };
      │              ^^^^^^^^^
    3 │ import { foo } with { type: "json" };
    4 │ import "lorem"
  
  i An explicit or implicit semicolon is expected here...
  
    1 │ import "foo" with { type, "json" };
  > 2 │ import "bar" \u{61}ith { type: "json" };
      │              ^^^^^^^^^
    3 │ import { foo } with { type: "json" };
    4 │ import "lorem"
  
  i ...Which is required to end this statement
  
    1 │ import "foo" with { type, "json" };
  > 2 │ import "bar" \u{61}ith { type: "json" };
      │ ^^^^^^^^^^^^^
    3 │ import { foo } with { type: "json" };
    4 │ import "lorem"
  
--
import_attribute_err.js:2:24 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Expected a semicolon or an implicit semicolon after a statement, but found none
  
    1 │ import "foo" with { type, "json" };
  > 2 │ import "bar" \u{61}ith { type: "json" };
      │                        ^
    3 │ import { foo } with { type: "json" };
    4 │ import "lorem"
  
  i An explicit or implicit semicolon is expected here...
  
    1 │ import "foo" with { type, "json" };
  > 2 │ import "bar" \u{61}ith { type: "json" };
      │                        ^
    3 │ import { foo } with { type: "json" };
    4 │ import "lorem"
  
  i ...Which is required to end this statement
  
    1 │ import "foo" with { type, "json" };
  > 2 │ import "bar" \u{61}ith { type: "json" };
      │              ^^^^^^^^^^^
    3 │ import { foo } with { type: "json" };
    4 │ import "lorem"
  
--
import_attribute_err.js:3:16 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected `from` but instead found `with`
  
    1 │ import "foo" with { type, "json" };
    2 │ import "bar" \u{61}ith { type: "json" };
  > 3 │ import { foo } with { type: "json" };
      │                ^^^^
    4 │ import "lorem"
    5 │ with { type: "json" }
  
  i Remove with
  
--
import_attribute_err.js:5:6 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected `(` but instead found `{`
  
    3 │ import { foo } with { type: "json" };
    4 │ import "lorem"
  > 5 │ with { type: "json" }
      │      ^
    6 │ import foo2 from "foo.json" with { "type": "json", type: "html", "type": "js" };
    7 │ import "x" with;
  
  i Remove {
  
--
import_attribute_err.js:5:1 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × `with` statements are not allowed in strict mode
  
    3 │ import { foo } with { type: "json" };
    4 │ import "lorem"
  > 5 │ with { type: "json" }
      │ ^^^^^^^^^^^^^^^^^^^^^
    6 │ import foo2 from "foo.json" with { "type": "json", type: "html", "type": "js" };
    7 │ import "x" with;
  
--
import_attribute_err.js:6:36 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Duplicate assertion keys are not allowed
  
    4 │ import "lorem"
    5 │ with { type: "json" }
  > 6 │ import foo2 from "foo.json" with { "type": "json", type: "html", "type": "js" };
      │                                    ^^^^^^
    7 │ import "x" with;
    8 │ import ipsum from "ipsum.json" with { type: "json", lazy: true, startAtLine: 1 };
  
  i First use of the key `type`
  
    4 │ import "lorem"
    5 │ with { type: "json" }
  > 6 │ import foo2 from "foo.json" with { "type": "json", type: "html", "type": "js" };
      │                                    ^^^^^^
    7 │ import "x" with;
    8 │ import ipsum from "ipsum.json" with { type: "json", lazy: true, startAtLine: 1 };
  
  i second use here
  
    4 │ import "lorem"
    5 │ with { type: "json" }
  > 6 │ import foo2 from "foo.json" with { "type": "json", type: "html", "type": "js" };
      │                                                    ^^^^
    7 │ import "x" with;
    8 │ import ipsum from "ipsum.json" with { type: "json", lazy: true, startAtLine: 1 };
  
--
import_attribute_err.js:7:16 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected `{` but instead found `;`
  
    5 │ with { type: "json" }
    6 │ import foo2 from "foo.json" with { "type": "json", type: "html", "type": "js" };
  > 7 │ import "x" with;
      │                ^
    8 │ import ipsum from "ipsum.json" with { type: "json", lazy: true, startAtLine: 1 };
    9 │ import { a } from "a.json" with
  
  i Remove ;
  
--
import_attribute_err.js:8:59 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected `string literal` but instead found `true`
  
     6 │ import foo2 from "foo.json" with { "type": "json", type: "html", "type": "js" };
     7 │ import "x" with;
   > 8 │ import ipsum from "ipsum.json" with { type: "json", lazy: true, startAtLine: 1 };
       │                                                           ^^^^
     9 │ import { a } from "a.json" with
    10 │ 
  
  i Remove true
  
--
import_attribute_err.js:8:63 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected `:` but instead found `,`
  
     6 │ import foo2 from "foo.json" with { "type": "json", type: "html", "type": "js" };
     7 │ import "x" with;
   > 8 │ import ipsum from "ipsum.json" with { type: "json", lazy: true, startAtLine: 1 };
       │                                                               ^
     9 │ import { a } from "a.json" with
    10 │ 
  
  i Remove ,
  
--
import_attribute_err.js:8:78 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected `string literal` but instead found `1`
  
     6 │ import foo2 from "foo.json" with { "type": "json", type: "html", "type": "js" };
     7 │ import "x" with;
   > 8 │ import ipsum from "ipsum.json" with { type: "json", lazy: true, startAtLine: 1 };
       │                                                                              ^
     9 │ import { a } from "a.json" with
    10 │ 
  
  i Remove 1
  
--
import_attribute_err.js:10:1 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected `{` but instead the file ends
  
     8 │ import ipsum from "ipsum.json" with { type: "json", lazy: true, startAtLine: 1 };
     9 │ import { a } from "a.json" with
  > 10 │ 
       │ 
  
  i the file ends here
  
     8 │ import ipsum from "ipsum.json" with { type: "json", lazy: true, startAtLine: 1 };
     9 │ import { a } from "a.json" with
  > 10 │ 
       │ 
  
--
import "foo" with { type, "json" };
import "bar" \u{61}ith { type: "json" };
import { foo } with { type: "json" };
import "lorem"
with { type: "json" }
import foo2 from "foo.json" with { "type": "json", type: "html", "type": "js" };
import "x" with;
import ipsum from "ipsum.json" with { type: "json", lazy: true, startAtLine: 1 };
import { a } from "a.json" with
