JsModule {
    interpreter_token: missing (optional),
    directives: JsDirectiveList [],
    items: JsModuleItemList [
        JsImport {
            import_token: IMPORT_KW@0..7 "import" [] [Whitespace(" ")],
            import_clause: JsImportBareClause {
                source: JsModuleSource {
                    value_token: JS_STRING_LITERAL@7..13 "\"foo\"" [] [Whitespace(" ")],
                },
                attribute: JsImportAttribute {
                    with_token: WITH_KW@13..18 "with" [] [Whitespace(" ")],
                    l_curly_token: L_CURLY@18..20 "{" [] [Whitespace(" ")],
                    attributes: JsImportAttributeEntryList [
                        JsImportAttributeEntry {
                            key: IDENT@20..24 "type" [] [],
                            colon_token: missing (required),
                            value_token: missing (required),
                        },
                        COMMA@24..26 "," [] [Whitespace(" ")],
                        JsImportAttributeEntry {
                            key: JS_STRING_LITERAL@26..33 "\"json\"" [] [Whitespace(" ")],
                            colon_token: missing (required),
                            value_token: missing (required),
                        },
                    ],
                    r_curly_token: R_CURLY@33..34 "}" [] [],
                },
            },
            semicolon_token: SEMICOLON@34..35 ";" [] [],
        },
        JsImport {
            import_token: IMPORT_KW@35..43 "import" [Newline("\n")] [Whitespace(" ")],
            import_clause: JsImportBareClause {
                source: JsModuleSource {
                    value_token: JS_STRING_LITERAL@43..49 "\"bar\"" [] [Whitespace(" ")],
                },
                attribute: missing (optional),
            },
            semicolon_token: missing (optional),
        },
        JsExpressionStatement {
            expression: JsIdentifierExpression {
                name: JsReferenceIdentifier {
                    value_token: IDENT@49..59 "\\u{61}ith" [] [Whitespace(" ")],
                },
            },
            semicolon_token: missing (optional),
        },
        JsBlockStatement {
            l_curly_token: L_CURLY@59..61 "{" [] [Whitespace(" ")],
            statements: JsStatementList [
                JsLabeledStatement {
                    label_token: IDENT@61..65 "type" [] [],
                    colon_token: COLON@65..67 ":" [] [Whitespace(" ")],
                    body: JsExpressionStatement {
                        expression: JsStringLiteralExpression {
                            value_token: JS_STRING_LITERAL@67..74 "\"json\"" [] [Whitespace(" ")],
                        },
                        semicolon_token: missing (optional),
                    },
                },
            ],
            r_curly_token: R_CURLY@74..75 "}" [] [],
        },
        JsEmptyStatement {
            semicolon_token: SEMICOLON@75..76 ";" [] [],
        },
        JsImport {
            import_token: IMPORT_KW@76..84 "import" [Newline("\n")] [Whitespace(" ")],
            import_clause: JsImportNamedClause {
                type_token: missing (optional),
                default_specifier: missing (optional),
                named_import: JsNamedImportSpecifiers {
                    l_curly_token: L_CURLY@84..86 "{" [] [Whitespace(" ")],
                    specifiers: JsNamedImportSpecifierList [
                        JsShorthandNamedImportSpecifier {
                            type_token: missing (optional),
                            local_name: JsIdentifierBinding {
                                name_token: IDENT@86..90 "foo" [] [Whitespace(" ")],
                            },
                        },
                    ],
                    r_curly_token: R_CURLY@90..92 "}" [] [Whitespace(" ")],
                },
                from_token: missing (required),
                source: missing (required),
                attribute: JsImportAttribute {
                    with_token: WITH_KW@92..97 "with" [] [Whitespace(" ")],
                    l_curly_token: L_CURLY@97..99 "{" [] [Whitespace(" ")],
                    attributes: JsImportAttributeEntryList [
                        JsImportAttributeEntry {
                            key: IDENT@99..103 "type" [] [],
                            colon_token: COLON@103..105 ":" [] [Whitespace(" ")],
                            value_token: JS_STRING_LITERAL@105..112 "\"json\"" [] [Whitespace(" ")],
                        },
                    ],
                    r_curly_token: R_CURLY@112..113 "}" [] [],
                },
            },
            semicolon_token: SEMICOLON@113..114 ";" [] [],
        },
        JsImport {
            import_token: IMPORT_KW@114..122 "import" [Newline("\n")] [Whitespace(" ")],
            import_clause: JsImportBareClause {
                source: JsModuleSource {
                    value_token: JS_STRING_LITERAL@122..129 "\"lorem\"" [] [],
                },
                attribute: missing (optional),
            },
            semicolon_token: missing (optional),
        },
        JsExpressionStatement {
            expression: JsIdentifierExpression {
                name: JsReferenceIdentifier {
                    value_token: IDENT@129..137 "assert" [Newline("\n")] [Whitespace(" ")],
                },
            },
            semicolon_token: missing (optional),
        },
        JsBlockStatement {
            l_curly_token: L_CURLY@137..139 "{" [] [Whitespace(" ")],
            statements: JsStatementList [
                JsLabeledStatement {
                    label_token: IDENT@139..143 "type" [] [],
                    colon_token: COLON@143..145 ":" [] [Whitespace(" ")],
                    body: JsExpressionStatement {
                        expression: JsStringLiteralExpression {
                            value_token: JS_STRING_LITERAL@145..152 "\"json\"" [] [Whitespace(" ")],
                        },
                        semicolon_token: missing (optional),
                    },
                },
            ],
            r_curly_token: R_CURLY@152..153 "}" [] [],
        },
        JsImport {
            import_token: IMPORT_KW@153..161 "import" [Newline("\n")] [Whitespace(" ")],
            import_clause: JsImportDefaultClause {
                type_token: missing (optional),
                local_name: JsIdentifierBinding {
                    name_token: IDENT@161..166 "foo2" [] [Whitespace(" ")],
                },
                from_token: FROM_KW@166..171 "from" [] [Whitespace(" ")],
                source: JsModuleSource {
                    value_token: JS_STRING_LITERAL@171..182 "\"foo.json\"" [] [Whitespace(" ")],
                },
                attribute: JsImportAttribute {
                    with_token: WITH_KW@182..187 "with" [] [Whitespace(" ")],
                    l_curly_token: L_CURLY@187..189 "{" [] [Whitespace(" ")],
                    attributes: JsImportAttributeEntryList [
                        JsImportAttributeEntry {
                            key: JS_STRING_LITERAL@189..195 "\"type\"" [] [],
                            colon_token: COLON@195..197 ":" [] [Whitespace(" ")],
                            value_token: JS_STRING_LITERAL@197..203 "\"json\"" [] [],
                        },
                        COMMA@203..205 "," [] [Whitespace(" ")],
                        JsBogusImportAttributeEntry {
                            items: [
                                IDENT@205..209 "type" [] [],
                                COLON@209..211 ":" [] [Whitespace(" ")],
                                JS_STRING_LITERAL@211..217 "\"html\"" [] [],
                            ],
                        },
                        COMMA@217..219 "," [] [Whitespace(" ")],
                        JsBogusImportAttributeEntry {
                            items: [
                                JS_STRING_LITERAL@219..225 "\"type\"" [] [],
                                COLON@225..227 ":" [] [Whitespace(" ")],
                                JS_STRING_LITERAL@227..232 "\"js\"" [] [Whitespace(" ")],
                            ],
                        },
                    ],
                    r_curly_token: R_CURLY@232..233 "}" [] [],
                },
            },
            semicolon_token: SEMICOLON@233..234 ";" [] [],
        },
        JsImport {
            import_token: IMPORT_KW@234..242 "import" [Newline("\n")] [Whitespace(" ")],
            import_clause: JsImportBareClause {
                source: JsModuleSource {
                    value_token: JS_STRING_LITERAL@242..246 "\"x\"" [] [Whitespace(" ")],
                },
                attribute: JsImportAttribute {
                    with_token: WITH_KW@246..250 "with" [] [],
                    l_curly_token: missing (required),
                    attributes: JsImportAttributeEntryList [],
                    r_curly_token: missing (required),
                },
            },
            semicolon_token: SEMICOLON@250..251 ";" [] [],
        },
        JsImport {
            import_token: IMPORT_KW@251..259 "import" [Newline("\n")] [Whitespace(" ")],
            import_clause: JsImportDefaultClause {
                type_token: missing (optional),
                local_name: JsIdentifierBinding {
                    name_token: IDENT@259..265 "ipsum" [] [Whitespace(" ")],
                },
                from_token: FROM_KW@265..270 "from" [] [Whitespace(" ")],
                source: JsModuleSource {
                    value_token: JS_STRING_LITERAL@270..283 "\"ipsum.json\"" [] [Whitespace(" ")],
                },
                attribute: JsImportAttribute {
                    with_token: WITH_KW@283..288 "with" [] [Whitespace(" ")],
                    l_curly_token: L_CURLY@288..290 "{" [] [Whitespace(" ")],
                    attributes: JsImportAttributeEntryList [
                        JsImportAttributeEntry {
                            key: IDENT@290..294 "type" [] [],
                            colon_token: COLON@294..296 ":" [] [Whitespace(" ")],
                            value_token: JS_STRING_LITERAL@296..302 "\"json\"" [] [],
                        },
                        COMMA@302..304 "," [] [Whitespace(" ")],
                        JsImportAttributeEntry {
                            key: IDENT@304..308 "lazy" [] [],
                            colon_token: COLON@308..310 ":" [] [Whitespace(" ")],
                            value_token: missing (required),
                        },
                        missing separator,
                        JsImportAttributeEntry {
                            key: IDENT@310..314 "true" [] [],
                            colon_token: missing (required),
                            value_token: missing (required),
                        },
                        COMMA@314..316 "," [] [Whitespace(" ")],
                        JsImportAttributeEntry {
                            key: IDENT@316..327 "startAtLine" [] [],
                            colon_token: COLON@327..329 ":" [] [Whitespace(" ")],
                            value_token: missing (required),
                        },
                        missing separator,
                        JsBogusImportAttributeEntry {
                            items: [
                                JS_NUMBER_LITERAL@329..331 "1" [] [Whitespace(" ")],
                            ],
                        },
                    ],
                    r_curly_token: R_CURLY@331..332 "}" [] [],
                },
            },
            semicolon_token: SEMICOLON@332..333 ";" [] [],
        },
        JsImport {
            import_token: IMPORT_KW@333..341 "import" [Newline("\n")] [Whitespace(" ")],
            import_clause: JsImportNamedClause {
                type_token: missing (optional),
                default_specifier: missing (optional),
                named_import: JsNamedImportSpecifiers {
                    l_curly_token: L_CURLY@341..343 "{" [] [Whitespace(" ")],
                    specifiers: JsNamedImportSpecifierList [
                        JsShorthandNamedImportSpecifier {
                            type_token: missing (optional),
                            local_name: JsIdentifierBinding {
                                name_token: IDENT@343..345 "a" [] [Whitespace(" ")],
                            },
                        },
                    ],
                    r_curly_token: R_CURLY@345..347 "}" [] [Whitespace(" ")],
                },
                from_token: FROM_KW@347..352 "from" [] [Whitespace(" ")],
                source: JsModuleSource {
                    value_token: JS_STRING_LITERAL@352..361 "\"a.json\"" [] [Whitespace(" ")],
                },
                attribute: JsImportAttribute {
                    with_token: WITH_KW@361..365 "with" [] [],
                    l_curly_token: missing (required),
                    attributes: JsImportAttributeEntryList [],
                    r_curly_token: missing (required),
                },
            },
            semicolon_token: missing (optional),
        },
    ],
    eof_token: EOF@365..366 "" [Newline("\n")] [],
}

0: JS_MODULE@0..366
  0: (empty)
  1: JS_DIRECTIVE_LIST@0..0
  2: JS_MODULE_ITEM_LIST@0..365
    0: JS_IMPORT@0..35
      0: IMPORT_KW@0..7 "import" [] [Whitespace(" ")]
      1: JS_IMPORT_BARE_CLAUSE@7..34
        0: JS_MODULE_SOURCE@7..13
          0: JS_STRING_LITERAL@7..13 "\"foo\"" [] [Whitespace(" ")]
        1: JS_IMPORT_ATTRIBUTE@13..34
          0: WITH_KW@13..18 "with" [] [Whitespace(" ")]
          1: L_CURLY@18..20 "{" [] [Whitespace(" ")]
          2: JS_IMPORT_ATTRIBUTE_ENTRY_LIST@20..33
            0: JS_IMPORT_ATTRIBUTE_ENTRY@20..24
              0: IDENT@20..24 "type" [] []
              1: (empty)
              2: (empty)
            1: COMMA@24..26 "," [] [Whitespace(" ")]
            2: JS_IMPORT_ATTRIBUTE_ENTRY@26..33
              0: JS_STRING_LITERAL@26..33 "\"json\"" [] [Whitespace(" ")]
              1: (empty)
              2: (empty)
          3: R_CURLY@33..34 "}" [] []
      2: SEMICOLON@34..35 ";" [] []
    1: JS_IMPORT@35..49
      0: IMPORT_KW@35..43 "import" [Newline("\n")] [Whitespace(" ")]
      1: JS_IMPORT_BARE_CLAUSE@43..49
        0: JS_MODULE_SOURCE@43..49
          0: JS_STRING_LITERAL@43..49 "\"bar\"" [] [Whitespace(" ")]
        1: (empty)
      2: (empty)
    2: JS_EXPRESSION_STATEMENT@49..59
      0: JS_IDENTIFIER_EXPRESSION@49..59
        0: JS_REFERENCE_IDENTIFIER@49..59
          0: IDENT@49..59 "\\u{61}ith" [] [Whitespace(" ")]
      1: (empty)
    3: JS_BLOCK_STATEMENT@59..75
      0: L_CURLY@59..61 "{" [] [Whitespace(" ")]
      1: JS_STATEMENT_LIST@61..74
        0: JS_LABELED_STATEMENT@61..74
          0: IDENT@61..65 "type" [] []
          1: COLON@65..67 ":" [] [Whitespace(" ")]
          2: JS_EXPRESSION_STATEMENT@67..74
            0: JS_STRING_LITERAL_EXPRESSION@67..74
              0: JS_STRING_LITERAL@67..74 "\"json\"" [] [Whitespace(" ")]
            1: (empty)
      2: R_CURLY@74..75 "}" [] []
    4: JS_EMPTY_STATEMENT@75..76
      0: SEMICOLON@75..76 ";" [] []
    5: JS_IMPORT@76..114
      0: IMPORT_KW@76..84 "import" [Newline("\n")] [Whitespace(" ")]
      1: JS_IMPORT_NAMED_CLAUSE@84..113
        0: (empty)
        1: (empty)
        2: JS_NAMED_IMPORT_SPECIFIERS@84..92
          0: L_CURLY@84..86 "{" [] [Whitespace(" ")]
          1: JS_NAMED_IMPORT_SPECIFIER_LIST@86..90
            0: JS_SHORTHAND_NAMED_IMPORT_SPECIFIER@86..90
              0: (empty)
              1: JS_IDENTIFIER_BINDING@86..90
                0: IDENT@86..90 "foo" [] [Whitespace(" ")]
          2: R_CURLY@90..92 "}" [] [Whitespace(" ")]
        3: (empty)
        4: (empty)
        5: JS_IMPORT_ATTRIBUTE@92..113
          0: WITH_KW@92..97 "with" [] [Whitespace(" ")]
          1: L_CURLY@97..99 "{" [] [Whitespace(" ")]
          2: JS_IMPORT_ATTRIBUTE_ENTRY_LIST@99..112
            0: JS_IMPORT_ATTRIBUTE_ENTRY@99..112
              0: IDENT@99..103 "type" [] []
              1: COLON@103..105 ":" [] [Whitespace(" ")]
              2: JS_STRING_LITERAL@105..112 "\"json\"" [] [Whitespace(" ")]
          3: R_CURLY@112..113 "}" [] []
      2: SEMICOLON@113..114 ";" [] []
    6: JS_IMPORT@114..129
      0: IMPORT_KW@114..122 "import" [Newline("\n")] [Whitespace(" ")]
      1: JS_IMPORT_BARE_CLAUSE@122..129
        0: JS_MODULE_SOURCE@122..129
          0: JS_STRING_LITERAL@122..129 "\"lorem\"" [] []
        1: (empty)
      2: (empty)
    7: JS_EXPRESSION_STATEMENT@129..137
      0: JS_IDENTIFIER_EXPRESSION@129..137
        0: JS_REFERENCE_IDENTIFIER@129..137
          0: IDENT@129..137 "assert" [Newline("\n")] [Whitespace(" ")]
      1: (empty)
    8: JS_BLOCK_STATEMENT@137..153
      0: L_CURLY@137..139 "{" [] [Whitespace(" ")]
      1: JS_STATEMENT_LIST@139..152
        0: JS_LABELED_STATEMENT@139..152
          0: IDENT@139..143 "type" [] []
          1: COLON@143..145 ":" [] [Whitespace(" ")]
          2: JS_EXPRESSION_STATEMENT@145..152
            0: JS_STRING_LITERAL_EXPRESSION@145..152
              0: JS_STRING_LITERAL@145..152 "\"json\"" [] [Whitespace(" ")]
            1: (empty)
      2: R_CURLY@152..153 "}" [] []
    9: JS_IMPORT@153..234
      0: IMPORT_KW@153..161 "import" [Newline("\n")] [Whitespace(" ")]
      1: JS_IMPORT_DEFAULT_CLAUSE@161..233
        0: (empty)
        1: JS_IDENTIFIER_BINDING@161..166
          0: IDENT@161..166 "foo2" [] [Whitespace(" ")]
        2: FROM_KW@166..171 "from" [] [Whitespace(" ")]
        3: JS_MODULE_SOURCE@171..182
          0: JS_STRING_LITERAL@171..182 "\"foo.json\"" [] [Whitespace(" ")]
        4: JS_IMPORT_ATTRIBUTE@182..233
          0: WITH_KW@182..187 "with" [] [Whitespace(" ")]
          1: L_CURLY@187..189 "{" [] [Whitespace(" ")]
          2: JS_IMPORT_ATTRIBUTE_ENTRY_LIST@189..232
            0: JS_IMPORT_ATTRIBUTE_ENTRY@189..203
              0: JS_STRING_LITERAL@189..195 "\"type\"" [] []
              1: COLON@195..197 ":" [] [Whitespace(" ")]
              2: JS_STRING_LITERAL@197..203 "\"json\"" [] []
            1: COMMA@203..205 "," [] [Whitespace(" ")]
            2: JS_BOGUS_IMPORT_ATTRIBUTE_ENTRY@205..217
              0: IDENT@205..209 "type" [] []
              1: COLON@209..211 ":" [] [Whitespace(" ")]
              2: JS_STRING_LITERAL@211..217 "\"html\"" [] []
            3: COMMA@217..219 "," [] [Whitespace(" ")]
            4: JS_BOGUS_IMPORT_ATTRIBUTE_ENTRY@219..232
              0: JS_STRING_LITERAL@219..225 "\"type\"" [] []
              1: COLON@225..227 ":" [] [Whitespace(" ")]
              2: JS_STRING_LITERAL@227..232 "\"js\"" [] [Whitespace(" ")]
          3: R_CURLY@232..233 "}" [] []
      2: SEMICOLON@233..234 ";" [] []
    10: JS_IMPORT@234..251
      0: IMPORT_KW@234..242 "import" [Newline("\n")] [Whitespace(" ")]
      1: JS_IMPORT_BARE_CLAUSE@242..250
        0: JS_MODULE_SOURCE@242..246
          0: JS_STRING_LITERAL@242..246 "\"x\"" [] [Whitespace(" ")]
        1: JS_IMPORT_ATTRIBUTE@246..250
          0: WITH_KW@246..250 "with" [] []
          1: (empty)
          2: JS_IMPORT_ATTRIBUTE_ENTRY_LIST@250..250
          3: (empty)
      2: SEMICOLON@250..251 ";" [] []
    11: JS_IMPORT@251..333
      0: IMPORT_KW@251..259 "import" [Newline("\n")] [Whitespace(" ")]
      1: JS_IMPORT_DEFAULT_CLAUSE@259..332
        0: (empty)
        1: JS_IDENTIFIER_BINDING@259..265
          0: IDENT@259..265 "ipsum" [] [Whitespace(" ")]
        2: FROM_KW@265..270 "from" [] [Whitespace(" ")]
        3: JS_MODULE_SOURCE@270..283
          0: JS_STRING_LITERAL@270..283 "\"ipsum.json\"" [] [Whitespace(" ")]
        4: JS_IMPORT_ATTRIBUTE@283..332
          0: WITH_KW@283..288 "with" [] [Whitespace(" ")]
          1: L_CURLY@288..290 "{" [] [Whitespace(" ")]
          2: JS_IMPORT_ATTRIBUTE_ENTRY_LIST@290..331
            0: JS_IMPORT_ATTRIBUTE_ENTRY@290..302
              0: IDENT@290..294 "type" [] []
              1: COLON@294..296 ":" [] [Whitespace(" ")]
              2: JS_STRING_LITERAL@296..302 "\"json\"" [] []
            1: COMMA@302..304 "," [] [Whitespace(" ")]
            2: JS_IMPORT_ATTRIBUTE_ENTRY@304..310
              0: IDENT@304..308 "lazy" [] []
              1: COLON@308..310 ":" [] [Whitespace(" ")]
              2: (empty)
            3: (empty)
            4: JS_IMPORT_ATTRIBUTE_ENTRY@310..314
              0: IDENT@310..314 "true" [] []
              1: (empty)
              2: (empty)
            5: COMMA@314..316 "," [] [Whitespace(" ")]
            6: JS_IMPORT_ATTRIBUTE_ENTRY@316..329
              0: IDENT@316..327 "startAtLine" [] []
              1: COLON@327..329 ":" [] [Whitespace(" ")]
              2: (empty)
            7: (empty)
            8: JS_BOGUS_IMPORT_ATTRIBUTE_ENTRY@329..331
              0: JS_NUMBER_LITERAL@329..331 "1" [] [Whitespace(" ")]
          3: R_CURLY@331..332 "}" [] []
      2: SEMICOLON@332..333 ";" [] []
    12: JS_IMPORT@333..365
      0: IMPORT_KW@333..341 "import" [Newline("\n")] [Whitespace(" ")]
      1: JS_IMPORT_NAMED_CLAUSE@341..365
        0: (empty)
        1: (empty)
        2: JS_NAMED_IMPORT_SPECIFIERS@341..347
          0: L_CURLY@341..343 "{" [] [Whitespace(" ")]
          1: JS_NAMED_IMPORT_SPECIFIER_LIST@343..345
            0: JS_SHORTHAND_NAMED_IMPORT_SPECIFIER@343..345
              0: (empty)
              1: JS_IDENTIFIER_BINDING@343..345
                0: IDENT@343..345 "a" [] [Whitespace(" ")]
          2: R_CURLY@345..347 "}" [] [Whitespace(" ")]
        3: FROM_KW@347..352 "from" [] [Whitespace(" ")]
        4: JS_MODULE_SOURCE@352..361
          0: JS_STRING_LITERAL@352..361 "\"a.json\"" [] [Whitespace(" ")]
        5: JS_IMPORT_ATTRIBUTE@361..365
          0: WITH_KW@361..365 "with" [] []
          1: (empty)
          2: JS_IMPORT_ATTRIBUTE_ENTRY_LIST@365..365
          3: (empty)
      2: (empty)
  3: EOF@365..366 "" [Newline("\n")] []
--
import_attribute_err.js:1:25 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected `:` but instead found `,`
  
  > 1 │ import "foo" with { type, "json" };
      │                         ^
    2 │ import "bar" \u{61}ith { type: "json" };
    3 │ import { foo } with { type: "json" };
  
  i Remove ,
  
--
import_attribute_err.js:1:34 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected `:` but instead found `}`
  
  > 1 │ import "foo" with { type, "json" };
      │                                  ^
    2 │ import "bar" \u{61}ith { type: "json" };
    3 │ import { foo } with { type: "json" };
  
  i Remove }
  
--
import_attribute_err.js:2:14 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Expected a semicolon or an implicit semicolon after a statement, but found none
  
    1 │ import "foo" with { type, "json" };
  > 2 │ import "bar" \u{61}ith { type: "json" };
      │              ^^^^^^^^^
    3 │ import { foo } with { type: "json" };
    4 │ import "lorem"
  
  i An explicit or implicit semicolon is expected here...
  
    1 │ import "foo" with { type, "json" };
  > 2 │ import "bar" \u{61}ith { type: "json" };
      │              ^^^^^^^^^
    3 │ import { foo } with { type: "json" };
    4 │ import "lorem"
  
  i ...Which is required to end this statement
  
    1 │ import "foo" with { type, "json" };
  > 2 │ import "bar" \u{61}ith { type: "json" };
      │ ^^^^^^^^^^^^^
    3 │ import { foo } with { type: "json" };
    4 │ import "lorem"
  
--
import_attribute_err.js:2:24 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Expected a semicolon or an implicit semicolon after a statement, but found none
  
    1 │ import "foo" with { type, "json" };
  > 2 │ import "bar" \u{61}ith { type: "json" };
      │                        ^
    3 │ import { foo } with { type: "json" };
    4 │ import "lorem"
  
  i An explicit or implicit semicolon is expected here...
  
    1 │ import "foo" with { type, "json" };
  > 2 │ import "bar" \u{61}ith { type: "json" };
      │                        ^
    3 │ import { foo } with { type: "json" };
    4 │ import "lorem"
  
  i ...Which is required to end this statement
  
    1 │ import "foo" with { type, "json" };
  > 2 │ import "bar" \u{61}ith { type: "json" };
      │              ^^^^^^^^^^^
    3 │ import { foo } with { type: "json" };
    4 │ import "lorem"
  
--
import_attribute_err.js:3:16 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected `from` but instead found `with`
  
    1 │ import "foo" with { type, "json" };
    2 │ import "bar" \u{61}ith { type: "json" };
  > 3 │ import { foo } with { type: "json" };
      │                ^^^^
    4 │ import "lorem"
    5 │ assert { type: "json" }
  
  i Remove with
  
--
import_attribute_err.js:5:8 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Expected a semicolon or an implicit semicolon after a statement, but found none
  
    3 │ import { foo } with { type: "json" };
    4 │ import "lorem"
  > 5 │ assert { type: "json" }
      │        ^
    6 │ import foo2 from "foo.json" with { "type": "json", type: "html", "type": "js" };
    7 │ import "x" with;
  
  i An explicit or implicit semicolon is expected here...
  
    3 │ import { foo } with { type: "json" };
    4 │ import "lorem"
  > 5 │ assert { type: "json" }
      │        ^
    6 │ import foo2 from "foo.json" with { "type": "json", type: "html", "type": "js" };
    7 │ import "x" with;
  
  i ...Which is required to end this statement
  
    3 │ import { foo } with { type: "json" };
    4 │ import "lorem"
  > 5 │ assert { type: "json" }
      │ ^^^^^^^^
    6 │ import foo2 from "foo.json" with { "type": "json", type: "html", "type": "js" };
    7 │ import "x" with;
  
--
import_attribute_err.js:6:36 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Duplicate assertion keys are not allowed
  
    4 │ import "lorem"
    5 │ assert { type: "json" }
  > 6 │ import foo2 from "foo.json" with { "type": "json", type: "html", "type": "js" };
      │                                    ^^^^^^
    7 │ import "x" with;
    8 │ import ipsum from "ipsum.json" with { type: "json", lazy: true, startAtLine: 1 };
  
  i First use of the key `type`
  
    4 │ import "lorem"
    5 │ assert { type: "json" }
  > 6 │ import foo2 from "foo.json" with { "type": "json", type: "html", "type": "js" };
      │                                    ^^^^^^
    7 │ import "x" with;
    8 │ import ipsum from "ipsum.json" with { type: "json", lazy: true, startAtLine: 1 };
  
  i second use here
  
    4 │ import "lorem"
    5 │ assert { type: "json" }
  > 6 │ import foo2 from "foo.json" with { "type": "json", type: "html", "type": "js" };
      │                                                    ^^^^
    7 │ import "x" with;
    8 │ import ipsum from "ipsum.json" with { type: "json", lazy: true, startAtLine: 1 };
  
--
import_attribute_err.js:7:16 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected `{` but instead found `;`
  
    5 │ assert { type: "json" }
    6 │ import foo2 from "foo.json" with { "type": "json", type: "html", "type": "js" };
  > 7 │ import "x" with;
      │                ^
    8 │ import ipsum from "ipsum.json" with { type: "json", lazy: true, startAtLine: 1 };
    9 │ import { a } from "a.json" with
  
  i Remove ;
  
--
import_attribute_err.js:8:59 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected `string literal` but instead found `true`
  
     6 │ import foo2 from "foo.json" with { "type": "json", type: "html", "type": "js" };
     7 │ import "x" with;
   > 8 │ import ipsum from "ipsum.json" with { type: "json", lazy: true, startAtLine: 1 };
       │                                                           ^^^^
     9 │ import { a } from "a.json" with
    10 │ 
  
  i Remove true
  
--
import_attribute_err.js:8:63 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected `:` but instead found `,`
  
     6 │ import foo2 from "foo.json" with { "type": "json", type: "html", "type": "js" };
     7 │ import "x" with;
   > 8 │ import ipsum from "ipsum.json" with { type: "json", lazy: true, startAtLine: 1 };
       │                                                               ^
     9 │ import { a } from "a.json" with
    10 │ 
  
  i Remove ,
  
--
import_attribute_err.js:8:78 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected `string literal` but instead found `1`
  
     6 │ import foo2 from "foo.json" with { "type": "json", type: "html", "type": "js" };
     7 │ import "x" with;
   > 8 │ import ipsum from "ipsum.json" with { type: "json", lazy: true, startAtLine: 1 };
       │                                                                              ^
     9 │ import { a } from "a.json" with
    10 │ 
  
  i Remove 1
  
--
import_attribute_err.js:10:1 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected `{` but instead the file ends
  
     8 │ import ipsum from "ipsum.json" with { type: "json", lazy: true, startAtLine: 1 };
     9 │ import { a } from "a.json" with
  > 10 │ 
       │ 
  
  i the file ends here
  
     8 │ import ipsum from "ipsum.json" with { type: "json", lazy: true, startAtLine: 1 };
     9 │ import { a } from "a.json" with
  > 10 │ 
       │ 
  
--
import "foo" with { type, "json" };
import "bar" \u{61}ith { type: "json" };
import { foo } with { type: "json" };
import "lorem"
assert { type: "json" }
import foo2 from "foo.json" with { "type": "json", type: "html", "type": "js" };
import "x" with;
import ipsum from "ipsum.json" with { type: "json", lazy: true, startAtLine: 1 };
import { a } from "a.json" with
