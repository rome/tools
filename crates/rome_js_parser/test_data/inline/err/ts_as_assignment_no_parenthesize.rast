JsModule {
    interpreter_token: missing (optional),
    directives: JsDirectiveList [],
    items: JsModuleItemList [
        JsVariableStatement {
            declaration: JsVariableDeclaration {
                await_token: missing (optional),
                kind: LET_KW@0..4 "let" [] [Whitespace(" ")],
                declarators: JsVariableDeclaratorList [
                    JsVariableDeclarator {
                        id: JsIdentifierBinding {
                            name_token: IDENT@4..5 "a" [] [],
                        },
                        variable_annotation: TsTypeAnnotation {
                            colon_token: COLON@5..7 ":" [] [Whitespace(" ")],
                            ty: TsAnyType {
                                any_token: ANY_KW@7..10 "any" [] [],
                            },
                        },
                        initializer: missing (optional),
                    },
                ],
            },
            semicolon_token: SEMICOLON@10..11 ";" [] [],
        },
        JsExpressionStatement {
            expression: JsAssignmentExpression {
                left: TsAsAssignment {
                    assignment: JsIdentifierAssignment {
                        name_token: IDENT@11..14 "a" [Newline("\n")] [Whitespace(" ")],
                    },
                    as_token: AS_KW@14..17 "as" [] [Whitespace(" ")],
                    ty: TsStringType {
                        string_token: STRING_KW@17..24 "string" [] [Whitespace(" ")],
                    },
                },
                operator_token: EQ@24..26 "=" [] [Whitespace(" ")],
                right: JsStringLiteralExpression {
                    value_token: JS_STRING_LITERAL@26..34 "\"string\"" [] [],
                },
            },
            semicolon_token: SEMICOLON@34..35 ";" [] [],
        },
        JsExpressionStatement {
            expression: JsAssignmentExpression {
                left: JsParenthesizedAssignment {
                    l_paren_token: L_PAREN@35..37 "(" [Newline("\n")] [],
                    assignment: TsAsAssignment {
                        assignment: JsBogusAssignment {
                            items: [
                                JsIdentifierExpression {
                                    name: JsReferenceIdentifier {
                                        value_token: IDENT@37..38 "a" [] [],
                                    },
                                },
                                JsCallArguments {
                                    l_paren_token: L_PAREN@38..39 "(" [] [],
                                    args: JsCallArgumentList [],
                                    r_paren_token: R_PAREN@39..41 ")" [] [Whitespace(" ")],
                                },
                            ],
                        },
                        as_token: AS_KW@41..44 "as" [] [Whitespace(" ")],
                        ty: TsStringType {
                            string_token: STRING_KW@44..50 "string" [] [],
                        },
                    },
                    r_paren_token: R_PAREN@50..52 ")" [] [Whitespace(" ")],
                },
                operator_token: EQ@52..54 "=" [] [Whitespace(" ")],
                right: JsStringLiteralExpression {
                    value_token: JS_STRING_LITERAL@54..62 "\"string\"" [] [],
                },
            },
            semicolon_token: SEMICOLON@62..63 ";" [] [],
        },
        JsExpressionStatement {
            expression: JsAssignmentExpression {
                left: JsBogusAssignment {
                    items: [
                        L_ANGLE@63..65 "<" [Newline("\n")] [],
                        TsNumberType {
                            number_token: NUMBER_KW@65..71 "number" [] [],
                        },
                        R_ANGLE@71..73 ">" [] [Whitespace(" ")],
                        JsIdentifierExpression {
                            name: JsReferenceIdentifier {
                                value_token: IDENT@73..75 "a" [] [Whitespace(" ")],
                            },
                        },
                    ],
                },
                operator_token: EQ@75..77 "=" [] [Whitespace(" ")],
                right: JsNumberLiteralExpression {
                    value_token: JS_NUMBER_LITERAL@77..78 "3" [] [],
                },
            },
            semicolon_token: SEMICOLON@78..79 ";" [] [],
        },
    ],
    eof_token: EOF@79..80 "" [Newline("\n")] [],
}

0: JS_MODULE@0..80
  0: (empty)
  1: JS_DIRECTIVE_LIST@0..0
  2: JS_MODULE_ITEM_LIST@0..79
    0: JS_VARIABLE_STATEMENT@0..11
      0: JS_VARIABLE_DECLARATION@0..10
        0: (empty)
        1: LET_KW@0..4 "let" [] [Whitespace(" ")]
        2: JS_VARIABLE_DECLARATOR_LIST@4..10
          0: JS_VARIABLE_DECLARATOR@4..10
            0: JS_IDENTIFIER_BINDING@4..5
              0: IDENT@4..5 "a" [] []
            1: TS_TYPE_ANNOTATION@5..10
              0: COLON@5..7 ":" [] [Whitespace(" ")]
              1: TS_ANY_TYPE@7..10
                0: ANY_KW@7..10 "any" [] []
            2: (empty)
      1: SEMICOLON@10..11 ";" [] []
    1: JS_EXPRESSION_STATEMENT@11..35
      0: JS_ASSIGNMENT_EXPRESSION@11..34
        0: TS_AS_ASSIGNMENT@11..24
          0: JS_IDENTIFIER_ASSIGNMENT@11..14
            0: IDENT@11..14 "a" [Newline("\n")] [Whitespace(" ")]
          1: AS_KW@14..17 "as" [] [Whitespace(" ")]
          2: TS_STRING_TYPE@17..24
            0: STRING_KW@17..24 "string" [] [Whitespace(" ")]
        1: EQ@24..26 "=" [] [Whitespace(" ")]
        2: JS_STRING_LITERAL_EXPRESSION@26..34
          0: JS_STRING_LITERAL@26..34 "\"string\"" [] []
      1: SEMICOLON@34..35 ";" [] []
    2: JS_EXPRESSION_STATEMENT@35..63
      0: JS_ASSIGNMENT_EXPRESSION@35..62
        0: JS_PARENTHESIZED_ASSIGNMENT@35..52
          0: L_PAREN@35..37 "(" [Newline("\n")] []
          1: TS_AS_ASSIGNMENT@37..50
            0: JS_BOGUS_ASSIGNMENT@37..41
              0: JS_IDENTIFIER_EXPRESSION@37..38
                0: JS_REFERENCE_IDENTIFIER@37..38
                  0: IDENT@37..38 "a" [] []
              1: JS_CALL_ARGUMENTS@38..41
                0: L_PAREN@38..39 "(" [] []
                1: JS_CALL_ARGUMENT_LIST@39..39
                2: R_PAREN@39..41 ")" [] [Whitespace(" ")]
            1: AS_KW@41..44 "as" [] [Whitespace(" ")]
            2: TS_STRING_TYPE@44..50
              0: STRING_KW@44..50 "string" [] []
          2: R_PAREN@50..52 ")" [] [Whitespace(" ")]
        1: EQ@52..54 "=" [] [Whitespace(" ")]
        2: JS_STRING_LITERAL_EXPRESSION@54..62
          0: JS_STRING_LITERAL@54..62 "\"string\"" [] []
      1: SEMICOLON@62..63 ";" [] []
    3: JS_EXPRESSION_STATEMENT@63..79
      0: JS_ASSIGNMENT_EXPRESSION@63..78
        0: JS_BOGUS_ASSIGNMENT@63..75
          0: L_ANGLE@63..65 "<" [Newline("\n")] []
          1: TS_NUMBER_TYPE@65..71
            0: NUMBER_KW@65..71 "number" [] []
          2: R_ANGLE@71..73 ">" [] [Whitespace(" ")]
          3: JS_IDENTIFIER_EXPRESSION@73..75
            0: JS_REFERENCE_IDENTIFIER@73..75
              0: IDENT@73..75 "a" [] [Whitespace(" ")]
        1: EQ@75..77 "=" [] [Whitespace(" ")]
        2: JS_NUMBER_LITERAL_EXPRESSION@77..78
          0: JS_NUMBER_LITERAL@77..78 "3" [] []
      1: SEMICOLON@78..79 ";" [] []
  3: EOF@79..80 "" [Newline("\n")] []
--
ts_as_assignment_no_parenthesize.ts:3:2 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Invalid assignment to `a()`
  
    1 │ let a: any;
    2 │ a as string = "string";
  > 3 │ (a() as string) = "string";
      │  ^^^
    4 │ <number> a = 3;
    5 │ 
  
  i This expression cannot be assigned to
  
--
ts_as_assignment_no_parenthesize.ts:4:1 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Invalid assignment to `<number> a`
  
    2 │ a as string = "string";
    3 │ (a() as string) = "string";
  > 4 │ <number> a = 3;
      │ ^^^^^^^^^^
    5 │ 
  
  i This expression cannot be assigned to
  
--
let a: any;
a as string = "string";
(a() as string) = "string";
<number> a = 3;
