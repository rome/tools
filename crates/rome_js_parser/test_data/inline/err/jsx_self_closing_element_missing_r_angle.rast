JsModule {
    interpreter_token: missing (optional),
    directives: JsDirectiveList [],
    items: JsModuleItemList [
        JsExpressionStatement {
            expression: JsxTagExpression {
                tag: JsxFragment {
                    opening_fragment: JsxOpeningFragment {
                        l_angle_token: L_ANGLE@0..1 "<" [] [],
                        r_angle_token: R_ANGLE@1..2 ">" [] [],
                    },
                    children: JsxChildList [
                        JsxSelfClosingElement {
                            l_angle_token: L_ANGLE@2..3 "<" [] [],
                            name: JsxName {
                                value_token: JSX_IDENT@3..8 "test" [] [Whitespace(" ")],
                            },
                            type_arguments: missing (optional),
                            attributes: JsxAttributeList [],
                            slash_token: SLASH@8..10 "/" [] [Whitespace(" ")],
                            r_angle_token: missing (required),
                        },
                        JsxText {
                            value_token: JSX_TEXT_LITERAL@10..31 "some test followed by" [] [],
                        },
                        JsxSelfClosingElement {
                            l_angle_token: L_ANGLE@31..32 "<" [] [],
                            name: JsxName {
                                value_token: JSX_IDENT@32..34 "a" [] [Whitespace(" ")],
                            },
                            type_arguments: missing (optional),
                            attributes: JsxAttributeList [],
                            slash_token: SLASH@34..35 "/" [] [],
                            r_angle_token: R_ANGLE@35..36 ">" [] [],
                        },
                    ],
                    closing_fragment: JsxClosingFragment {
                        l_angle_token: L_ANGLE@36..37 "<" [] [],
                        slash_token: SLASH@37..38 "/" [] [],
                        r_angle_token: R_ANGLE@38..39 ">" [] [],
                    },
                },
            },
            semicolon_token: SEMICOLON@39..40 ";" [] [],
        },
    ],
    eof_token: EOF@40..41 "" [Newline("\n")] [],
}

0: JS_MODULE@0..41
  0: (empty)
  1: JS_DIRECTIVE_LIST@0..0
  2: JS_MODULE_ITEM_LIST@0..40
    0: JS_EXPRESSION_STATEMENT@0..40
      0: JSX_TAG_EXPRESSION@0..39
        0: JSX_FRAGMENT@0..39
          0: JSX_OPENING_FRAGMENT@0..2
            0: L_ANGLE@0..1 "<" [] []
            1: R_ANGLE@1..2 ">" [] []
          1: JSX_CHILD_LIST@2..36
            0: JSX_SELF_CLOSING_ELEMENT@2..10
              0: L_ANGLE@2..3 "<" [] []
              1: JSX_NAME@3..8
                0: JSX_IDENT@3..8 "test" [] [Whitespace(" ")]
              2: (empty)
              3: JSX_ATTRIBUTE_LIST@8..8
              4: SLASH@8..10 "/" [] [Whitespace(" ")]
              5: (empty)
            1: JSX_TEXT@10..31
              0: JSX_TEXT_LITERAL@10..31 "some test followed by" [] []
            2: JSX_SELF_CLOSING_ELEMENT@31..36
              0: L_ANGLE@31..32 "<" [] []
              1: JSX_NAME@32..34
                0: JSX_IDENT@32..34 "a" [] [Whitespace(" ")]
              2: (empty)
              3: JSX_ATTRIBUTE_LIST@34..34
              4: SLASH@34..35 "/" [] []
              5: R_ANGLE@35..36 ">" [] []
          2: JSX_CLOSING_FRAGMENT@36..39
            0: L_ANGLE@36..37 "<" [] []
            1: SLASH@37..38 "/" [] []
            2: R_ANGLE@38..39 ">" [] []
      1: SEMICOLON@39..40 ";" [] []
  3: EOF@40..41 "" [Newline("\n")] []
--
jsx_self_closing_element_missing_r_angle.jsx:1:11 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected `>` but instead found `some`
  
  > 1 │ <><test / some test followed by<a /></>;
      │           ^^^^
    2 │ 
  
  i Remove some
  
--
<><test / some test followed by<a /></>;
