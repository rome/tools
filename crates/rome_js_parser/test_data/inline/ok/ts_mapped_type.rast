JsModule {
    interpreter_token: missing (optional),
    directives: JsDirectiveList [],
    items: JsModuleItemList [
        TsTypeAliasDeclaration {
            type_token: TYPE_KW@0..5 "type" [] [Whitespace(" ")],
            binding_identifier: TsIdentifierBinding {
                name_token: IDENT@5..7 "A" [] [Whitespace(" ")],
            },
            type_parameters: missing (optional),
            eq_token: EQ@7..9 "=" [] [Whitespace(" ")],
            ty: TsMappedType {
                l_curly_token: L_CURLY@9..11 "{" [] [Whitespace(" ")],
                readonly_modifier: missing (optional),
                l_brack_token: L_BRACK@11..12 "[" [] [],
                property_name: TsTypeParameterName {
                    ident_token: IDENT@12..17 "test" [] [Whitespace(" ")],
                },
                in_token: IN_KW@17..20 "in" [] [Whitespace(" ")],
                keys_type: TsUnionType {
                    leading_separator_token: missing (optional),
                    types: TsUnionTypeVariantList [
                        TsStringLiteralType {
                            literal_token: JS_STRING_LITERAL@20..24 "\"a\"" [] [Whitespace(" ")],
                        },
                        PIPE@24..26 "|" [] [Whitespace(" ")],
                        TsStringLiteralType {
                            literal_token: JS_STRING_LITERAL@26..29 "\"b\"" [] [],
                        },
                    ],
                },
                as_clause: missing (optional),
                r_brack_token: R_BRACK@29..31 "]" [] [Whitespace(" ")],
                optional_modifier: missing (optional),
                mapped_type: missing (optional),
                semicolon_token: missing (optional),
                r_curly_token: R_CURLY@31..32 "}" [] [],
            },
            semicolon_token: missing (optional),
        },
        TsTypeAliasDeclaration {
            type_token: TYPE_KW@32..38 "type" [Newline("\n")] [Whitespace(" ")],
            binding_identifier: TsIdentifierBinding {
                name_token: IDENT@38..50 "OptionsFlags" [] [],
            },
            type_parameters: TsTypeParameters {
                l_angle_token: L_ANGLE@50..51 "<" [] [],
                items: TsTypeParameterList [
                    TsTypeParameter {
                        modifiers: TsTypeParameterModifierList [],
                        name: TsTypeParameterName {
                            ident_token: IDENT@51..55 "Type" [] [],
                        },
                        constraint: missing (optional),
                        default: missing (optional),
                    },
                ],
                r_angle_token: R_ANGLE@55..57 ">" [] [Whitespace(" ")],
            },
            eq_token: EQ@57..59 "=" [] [Whitespace(" ")],
            ty: TsMappedType {
                l_curly_token: L_CURLY@59..60 "{" [] [],
                readonly_modifier: missing (optional),
                l_brack_token: L_BRACK@60..64 "[" [Newline("\n"), Whitespace("  ")] [],
                property_name: TsTypeParameterName {
                    ident_token: IDENT@64..73 "Property" [] [Whitespace(" ")],
                },
                in_token: IN_KW@73..76 "in" [] [Whitespace(" ")],
                keys_type: TsTypeOperatorType {
                    operator_token: KEYOF_KW@76..82 "keyof" [] [Whitespace(" ")],
                    ty: TsReferenceType {
                        name: JsReferenceIdentifier {
                            value_token: IDENT@82..86 "Type" [] [],
                        },
                        type_arguments: missing (optional),
                    },
                },
                as_clause: missing (optional),
                r_brack_token: R_BRACK@86..87 "]" [] [],
                optional_modifier: missing (optional),
                mapped_type: TsTypeAnnotation {
                    colon_token: COLON@87..89 ":" [] [Whitespace(" ")],
                    ty: TsBooleanType {
                        boolean_token: BOOLEAN_KW@89..96 "boolean" [] [],
                    },
                },
                semicolon_token: SEMICOLON@96..97 ";" [] [],
                r_curly_token: R_CURLY@97..99 "}" [Newline("\n")] [],
            },
            semicolon_token: SEMICOLON@99..100 ";" [] [],
        },
        TsTypeAliasDeclaration {
            type_token: TYPE_KW@100..106 "type" [Newline("\n")] [Whitespace(" ")],
            binding_identifier: TsIdentifierBinding {
                name_token: IDENT@106..119 "CreateMutable" [] [],
            },
            type_parameters: TsTypeParameters {
                l_angle_token: L_ANGLE@119..120 "<" [] [],
                items: TsTypeParameterList [
                    TsTypeParameter {
                        modifiers: TsTypeParameterModifierList [],
                        name: TsTypeParameterName {
                            ident_token: IDENT@120..124 "Type" [] [],
                        },
                        constraint: missing (optional),
                        default: missing (optional),
                    },
                ],
                r_angle_token: R_ANGLE@124..126 ">" [] [Whitespace(" ")],
            },
            eq_token: EQ@126..128 "=" [] [Whitespace(" ")],
            ty: TsMappedType {
                l_curly_token: L_CURLY@128..129 "{" [] [],
                readonly_modifier: TsMappedTypeReadonlyModifierClause {
                    operator_token: MINUS@129..132 "-" [Newline("\n"), Whitespace("\t")] [],
                    readonly_token: READONLY_KW@132..141 "readonly" [] [Whitespace(" ")],
                },
                l_brack_token: L_BRACK@141..142 "[" [] [],
                property_name: TsTypeParameterName {
                    ident_token: IDENT@142..151 "Property" [] [Whitespace(" ")],
                },
                in_token: IN_KW@151..154 "in" [] [Whitespace(" ")],
                keys_type: TsTypeOperatorType {
                    operator_token: KEYOF_KW@154..160 "keyof" [] [Whitespace(" ")],
                    ty: TsReferenceType {
                        name: JsReferenceIdentifier {
                            value_token: IDENT@160..164 "Type" [] [],
                        },
                        type_arguments: missing (optional),
                    },
                },
                as_clause: missing (optional),
                r_brack_token: R_BRACK@164..165 "]" [] [],
                optional_modifier: missing (optional),
                mapped_type: TsTypeAnnotation {
                    colon_token: COLON@165..167 ":" [] [Whitespace(" ")],
                    ty: TsIndexedAccessType {
                        object_type: TsReferenceType {
                            name: JsReferenceIdentifier {
                                value_token: IDENT@167..171 "Type" [] [],
                            },
                            type_arguments: missing (optional),
                        },
                        l_brack_token: L_BRACK@171..172 "[" [] [],
                        index_type: TsReferenceType {
                            name: JsReferenceIdentifier {
                                value_token: IDENT@172..180 "Property" [] [],
                            },
                            type_arguments: missing (optional),
                        },
                        r_brack_token: R_BRACK@180..181 "]" [] [],
                    },
                },
                semicolon_token: SEMICOLON@181..182 ";" [] [],
                r_curly_token: R_CURLY@182..184 "}" [Newline("\n")] [],
            },
            semicolon_token: SEMICOLON@184..185 ";" [] [],
        },
        TsTypeAliasDeclaration {
            type_token: TYPE_KW@185..191 "type" [Newline("\n")] [Whitespace(" ")],
            binding_identifier: TsIdentifierBinding {
                name_token: IDENT@191..199 "Concrete" [] [],
            },
            type_parameters: TsTypeParameters {
                l_angle_token: L_ANGLE@199..200 "<" [] [],
                items: TsTypeParameterList [
                    TsTypeParameter {
                        modifiers: TsTypeParameterModifierList [],
                        name: TsTypeParameterName {
                            ident_token: IDENT@200..204 "Type" [] [],
                        },
                        constraint: missing (optional),
                        default: missing (optional),
                    },
                ],
                r_angle_token: R_ANGLE@204..206 ">" [] [Whitespace(" ")],
            },
            eq_token: EQ@206..208 "=" [] [Whitespace(" ")],
            ty: TsMappedType {
                l_curly_token: L_CURLY@208..209 "{" [] [],
                readonly_modifier: missing (optional),
                l_brack_token: L_BRACK@209..213 "[" [Newline("\n"), Whitespace("  ")] [],
                property_name: TsTypeParameterName {
                    ident_token: IDENT@213..222 "Property" [] [Whitespace(" ")],
                },
                in_token: IN_KW@222..225 "in" [] [Whitespace(" ")],
                keys_type: TsTypeOperatorType {
                    operator_token: KEYOF_KW@225..231 "keyof" [] [Whitespace(" ")],
                    ty: TsReferenceType {
                        name: JsReferenceIdentifier {
                            value_token: IDENT@231..235 "Type" [] [],
                        },
                        type_arguments: missing (optional),
                    },
                },
                as_clause: missing (optional),
                r_brack_token: R_BRACK@235..236 "]" [] [],
                optional_modifier: TsMappedTypeOptionalModifierClause {
                    operator_token: MINUS@236..237 "-" [] [],
                    question_mark_token: QUESTION@237..238 "?" [] [],
                },
                mapped_type: TsTypeAnnotation {
                    colon_token: COLON@238..240 ":" [] [Whitespace(" ")],
                    ty: TsIndexedAccessType {
                        object_type: TsReferenceType {
                            name: JsReferenceIdentifier {
                                value_token: IDENT@240..244 "Type" [] [],
                            },
                            type_arguments: missing (optional),
                        },
                        l_brack_token: L_BRACK@244..245 "[" [] [],
                        index_type: TsReferenceType {
                            name: JsReferenceIdentifier {
                                value_token: IDENT@245..253 "Property" [] [],
                            },
                            type_arguments: missing (optional),
                        },
                        r_brack_token: R_BRACK@253..254 "]" [] [],
                    },
                },
                semicolon_token: missing (optional),
                r_curly_token: R_CURLY@254..256 "}" [Newline("\n")] [],
            },
            semicolon_token: SEMICOLON@256..257 ";" [] [],
        },
        TsTypeAliasDeclaration {
            type_token: TYPE_KW@257..263 "type" [Newline("\n")] [Whitespace(" ")],
            binding_identifier: TsIdentifierBinding {
                name_token: IDENT@263..270 "Getters" [] [],
            },
            type_parameters: TsTypeParameters {
                l_angle_token: L_ANGLE@270..271 "<" [] [],
                items: TsTypeParameterList [
                    TsTypeParameter {
                        modifiers: TsTypeParameterModifierList [],
                        name: TsTypeParameterName {
                            ident_token: IDENT@271..275 "Type" [] [],
                        },
                        constraint: missing (optional),
                        default: missing (optional),
                    },
                ],
                r_angle_token: R_ANGLE@275..277 ">" [] [Whitespace(" ")],
            },
            eq_token: EQ@277..279 "=" [] [Whitespace(" ")],
            ty: TsMappedType {
                l_curly_token: L_CURLY@279..280 "{" [] [],
                readonly_modifier: missing (optional),
                l_brack_token: L_BRACK@280..286 "[" [Newline("\n"), Whitespace("    ")] [],
                property_name: TsTypeParameterName {
                    ident_token: IDENT@286..295 "Property" [] [Whitespace(" ")],
                },
                in_token: IN_KW@295..298 "in" [] [Whitespace(" ")],
                keys_type: TsTypeOperatorType {
                    operator_token: KEYOF_KW@298..304 "keyof" [] [Whitespace(" ")],
                    ty: TsReferenceType {
                        name: JsReferenceIdentifier {
                            value_token: IDENT@304..309 "Type" [] [Whitespace(" ")],
                        },
                        type_arguments: missing (optional),
                    },
                },
                as_clause: TsMappedTypeAsClause {
                    as_token: AS_KW@309..312 "as" [] [Whitespace(" ")],
                    ty: TsTemplateLiteralType {
                        l_tick_token: BACKTICK@312..313 "`" [] [],
                        elements: TsTemplateElementList [
                            TsTemplateChunkElement {
                                template_chunk_token: TEMPLATE_CHUNK@313..316 "get" [] [],
                            },
                            TsTemplateElement {
                                dollar_curly_token: DOLLAR_CURLY@316..318 "${" [] [],
                                ty: TsReferenceType {
                                    name: JsReferenceIdentifier {
                                        value_token: IDENT@318..328 "Capitalize" [] [],
                                    },
                                    type_arguments: TsTypeArguments {
                                        l_angle_token: L_ANGLE@328..329 "<" [] [],
                                        ts_type_argument_list: TsTypeArgumentList [
                                            TsIntersectionType {
                                                leading_separator_token: missing (optional),
                                                types: TsIntersectionTypeElementList [
                                                    TsStringType {
                                                        string_token: STRING_KW@329..336 "string" [] [Whitespace(" ")],
                                                    },
                                                    AMP@336..338 "&" [] [Whitespace(" ")],
                                                    TsReferenceType {
                                                        name: JsReferenceIdentifier {
                                                            value_token: IDENT@338..346 "Property" [] [],
                                                        },
                                                        type_arguments: missing (optional),
                                                    },
                                                ],
                                            },
                                        ],
                                        r_angle_token: R_ANGLE@346..347 ">" [] [],
                                    },
                                },
                                r_curly_token: R_CURLY@347..348 "}" [] [],
                            },
                        ],
                        r_tick_token: BACKTICK@348..349 "`" [] [],
                    },
                },
                r_brack_token: R_BRACK@349..350 "]" [] [],
                optional_modifier: missing (optional),
                mapped_type: TsTypeAnnotation {
                    colon_token: COLON@350..352 ":" [] [Whitespace(" ")],
                    ty: TsFunctionType {
                        type_parameters: missing (optional),
                        parameters: JsParameters {
                            l_paren_token: L_PAREN@352..353 "(" [] [],
                            items: JsParameterList [],
                            r_paren_token: R_PAREN@353..355 ")" [] [Whitespace(" ")],
                        },
                        fat_arrow_token: FAT_ARROW@355..358 "=>" [] [Whitespace(" ")],
                        return_type: TsIndexedAccessType {
                            object_type: TsReferenceType {
                                name: JsReferenceIdentifier {
                                    value_token: IDENT@358..362 "Type" [] [],
                                },
                                type_arguments: missing (optional),
                            },
                            l_brack_token: L_BRACK@362..363 "[" [] [],
                            index_type: TsReferenceType {
                                name: JsReferenceIdentifier {
                                    value_token: IDENT@363..371 "Property" [] [],
                                },
                                type_arguments: missing (optional),
                            },
                            r_brack_token: R_BRACK@371..372 "]" [] [],
                        },
                    },
                },
                semicolon_token: missing (optional),
                r_curly_token: R_CURLY@372..374 "}" [Newline("\n")] [],
            },
            semicolon_token: SEMICOLON@374..375 ";" [] [],
        },
    ],
    eof_token: EOF@375..376 "" [Newline("\n")] [],
}

0: JS_MODULE@0..376
  0: (empty)
  1: JS_DIRECTIVE_LIST@0..0
  2: JS_MODULE_ITEM_LIST@0..375
    0: TS_TYPE_ALIAS_DECLARATION@0..32
      0: TYPE_KW@0..5 "type" [] [Whitespace(" ")]
      1: TS_IDENTIFIER_BINDING@5..7
        0: IDENT@5..7 "A" [] [Whitespace(" ")]
      2: (empty)
      3: EQ@7..9 "=" [] [Whitespace(" ")]
      4: TS_MAPPED_TYPE@9..32
        0: L_CURLY@9..11 "{" [] [Whitespace(" ")]
        1: (empty)
        2: L_BRACK@11..12 "[" [] []
        3: TS_TYPE_PARAMETER_NAME@12..17
          0: IDENT@12..17 "test" [] [Whitespace(" ")]
        4: IN_KW@17..20 "in" [] [Whitespace(" ")]
        5: TS_UNION_TYPE@20..29
          0: (empty)
          1: TS_UNION_TYPE_VARIANT_LIST@20..29
            0: TS_STRING_LITERAL_TYPE@20..24
              0: JS_STRING_LITERAL@20..24 "\"a\"" [] [Whitespace(" ")]
            1: PIPE@24..26 "|" [] [Whitespace(" ")]
            2: TS_STRING_LITERAL_TYPE@26..29
              0: JS_STRING_LITERAL@26..29 "\"b\"" [] []
        6: (empty)
        7: R_BRACK@29..31 "]" [] [Whitespace(" ")]
        8: (empty)
        9: (empty)
        10: (empty)
        11: R_CURLY@31..32 "}" [] []
      5: (empty)
    1: TS_TYPE_ALIAS_DECLARATION@32..100
      0: TYPE_KW@32..38 "type" [Newline("\n")] [Whitespace(" ")]
      1: TS_IDENTIFIER_BINDING@38..50
        0: IDENT@38..50 "OptionsFlags" [] []
      2: TS_TYPE_PARAMETERS@50..57
        0: L_ANGLE@50..51 "<" [] []
        1: TS_TYPE_PARAMETER_LIST@51..55
          0: TS_TYPE_PARAMETER@51..55
            0: TS_TYPE_PARAMETER_MODIFIER_LIST@51..51
            1: TS_TYPE_PARAMETER_NAME@51..55
              0: IDENT@51..55 "Type" [] []
            2: (empty)
            3: (empty)
        2: R_ANGLE@55..57 ">" [] [Whitespace(" ")]
      3: EQ@57..59 "=" [] [Whitespace(" ")]
      4: TS_MAPPED_TYPE@59..99
        0: L_CURLY@59..60 "{" [] []
        1: (empty)
        2: L_BRACK@60..64 "[" [Newline("\n"), Whitespace("  ")] []
        3: TS_TYPE_PARAMETER_NAME@64..73
          0: IDENT@64..73 "Property" [] [Whitespace(" ")]
        4: IN_KW@73..76 "in" [] [Whitespace(" ")]
        5: TS_TYPE_OPERATOR_TYPE@76..86
          0: KEYOF_KW@76..82 "keyof" [] [Whitespace(" ")]
          1: TS_REFERENCE_TYPE@82..86
            0: JS_REFERENCE_IDENTIFIER@82..86
              0: IDENT@82..86 "Type" [] []
            1: (empty)
        6: (empty)
        7: R_BRACK@86..87 "]" [] []
        8: (empty)
        9: TS_TYPE_ANNOTATION@87..96
          0: COLON@87..89 ":" [] [Whitespace(" ")]
          1: TS_BOOLEAN_TYPE@89..96
            0: BOOLEAN_KW@89..96 "boolean" [] []
        10: SEMICOLON@96..97 ";" [] []
        11: R_CURLY@97..99 "}" [Newline("\n")] []
      5: SEMICOLON@99..100 ";" [] []
    2: TS_TYPE_ALIAS_DECLARATION@100..185
      0: TYPE_KW@100..106 "type" [Newline("\n")] [Whitespace(" ")]
      1: TS_IDENTIFIER_BINDING@106..119
        0: IDENT@106..119 "CreateMutable" [] []
      2: TS_TYPE_PARAMETERS@119..126
        0: L_ANGLE@119..120 "<" [] []
        1: TS_TYPE_PARAMETER_LIST@120..124
          0: TS_TYPE_PARAMETER@120..124
            0: TS_TYPE_PARAMETER_MODIFIER_LIST@120..120
            1: TS_TYPE_PARAMETER_NAME@120..124
              0: IDENT@120..124 "Type" [] []
            2: (empty)
            3: (empty)
        2: R_ANGLE@124..126 ">" [] [Whitespace(" ")]
      3: EQ@126..128 "=" [] [Whitespace(" ")]
      4: TS_MAPPED_TYPE@128..184
        0: L_CURLY@128..129 "{" [] []
        1: TS_MAPPED_TYPE_READONLY_MODIFIER_CLAUSE@129..141
          0: MINUS@129..132 "-" [Newline("\n"), Whitespace("\t")] []
          1: READONLY_KW@132..141 "readonly" [] [Whitespace(" ")]
        2: L_BRACK@141..142 "[" [] []
        3: TS_TYPE_PARAMETER_NAME@142..151
          0: IDENT@142..151 "Property" [] [Whitespace(" ")]
        4: IN_KW@151..154 "in" [] [Whitespace(" ")]
        5: TS_TYPE_OPERATOR_TYPE@154..164
          0: KEYOF_KW@154..160 "keyof" [] [Whitespace(" ")]
          1: TS_REFERENCE_TYPE@160..164
            0: JS_REFERENCE_IDENTIFIER@160..164
              0: IDENT@160..164 "Type" [] []
            1: (empty)
        6: (empty)
        7: R_BRACK@164..165 "]" [] []
        8: (empty)
        9: TS_TYPE_ANNOTATION@165..181
          0: COLON@165..167 ":" [] [Whitespace(" ")]
          1: TS_INDEXED_ACCESS_TYPE@167..181
            0: TS_REFERENCE_TYPE@167..171
              0: JS_REFERENCE_IDENTIFIER@167..171
                0: IDENT@167..171 "Type" [] []
              1: (empty)
            1: L_BRACK@171..172 "[" [] []
            2: TS_REFERENCE_TYPE@172..180
              0: JS_REFERENCE_IDENTIFIER@172..180
                0: IDENT@172..180 "Property" [] []
              1: (empty)
            3: R_BRACK@180..181 "]" [] []
        10: SEMICOLON@181..182 ";" [] []
        11: R_CURLY@182..184 "}" [Newline("\n")] []
      5: SEMICOLON@184..185 ";" [] []
    3: TS_TYPE_ALIAS_DECLARATION@185..257
      0: TYPE_KW@185..191 "type" [Newline("\n")] [Whitespace(" ")]
      1: TS_IDENTIFIER_BINDING@191..199
        0: IDENT@191..199 "Concrete" [] []
      2: TS_TYPE_PARAMETERS@199..206
        0: L_ANGLE@199..200 "<" [] []
        1: TS_TYPE_PARAMETER_LIST@200..204
          0: TS_TYPE_PARAMETER@200..204
            0: TS_TYPE_PARAMETER_MODIFIER_LIST@200..200
            1: TS_TYPE_PARAMETER_NAME@200..204
              0: IDENT@200..204 "Type" [] []
            2: (empty)
            3: (empty)
        2: R_ANGLE@204..206 ">" [] [Whitespace(" ")]
      3: EQ@206..208 "=" [] [Whitespace(" ")]
      4: TS_MAPPED_TYPE@208..256
        0: L_CURLY@208..209 "{" [] []
        1: (empty)
        2: L_BRACK@209..213 "[" [Newline("\n"), Whitespace("  ")] []
        3: TS_TYPE_PARAMETER_NAME@213..222
          0: IDENT@213..222 "Property" [] [Whitespace(" ")]
        4: IN_KW@222..225 "in" [] [Whitespace(" ")]
        5: TS_TYPE_OPERATOR_TYPE@225..235
          0: KEYOF_KW@225..231 "keyof" [] [Whitespace(" ")]
          1: TS_REFERENCE_TYPE@231..235
            0: JS_REFERENCE_IDENTIFIER@231..235
              0: IDENT@231..235 "Type" [] []
            1: (empty)
        6: (empty)
        7: R_BRACK@235..236 "]" [] []
        8: TS_MAPPED_TYPE_OPTIONAL_MODIFIER_CLAUSE@236..238
          0: MINUS@236..237 "-" [] []
          1: QUESTION@237..238 "?" [] []
        9: TS_TYPE_ANNOTATION@238..254
          0: COLON@238..240 ":" [] [Whitespace(" ")]
          1: TS_INDEXED_ACCESS_TYPE@240..254
            0: TS_REFERENCE_TYPE@240..244
              0: JS_REFERENCE_IDENTIFIER@240..244
                0: IDENT@240..244 "Type" [] []
              1: (empty)
            1: L_BRACK@244..245 "[" [] []
            2: TS_REFERENCE_TYPE@245..253
              0: JS_REFERENCE_IDENTIFIER@245..253
                0: IDENT@245..253 "Property" [] []
              1: (empty)
            3: R_BRACK@253..254 "]" [] []
        10: (empty)
        11: R_CURLY@254..256 "}" [Newline("\n")] []
      5: SEMICOLON@256..257 ";" [] []
    4: TS_TYPE_ALIAS_DECLARATION@257..375
      0: TYPE_KW@257..263 "type" [Newline("\n")] [Whitespace(" ")]
      1: TS_IDENTIFIER_BINDING@263..270
        0: IDENT@263..270 "Getters" [] []
      2: TS_TYPE_PARAMETERS@270..277
        0: L_ANGLE@270..271 "<" [] []
        1: TS_TYPE_PARAMETER_LIST@271..275
          0: TS_TYPE_PARAMETER@271..275
            0: TS_TYPE_PARAMETER_MODIFIER_LIST@271..271
            1: TS_TYPE_PARAMETER_NAME@271..275
              0: IDENT@271..275 "Type" [] []
            2: (empty)
            3: (empty)
        2: R_ANGLE@275..277 ">" [] [Whitespace(" ")]
      3: EQ@277..279 "=" [] [Whitespace(" ")]
      4: TS_MAPPED_TYPE@279..374
        0: L_CURLY@279..280 "{" [] []
        1: (empty)
        2: L_BRACK@280..286 "[" [Newline("\n"), Whitespace("    ")] []
        3: TS_TYPE_PARAMETER_NAME@286..295
          0: IDENT@286..295 "Property" [] [Whitespace(" ")]
        4: IN_KW@295..298 "in" [] [Whitespace(" ")]
        5: TS_TYPE_OPERATOR_TYPE@298..309
          0: KEYOF_KW@298..304 "keyof" [] [Whitespace(" ")]
          1: TS_REFERENCE_TYPE@304..309
            0: JS_REFERENCE_IDENTIFIER@304..309
              0: IDENT@304..309 "Type" [] [Whitespace(" ")]
            1: (empty)
        6: TS_MAPPED_TYPE_AS_CLAUSE@309..349
          0: AS_KW@309..312 "as" [] [Whitespace(" ")]
          1: TS_TEMPLATE_LITERAL_TYPE@312..349
            0: BACKTICK@312..313 "`" [] []
            1: TS_TEMPLATE_ELEMENT_LIST@313..348
              0: TS_TEMPLATE_CHUNK_ELEMENT@313..316
                0: TEMPLATE_CHUNK@313..316 "get" [] []
              1: TS_TEMPLATE_ELEMENT@316..348
                0: DOLLAR_CURLY@316..318 "${" [] []
                1: TS_REFERENCE_TYPE@318..347
                  0: JS_REFERENCE_IDENTIFIER@318..328
                    0: IDENT@318..328 "Capitalize" [] []
                  1: TS_TYPE_ARGUMENTS@328..347
                    0: L_ANGLE@328..329 "<" [] []
                    1: TS_TYPE_ARGUMENT_LIST@329..346
                      0: TS_INTERSECTION_TYPE@329..346
                        0: (empty)
                        1: TS_INTERSECTION_TYPE_ELEMENT_LIST@329..346
                          0: TS_STRING_TYPE@329..336
                            0: STRING_KW@329..336 "string" [] [Whitespace(" ")]
                          1: AMP@336..338 "&" [] [Whitespace(" ")]
                          2: TS_REFERENCE_TYPE@338..346
                            0: JS_REFERENCE_IDENTIFIER@338..346
                              0: IDENT@338..346 "Property" [] []
                            1: (empty)
                    2: R_ANGLE@346..347 ">" [] []
                2: R_CURLY@347..348 "}" [] []
            2: BACKTICK@348..349 "`" [] []
        7: R_BRACK@349..350 "]" [] []
        8: (empty)
        9: TS_TYPE_ANNOTATION@350..372
          0: COLON@350..352 ":" [] [Whitespace(" ")]
          1: TS_FUNCTION_TYPE@352..372
            0: (empty)
            1: JS_PARAMETERS@352..355
              0: L_PAREN@352..353 "(" [] []
              1: JS_PARAMETER_LIST@353..353
              2: R_PAREN@353..355 ")" [] [Whitespace(" ")]
            2: FAT_ARROW@355..358 "=>" [] [Whitespace(" ")]
            3: TS_INDEXED_ACCESS_TYPE@358..372
              0: TS_REFERENCE_TYPE@358..362
                0: JS_REFERENCE_IDENTIFIER@358..362
                  0: IDENT@358..362 "Type" [] []
                1: (empty)
              1: L_BRACK@362..363 "[" [] []
              2: TS_REFERENCE_TYPE@363..371
                0: JS_REFERENCE_IDENTIFIER@363..371
                  0: IDENT@363..371 "Property" [] []
                1: (empty)
              3: R_BRACK@371..372 "]" [] []
        10: (empty)
        11: R_CURLY@372..374 "}" [Newline("\n")] []
      5: SEMICOLON@374..375 ";" [] []
  3: EOF@375..376 "" [Newline("\n")] []
