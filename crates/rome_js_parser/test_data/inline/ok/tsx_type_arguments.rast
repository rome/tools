JsModule {
    interpreter_token: missing (optional),
    directives: JsDirectiveList [],
    items: JsModuleItemList [
        JsExpressionStatement {
            expression: JsArrowFunctionExpression {
                async_token: missing (optional),
                type_parameters: TsTypeParameters {
                    l_angle_token: L_ANGLE@0..35 "<" [Comments("// These are valid ty ..."), Newline("\n")] [],
                    items: TsTypeParameterList [
                        TsTypeParameter {
                            modifiers: TsTypeParameterModifierList [],
                            name: TsTypeParameterName {
                                ident_token: IDENT@35..37 "A" [] [Whitespace(" ")],
                            },
                            constraint: TsTypeConstraintClause {
                                extends_token: EXTENDS_KW@37..45 "extends" [] [Whitespace(" ")],
                                ty: TsReferenceType {
                                    name: JsReferenceIdentifier {
                                        value_token: IDENT@45..46 "B" [] [],
                                    },
                                    type_arguments: missing (optional),
                                },
                            },
                            default: missing (optional),
                        },
                    ],
                    r_angle_token: R_ANGLE@46..47 ">" [] [],
                },
                parameters: JsParameters {
                    l_paren_token: L_PAREN@47..48 "(" [] [],
                    items: JsParameterList [],
                    r_paren_token: R_PAREN@48..50 ")" [] [Whitespace(" ")],
                },
                return_type_annotation: missing (optional),
                fat_arrow_token: FAT_ARROW@50..53 "=>" [] [Whitespace(" ")],
                body: JsFunctionBody {
                    l_curly_token: L_CURLY@53..54 "{" [] [],
                    directives: JsDirectiveList [],
                    statements: JsStatementList [],
                    r_curly_token: R_CURLY@54..55 "}" [] [],
                },
            },
            semicolon_token: SEMICOLON@55..56 ";" [] [],
        },
        JsExpressionStatement {
            expression: JsArrowFunctionExpression {
                async_token: missing (optional),
                type_parameters: TsTypeParameters {
                    l_angle_token: L_ANGLE@56..58 "<" [Newline("\n")] [],
                    items: TsTypeParameterList [
                        TsTypeParameter {
                            modifiers: TsTypeParameterModifierList [],
                            name: TsTypeParameterName {
                                ident_token: IDENT@58..59 "A" [] [],
                            },
                            constraint: missing (optional),
                            default: TsDefaultTypeClause {
                                eq_token: EQ@59..60 "=" [] [],
                                ty: TsStringType {
                                    string_token: STRING_KW@60..66 "string" [] [],
                                },
                            },
                        },
                    ],
                    r_angle_token: R_ANGLE@66..67 ">" [] [],
                },
                parameters: JsParameters {
                    l_paren_token: L_PAREN@67..68 "(" [] [],
                    items: JsParameterList [],
                    r_paren_token: R_PAREN@68..70 ")" [] [Whitespace(" ")],
                },
                return_type_annotation: missing (optional),
                fat_arrow_token: FAT_ARROW@70..73 "=>" [] [Whitespace(" ")],
                body: JsFunctionBody {
                    l_curly_token: L_CURLY@73..74 "{" [] [],
                    directives: JsDirectiveList [],
                    statements: JsStatementList [],
                    r_curly_token: R_CURLY@74..75 "}" [] [],
                },
            },
            semicolon_token: SEMICOLON@75..76 ";" [] [],
        },
        JsExpressionStatement {
            expression: JsArrowFunctionExpression {
                async_token: missing (optional),
                type_parameters: TsTypeParameters {
                    l_angle_token: L_ANGLE@76..78 "<" [Newline("\n")] [],
                    items: TsTypeParameterList [
                        TsTypeParameter {
                            modifiers: TsTypeParameterModifierList [],
                            name: TsTypeParameterName {
                                ident_token: IDENT@78..79 "A" [] [],
                            },
                            constraint: missing (optional),
                            default: missing (optional),
                        },
                        COMMA@79..81 "," [] [Whitespace(" ")],
                        TsTypeParameter {
                            modifiers: TsTypeParameterModifierList [],
                            name: TsTypeParameterName {
                                ident_token: IDENT@81..82 "B" [] [],
                            },
                            constraint: missing (optional),
                            default: missing (optional),
                        },
                    ],
                    r_angle_token: R_ANGLE@82..83 ">" [] [],
                },
                parameters: JsParameters {
                    l_paren_token: L_PAREN@83..84 "(" [] [],
                    items: JsParameterList [],
                    r_paren_token: R_PAREN@84..86 ")" [] [Whitespace(" ")],
                },
                return_type_annotation: missing (optional),
                fat_arrow_token: FAT_ARROW@86..89 "=>" [] [Whitespace(" ")],
                body: JsFunctionBody {
                    l_curly_token: L_CURLY@89..90 "{" [] [],
                    directives: JsDirectiveList [],
                    statements: JsStatementList [],
                    r_curly_token: R_CURLY@90..91 "}" [] [],
                },
            },
            semicolon_token: SEMICOLON@91..92 ";" [] [],
        },
        JsExpressionStatement {
            expression: JsArrowFunctionExpression {
                async_token: missing (optional),
                type_parameters: TsTypeParameters {
                    l_angle_token: L_ANGLE@92..94 "<" [Newline("\n")] [],
                    items: TsTypeParameterList [
                        TsTypeParameter {
                            modifiers: TsTypeParameterModifierList [],
                            name: TsTypeParameterName {
                                ident_token: IDENT@94..96 "A" [] [Whitespace(" ")],
                            },
                            constraint: TsTypeConstraintClause {
                                extends_token: EXTENDS_KW@96..104 "extends" [] [Whitespace(" ")],
                                ty: TsReferenceType {
                                    name: JsReferenceIdentifier {
                                        value_token: IDENT@104..105 "B" [] [],
                                    },
                                    type_arguments: TsTypeArguments {
                                        l_angle_token: L_ANGLE@105..106 "<" [] [],
                                        ts_type_argument_list: TsTypeArgumentList [
                                            TsReferenceType {
                                                name: JsReferenceIdentifier {
                                                    value_token: IDENT@106..107 "C" [] [],
                                                },
                                                type_arguments: missing (optional),
                                            },
                                        ],
                                        r_angle_token: R_ANGLE@107..108 ">" [] [],
                                    },
                                },
                            },
                            default: missing (optional),
                        },
                    ],
                    r_angle_token: R_ANGLE@108..109 ">" [] [],
                },
                parameters: JsParameters {
                    l_paren_token: L_PAREN@109..110 "(" [] [],
                    items: JsParameterList [],
                    r_paren_token: R_PAREN@110..112 ")" [] [Whitespace(" ")],
                },
                return_type_annotation: missing (optional),
                fat_arrow_token: FAT_ARROW@112..115 "=>" [] [Whitespace(" ")],
                body: JsFunctionBody {
                    l_curly_token: L_CURLY@115..116 "{" [] [],
                    directives: JsDirectiveList [],
                    statements: JsStatementList [],
                    r_curly_token: R_CURLY@116..117 "}" [] [],
                },
            },
            semicolon_token: missing (optional),
        },
    ],
    eof_token: EOF@117..118 "" [Newline("\n")] [],
}

0: JS_MODULE@0..118
  0: (empty)
  1: JS_DIRECTIVE_LIST@0..0
  2: JS_MODULE_ITEM_LIST@0..117
    0: JS_EXPRESSION_STATEMENT@0..56
      0: JS_ARROW_FUNCTION_EXPRESSION@0..55
        0: (empty)
        1: TS_TYPE_PARAMETERS@0..47
          0: L_ANGLE@0..35 "<" [Comments("// These are valid ty ..."), Newline("\n")] []
          1: TS_TYPE_PARAMETER_LIST@35..46
            0: TS_TYPE_PARAMETER@35..46
              0: TS_TYPE_PARAMETER_MODIFIER_LIST@35..35
              1: TS_TYPE_PARAMETER_NAME@35..37
                0: IDENT@35..37 "A" [] [Whitespace(" ")]
              2: TS_TYPE_CONSTRAINT_CLAUSE@37..46
                0: EXTENDS_KW@37..45 "extends" [] [Whitespace(" ")]
                1: TS_REFERENCE_TYPE@45..46
                  0: JS_REFERENCE_IDENTIFIER@45..46
                    0: IDENT@45..46 "B" [] []
                  1: (empty)
              3: (empty)
          2: R_ANGLE@46..47 ">" [] []
        2: JS_PARAMETERS@47..50
          0: L_PAREN@47..48 "(" [] []
          1: JS_PARAMETER_LIST@48..48
          2: R_PAREN@48..50 ")" [] [Whitespace(" ")]
        3: (empty)
        4: FAT_ARROW@50..53 "=>" [] [Whitespace(" ")]
        5: JS_FUNCTION_BODY@53..55
          0: L_CURLY@53..54 "{" [] []
          1: JS_DIRECTIVE_LIST@54..54
          2: JS_STATEMENT_LIST@54..54
          3: R_CURLY@54..55 "}" [] []
      1: SEMICOLON@55..56 ";" [] []
    1: JS_EXPRESSION_STATEMENT@56..76
      0: JS_ARROW_FUNCTION_EXPRESSION@56..75
        0: (empty)
        1: TS_TYPE_PARAMETERS@56..67
          0: L_ANGLE@56..58 "<" [Newline("\n")] []
          1: TS_TYPE_PARAMETER_LIST@58..66
            0: TS_TYPE_PARAMETER@58..66
              0: TS_TYPE_PARAMETER_MODIFIER_LIST@58..58
              1: TS_TYPE_PARAMETER_NAME@58..59
                0: IDENT@58..59 "A" [] []
              2: (empty)
              3: TS_DEFAULT_TYPE_CLAUSE@59..66
                0: EQ@59..60 "=" [] []
                1: TS_STRING_TYPE@60..66
                  0: STRING_KW@60..66 "string" [] []
          2: R_ANGLE@66..67 ">" [] []
        2: JS_PARAMETERS@67..70
          0: L_PAREN@67..68 "(" [] []
          1: JS_PARAMETER_LIST@68..68
          2: R_PAREN@68..70 ")" [] [Whitespace(" ")]
        3: (empty)
        4: FAT_ARROW@70..73 "=>" [] [Whitespace(" ")]
        5: JS_FUNCTION_BODY@73..75
          0: L_CURLY@73..74 "{" [] []
          1: JS_DIRECTIVE_LIST@74..74
          2: JS_STATEMENT_LIST@74..74
          3: R_CURLY@74..75 "}" [] []
      1: SEMICOLON@75..76 ";" [] []
    2: JS_EXPRESSION_STATEMENT@76..92
      0: JS_ARROW_FUNCTION_EXPRESSION@76..91
        0: (empty)
        1: TS_TYPE_PARAMETERS@76..83
          0: L_ANGLE@76..78 "<" [Newline("\n")] []
          1: TS_TYPE_PARAMETER_LIST@78..82
            0: TS_TYPE_PARAMETER@78..79
              0: TS_TYPE_PARAMETER_MODIFIER_LIST@78..78
              1: TS_TYPE_PARAMETER_NAME@78..79
                0: IDENT@78..79 "A" [] []
              2: (empty)
              3: (empty)
            1: COMMA@79..81 "," [] [Whitespace(" ")]
            2: TS_TYPE_PARAMETER@81..82
              0: TS_TYPE_PARAMETER_MODIFIER_LIST@81..81
              1: TS_TYPE_PARAMETER_NAME@81..82
                0: IDENT@81..82 "B" [] []
              2: (empty)
              3: (empty)
          2: R_ANGLE@82..83 ">" [] []
        2: JS_PARAMETERS@83..86
          0: L_PAREN@83..84 "(" [] []
          1: JS_PARAMETER_LIST@84..84
          2: R_PAREN@84..86 ")" [] [Whitespace(" ")]
        3: (empty)
        4: FAT_ARROW@86..89 "=>" [] [Whitespace(" ")]
        5: JS_FUNCTION_BODY@89..91
          0: L_CURLY@89..90 "{" [] []
          1: JS_DIRECTIVE_LIST@90..90
          2: JS_STATEMENT_LIST@90..90
          3: R_CURLY@90..91 "}" [] []
      1: SEMICOLON@91..92 ";" [] []
    3: JS_EXPRESSION_STATEMENT@92..117
      0: JS_ARROW_FUNCTION_EXPRESSION@92..117
        0: (empty)
        1: TS_TYPE_PARAMETERS@92..109
          0: L_ANGLE@92..94 "<" [Newline("\n")] []
          1: TS_TYPE_PARAMETER_LIST@94..108
            0: TS_TYPE_PARAMETER@94..108
              0: TS_TYPE_PARAMETER_MODIFIER_LIST@94..94
              1: TS_TYPE_PARAMETER_NAME@94..96
                0: IDENT@94..96 "A" [] [Whitespace(" ")]
              2: TS_TYPE_CONSTRAINT_CLAUSE@96..108
                0: EXTENDS_KW@96..104 "extends" [] [Whitespace(" ")]
                1: TS_REFERENCE_TYPE@104..108
                  0: JS_REFERENCE_IDENTIFIER@104..105
                    0: IDENT@104..105 "B" [] []
                  1: TS_TYPE_ARGUMENTS@105..108
                    0: L_ANGLE@105..106 "<" [] []
                    1: TS_TYPE_ARGUMENT_LIST@106..107
                      0: TS_REFERENCE_TYPE@106..107
                        0: JS_REFERENCE_IDENTIFIER@106..107
                          0: IDENT@106..107 "C" [] []
                        1: (empty)
                    2: R_ANGLE@107..108 ">" [] []
              3: (empty)
          2: R_ANGLE@108..109 ">" [] []
        2: JS_PARAMETERS@109..112
          0: L_PAREN@109..110 "(" [] []
          1: JS_PARAMETER_LIST@110..110
          2: R_PAREN@110..112 ")" [] [Whitespace(" ")]
        3: (empty)
        4: FAT_ARROW@112..115 "=>" [] [Whitespace(" ")]
        5: JS_FUNCTION_BODY@115..117
          0: L_CURLY@115..116 "{" [] []
          1: JS_DIRECTIVE_LIST@116..116
          2: JS_STATEMENT_LIST@116..116
          3: R_CURLY@116..117 "}" [] []
      1: (empty)
  3: EOF@117..118 "" [Newline("\n")] []
