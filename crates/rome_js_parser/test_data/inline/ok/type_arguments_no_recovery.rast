JsModule {
    interpreter_token: missing (optional),
    directives: JsDirectiveList [],
    items: JsModuleItemList [
        JsForStatement {
            for_token: FOR_KW@0..4 "for" [] [Whitespace(" ")],
            l_paren_token: L_PAREN@4..5 "(" [] [],
            initializer: JsVariableDeclaration {
                await_token: missing (optional),
                kind: LET_KW@5..9 "let" [] [Whitespace(" ")],
                declarators: JsVariableDeclaratorList [
                    JsVariableDeclarator {
                        id: JsIdentifierBinding {
                            name_token: IDENT@9..11 "i" [] [Whitespace(" ")],
                        },
                        variable_annotation: missing (optional),
                        initializer: JsInitializerClause {
                            eq_token: EQ@11..13 "=" [] [Whitespace(" ")],
                            expression: JsNumberLiteralExpression {
                                value_token: JS_NUMBER_LITERAL@13..15 "0" [] [Whitespace(" ")],
                            },
                        },
                    },
                ],
            },
            first_semi_token: SEMICOLON@15..17 ";" [] [Whitespace(" ")],
            test: JsBinaryExpression {
                left: JsIdentifierExpression {
                    name: JsReferenceIdentifier {
                        value_token: IDENT@17..19 "i" [] [Whitespace(" ")],
                    },
                },
                operator_token: L_ANGLE@19..21 "<" [] [Whitespace(" ")],
                right: JsNumberLiteralExpression {
                    value_token: JS_NUMBER_LITERAL@21..22 "3" [] [],
                },
            },
            second_semi_token: SEMICOLON@22..24 ";" [] [Whitespace(" ")],
            update: JsPreUpdateExpression {
                operator_token: PLUS2@24..26 "++" [] [],
                operand: JsIdentifierAssignment {
                    name_token: IDENT@26..27 "i" [] [],
                },
            },
            r_paren_token: R_PAREN@27..29 ")" [] [Whitespace(" ")],
            body: JsBlockStatement {
                l_curly_token: L_CURLY@29..30 "{" [] [],
                statements: JsStatementList [
                    JsExpressionStatement {
                        expression: JsCallExpression {
                            callee: JsStaticMemberExpression {
                                object: JsIdentifierExpression {
                                    name: JsReferenceIdentifier {
                                        value_token: IDENT@30..41 "verify" [Newline("\n"), Whitespace("    ")] [],
                                    },
                                },
                                operator_token: DOT@41..42 "." [] [],
                                member: JsName {
                                    value_token: IDENT@42..53 "completions" [] [],
                                },
                            },
                            optional_chain_token: missing (optional),
                            type_arguments: missing (optional),
                            arguments: JsCallArguments {
                                l_paren_token: L_PAREN@53..54 "(" [] [],
                                args: JsCallArgumentList [
                                    JsObjectExpression {
                                        l_curly_token: L_CURLY@54..55 "{" [] [],
                                        members: JsObjectMemberList [
                                            JsPropertyObjectMember {
                                                name: JsLiteralMemberName {
                                                    value: IDENT@55..70 "marker" [Newline("\n"), Whitespace("        ")] [],
                                                },
                                                colon_token: COLON@70..72 ":" [] [Whitespace(" ")],
                                                value: JsTemplateExpression {
                                                    tag: missing (optional),
                                                    type_arguments: missing (optional),
                                                    l_tick_token: BACKTICK@72..73 "`" [] [],
                                                    elements: JsTemplateElementList [
                                                        JsTemplateElement {
                                                            dollar_curly_token: DOLLAR_CURLY@73..75 "${" [] [],
                                                            expression: JsBinaryExpression {
                                                                left: JsIdentifierExpression {
                                                                    name: JsReferenceIdentifier {
                                                                        value_token: IDENT@75..77 "i" [] [Whitespace(" ")],
                                                                    },
                                                                },
                                                                operator_token: PLUS@77..79 "+" [] [Whitespace(" ")],
                                                                right: JsNumberLiteralExpression {
                                                                    value_token: JS_NUMBER_LITERAL@79..80 "1" [] [],
                                                                },
                                                            },
                                                            r_curly_token: R_CURLY@80..81 "}" [] [],
                                                        },
                                                    ],
                                                    r_tick_token: BACKTICK@81..82 "`" [] [],
                                                },
                                            },
                                            COMMA@82..83 "," [] [],
                                            JsPropertyObjectMember {
                                                name: JsLiteralMemberName {
                                                    value: IDENT@83..97 "exact" [Newline("\n"), Whitespace("        ")] [],
                                                },
                                                colon_token: COLON@97..99 ":" [] [Whitespace(" ")],
                                                value: JsArrayExpression {
                                                    l_brack_token: L_BRACK@99..100 "[" [] [],
                                                    elements: JsArrayElementList [
                                                        JsObjectExpression {
                                                            l_curly_token: L_CURLY@100..115 "{" [Newline("\n"), Whitespace("            ")] [Whitespace(" ")],
                                                            members: JsObjectMemberList [
                                                                JsPropertyObjectMember {
                                                                    name: JsLiteralMemberName {
                                                                        value: IDENT@115..119 "name" [] [],
                                                                    },
                                                                    colon_token: COLON@119..121 ":" [] [Whitespace(" ")],
                                                                    value: JsStringLiteralExpression {
                                                                        value_token: JS_STRING_LITERAL@121..126 "\"foo\"" [] [],
                                                                    },
                                                                },
                                                                COMMA@126..128 "," [] [Whitespace(" ")],
                                                                JsPropertyObjectMember {
                                                                    name: JsLiteralMemberName {
                                                                        value: IDENT@128..143 "replacementSpan" [] [],
                                                                    },
                                                                    colon_token: COLON@143..145 ":" [] [Whitespace(" ")],
                                                                    value: JsComputedMemberExpression {
                                                                        object: JsCallExpression {
                                                                            callee: JsStaticMemberExpression {
                                                                                object: JsIdentifierExpression {
                                                                                    name: JsReferenceIdentifier {
                                                                                        value_token: IDENT@145..149 "test" [] [],
                                                                                    },
                                                                                },
                                                                                operator_token: DOT@149..150 "." [] [],
                                                                                member: JsName {
                                                                                    value_token: IDENT@150..156 "ranges" [] [],
                                                                                },
                                                                            },
                                                                            optional_chain_token: missing (optional),
                                                                            type_arguments: missing (optional),
                                                                            arguments: JsCallArguments {
                                                                                l_paren_token: L_PAREN@156..157 "(" [] [],
                                                                                args: JsCallArgumentList [],
                                                                                r_paren_token: R_PAREN@157..158 ")" [] [],
                                                                            },
                                                                        },
                                                                        optional_chain_token: missing (optional),
                                                                        l_brack_token: L_BRACK@158..159 "[" [] [],
                                                                        member: JsIdentifierExpression {
                                                                            name: JsReferenceIdentifier {
                                                                                value_token: IDENT@159..160 "i" [] [],
                                                                            },
                                                                        },
                                                                        r_brack_token: R_BRACK@160..162 "]" [] [Whitespace(" ")],
                                                                    },
                                                                },
                                                            ],
                                                            r_curly_token: R_CURLY@162..163 "}" [] [],
                                                        },
                                                        COMMA@163..164 "," [] [],
                                                        JsObjectExpression {
                                                            l_curly_token: L_CURLY@164..179 "{" [Newline("\n"), Whitespace("            ")] [Whitespace(" ")],
                                                            members: JsObjectMemberList [
                                                                JsPropertyObjectMember {
                                                                    name: JsLiteralMemberName {
                                                                        value: IDENT@179..183 "name" [] [],
                                                                    },
                                                                    colon_token: COLON@183..185 ":" [] [Whitespace(" ")],
                                                                    value: JsStringLiteralExpression {
                                                                        value_token: JS_STRING_LITERAL@185..190 "\"bar\"" [] [],
                                                                    },
                                                                },
                                                                COMMA@190..192 "," [] [Whitespace(" ")],
                                                                JsPropertyObjectMember {
                                                                    name: JsLiteralMemberName {
                                                                        value: IDENT@192..207 "replacementSpan" [] [],
                                                                    },
                                                                    colon_token: COLON@207..209 ":" [] [Whitespace(" ")],
                                                                    value: JsComputedMemberExpression {
                                                                        object: JsCallExpression {
                                                                            callee: JsStaticMemberExpression {
                                                                                object: JsIdentifierExpression {
                                                                                    name: JsReferenceIdentifier {
                                                                                        value_token: IDENT@209..213 "test" [] [],
                                                                                    },
                                                                                },
                                                                                operator_token: DOT@213..214 "." [] [],
                                                                                member: JsName {
                                                                                    value_token: IDENT@214..220 "ranges" [] [],
                                                                                },
                                                                            },
                                                                            optional_chain_token: missing (optional),
                                                                            type_arguments: missing (optional),
                                                                            arguments: JsCallArguments {
                                                                                l_paren_token: L_PAREN@220..221 "(" [] [],
                                                                                args: JsCallArgumentList [],
                                                                                r_paren_token: R_PAREN@221..222 ")" [] [],
                                                                            },
                                                                        },
                                                                        optional_chain_token: missing (optional),
                                                                        l_brack_token: L_BRACK@222..223 "[" [] [],
                                                                        member: JsIdentifierExpression {
                                                                            name: JsReferenceIdentifier {
                                                                                value_token: IDENT@223..224 "i" [] [],
                                                                            },
                                                                        },
                                                                        r_brack_token: R_BRACK@224..226 "]" [] [Whitespace(" ")],
                                                                    },
                                                                },
                                                            ],
                                                            r_curly_token: R_CURLY@226..227 "}" [] [],
                                                        },
                                                        COMMA@227..228 "," [] [],
                                                    ],
                                                    r_brack_token: R_BRACK@228..238 "]" [Newline("\n"), Whitespace("        ")] [],
                                                },
                                            },
                                        ],
                                        r_curly_token: R_CURLY@238..244 "}" [Newline("\n"), Whitespace("    ")] [],
                                    },
                                ],
                                r_paren_token: R_PAREN@244..245 ")" [] [],
                            },
                        },
                        semicolon_token: SEMICOLON@245..246 ";" [] [],
                    },
                ],
                r_curly_token: R_CURLY@246..248 "}" [Newline("\n")] [],
            },
        },
    ],
    eof_token: EOF@248..249 "" [Newline("\n")] [],
}

0: JS_MODULE@0..249
  0: (empty)
  1: JS_DIRECTIVE_LIST@0..0
  2: JS_MODULE_ITEM_LIST@0..248
    0: JS_FOR_STATEMENT@0..248
      0: FOR_KW@0..4 "for" [] [Whitespace(" ")]
      1: L_PAREN@4..5 "(" [] []
      2: JS_VARIABLE_DECLARATION@5..15
        0: (empty)
        1: LET_KW@5..9 "let" [] [Whitespace(" ")]
        2: JS_VARIABLE_DECLARATOR_LIST@9..15
          0: JS_VARIABLE_DECLARATOR@9..15
            0: JS_IDENTIFIER_BINDING@9..11
              0: IDENT@9..11 "i" [] [Whitespace(" ")]
            1: (empty)
            2: JS_INITIALIZER_CLAUSE@11..15
              0: EQ@11..13 "=" [] [Whitespace(" ")]
              1: JS_NUMBER_LITERAL_EXPRESSION@13..15
                0: JS_NUMBER_LITERAL@13..15 "0" [] [Whitespace(" ")]
      3: SEMICOLON@15..17 ";" [] [Whitespace(" ")]
      4: JS_BINARY_EXPRESSION@17..22
        0: JS_IDENTIFIER_EXPRESSION@17..19
          0: JS_REFERENCE_IDENTIFIER@17..19
            0: IDENT@17..19 "i" [] [Whitespace(" ")]
        1: L_ANGLE@19..21 "<" [] [Whitespace(" ")]
        2: JS_NUMBER_LITERAL_EXPRESSION@21..22
          0: JS_NUMBER_LITERAL@21..22 "3" [] []
      5: SEMICOLON@22..24 ";" [] [Whitespace(" ")]
      6: JS_PRE_UPDATE_EXPRESSION@24..27
        0: PLUS2@24..26 "++" [] []
        1: JS_IDENTIFIER_ASSIGNMENT@26..27
          0: IDENT@26..27 "i" [] []
      7: R_PAREN@27..29 ")" [] [Whitespace(" ")]
      8: JS_BLOCK_STATEMENT@29..248
        0: L_CURLY@29..30 "{" [] []
        1: JS_STATEMENT_LIST@30..246
          0: JS_EXPRESSION_STATEMENT@30..246
            0: JS_CALL_EXPRESSION@30..245
              0: JS_STATIC_MEMBER_EXPRESSION@30..53
                0: JS_IDENTIFIER_EXPRESSION@30..41
                  0: JS_REFERENCE_IDENTIFIER@30..41
                    0: IDENT@30..41 "verify" [Newline("\n"), Whitespace("    ")] []
                1: DOT@41..42 "." [] []
                2: JS_NAME@42..53
                  0: IDENT@42..53 "completions" [] []
              1: (empty)
              2: (empty)
              3: JS_CALL_ARGUMENTS@53..245
                0: L_PAREN@53..54 "(" [] []
                1: JS_CALL_ARGUMENT_LIST@54..244
                  0: JS_OBJECT_EXPRESSION@54..244
                    0: L_CURLY@54..55 "{" [] []
                    1: JS_OBJECT_MEMBER_LIST@55..238
                      0: JS_PROPERTY_OBJECT_MEMBER@55..82
                        0: JS_LITERAL_MEMBER_NAME@55..70
                          0: IDENT@55..70 "marker" [Newline("\n"), Whitespace("        ")] []
                        1: COLON@70..72 ":" [] [Whitespace(" ")]
                        2: JS_TEMPLATE_EXPRESSION@72..82
                          0: (empty)
                          1: (empty)
                          2: BACKTICK@72..73 "`" [] []
                          3: JS_TEMPLATE_ELEMENT_LIST@73..81
                            0: JS_TEMPLATE_ELEMENT@73..81
                              0: DOLLAR_CURLY@73..75 "${" [] []
                              1: JS_BINARY_EXPRESSION@75..80
                                0: JS_IDENTIFIER_EXPRESSION@75..77
                                  0: JS_REFERENCE_IDENTIFIER@75..77
                                    0: IDENT@75..77 "i" [] [Whitespace(" ")]
                                1: PLUS@77..79 "+" [] [Whitespace(" ")]
                                2: JS_NUMBER_LITERAL_EXPRESSION@79..80
                                  0: JS_NUMBER_LITERAL@79..80 "1" [] []
                              2: R_CURLY@80..81 "}" [] []
                          4: BACKTICK@81..82 "`" [] []
                      1: COMMA@82..83 "," [] []
                      2: JS_PROPERTY_OBJECT_MEMBER@83..238
                        0: JS_LITERAL_MEMBER_NAME@83..97
                          0: IDENT@83..97 "exact" [Newline("\n"), Whitespace("        ")] []
                        1: COLON@97..99 ":" [] [Whitespace(" ")]
                        2: JS_ARRAY_EXPRESSION@99..238
                          0: L_BRACK@99..100 "[" [] []
                          1: JS_ARRAY_ELEMENT_LIST@100..228
                            0: JS_OBJECT_EXPRESSION@100..163
                              0: L_CURLY@100..115 "{" [Newline("\n"), Whitespace("            ")] [Whitespace(" ")]
                              1: JS_OBJECT_MEMBER_LIST@115..162
                                0: JS_PROPERTY_OBJECT_MEMBER@115..126
                                  0: JS_LITERAL_MEMBER_NAME@115..119
                                    0: IDENT@115..119 "name" [] []
                                  1: COLON@119..121 ":" [] [Whitespace(" ")]
                                  2: JS_STRING_LITERAL_EXPRESSION@121..126
                                    0: JS_STRING_LITERAL@121..126 "\"foo\"" [] []
                                1: COMMA@126..128 "," [] [Whitespace(" ")]
                                2: JS_PROPERTY_OBJECT_MEMBER@128..162
                                  0: JS_LITERAL_MEMBER_NAME@128..143
                                    0: IDENT@128..143 "replacementSpan" [] []
                                  1: COLON@143..145 ":" [] [Whitespace(" ")]
                                  2: JS_COMPUTED_MEMBER_EXPRESSION@145..162
                                    0: JS_CALL_EXPRESSION@145..158
                                      0: JS_STATIC_MEMBER_EXPRESSION@145..156
                                        0: JS_IDENTIFIER_EXPRESSION@145..149
                                          0: JS_REFERENCE_IDENTIFIER@145..149
                                            0: IDENT@145..149 "test" [] []
                                        1: DOT@149..150 "." [] []
                                        2: JS_NAME@150..156
                                          0: IDENT@150..156 "ranges" [] []
                                      1: (empty)
                                      2: (empty)
                                      3: JS_CALL_ARGUMENTS@156..158
                                        0: L_PAREN@156..157 "(" [] []
                                        1: JS_CALL_ARGUMENT_LIST@157..157
                                        2: R_PAREN@157..158 ")" [] []
                                    1: (empty)
                                    2: L_BRACK@158..159 "[" [] []
                                    3: JS_IDENTIFIER_EXPRESSION@159..160
                                      0: JS_REFERENCE_IDENTIFIER@159..160
                                        0: IDENT@159..160 "i" [] []
                                    4: R_BRACK@160..162 "]" [] [Whitespace(" ")]
                              2: R_CURLY@162..163 "}" [] []
                            1: COMMA@163..164 "," [] []
                            2: JS_OBJECT_EXPRESSION@164..227
                              0: L_CURLY@164..179 "{" [Newline("\n"), Whitespace("            ")] [Whitespace(" ")]
                              1: JS_OBJECT_MEMBER_LIST@179..226
                                0: JS_PROPERTY_OBJECT_MEMBER@179..190
                                  0: JS_LITERAL_MEMBER_NAME@179..183
                                    0: IDENT@179..183 "name" [] []
                                  1: COLON@183..185 ":" [] [Whitespace(" ")]
                                  2: JS_STRING_LITERAL_EXPRESSION@185..190
                                    0: JS_STRING_LITERAL@185..190 "\"bar\"" [] []
                                1: COMMA@190..192 "," [] [Whitespace(" ")]
                                2: JS_PROPERTY_OBJECT_MEMBER@192..226
                                  0: JS_LITERAL_MEMBER_NAME@192..207
                                    0: IDENT@192..207 "replacementSpan" [] []
                                  1: COLON@207..209 ":" [] [Whitespace(" ")]
                                  2: JS_COMPUTED_MEMBER_EXPRESSION@209..226
                                    0: JS_CALL_EXPRESSION@209..222
                                      0: JS_STATIC_MEMBER_EXPRESSION@209..220
                                        0: JS_IDENTIFIER_EXPRESSION@209..213
                                          0: JS_REFERENCE_IDENTIFIER@209..213
                                            0: IDENT@209..213 "test" [] []
                                        1: DOT@213..214 "." [] []
                                        2: JS_NAME@214..220
                                          0: IDENT@214..220 "ranges" [] []
                                      1: (empty)
                                      2: (empty)
                                      3: JS_CALL_ARGUMENTS@220..222
                                        0: L_PAREN@220..221 "(" [] []
                                        1: JS_CALL_ARGUMENT_LIST@221..221
                                        2: R_PAREN@221..222 ")" [] []
                                    1: (empty)
                                    2: L_BRACK@222..223 "[" [] []
                                    3: JS_IDENTIFIER_EXPRESSION@223..224
                                      0: JS_REFERENCE_IDENTIFIER@223..224
                                        0: IDENT@223..224 "i" [] []
                                    4: R_BRACK@224..226 "]" [] [Whitespace(" ")]
                              2: R_CURLY@226..227 "}" [] []
                            3: COMMA@227..228 "," [] []
                          2: R_BRACK@228..238 "]" [Newline("\n"), Whitespace("        ")] []
                    2: R_CURLY@238..244 "}" [Newline("\n"), Whitespace("    ")] []
                2: R_PAREN@244..245 ")" [] []
            1: SEMICOLON@245..246 ";" [] []
        2: R_CURLY@246..248 "}" [Newline("\n")] []
  3: EOF@248..249 "" [Newline("\n")] []
