JsModule {
    interpreter_token: missing (optional),
    directives: JsDirectiveList [],
    items: JsModuleItemList [
        JsExport {
            decorators: JsDecoratorList [],
            export_token: EXPORT_KW@0..7 "export" [] [Whitespace(" ")],
            export_clause: JsExportNamedFromClause {
                type_token: missing (optional),
                l_curly_token: L_CURLY@7..9 "{" [] [Whitespace(" ")],
                specifiers: JsExportNamedFromSpecifierList [
                    JsExportNamedFromSpecifier {
                        type_token: TYPE_KW@9..14 "type" [] [Whitespace(" ")],
                        source_name: JsLiteralExportName {
                            value: IDENT@14..16 "A" [] [Whitespace(" ")],
                        },
                        export_as: missing (optional),
                    },
                ],
                r_curly_token: R_CURLY@16..18 "}" [] [Whitespace(" ")],
                from_token: FROM_KW@18..23 "from" [] [Whitespace(" ")],
                source: JsModuleSource {
                    value_token: JS_STRING_LITERAL@23..26 "\"a\"" [] [],
                },
                assertion: missing (optional),
                semicolon_token: missing (optional),
            },
        },
        JsExport {
            decorators: JsDecoratorList [],
            export_token: EXPORT_KW@26..34 "export" [Newline("\n")] [Whitespace(" ")],
            export_clause: JsExportNamedFromClause {
                type_token: missing (optional),
                l_curly_token: L_CURLY@34..36 "{" [] [Whitespace(" ")],
                specifiers: JsExportNamedFromSpecifierList [
                    JsExportNamedFromSpecifier {
                        type_token: missing (optional),
                        source_name: JsLiteralExportName {
                            value: IDENT@36..41 "type" [] [Whitespace(" ")],
                        },
                        export_as: missing (optional),
                    },
                ],
                r_curly_token: R_CURLY@41..43 "}" [] [Whitespace(" ")],
                from_token: FROM_KW@43..48 "from" [] [Whitespace(" ")],
                source: JsModuleSource {
                    value_token: JS_STRING_LITERAL@48..56 "\"./type\"" [] [],
                },
                assertion: missing (optional),
                semicolon_token: SEMICOLON@56..57 ";" [] [],
            },
        },
    ],
    eof_token: EOF@57..58 "" [Newline("\n")] [],
}

0: JS_MODULE@0..58
  0: (empty)
  1: JS_DIRECTIVE_LIST@0..0
  2: JS_MODULE_ITEM_LIST@0..57
    0: JS_EXPORT@0..26
      0: JS_DECORATOR_LIST@0..0
      1: EXPORT_KW@0..7 "export" [] [Whitespace(" ")]
      2: JS_EXPORT_NAMED_FROM_CLAUSE@7..26
        0: (empty)
        1: L_CURLY@7..9 "{" [] [Whitespace(" ")]
        2: JS_EXPORT_NAMED_FROM_SPECIFIER_LIST@9..16
          0: JS_EXPORT_NAMED_FROM_SPECIFIER@9..16
            0: TYPE_KW@9..14 "type" [] [Whitespace(" ")]
            1: JS_LITERAL_EXPORT_NAME@14..16
              0: IDENT@14..16 "A" [] [Whitespace(" ")]
            2: (empty)
        3: R_CURLY@16..18 "}" [] [Whitespace(" ")]
        4: FROM_KW@18..23 "from" [] [Whitespace(" ")]
        5: JS_MODULE_SOURCE@23..26
          0: JS_STRING_LITERAL@23..26 "\"a\"" [] []
        6: (empty)
        7: (empty)
    1: JS_EXPORT@26..57
      0: JS_DECORATOR_LIST@26..26
      1: EXPORT_KW@26..34 "export" [Newline("\n")] [Whitespace(" ")]
      2: JS_EXPORT_NAMED_FROM_CLAUSE@34..57
        0: (empty)
        1: L_CURLY@34..36 "{" [] [Whitespace(" ")]
        2: JS_EXPORT_NAMED_FROM_SPECIFIER_LIST@36..41
          0: JS_EXPORT_NAMED_FROM_SPECIFIER@36..41
            0: (empty)
            1: JS_LITERAL_EXPORT_NAME@36..41
              0: IDENT@36..41 "type" [] [Whitespace(" ")]
            2: (empty)
        3: R_CURLY@41..43 "}" [] [Whitespace(" ")]
        4: FROM_KW@43..48 "from" [] [Whitespace(" ")]
        5: JS_MODULE_SOURCE@48..56
          0: JS_STRING_LITERAL@48..56 "\"./type\"" [] []
        6: (empty)
        7: SEMICOLON@56..57 ";" [] []
  3: EOF@57..58 "" [Newline("\n")] []
