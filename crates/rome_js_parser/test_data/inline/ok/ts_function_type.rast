JsModule {
    interpreter_token: missing (optional),
    directives: JsDirectiveList [],
    items: JsModuleItemList [
        TsTypeAliasDeclaration {
            type_token: TYPE_KW@0..5 "type" [] [Whitespace(" ")],
            binding_identifier: TsIdentifierBinding {
                name_token: IDENT@5..7 "A" [] [Whitespace(" ")],
            },
            type_parameters: missing (optional),
            eq_token: EQ@7..9 "=" [] [Whitespace(" ")],
            ty: TsFunctionType {
                type_parameters: missing (optional),
                parameters: JsParameters {
                    l_paren_token: L_PAREN@9..10 "(" [] [],
                    items: JsParameterList [],
                    r_paren_token: R_PAREN@10..12 ")" [] [Whitespace(" ")],
                },
                fat_arrow_token: FAT_ARROW@12..15 "=>" [] [Whitespace(" ")],
                return_type: TsStringType {
                    string_token: STRING_KW@15..21 "string" [] [],
                },
            },
            semicolon_token: SEMICOLON@21..22 ";" [] [],
        },
        TsTypeAliasDeclaration {
            type_token: TYPE_KW@22..28 "type" [Newline("\n")] [Whitespace(" ")],
            binding_identifier: TsIdentifierBinding {
                name_token: IDENT@28..30 "B" [] [Whitespace(" ")],
            },
            type_parameters: missing (optional),
            eq_token: EQ@30..32 "=" [] [Whitespace(" ")],
            ty: TsFunctionType {
                type_parameters: missing (optional),
                parameters: JsParameters {
                    l_paren_token: L_PAREN@32..33 "(" [] [],
                    items: JsParameterList [
                        JsFormalParameter {
                            decorators: JsDecoratorList [],
                            binding: JsIdentifierBinding {
                                name_token: IDENT@33..34 "a" [] [],
                            },
                            question_mark_token: missing (optional),
                            type_annotation: TsTypeAnnotation {
                                colon_token: COLON@34..36 ":" [] [Whitespace(" ")],
                                ty: TsStringType {
                                    string_token: STRING_KW@36..42 "string" [] [],
                                },
                            },
                            initializer: missing (optional),
                        },
                    ],
                    r_paren_token: R_PAREN@42..44 ")" [] [Whitespace(" ")],
                },
                fat_arrow_token: FAT_ARROW@44..47 "=>" [] [Whitespace(" ")],
                return_type: TsStringType {
                    string_token: STRING_KW@47..53 "string" [] [],
                },
            },
            semicolon_token: SEMICOLON@53..54 ";" [] [],
        },
        TsTypeAliasDeclaration {
            type_token: TYPE_KW@54..60 "type" [Newline("\n")] [Whitespace(" ")],
            binding_identifier: TsIdentifierBinding {
                name_token: IDENT@60..62 "C" [] [Whitespace(" ")],
            },
            type_parameters: missing (optional),
            eq_token: EQ@62..64 "=" [] [Whitespace(" ")],
            ty: TsFunctionType {
                type_parameters: missing (optional),
                parameters: JsParameters {
                    l_paren_token: L_PAREN@64..65 "(" [] [],
                    items: JsParameterList [
                        JsFormalParameter {
                            decorators: JsDecoratorList [],
                            binding: JsIdentifierBinding {
                                name_token: IDENT@65..67 "b" [] [Whitespace(" ")],
                            },
                            question_mark_token: missing (optional),
                            type_annotation: missing (optional),
                            initializer: JsInitializerClause {
                                eq_token: EQ@67..69 "=" [] [Whitespace(" ")],
                                expression: JsStringLiteralExpression {
                                    value_token: JS_STRING_LITERAL@69..75 "\"test\"" [] [],
                                },
                            },
                        },
                    ],
                    r_paren_token: R_PAREN@75..77 ")" [] [Whitespace(" ")],
                },
                fat_arrow_token: FAT_ARROW@77..80 "=>" [] [Whitespace(" ")],
                return_type: TsStringType {
                    string_token: STRING_KW@80..86 "string" [] [],
                },
            },
            semicolon_token: SEMICOLON@86..87 ";" [] [],
        },
        TsTypeAliasDeclaration {
            type_token: TYPE_KW@87..93 "type" [Newline("\n")] [Whitespace(" ")],
            binding_identifier: TsIdentifierBinding {
                name_token: IDENT@93..95 "D" [] [Whitespace(" ")],
            },
            type_parameters: missing (optional),
            eq_token: EQ@95..97 "=" [] [Whitespace(" ")],
            ty: TsFunctionType {
                type_parameters: missing (optional),
                parameters: JsParameters {
                    l_paren_token: L_PAREN@97..98 "(" [] [],
                    items: JsParameterList [
                        JsFormalParameter {
                            decorators: JsDecoratorList [],
                            binding: JsIdentifierBinding {
                                name_token: IDENT@98..99 "c" [] [],
                            },
                            question_mark_token: missing (optional),
                            type_annotation: missing (optional),
                            initializer: missing (optional),
                        },
                        COMMA@99..101 "," [] [Whitespace(" ")],
                        JsFormalParameter {
                            decorators: JsDecoratorList [],
                            binding: JsIdentifierBinding {
                                name_token: IDENT@101..102 "d" [] [],
                            },
                            question_mark_token: missing (optional),
                            type_annotation: missing (optional),
                            initializer: missing (optional),
                        },
                    ],
                    r_paren_token: R_PAREN@102..104 ")" [] [Whitespace(" ")],
                },
                fat_arrow_token: FAT_ARROW@104..107 "=>" [] [Whitespace(" ")],
                return_type: TsStringType {
                    string_token: STRING_KW@107..113 "string" [] [],
                },
            },
            semicolon_token: missing (optional),
        },
        TsTypeAliasDeclaration {
            type_token: TYPE_KW@113..119 "type" [Newline("\n")] [Whitespace(" ")],
            binding_identifier: TsIdentifierBinding {
                name_token: IDENT@119..121 "E" [] [Whitespace(" ")],
            },
            type_parameters: missing (optional),
            eq_token: EQ@121..123 "=" [] [Whitespace(" ")],
            ty: TsFunctionType {
                type_parameters: missing (optional),
                parameters: JsParameters {
                    l_paren_token: L_PAREN@123..124 "(" [] [],
                    items: JsParameterList [
                        JsFormalParameter {
                            decorators: JsDecoratorList [],
                            binding: JsArrayBindingPattern {
                                l_brack_token: L_BRACK@124..125 "[" [] [],
                                elements: JsArrayBindingPatternElementList [
                                    JsIdentifierBinding {
                                        name_token: IDENT@125..126 "a" [] [],
                                    },
                                ],
                                r_brack_token: R_BRACK@126..127 "]" [] [],
                            },
                            question_mark_token: missing (optional),
                            type_annotation: missing (optional),
                            initializer: missing (optional),
                        },
                    ],
                    r_paren_token: R_PAREN@127..129 ")" [] [Whitespace(" ")],
                },
                fat_arrow_token: FAT_ARROW@129..132 "=>" [] [Whitespace(" ")],
                return_type: TsStringType {
                    string_token: STRING_KW@132..138 "string" [] [],
                },
            },
            semicolon_token: missing (optional),
        },
        TsTypeAliasDeclaration {
            type_token: TYPE_KW@138..144 "type" [Newline("\n")] [Whitespace(" ")],
            binding_identifier: TsIdentifierBinding {
                name_token: IDENT@144..146 "F" [] [Whitespace(" ")],
            },
            type_parameters: missing (optional),
            eq_token: EQ@146..148 "=" [] [Whitespace(" ")],
            ty: TsFunctionType {
                type_parameters: missing (optional),
                parameters: JsParameters {
                    l_paren_token: L_PAREN@148..149 "(" [] [],
                    items: JsParameterList [
                        JsFormalParameter {
                            decorators: JsDecoratorList [],
                            binding: JsObjectBindingPattern {
                                l_curly_token: L_CURLY@149..150 "{" [] [],
                                properties: JsObjectBindingPatternPropertyList [
                                    JsObjectBindingPatternShorthandProperty {
                                        identifier: JsIdentifierBinding {
                                            name_token: IDENT@150..151 "a" [] [],
                                        },
                                        init: missing (optional),
                                    },
                                ],
                                r_curly_token: R_CURLY@151..152 "}" [] [],
                            },
                            question_mark_token: missing (optional),
                            type_annotation: missing (optional),
                            initializer: missing (optional),
                        },
                    ],
                    r_paren_token: R_PAREN@152..154 ")" [] [Whitespace(" ")],
                },
                fat_arrow_token: FAT_ARROW@154..157 "=>" [] [Whitespace(" ")],
                return_type: TsStringType {
                    string_token: STRING_KW@157..163 "string" [] [],
                },
            },
            semicolon_token: missing (optional),
        },
        TsTypeAliasDeclaration {
            type_token: TYPE_KW@163..169 "type" [Newline("\n")] [Whitespace(" ")],
            binding_identifier: TsIdentifierBinding {
                name_token: IDENT@169..171 "G" [] [Whitespace(" ")],
            },
            type_parameters: missing (optional),
            eq_token: EQ@171..173 "=" [] [Whitespace(" ")],
            ty: TsFunctionType {
                type_parameters: TsTypeParameters {
                    l_angle_token: L_ANGLE@173..174 "<" [] [],
                    items: TsTypeParameterList [
                        TsTypeParameter {
                            modifiers: TsTypeParameterModifierList [],
                            name: TsTypeParameterName {
                                ident_token: IDENT@174..175 "A" [] [],
                            },
                            constraint: missing (optional),
                            default: missing (optional),
                        },
                        COMMA@175..177 "," [] [Whitespace(" ")],
                        TsTypeParameter {
                            modifiers: TsTypeParameterModifierList [],
                            name: TsTypeParameterName {
                                ident_token: IDENT@177..178 "B" [] [],
                            },
                            constraint: missing (optional),
                            default: missing (optional),
                        },
                    ],
                    r_angle_token: R_ANGLE@178..179 ">" [] [],
                },
                parameters: JsParameters {
                    l_paren_token: L_PAREN@179..180 "(" [] [],
                    items: JsParameterList [
                        JsFormalParameter {
                            decorators: JsDecoratorList [],
                            binding: JsIdentifierBinding {
                                name_token: IDENT@180..181 "a" [] [],
                            },
                            question_mark_token: missing (optional),
                            type_annotation: TsTypeAnnotation {
                                colon_token: COLON@181..183 ":" [] [Whitespace(" ")],
                                ty: TsReferenceType {
                                    name: JsReferenceIdentifier {
                                        value_token: IDENT@183..184 "A" [] [],
                                    },
                                    type_arguments: missing (optional),
                                },
                            },
                            initializer: missing (optional),
                        },
                        COMMA@184..186 "," [] [Whitespace(" ")],
                        JsFormalParameter {
                            decorators: JsDecoratorList [],
                            binding: JsIdentifierBinding {
                                name_token: IDENT@186..187 "b" [] [],
                            },
                            question_mark_token: missing (optional),
                            type_annotation: TsTypeAnnotation {
                                colon_token: COLON@187..189 ":" [] [Whitespace(" ")],
                                ty: TsReferenceType {
                                    name: JsReferenceIdentifier {
                                        value_token: IDENT@189..190 "B" [] [],
                                    },
                                    type_arguments: missing (optional),
                                },
                            },
                            initializer: missing (optional),
                        },
                    ],
                    r_paren_token: R_PAREN@190..192 ")" [] [Whitespace(" ")],
                },
                fat_arrow_token: FAT_ARROW@192..195 "=>" [] [Whitespace(" ")],
                return_type: TsStringType {
                    string_token: STRING_KW@195..201 "string" [] [],
                },
            },
            semicolon_token: missing (optional),
        },
        TsTypeAliasDeclaration {
            type_token: TYPE_KW@201..207 "type" [Newline("\n")] [Whitespace(" ")],
            binding_identifier: TsIdentifierBinding {
                name_token: IDENT@207..209 "H" [] [Whitespace(" ")],
            },
            type_parameters: missing (optional),
            eq_token: EQ@209..211 "=" [] [Whitespace(" ")],
            ty: TsFunctionType {
                type_parameters: missing (optional),
                parameters: JsParameters {
                    l_paren_token: L_PAREN@211..212 "(" [] [],
                    items: JsParameterList [
                        JsFormalParameter {
                            decorators: JsDecoratorList [],
                            binding: JsIdentifierBinding {
                                name_token: IDENT@212..213 "a" [] [],
                            },
                            question_mark_token: missing (optional),
                            type_annotation: TsTypeAnnotation {
                                colon_token: COLON@213..215 ":" [] [Whitespace(" ")],
                                ty: TsAnyType {
                                    any_token: ANY_KW@215..218 "any" [] [],
                                },
                            },
                            initializer: missing (optional),
                        },
                    ],
                    r_paren_token: R_PAREN@218..220 ")" [] [Whitespace(" ")],
                },
                fat_arrow_token: FAT_ARROW@220..223 "=>" [] [Whitespace(" ")],
                return_type: TsPredicateReturnType {
                    parameter_name: JsReferenceIdentifier {
                        value_token: IDENT@223..225 "a" [] [Whitespace(" ")],
                    },
                    is_token: IS_KW@225..228 "is" [] [Whitespace(" ")],
                    ty: TsStringType {
                        string_token: STRING_KW@228..234 "string" [] [],
                    },
                },
            },
            semicolon_token: SEMICOLON@234..235 ";" [] [],
        },
        TsTypeAliasDeclaration {
            type_token: TYPE_KW@235..241 "type" [Newline("\n")] [Whitespace(" ")],
            binding_identifier: TsIdentifierBinding {
                name_token: IDENT@241..243 "I" [] [Whitespace(" ")],
            },
            type_parameters: missing (optional),
            eq_token: EQ@243..245 "=" [] [Whitespace(" ")],
            ty: TsFunctionType {
                type_parameters: missing (optional),
                parameters: JsParameters {
                    l_paren_token: L_PAREN@245..246 "(" [] [],
                    items: JsParameterList [
                        JsFormalParameter {
                            decorators: JsDecoratorList [],
                            binding: JsObjectBindingPattern {
                                l_curly_token: L_CURLY@246..248 "{" [] [Whitespace(" ")],
                                properties: JsObjectBindingPatternPropertyList [
                                    JsObjectBindingPatternShorthandProperty {
                                        identifier: JsIdentifierBinding {
                                            name_token: IDENT@248..249 "a" [] [],
                                        },
                                        init: missing (optional),
                                    },
                                    COMMA@249..251 "," [] [Whitespace(" ")],
                                    JsObjectBindingPatternShorthandProperty {
                                        identifier: JsIdentifierBinding {
                                            name_token: IDENT@251..253 "b" [] [Whitespace(" ")],
                                        },
                                        init: missing (optional),
                                    },
                                ],
                                r_curly_token: R_CURLY@253..254 "}" [] [],
                            },
                            question_mark_token: QUESTION@254..255 "?" [] [],
                            type_annotation: missing (optional),
                            initializer: missing (optional),
                        },
                    ],
                    r_paren_token: R_PAREN@255..257 ")" [] [Whitespace(" ")],
                },
                fat_arrow_token: FAT_ARROW@257..260 "=>" [] [Whitespace(" ")],
                return_type: TsStringType {
                    string_token: STRING_KW@260..266 "string" [] [],
                },
            },
            semicolon_token: SEMICOLON@266..267 ";" [] [],
        },
    ],
    eof_token: EOF@267..268 "" [Newline("\n")] [],
}

0: JS_MODULE@0..268
  0: (empty)
  1: JS_DIRECTIVE_LIST@0..0
  2: JS_MODULE_ITEM_LIST@0..267
    0: TS_TYPE_ALIAS_DECLARATION@0..22
      0: TYPE_KW@0..5 "type" [] [Whitespace(" ")]
      1: TS_IDENTIFIER_BINDING@5..7
        0: IDENT@5..7 "A" [] [Whitespace(" ")]
      2: (empty)
      3: EQ@7..9 "=" [] [Whitespace(" ")]
      4: TS_FUNCTION_TYPE@9..21
        0: (empty)
        1: JS_PARAMETERS@9..12
          0: L_PAREN@9..10 "(" [] []
          1: JS_PARAMETER_LIST@10..10
          2: R_PAREN@10..12 ")" [] [Whitespace(" ")]
        2: FAT_ARROW@12..15 "=>" [] [Whitespace(" ")]
        3: TS_STRING_TYPE@15..21
          0: STRING_KW@15..21 "string" [] []
      5: SEMICOLON@21..22 ";" [] []
    1: TS_TYPE_ALIAS_DECLARATION@22..54
      0: TYPE_KW@22..28 "type" [Newline("\n")] [Whitespace(" ")]
      1: TS_IDENTIFIER_BINDING@28..30
        0: IDENT@28..30 "B" [] [Whitespace(" ")]
      2: (empty)
      3: EQ@30..32 "=" [] [Whitespace(" ")]
      4: TS_FUNCTION_TYPE@32..53
        0: (empty)
        1: JS_PARAMETERS@32..44
          0: L_PAREN@32..33 "(" [] []
          1: JS_PARAMETER_LIST@33..42
            0: JS_FORMAL_PARAMETER@33..42
              0: JS_DECORATOR_LIST@33..33
              1: JS_IDENTIFIER_BINDING@33..34
                0: IDENT@33..34 "a" [] []
              2: (empty)
              3: TS_TYPE_ANNOTATION@34..42
                0: COLON@34..36 ":" [] [Whitespace(" ")]
                1: TS_STRING_TYPE@36..42
                  0: STRING_KW@36..42 "string" [] []
              4: (empty)
          2: R_PAREN@42..44 ")" [] [Whitespace(" ")]
        2: FAT_ARROW@44..47 "=>" [] [Whitespace(" ")]
        3: TS_STRING_TYPE@47..53
          0: STRING_KW@47..53 "string" [] []
      5: SEMICOLON@53..54 ";" [] []
    2: TS_TYPE_ALIAS_DECLARATION@54..87
      0: TYPE_KW@54..60 "type" [Newline("\n")] [Whitespace(" ")]
      1: TS_IDENTIFIER_BINDING@60..62
        0: IDENT@60..62 "C" [] [Whitespace(" ")]
      2: (empty)
      3: EQ@62..64 "=" [] [Whitespace(" ")]
      4: TS_FUNCTION_TYPE@64..86
        0: (empty)
        1: JS_PARAMETERS@64..77
          0: L_PAREN@64..65 "(" [] []
          1: JS_PARAMETER_LIST@65..75
            0: JS_FORMAL_PARAMETER@65..75
              0: JS_DECORATOR_LIST@65..65
              1: JS_IDENTIFIER_BINDING@65..67
                0: IDENT@65..67 "b" [] [Whitespace(" ")]
              2: (empty)
              3: (empty)
              4: JS_INITIALIZER_CLAUSE@67..75
                0: EQ@67..69 "=" [] [Whitespace(" ")]
                1: JS_STRING_LITERAL_EXPRESSION@69..75
                  0: JS_STRING_LITERAL@69..75 "\"test\"" [] []
          2: R_PAREN@75..77 ")" [] [Whitespace(" ")]
        2: FAT_ARROW@77..80 "=>" [] [Whitespace(" ")]
        3: TS_STRING_TYPE@80..86
          0: STRING_KW@80..86 "string" [] []
      5: SEMICOLON@86..87 ";" [] []
    3: TS_TYPE_ALIAS_DECLARATION@87..113
      0: TYPE_KW@87..93 "type" [Newline("\n")] [Whitespace(" ")]
      1: TS_IDENTIFIER_BINDING@93..95
        0: IDENT@93..95 "D" [] [Whitespace(" ")]
      2: (empty)
      3: EQ@95..97 "=" [] [Whitespace(" ")]
      4: TS_FUNCTION_TYPE@97..113
        0: (empty)
        1: JS_PARAMETERS@97..104
          0: L_PAREN@97..98 "(" [] []
          1: JS_PARAMETER_LIST@98..102
            0: JS_FORMAL_PARAMETER@98..99
              0: JS_DECORATOR_LIST@98..98
              1: JS_IDENTIFIER_BINDING@98..99
                0: IDENT@98..99 "c" [] []
              2: (empty)
              3: (empty)
              4: (empty)
            1: COMMA@99..101 "," [] [Whitespace(" ")]
            2: JS_FORMAL_PARAMETER@101..102
              0: JS_DECORATOR_LIST@101..101
              1: JS_IDENTIFIER_BINDING@101..102
                0: IDENT@101..102 "d" [] []
              2: (empty)
              3: (empty)
              4: (empty)
          2: R_PAREN@102..104 ")" [] [Whitespace(" ")]
        2: FAT_ARROW@104..107 "=>" [] [Whitespace(" ")]
        3: TS_STRING_TYPE@107..113
          0: STRING_KW@107..113 "string" [] []
      5: (empty)
    4: TS_TYPE_ALIAS_DECLARATION@113..138
      0: TYPE_KW@113..119 "type" [Newline("\n")] [Whitespace(" ")]
      1: TS_IDENTIFIER_BINDING@119..121
        0: IDENT@119..121 "E" [] [Whitespace(" ")]
      2: (empty)
      3: EQ@121..123 "=" [] [Whitespace(" ")]
      4: TS_FUNCTION_TYPE@123..138
        0: (empty)
        1: JS_PARAMETERS@123..129
          0: L_PAREN@123..124 "(" [] []
          1: JS_PARAMETER_LIST@124..127
            0: JS_FORMAL_PARAMETER@124..127
              0: JS_DECORATOR_LIST@124..124
              1: JS_ARRAY_BINDING_PATTERN@124..127
                0: L_BRACK@124..125 "[" [] []
                1: JS_ARRAY_BINDING_PATTERN_ELEMENT_LIST@125..126
                  0: JS_IDENTIFIER_BINDING@125..126
                    0: IDENT@125..126 "a" [] []
                2: R_BRACK@126..127 "]" [] []
              2: (empty)
              3: (empty)
              4: (empty)
          2: R_PAREN@127..129 ")" [] [Whitespace(" ")]
        2: FAT_ARROW@129..132 "=>" [] [Whitespace(" ")]
        3: TS_STRING_TYPE@132..138
          0: STRING_KW@132..138 "string" [] []
      5: (empty)
    5: TS_TYPE_ALIAS_DECLARATION@138..163
      0: TYPE_KW@138..144 "type" [Newline("\n")] [Whitespace(" ")]
      1: TS_IDENTIFIER_BINDING@144..146
        0: IDENT@144..146 "F" [] [Whitespace(" ")]
      2: (empty)
      3: EQ@146..148 "=" [] [Whitespace(" ")]
      4: TS_FUNCTION_TYPE@148..163
        0: (empty)
        1: JS_PARAMETERS@148..154
          0: L_PAREN@148..149 "(" [] []
          1: JS_PARAMETER_LIST@149..152
            0: JS_FORMAL_PARAMETER@149..152
              0: JS_DECORATOR_LIST@149..149
              1: JS_OBJECT_BINDING_PATTERN@149..152
                0: L_CURLY@149..150 "{" [] []
                1: JS_OBJECT_BINDING_PATTERN_PROPERTY_LIST@150..151
                  0: JS_OBJECT_BINDING_PATTERN_SHORTHAND_PROPERTY@150..151
                    0: JS_IDENTIFIER_BINDING@150..151
                      0: IDENT@150..151 "a" [] []
                    1: (empty)
                2: R_CURLY@151..152 "}" [] []
              2: (empty)
              3: (empty)
              4: (empty)
          2: R_PAREN@152..154 ")" [] [Whitespace(" ")]
        2: FAT_ARROW@154..157 "=>" [] [Whitespace(" ")]
        3: TS_STRING_TYPE@157..163
          0: STRING_KW@157..163 "string" [] []
      5: (empty)
    6: TS_TYPE_ALIAS_DECLARATION@163..201
      0: TYPE_KW@163..169 "type" [Newline("\n")] [Whitespace(" ")]
      1: TS_IDENTIFIER_BINDING@169..171
        0: IDENT@169..171 "G" [] [Whitespace(" ")]
      2: (empty)
      3: EQ@171..173 "=" [] [Whitespace(" ")]
      4: TS_FUNCTION_TYPE@173..201
        0: TS_TYPE_PARAMETERS@173..179
          0: L_ANGLE@173..174 "<" [] []
          1: TS_TYPE_PARAMETER_LIST@174..178
            0: TS_TYPE_PARAMETER@174..175
              0: TS_TYPE_PARAMETER_MODIFIER_LIST@174..174
              1: TS_TYPE_PARAMETER_NAME@174..175
                0: IDENT@174..175 "A" [] []
              2: (empty)
              3: (empty)
            1: COMMA@175..177 "," [] [Whitespace(" ")]
            2: TS_TYPE_PARAMETER@177..178
              0: TS_TYPE_PARAMETER_MODIFIER_LIST@177..177
              1: TS_TYPE_PARAMETER_NAME@177..178
                0: IDENT@177..178 "B" [] []
              2: (empty)
              3: (empty)
          2: R_ANGLE@178..179 ">" [] []
        1: JS_PARAMETERS@179..192
          0: L_PAREN@179..180 "(" [] []
          1: JS_PARAMETER_LIST@180..190
            0: JS_FORMAL_PARAMETER@180..184
              0: JS_DECORATOR_LIST@180..180
              1: JS_IDENTIFIER_BINDING@180..181
                0: IDENT@180..181 "a" [] []
              2: (empty)
              3: TS_TYPE_ANNOTATION@181..184
                0: COLON@181..183 ":" [] [Whitespace(" ")]
                1: TS_REFERENCE_TYPE@183..184
                  0: JS_REFERENCE_IDENTIFIER@183..184
                    0: IDENT@183..184 "A" [] []
                  1: (empty)
              4: (empty)
            1: COMMA@184..186 "," [] [Whitespace(" ")]
            2: JS_FORMAL_PARAMETER@186..190
              0: JS_DECORATOR_LIST@186..186
              1: JS_IDENTIFIER_BINDING@186..187
                0: IDENT@186..187 "b" [] []
              2: (empty)
              3: TS_TYPE_ANNOTATION@187..190
                0: COLON@187..189 ":" [] [Whitespace(" ")]
                1: TS_REFERENCE_TYPE@189..190
                  0: JS_REFERENCE_IDENTIFIER@189..190
                    0: IDENT@189..190 "B" [] []
                  1: (empty)
              4: (empty)
          2: R_PAREN@190..192 ")" [] [Whitespace(" ")]
        2: FAT_ARROW@192..195 "=>" [] [Whitespace(" ")]
        3: TS_STRING_TYPE@195..201
          0: STRING_KW@195..201 "string" [] []
      5: (empty)
    7: TS_TYPE_ALIAS_DECLARATION@201..235
      0: TYPE_KW@201..207 "type" [Newline("\n")] [Whitespace(" ")]
      1: TS_IDENTIFIER_BINDING@207..209
        0: IDENT@207..209 "H" [] [Whitespace(" ")]
      2: (empty)
      3: EQ@209..211 "=" [] [Whitespace(" ")]
      4: TS_FUNCTION_TYPE@211..234
        0: (empty)
        1: JS_PARAMETERS@211..220
          0: L_PAREN@211..212 "(" [] []
          1: JS_PARAMETER_LIST@212..218
            0: JS_FORMAL_PARAMETER@212..218
              0: JS_DECORATOR_LIST@212..212
              1: JS_IDENTIFIER_BINDING@212..213
                0: IDENT@212..213 "a" [] []
              2: (empty)
              3: TS_TYPE_ANNOTATION@213..218
                0: COLON@213..215 ":" [] [Whitespace(" ")]
                1: TS_ANY_TYPE@215..218
                  0: ANY_KW@215..218 "any" [] []
              4: (empty)
          2: R_PAREN@218..220 ")" [] [Whitespace(" ")]
        2: FAT_ARROW@220..223 "=>" [] [Whitespace(" ")]
        3: TS_PREDICATE_RETURN_TYPE@223..234
          0: JS_REFERENCE_IDENTIFIER@223..225
            0: IDENT@223..225 "a" [] [Whitespace(" ")]
          1: IS_KW@225..228 "is" [] [Whitespace(" ")]
          2: TS_STRING_TYPE@228..234
            0: STRING_KW@228..234 "string" [] []
      5: SEMICOLON@234..235 ";" [] []
    8: TS_TYPE_ALIAS_DECLARATION@235..267
      0: TYPE_KW@235..241 "type" [Newline("\n")] [Whitespace(" ")]
      1: TS_IDENTIFIER_BINDING@241..243
        0: IDENT@241..243 "I" [] [Whitespace(" ")]
      2: (empty)
      3: EQ@243..245 "=" [] [Whitespace(" ")]
      4: TS_FUNCTION_TYPE@245..266
        0: (empty)
        1: JS_PARAMETERS@245..257
          0: L_PAREN@245..246 "(" [] []
          1: JS_PARAMETER_LIST@246..255
            0: JS_FORMAL_PARAMETER@246..255
              0: JS_DECORATOR_LIST@246..246
              1: JS_OBJECT_BINDING_PATTERN@246..254
                0: L_CURLY@246..248 "{" [] [Whitespace(" ")]
                1: JS_OBJECT_BINDING_PATTERN_PROPERTY_LIST@248..253
                  0: JS_OBJECT_BINDING_PATTERN_SHORTHAND_PROPERTY@248..249
                    0: JS_IDENTIFIER_BINDING@248..249
                      0: IDENT@248..249 "a" [] []
                    1: (empty)
                  1: COMMA@249..251 "," [] [Whitespace(" ")]
                  2: JS_OBJECT_BINDING_PATTERN_SHORTHAND_PROPERTY@251..253
                    0: JS_IDENTIFIER_BINDING@251..253
                      0: IDENT@251..253 "b" [] [Whitespace(" ")]
                    1: (empty)
                2: R_CURLY@253..254 "}" [] []
              2: QUESTION@254..255 "?" [] []
              3: (empty)
              4: (empty)
          2: R_PAREN@255..257 ")" [] [Whitespace(" ")]
        2: FAT_ARROW@257..260 "=>" [] [Whitespace(" ")]
        3: TS_STRING_TYPE@260..266
          0: STRING_KW@260..266 "string" [] []
      5: SEMICOLON@266..267 ";" [] []
  3: EOF@267..268 "" [Newline("\n")] []
