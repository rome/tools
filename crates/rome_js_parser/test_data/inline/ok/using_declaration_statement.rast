JsModule {
    interpreter_token: missing (optional),
    directives: JsDirectiveList [],
    items: JsModuleItemList [
        JsVariableStatement {
            declaration: JsVariableDeclaration {
                await_token: missing (optional),
                kind: USING_KW@0..6 "using" [] [Whitespace(" ")],
                declarators: JsVariableDeclaratorList [
                    JsVariableDeclarator {
                        id: JsIdentifierBinding {
                            name_token: IDENT@6..8 "a" [] [Whitespace(" ")],
                        },
                        variable_annotation: missing (optional),
                        initializer: JsInitializerClause {
                            eq_token: EQ@8..10 "=" [] [Whitespace(" ")],
                            expression: JsIdentifierExpression {
                                name: JsReferenceIdentifier {
                                    value_token: IDENT@10..11 "b" [] [],
                                },
                            },
                        },
                    },
                ],
            },
            semicolon_token: SEMICOLON@11..12 ";" [] [],
        },
        JsVariableStatement {
            declaration: JsVariableDeclaration {
                await_token: missing (optional),
                kind: USING_KW@12..19 "using" [Newline("\n")] [Whitespace(" ")],
                declarators: JsVariableDeclaratorList [
                    JsVariableDeclarator {
                        id: JsIdentifierBinding {
                            name_token: IDENT@19..21 "c" [] [Whitespace(" ")],
                        },
                        variable_annotation: missing (optional),
                        initializer: JsInitializerClause {
                            eq_token: EQ@21..23 "=" [] [Whitespace(" ")],
                            expression: JsIdentifierExpression {
                                name: JsReferenceIdentifier {
                                    value_token: IDENT@23..24 "d" [] [],
                                },
                            },
                        },
                    },
                    COMMA@24..26 "," [] [Whitespace(" ")],
                    JsVariableDeclarator {
                        id: JsIdentifierBinding {
                            name_token: IDENT@26..28 "e" [] [Whitespace(" ")],
                        },
                        variable_annotation: missing (optional),
                        initializer: JsInitializerClause {
                            eq_token: EQ@28..30 "=" [] [Whitespace(" ")],
                            expression: JsIdentifierExpression {
                                name: JsReferenceIdentifier {
                                    value_token: IDENT@30..31 "_" [] [],
                                },
                            },
                        },
                    },
                ],
            },
            semicolon_token: SEMICOLON@31..32 ";" [] [],
        },
        JsVariableStatement {
            declaration: JsVariableDeclaration {
                await_token: missing (optional),
                kind: USING_KW@32..39 "using" [Newline("\n")] [Whitespace(" ")],
                declarators: JsVariableDeclaratorList [
                    JsVariableDeclarator {
                        id: JsArrayBindingPattern {
                            l_brack_token: L_BRACK@39..40 "[" [] [],
                            elements: JsArrayBindingPatternElementList [
                                JsIdentifierBinding {
                                    name_token: IDENT@40..41 "g" [] [],
                                },
                            ],
                            r_brack_token: R_BRACK@41..43 "]" [] [Whitespace(" ")],
                        },
                        variable_annotation: missing (optional),
                        initializer: JsInitializerClause {
                            eq_token: EQ@43..45 "=" [] [Whitespace(" ")],
                            expression: JsIdentifierExpression {
                                name: JsReferenceIdentifier {
                                    value_token: IDENT@45..46 "h" [] [],
                                },
                            },
                        },
                    },
                ],
            },
            semicolon_token: SEMICOLON@46..47 ";" [] [],
        },
        JsVariableStatement {
            declaration: JsVariableDeclaration {
                await_token: missing (optional),
                kind: USING_KW@47..54 "using" [Newline("\n")] [Whitespace(" ")],
                declarators: JsVariableDeclaratorList [
                    JsVariableDeclarator {
                        id: JsArrayBindingPattern {
                            l_brack_token: L_BRACK@54..55 "[" [] [],
                            elements: JsArrayBindingPatternElementList [
                                JsIdentifierBinding {
                                    name_token: IDENT@55..56 "j" [] [],
                                },
                            ],
                            r_brack_token: R_BRACK@56..57 "]" [] [],
                        },
                        variable_annotation: missing (optional),
                        initializer: JsInitializerClause {
                            eq_token: EQ@57..60 "=" [Newline("\n")] [Whitespace(" ")],
                            expression: JsIdentifierExpression {
                                name: JsReferenceIdentifier {
                                    value_token: IDENT@60..61 "k" [] [],
                                },
                            },
                        },
                    },
                ],
            },
            semicolon_token: SEMICOLON@61..62 ";" [] [],
        },
        JsVariableStatement {
            declaration: JsVariableDeclaration {
                await_token: AWAIT_KW@62..69 "await" [Newline("\n")] [Whitespace(" ")],
                kind: USING_KW@69..75 "using" [] [Whitespace(" ")],
                declarators: JsVariableDeclaratorList [
                    JsVariableDeclarator {
                        id: JsIdentifierBinding {
                            name_token: IDENT@75..77 "l" [] [Whitespace(" ")],
                        },
                        variable_annotation: missing (optional),
                        initializer: JsInitializerClause {
                            eq_token: EQ@77..79 "=" [] [Whitespace(" ")],
                            expression: JsIdentifierExpression {
                                name: JsReferenceIdentifier {
                                    value_token: IDENT@79..80 "m" [] [],
                                },
                            },
                        },
                    },
                ],
            },
            semicolon_token: SEMICOLON@80..81 ";" [] [],
        },
        JsVariableStatement {
            declaration: JsVariableDeclaration {
                await_token: AWAIT_KW@81..87 "await" [Newline("\n")] [],
                kind: USING_KW@87..94 "using" [Newline("\n")] [Whitespace(" ")],
                declarators: JsVariableDeclaratorList [
                    JsVariableDeclarator {
                        id: JsIdentifierBinding {
                            name_token: IDENT@94..96 "p" [] [Whitespace(" ")],
                        },
                        variable_annotation: missing (optional),
                        initializer: JsInitializerClause {
                            eq_token: EQ@96..98 "=" [] [Whitespace(" ")],
                            expression: JsIdentifierExpression {
                                name: JsReferenceIdentifier {
                                    value_token: IDENT@98..99 "q" [] [],
                                },
                            },
                        },
                    },
                ],
            },
            semicolon_token: SEMICOLON@99..100 ";" [] [],
        },
        JsExpressionStatement {
            expression: JsAwaitExpression {
                await_token: AWAIT_KW@100..132 "await" [Newline("\n"), Comments("// TODO: await using[r];"), Newline("\n")] [Whitespace(" ")],
                argument: JsCallExpression {
                    callee: JsIdentifierExpression {
                        name: JsReferenceIdentifier {
                            value_token: IDENT@132..138 "using" [] [Whitespace(" ")],
                        },
                    },
                    optional_chain_token: missing (optional),
                    type_arguments: missing (optional),
                    arguments: JsCallArguments {
                        l_paren_token: L_PAREN@138..139 "(" [] [],
                        args: JsCallArgumentList [
                            JsAssignmentExpression {
                                left: JsArrayAssignmentPattern {
                                    l_brack_token: L_BRACK@139..140 "[" [] [],
                                    elements: JsArrayAssignmentPatternElementList [
                                        JsIdentifierAssignment {
                                            name_token: IDENT@140..141 "s" [] [],
                                        },
                                    ],
                                    r_brack_token: R_BRACK@141..143 "]" [] [Whitespace(" ")],
                                },
                                operator_token: EQ@143..145 "=" [] [Whitespace(" ")],
                                right: JsIdentifierExpression {
                                    name: JsReferenceIdentifier {
                                        value_token: IDENT@145..146 "t" [] [],
                                    },
                                },
                            },
                        ],
                        r_paren_token: R_PAREN@146..147 ")" [] [],
                    },
                },
            },
            semicolon_token: SEMICOLON@147..148 ";" [] [],
        },
        JsExpressionStatement {
            expression: JsAwaitExpression {
                await_token: AWAIT_KW@148..155 "await" [Newline("\n")] [Whitespace(" ")],
                argument: JsParenthesizedExpression {
                    l_paren_token: L_PAREN@155..156 "(" [] [],
                    expression: JsAssignmentExpression {
                        left: JsComputedMemberAssignment {
                            object: JsIdentifierExpression {
                                name: JsReferenceIdentifier {
                                    value_token: IDENT@156..162 "using" [] [Whitespace(" ")],
                                },
                            },
                            l_brack_token: L_BRACK@162..163 "[" [] [],
                            member: JsIdentifierExpression {
                                name: JsReferenceIdentifier {
                                    value_token: IDENT@163..164 "u" [] [],
                                },
                            },
                            r_brack_token: R_BRACK@164..166 "]" [] [Whitespace(" ")],
                        },
                        operator_token: EQ@166..168 "=" [] [Whitespace(" ")],
                        right: JsIdentifierExpression {
                            name: JsReferenceIdentifier {
                                value_token: IDENT@168..169 "v" [] [],
                            },
                        },
                    },
                    r_paren_token: R_PAREN@169..170 ")" [] [],
                },
            },
            semicolon_token: SEMICOLON@170..171 ";" [] [],
        },
        JsVariableStatement {
            declaration: JsVariableDeclaration {
                await_token: missing (optional),
                kind: USING_KW@171..178 "using" [Newline("\n")] [Whitespace(" ")],
                declarators: JsVariableDeclaratorList [
                    JsVariableDeclarator {
                        id: JsIdentifierBinding {
                            name_token: IDENT@178..180 "w" [] [Whitespace(" ")],
                        },
                        variable_annotation: missing (optional),
                        initializer: JsInitializerClause {
                            eq_token: EQ@180..182 "=" [] [Whitespace(" ")],
                            expression: JsObjectExpression {
                                l_curly_token: L_CURLY@182..183 "{" [] [],
                                members: JsObjectMemberList [],
                                r_curly_token: R_CURLY@183..184 "}" [] [],
                            },
                        },
                    },
                ],
            },
            semicolon_token: SEMICOLON@184..185 ";" [] [],
        },
        JsVariableStatement {
            declaration: JsVariableDeclaration {
                await_token: missing (optional),
                kind: USING_KW@185..192 "using" [Newline("\n")] [Whitespace(" ")],
                declarators: JsVariableDeclaratorList [
                    JsVariableDeclarator {
                        id: JsIdentifierBinding {
                            name_token: IDENT@192..194 "x" [] [Whitespace(" ")],
                        },
                        variable_annotation: missing (optional),
                        initializer: JsInitializerClause {
                            eq_token: EQ@194..196 "=" [] [Whitespace(" ")],
                            expression: JsNullLiteralExpression {
                                value_token: NULL_KW@196..200 "null" [] [],
                            },
                        },
                    },
                ],
            },
            semicolon_token: SEMICOLON@200..201 ";" [] [],
        },
        JsVariableStatement {
            declaration: JsVariableDeclaration {
                await_token: missing (optional),
                kind: USING_KW@201..208 "using" [Newline("\n")] [Whitespace(" ")],
                declarators: JsVariableDeclaratorList [
                    JsVariableDeclarator {
                        id: JsIdentifierBinding {
                            name_token: IDENT@208..210 "y" [] [Whitespace(" ")],
                        },
                        variable_annotation: missing (optional),
                        initializer: JsInitializerClause {
                            eq_token: EQ@210..212 "=" [] [Whitespace(" ")],
                            expression: JsIdentifierExpression {
                                name: JsReferenceIdentifier {
                                    value_token: IDENT@212..221 "undefined" [] [],
                                },
                            },
                        },
                    },
                ],
            },
            semicolon_token: SEMICOLON@221..222 ";" [] [],
        },
        JsVariableStatement {
            declaration: JsVariableDeclaration {
                await_token: missing (optional),
                kind: USING_KW@222..229 "using" [Newline("\n")] [Whitespace(" ")],
                declarators: JsVariableDeclaratorList [
                    JsVariableDeclarator {
                        id: JsIdentifierBinding {
                            name_token: IDENT@229..231 "z" [] [Whitespace(" ")],
                        },
                        variable_annotation: missing (optional),
                        initializer: JsInitializerClause {
                            eq_token: EQ@231..233 "=" [] [Whitespace(" ")],
                            expression: JsParenthesizedExpression {
                                l_paren_token: L_PAREN@233..234 "(" [] [],
                                expression: JsSequenceExpression {
                                    left: JsIdentifierExpression {
                                        name: JsReferenceIdentifier {
                                            value_token: IDENT@234..237 "foo" [] [],
                                        },
                                    },
                                    comma_token: COMMA@237..239 "," [] [Whitespace(" ")],
                                    right: JsIdentifierExpression {
                                        name: JsReferenceIdentifier {
                                            value_token: IDENT@239..242 "bar" [] [],
                                        },
                                    },
                                },
                                r_paren_token: R_PAREN@242..243 ")" [] [],
                            },
                        },
                    },
                ],
            },
            semicolon_token: SEMICOLON@243..244 ";" [] [],
        },
    ],
    eof_token: EOF@244..245 "" [Newline("\n")] [],
}

0: JS_MODULE@0..245
  0: (empty)
  1: JS_DIRECTIVE_LIST@0..0
  2: JS_MODULE_ITEM_LIST@0..244
    0: JS_VARIABLE_STATEMENT@0..12
      0: JS_VARIABLE_DECLARATION@0..11
        0: (empty)
        1: USING_KW@0..6 "using" [] [Whitespace(" ")]
        2: JS_VARIABLE_DECLARATOR_LIST@6..11
          0: JS_VARIABLE_DECLARATOR@6..11
            0: JS_IDENTIFIER_BINDING@6..8
              0: IDENT@6..8 "a" [] [Whitespace(" ")]
            1: (empty)
            2: JS_INITIALIZER_CLAUSE@8..11
              0: EQ@8..10 "=" [] [Whitespace(" ")]
              1: JS_IDENTIFIER_EXPRESSION@10..11
                0: JS_REFERENCE_IDENTIFIER@10..11
                  0: IDENT@10..11 "b" [] []
      1: SEMICOLON@11..12 ";" [] []
    1: JS_VARIABLE_STATEMENT@12..32
      0: JS_VARIABLE_DECLARATION@12..31
        0: (empty)
        1: USING_KW@12..19 "using" [Newline("\n")] [Whitespace(" ")]
        2: JS_VARIABLE_DECLARATOR_LIST@19..31
          0: JS_VARIABLE_DECLARATOR@19..24
            0: JS_IDENTIFIER_BINDING@19..21
              0: IDENT@19..21 "c" [] [Whitespace(" ")]
            1: (empty)
            2: JS_INITIALIZER_CLAUSE@21..24
              0: EQ@21..23 "=" [] [Whitespace(" ")]
              1: JS_IDENTIFIER_EXPRESSION@23..24
                0: JS_REFERENCE_IDENTIFIER@23..24
                  0: IDENT@23..24 "d" [] []
          1: COMMA@24..26 "," [] [Whitespace(" ")]
          2: JS_VARIABLE_DECLARATOR@26..31
            0: JS_IDENTIFIER_BINDING@26..28
              0: IDENT@26..28 "e" [] [Whitespace(" ")]
            1: (empty)
            2: JS_INITIALIZER_CLAUSE@28..31
              0: EQ@28..30 "=" [] [Whitespace(" ")]
              1: JS_IDENTIFIER_EXPRESSION@30..31
                0: JS_REFERENCE_IDENTIFIER@30..31
                  0: IDENT@30..31 "_" [] []
      1: SEMICOLON@31..32 ";" [] []
    2: JS_VARIABLE_STATEMENT@32..47
      0: JS_VARIABLE_DECLARATION@32..46
        0: (empty)
        1: USING_KW@32..39 "using" [Newline("\n")] [Whitespace(" ")]
        2: JS_VARIABLE_DECLARATOR_LIST@39..46
          0: JS_VARIABLE_DECLARATOR@39..46
            0: JS_ARRAY_BINDING_PATTERN@39..43
              0: L_BRACK@39..40 "[" [] []
              1: JS_ARRAY_BINDING_PATTERN_ELEMENT_LIST@40..41
                0: JS_IDENTIFIER_BINDING@40..41
                  0: IDENT@40..41 "g" [] []
              2: R_BRACK@41..43 "]" [] [Whitespace(" ")]
            1: (empty)
            2: JS_INITIALIZER_CLAUSE@43..46
              0: EQ@43..45 "=" [] [Whitespace(" ")]
              1: JS_IDENTIFIER_EXPRESSION@45..46
                0: JS_REFERENCE_IDENTIFIER@45..46
                  0: IDENT@45..46 "h" [] []
      1: SEMICOLON@46..47 ";" [] []
    3: JS_VARIABLE_STATEMENT@47..62
      0: JS_VARIABLE_DECLARATION@47..61
        0: (empty)
        1: USING_KW@47..54 "using" [Newline("\n")] [Whitespace(" ")]
        2: JS_VARIABLE_DECLARATOR_LIST@54..61
          0: JS_VARIABLE_DECLARATOR@54..61
            0: JS_ARRAY_BINDING_PATTERN@54..57
              0: L_BRACK@54..55 "[" [] []
              1: JS_ARRAY_BINDING_PATTERN_ELEMENT_LIST@55..56
                0: JS_IDENTIFIER_BINDING@55..56
                  0: IDENT@55..56 "j" [] []
              2: R_BRACK@56..57 "]" [] []
            1: (empty)
            2: JS_INITIALIZER_CLAUSE@57..61
              0: EQ@57..60 "=" [Newline("\n")] [Whitespace(" ")]
              1: JS_IDENTIFIER_EXPRESSION@60..61
                0: JS_REFERENCE_IDENTIFIER@60..61
                  0: IDENT@60..61 "k" [] []
      1: SEMICOLON@61..62 ";" [] []
    4: JS_VARIABLE_STATEMENT@62..81
      0: JS_VARIABLE_DECLARATION@62..80
        0: AWAIT_KW@62..69 "await" [Newline("\n")] [Whitespace(" ")]
        1: USING_KW@69..75 "using" [] [Whitespace(" ")]
        2: JS_VARIABLE_DECLARATOR_LIST@75..80
          0: JS_VARIABLE_DECLARATOR@75..80
            0: JS_IDENTIFIER_BINDING@75..77
              0: IDENT@75..77 "l" [] [Whitespace(" ")]
            1: (empty)
            2: JS_INITIALIZER_CLAUSE@77..80
              0: EQ@77..79 "=" [] [Whitespace(" ")]
              1: JS_IDENTIFIER_EXPRESSION@79..80
                0: JS_REFERENCE_IDENTIFIER@79..80
                  0: IDENT@79..80 "m" [] []
      1: SEMICOLON@80..81 ";" [] []
    5: JS_VARIABLE_STATEMENT@81..100
      0: JS_VARIABLE_DECLARATION@81..99
        0: AWAIT_KW@81..87 "await" [Newline("\n")] []
        1: USING_KW@87..94 "using" [Newline("\n")] [Whitespace(" ")]
        2: JS_VARIABLE_DECLARATOR_LIST@94..99
          0: JS_VARIABLE_DECLARATOR@94..99
            0: JS_IDENTIFIER_BINDING@94..96
              0: IDENT@94..96 "p" [] [Whitespace(" ")]
            1: (empty)
            2: JS_INITIALIZER_CLAUSE@96..99
              0: EQ@96..98 "=" [] [Whitespace(" ")]
              1: JS_IDENTIFIER_EXPRESSION@98..99
                0: JS_REFERENCE_IDENTIFIER@98..99
                  0: IDENT@98..99 "q" [] []
      1: SEMICOLON@99..100 ";" [] []
    6: JS_EXPRESSION_STATEMENT@100..148
      0: JS_AWAIT_EXPRESSION@100..147
        0: AWAIT_KW@100..132 "await" [Newline("\n"), Comments("// TODO: await using[r];"), Newline("\n")] [Whitespace(" ")]
        1: JS_CALL_EXPRESSION@132..147
          0: JS_IDENTIFIER_EXPRESSION@132..138
            0: JS_REFERENCE_IDENTIFIER@132..138
              0: IDENT@132..138 "using" [] [Whitespace(" ")]
          1: (empty)
          2: (empty)
          3: JS_CALL_ARGUMENTS@138..147
            0: L_PAREN@138..139 "(" [] []
            1: JS_CALL_ARGUMENT_LIST@139..146
              0: JS_ASSIGNMENT_EXPRESSION@139..146
                0: JS_ARRAY_ASSIGNMENT_PATTERN@139..143
                  0: L_BRACK@139..140 "[" [] []
                  1: JS_ARRAY_ASSIGNMENT_PATTERN_ELEMENT_LIST@140..141
                    0: JS_IDENTIFIER_ASSIGNMENT@140..141
                      0: IDENT@140..141 "s" [] []
                  2: R_BRACK@141..143 "]" [] [Whitespace(" ")]
                1: EQ@143..145 "=" [] [Whitespace(" ")]
                2: JS_IDENTIFIER_EXPRESSION@145..146
                  0: JS_REFERENCE_IDENTIFIER@145..146
                    0: IDENT@145..146 "t" [] []
            2: R_PAREN@146..147 ")" [] []
      1: SEMICOLON@147..148 ";" [] []
    7: JS_EXPRESSION_STATEMENT@148..171
      0: JS_AWAIT_EXPRESSION@148..170
        0: AWAIT_KW@148..155 "await" [Newline("\n")] [Whitespace(" ")]
        1: JS_PARENTHESIZED_EXPRESSION@155..170
          0: L_PAREN@155..156 "(" [] []
          1: JS_ASSIGNMENT_EXPRESSION@156..169
            0: JS_COMPUTED_MEMBER_ASSIGNMENT@156..166
              0: JS_IDENTIFIER_EXPRESSION@156..162
                0: JS_REFERENCE_IDENTIFIER@156..162
                  0: IDENT@156..162 "using" [] [Whitespace(" ")]
              1: L_BRACK@162..163 "[" [] []
              2: JS_IDENTIFIER_EXPRESSION@163..164
                0: JS_REFERENCE_IDENTIFIER@163..164
                  0: IDENT@163..164 "u" [] []
              3: R_BRACK@164..166 "]" [] [Whitespace(" ")]
            1: EQ@166..168 "=" [] [Whitespace(" ")]
            2: JS_IDENTIFIER_EXPRESSION@168..169
              0: JS_REFERENCE_IDENTIFIER@168..169
                0: IDENT@168..169 "v" [] []
          2: R_PAREN@169..170 ")" [] []
      1: SEMICOLON@170..171 ";" [] []
    8: JS_VARIABLE_STATEMENT@171..185
      0: JS_VARIABLE_DECLARATION@171..184
        0: (empty)
        1: USING_KW@171..178 "using" [Newline("\n")] [Whitespace(" ")]
        2: JS_VARIABLE_DECLARATOR_LIST@178..184
          0: JS_VARIABLE_DECLARATOR@178..184
            0: JS_IDENTIFIER_BINDING@178..180
              0: IDENT@178..180 "w" [] [Whitespace(" ")]
            1: (empty)
            2: JS_INITIALIZER_CLAUSE@180..184
              0: EQ@180..182 "=" [] [Whitespace(" ")]
              1: JS_OBJECT_EXPRESSION@182..184
                0: L_CURLY@182..183 "{" [] []
                1: JS_OBJECT_MEMBER_LIST@183..183
                2: R_CURLY@183..184 "}" [] []
      1: SEMICOLON@184..185 ";" [] []
    9: JS_VARIABLE_STATEMENT@185..201
      0: JS_VARIABLE_DECLARATION@185..200
        0: (empty)
        1: USING_KW@185..192 "using" [Newline("\n")] [Whitespace(" ")]
        2: JS_VARIABLE_DECLARATOR_LIST@192..200
          0: JS_VARIABLE_DECLARATOR@192..200
            0: JS_IDENTIFIER_BINDING@192..194
              0: IDENT@192..194 "x" [] [Whitespace(" ")]
            1: (empty)
            2: JS_INITIALIZER_CLAUSE@194..200
              0: EQ@194..196 "=" [] [Whitespace(" ")]
              1: JS_NULL_LITERAL_EXPRESSION@196..200
                0: NULL_KW@196..200 "null" [] []
      1: SEMICOLON@200..201 ";" [] []
    10: JS_VARIABLE_STATEMENT@201..222
      0: JS_VARIABLE_DECLARATION@201..221
        0: (empty)
        1: USING_KW@201..208 "using" [Newline("\n")] [Whitespace(" ")]
        2: JS_VARIABLE_DECLARATOR_LIST@208..221
          0: JS_VARIABLE_DECLARATOR@208..221
            0: JS_IDENTIFIER_BINDING@208..210
              0: IDENT@208..210 "y" [] [Whitespace(" ")]
            1: (empty)
            2: JS_INITIALIZER_CLAUSE@210..221
              0: EQ@210..212 "=" [] [Whitespace(" ")]
              1: JS_IDENTIFIER_EXPRESSION@212..221
                0: JS_REFERENCE_IDENTIFIER@212..221
                  0: IDENT@212..221 "undefined" [] []
      1: SEMICOLON@221..222 ";" [] []
    11: JS_VARIABLE_STATEMENT@222..244
      0: JS_VARIABLE_DECLARATION@222..243
        0: (empty)
        1: USING_KW@222..229 "using" [Newline("\n")] [Whitespace(" ")]
        2: JS_VARIABLE_DECLARATOR_LIST@229..243
          0: JS_VARIABLE_DECLARATOR@229..243
            0: JS_IDENTIFIER_BINDING@229..231
              0: IDENT@229..231 "z" [] [Whitespace(" ")]
            1: (empty)
            2: JS_INITIALIZER_CLAUSE@231..243
              0: EQ@231..233 "=" [] [Whitespace(" ")]
              1: JS_PARENTHESIZED_EXPRESSION@233..243
                0: L_PAREN@233..234 "(" [] []
                1: JS_SEQUENCE_EXPRESSION@234..242
                  0: JS_IDENTIFIER_EXPRESSION@234..237
                    0: JS_REFERENCE_IDENTIFIER@234..237
                      0: IDENT@234..237 "foo" [] []
                  1: COMMA@237..239 "," [] [Whitespace(" ")]
                  2: JS_IDENTIFIER_EXPRESSION@239..242
                    0: JS_REFERENCE_IDENTIFIER@239..242
                      0: IDENT@239..242 "bar" [] []
                2: R_PAREN@242..243 ")" [] []
      1: SEMICOLON@243..244 ";" [] []
  3: EOF@244..245 "" [Newline("\n")] []
