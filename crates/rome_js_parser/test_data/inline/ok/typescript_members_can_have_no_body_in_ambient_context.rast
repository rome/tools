JsModule {
    interpreter_token: missing (optional),
    directives: JsDirectiveList [],
    items: JsModuleItemList [
        TsDeclareStatement {
            declare_token: DECLARE_KW@0..8 "declare" [] [Whitespace(" ")],
            declaration: JsClassDeclaration {
                decorators: JsDecoratorList [],
                abstract_token: missing (optional),
                class_token: CLASS_KW@8..14 "class" [] [Whitespace(" ")],
                id: JsIdentifierBinding {
                    name_token: IDENT@14..19 "Test" [] [Whitespace(" ")],
                },
                type_parameters: missing (optional),
                extends_clause: missing (optional),
                implements_clause: missing (optional),
                l_curly_token: L_CURLY@19..20 "{" [] [],
                members: JsClassMemberList [
                    TsConstructorSignatureClassMember {
                        modifiers: JsConstructorModifierList [],
                        name: JsLiteralMemberName {
                            value: IDENT@20..36 "constructor" [Newline("\n"), Whitespace("    ")] [],
                        },
                        parameters: JsConstructorParameters {
                            l_paren_token: L_PAREN@36..37 "(" [] [],
                            parameters: JsConstructorParameterList [],
                            r_paren_token: R_PAREN@37..38 ")" [] [],
                        },
                        semicolon_token: SEMICOLON@38..39 ";" [] [],
                    },
                    TsMethodSignatureClassMember {
                        modifiers: TsMethodSignatureModifierList [],
                        async_token: missing (optional),
                        name: JsLiteralMemberName {
                            value: IDENT@39..48 "name" [Newline("\n"), Whitespace("    ")] [],
                        },
                        question_mark_token: missing (optional),
                        type_parameters: missing (optional),
                        parameters: JsParameters {
                            l_paren_token: L_PAREN@48..49 "(" [] [],
                            items: JsParameterList [],
                            r_paren_token: R_PAREN@49..50 ")" [] [],
                        },
                        return_type_annotation: missing (optional),
                        semicolon_token: SEMICOLON@50..51 ";" [] [],
                    },
                    TsGetterSignatureClassMember {
                        modifiers: TsMethodSignatureModifierList [],
                        get_token: GET_KW@51..60 "get" [Newline("\n"), Whitespace("    ")] [Whitespace(" ")],
                        name: JsLiteralMemberName {
                            value: IDENT@60..64 "test" [] [],
                        },
                        l_paren_token: L_PAREN@64..65 "(" [] [],
                        r_paren_token: R_PAREN@65..66 ")" [] [],
                        return_type: TsTypeAnnotation {
                            colon_token: COLON@66..68 ":" [] [Whitespace(" ")],
                            ty: TsStringType {
                                string_token: STRING_KW@68..74 "string" [] [],
                            },
                        },
                        semicolon_token: SEMICOLON@74..75 ";" [] [],
                    },
                    TsSetterSignatureClassMember {
                        modifiers: TsMethodSignatureModifierList [],
                        set_token: SET_KW@75..84 "set" [Newline("\n"), Whitespace("    ")] [Whitespace(" ")],
                        name: JsLiteralMemberName {
                            value: IDENT@84..88 "test" [] [],
                        },
                        l_paren_token: L_PAREN@88..89 "(" [] [],
                        parameter: JsFormalParameter {
                            decorators: JsDecoratorList [],
                            binding: JsIdentifierBinding {
                                name_token: IDENT@89..90 "v" [] [],
                            },
                            question_mark_token: missing (optional),
                            type_annotation: missing (optional),
                            initializer: missing (optional),
                        },
                        r_paren_token: R_PAREN@90..91 ")" [] [],
                        semicolon_token: SEMICOLON@91..92 ";" [] [],
                    },
                ],
                r_curly_token: R_CURLY@92..94 "}" [Newline("\n")] [],
            },
        },
        TsDeclareStatement {
            declare_token: DECLARE_KW@94..103 "declare" [Newline("\n")] [Whitespace(" ")],
            declaration: TsModuleDeclaration {
                module_or_namespace: NAMESPACE_KW@103..113 "namespace" [] [Whitespace(" ")],
                name: TsIdentifierBinding {
                    name_token: IDENT@113..115 "n" [] [Whitespace(" ")],
                },
                body: TsModuleBlock {
                    l_curly_token: L_CURLY@115..116 "{" [] [],
                    items: JsModuleItemList [
                        JsClassDeclaration {
                            decorators: JsDecoratorList [],
                            abstract_token: missing (optional),
                            class_token: CLASS_KW@116..128 "class" [Newline("\n"), Whitespace("     ")] [Whitespace(" ")],
                            id: JsIdentifierBinding {
                                name_token: IDENT@128..133 "Test" [] [Whitespace(" ")],
                            },
                            type_parameters: missing (optional),
                            extends_clause: missing (optional),
                            implements_clause: missing (optional),
                            l_curly_token: L_CURLY@133..134 "{" [] [],
                            members: JsClassMemberList [
                                TsConstructorSignatureClassMember {
                                    modifiers: JsConstructorModifierList [],
                                    name: JsLiteralMemberName {
                                        value: IDENT@134..155 "constructor" [Newline("\n"), Whitespace("         ")] [],
                                    },
                                    parameters: JsConstructorParameters {
                                        l_paren_token: L_PAREN@155..156 "(" [] [],
                                        parameters: JsConstructorParameterList [],
                                        r_paren_token: R_PAREN@156..157 ")" [] [],
                                    },
                                    semicolon_token: missing (optional),
                                },
                                TsMethodSignatureClassMember {
                                    modifiers: TsMethodSignatureModifierList [],
                                    async_token: missing (optional),
                                    name: JsLiteralMemberName {
                                        value: IDENT@157..171 "name" [Newline("\n"), Whitespace("         ")] [],
                                    },
                                    question_mark_token: missing (optional),
                                    type_parameters: missing (optional),
                                    parameters: JsParameters {
                                        l_paren_token: L_PAREN@171..172 "(" [] [],
                                        items: JsParameterList [],
                                        r_paren_token: R_PAREN@172..173 ")" [] [],
                                    },
                                    return_type_annotation: missing (optional),
                                    semicolon_token: missing (optional),
                                },
                                TsGetterSignatureClassMember {
                                    modifiers: TsMethodSignatureModifierList [],
                                    get_token: GET_KW@173..187 "get" [Newline("\n"), Whitespace("         ")] [Whitespace(" ")],
                                    name: JsLiteralMemberName {
                                        value: IDENT@187..191 "test" [] [],
                                    },
                                    l_paren_token: L_PAREN@191..192 "(" [] [],
                                    r_paren_token: R_PAREN@192..193 ")" [] [],
                                    return_type: TsTypeAnnotation {
                                        colon_token: COLON@193..195 ":" [] [Whitespace(" ")],
                                        ty: TsStringType {
                                            string_token: STRING_KW@195..201 "string" [] [],
                                        },
                                    },
                                    semicolon_token: missing (optional),
                                },
                                TsSetterSignatureClassMember {
                                    modifiers: TsMethodSignatureModifierList [],
                                    set_token: SET_KW@201..215 "set" [Newline("\n"), Whitespace("         ")] [Whitespace(" ")],
                                    name: JsLiteralMemberName {
                                        value: IDENT@215..219 "test" [] [],
                                    },
                                    l_paren_token: L_PAREN@219..220 "(" [] [],
                                    parameter: JsFormalParameter {
                                        decorators: JsDecoratorList [],
                                        binding: JsIdentifierBinding {
                                            name_token: IDENT@220..221 "v" [] [],
                                        },
                                        question_mark_token: missing (optional),
                                        type_annotation: missing (optional),
                                        initializer: missing (optional),
                                    },
                                    r_paren_token: R_PAREN@221..222 ")" [] [],
                                    semicolon_token: missing (optional),
                                },
                            ],
                            r_curly_token: R_CURLY@222..229 "}" [Newline("\n"), Whitespace("     ")] [],
                        },
                    ],
                    r_curly_token: R_CURLY@229..231 "}" [Newline("\n")] [],
                },
            },
        },
    ],
    eof_token: EOF@231..232 "" [Newline("\n")] [],
}

0: JS_MODULE@0..232
  0: (empty)
  1: JS_DIRECTIVE_LIST@0..0
  2: JS_MODULE_ITEM_LIST@0..231
    0: TS_DECLARE_STATEMENT@0..94
      0: DECLARE_KW@0..8 "declare" [] [Whitespace(" ")]
      1: JS_CLASS_DECLARATION@8..94
        0: JS_DECORATOR_LIST@8..8
        1: (empty)
        2: CLASS_KW@8..14 "class" [] [Whitespace(" ")]
        3: JS_IDENTIFIER_BINDING@14..19
          0: IDENT@14..19 "Test" [] [Whitespace(" ")]
        4: (empty)
        5: (empty)
        6: (empty)
        7: L_CURLY@19..20 "{" [] []
        8: JS_CLASS_MEMBER_LIST@20..92
          0: TS_CONSTRUCTOR_SIGNATURE_CLASS_MEMBER@20..39
            0: JS_CONSTRUCTOR_MODIFIER_LIST@20..20
            1: JS_LITERAL_MEMBER_NAME@20..36
              0: IDENT@20..36 "constructor" [Newline("\n"), Whitespace("    ")] []
            2: JS_CONSTRUCTOR_PARAMETERS@36..38
              0: L_PAREN@36..37 "(" [] []
              1: JS_CONSTRUCTOR_PARAMETER_LIST@37..37
              2: R_PAREN@37..38 ")" [] []
            3: SEMICOLON@38..39 ";" [] []
          1: TS_METHOD_SIGNATURE_CLASS_MEMBER@39..51
            0: TS_METHOD_SIGNATURE_MODIFIER_LIST@39..39
            1: (empty)
            2: JS_LITERAL_MEMBER_NAME@39..48
              0: IDENT@39..48 "name" [Newline("\n"), Whitespace("    ")] []
            3: (empty)
            4: (empty)
            5: JS_PARAMETERS@48..50
              0: L_PAREN@48..49 "(" [] []
              1: JS_PARAMETER_LIST@49..49
              2: R_PAREN@49..50 ")" [] []
            6: (empty)
            7: SEMICOLON@50..51 ";" [] []
          2: TS_GETTER_SIGNATURE_CLASS_MEMBER@51..75
            0: TS_METHOD_SIGNATURE_MODIFIER_LIST@51..51
            1: GET_KW@51..60 "get" [Newline("\n"), Whitespace("    ")] [Whitespace(" ")]
            2: JS_LITERAL_MEMBER_NAME@60..64
              0: IDENT@60..64 "test" [] []
            3: L_PAREN@64..65 "(" [] []
            4: R_PAREN@65..66 ")" [] []
            5: TS_TYPE_ANNOTATION@66..74
              0: COLON@66..68 ":" [] [Whitespace(" ")]
              1: TS_STRING_TYPE@68..74
                0: STRING_KW@68..74 "string" [] []
            6: SEMICOLON@74..75 ";" [] []
          3: TS_SETTER_SIGNATURE_CLASS_MEMBER@75..92
            0: TS_METHOD_SIGNATURE_MODIFIER_LIST@75..75
            1: SET_KW@75..84 "set" [Newline("\n"), Whitespace("    ")] [Whitespace(" ")]
            2: JS_LITERAL_MEMBER_NAME@84..88
              0: IDENT@84..88 "test" [] []
            3: L_PAREN@88..89 "(" [] []
            4: JS_FORMAL_PARAMETER@89..90
              0: JS_DECORATOR_LIST@89..89
              1: JS_IDENTIFIER_BINDING@89..90
                0: IDENT@89..90 "v" [] []
              2: (empty)
              3: (empty)
              4: (empty)
            5: R_PAREN@90..91 ")" [] []
            6: SEMICOLON@91..92 ";" [] []
        9: R_CURLY@92..94 "}" [Newline("\n")] []
    1: TS_DECLARE_STATEMENT@94..231
      0: DECLARE_KW@94..103 "declare" [Newline("\n")] [Whitespace(" ")]
      1: TS_MODULE_DECLARATION@103..231
        0: NAMESPACE_KW@103..113 "namespace" [] [Whitespace(" ")]
        1: TS_IDENTIFIER_BINDING@113..115
          0: IDENT@113..115 "n" [] [Whitespace(" ")]
        2: TS_MODULE_BLOCK@115..231
          0: L_CURLY@115..116 "{" [] []
          1: JS_MODULE_ITEM_LIST@116..229
            0: JS_CLASS_DECLARATION@116..229
              0: JS_DECORATOR_LIST@116..116
              1: (empty)
              2: CLASS_KW@116..128 "class" [Newline("\n"), Whitespace("     ")] [Whitespace(" ")]
              3: JS_IDENTIFIER_BINDING@128..133
                0: IDENT@128..133 "Test" [] [Whitespace(" ")]
              4: (empty)
              5: (empty)
              6: (empty)
              7: L_CURLY@133..134 "{" [] []
              8: JS_CLASS_MEMBER_LIST@134..222
                0: TS_CONSTRUCTOR_SIGNATURE_CLASS_MEMBER@134..157
                  0: JS_CONSTRUCTOR_MODIFIER_LIST@134..134
                  1: JS_LITERAL_MEMBER_NAME@134..155
                    0: IDENT@134..155 "constructor" [Newline("\n"), Whitespace("         ")] []
                  2: JS_CONSTRUCTOR_PARAMETERS@155..157
                    0: L_PAREN@155..156 "(" [] []
                    1: JS_CONSTRUCTOR_PARAMETER_LIST@156..156
                    2: R_PAREN@156..157 ")" [] []
                  3: (empty)
                1: TS_METHOD_SIGNATURE_CLASS_MEMBER@157..173
                  0: TS_METHOD_SIGNATURE_MODIFIER_LIST@157..157
                  1: (empty)
                  2: JS_LITERAL_MEMBER_NAME@157..171
                    0: IDENT@157..171 "name" [Newline("\n"), Whitespace("         ")] []
                  3: (empty)
                  4: (empty)
                  5: JS_PARAMETERS@171..173
                    0: L_PAREN@171..172 "(" [] []
                    1: JS_PARAMETER_LIST@172..172
                    2: R_PAREN@172..173 ")" [] []
                  6: (empty)
                  7: (empty)
                2: TS_GETTER_SIGNATURE_CLASS_MEMBER@173..201
                  0: TS_METHOD_SIGNATURE_MODIFIER_LIST@173..173
                  1: GET_KW@173..187 "get" [Newline("\n"), Whitespace("         ")] [Whitespace(" ")]
                  2: JS_LITERAL_MEMBER_NAME@187..191
                    0: IDENT@187..191 "test" [] []
                  3: L_PAREN@191..192 "(" [] []
                  4: R_PAREN@192..193 ")" [] []
                  5: TS_TYPE_ANNOTATION@193..201
                    0: COLON@193..195 ":" [] [Whitespace(" ")]
                    1: TS_STRING_TYPE@195..201
                      0: STRING_KW@195..201 "string" [] []
                  6: (empty)
                3: TS_SETTER_SIGNATURE_CLASS_MEMBER@201..222
                  0: TS_METHOD_SIGNATURE_MODIFIER_LIST@201..201
                  1: SET_KW@201..215 "set" [Newline("\n"), Whitespace("         ")] [Whitespace(" ")]
                  2: JS_LITERAL_MEMBER_NAME@215..219
                    0: IDENT@215..219 "test" [] []
                  3: L_PAREN@219..220 "(" [] []
                  4: JS_FORMAL_PARAMETER@220..221
                    0: JS_DECORATOR_LIST@220..220
                    1: JS_IDENTIFIER_BINDING@220..221
                      0: IDENT@220..221 "v" [] []
                    2: (empty)
                    3: (empty)
                    4: (empty)
                  5: R_PAREN@221..222 ")" [] []
                  6: (empty)
              9: R_CURLY@222..229 "}" [Newline("\n"), Whitespace("     ")] []
          2: R_CURLY@229..231 "}" [Newline("\n")] []
  3: EOF@231..232 "" [Newline("\n")] []
