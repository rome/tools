JsModule {
    interpreter_token: missing (optional),
    directives: JsDirectiveList [],
    items: JsModuleItemList [
        JsVariableStatement {
            declaration: JsVariableDeclaration {
                await_token: missing (optional),
                kind: LET_KW@0..4 "let" [] [Whitespace(" ")],
                declarators: JsVariableDeclaratorList [
                    JsVariableDeclarator {
                        id: JsIdentifierBinding {
                            name_token: IDENT@4..6 "x" [] [Whitespace(" ")],
                        },
                        variable_annotation: missing (optional),
                        initializer: JsInitializerClause {
                            eq_token: EQ@6..8 "=" [] [Whitespace(" ")],
                            expression: TsTypeAssertionExpression {
                                l_angle_token: L_ANGLE@8..9 "<" [] [],
                                ty: TsReferenceType {
                                    name: JsReferenceIdentifier {
                                        value_token: IDENT@9..14 "const" [] [],
                                    },
                                    type_arguments: missing (optional),
                                },
                                r_angle_token: R_ANGLE@14..15 ">" [] [],
                                expression: JsStringLiteralExpression {
                                    value_token: JS_STRING_LITERAL@15..22 "\"hello\"" [] [],
                                },
                            },
                        },
                    },
                ],
            },
            semicolon_token: SEMICOLON@22..23 ";" [] [],
        },
        JsVariableStatement {
            declaration: JsVariableDeclaration {
                await_token: missing (optional),
                kind: LET_KW@23..28 "let" [Newline("\n")] [Whitespace(" ")],
                declarators: JsVariableDeclaratorList [
                    JsVariableDeclarator {
                        id: JsIdentifierBinding {
                            name_token: IDENT@28..30 "y" [] [Whitespace(" ")],
                        },
                        variable_annotation: missing (optional),
                        initializer: JsInitializerClause {
                            eq_token: EQ@30..32 "=" [] [Whitespace(" ")],
                            expression: TsTypeAssertionExpression {
                                l_angle_token: L_ANGLE@32..33 "<" [] [],
                                ty: TsStringType {
                                    string_token: STRING_KW@33..39 "string" [] [],
                                },
                                r_angle_token: R_ANGLE@39..41 ">" [] [Whitespace(" ")],
                                expression: JsIdentifierExpression {
                                    name: JsReferenceIdentifier {
                                        value_token: IDENT@41..42 "x" [] [],
                                    },
                                },
                            },
                        },
                    },
                ],
            },
            semicolon_token: SEMICOLON@42..43 ";" [] [],
        },
        JsVariableStatement {
            declaration: JsVariableDeclaration {
                await_token: missing (optional),
                kind: VAR_KW@43..48 "var" [Newline("\n")] [Whitespace(" ")],
                declarators: JsVariableDeclaratorList [
                    JsVariableDeclarator {
                        id: JsIdentifierBinding {
                            name_token: IDENT@48..50 "d" [] [Whitespace(" ")],
                        },
                        variable_annotation: missing (optional),
                        initializer: JsInitializerClause {
                            eq_token: EQ@50..52 "=" [] [Whitespace(" ")],
                            expression: TsTypeAssertionExpression {
                                l_angle_token: L_ANGLE@52..53 "<" [] [],
                                ty: TsReferenceType {
                                    name: JsReferenceIdentifier {
                                        value_token: IDENT@53..58 "Error" [] [],
                                    },
                                    type_arguments: missing (optional),
                                },
                                r_angle_token: R_ANGLE@58..59 ">" [] [],
                                expression: JsParenthesizedExpression {
                                    l_paren_token: L_PAREN@59..60 "(" [] [],
                                    expression: JsObjectExpression {
                                        l_curly_token: L_CURLY@60..62 "{" [] [Whitespace(" ")],
                                        members: JsObjectMemberList [
                                            JsPropertyObjectMember {
                                                name: JsLiteralMemberName {
                                                    value: IDENT@62..66 "name" [] [],
                                                },
                                                colon_token: COLON@66..68 ":" [] [Whitespace(" ")],
                                                value: JsStringLiteralExpression {
                                                    value_token: JS_STRING_LITERAL@68..73 "\"foo\"" [] [],
                                                },
                                            },
                                            COMMA@73..75 "," [] [Whitespace(" ")],
                                            JsPropertyObjectMember {
                                                name: JsLiteralMemberName {
                                                    value: IDENT@75..82 "message" [] [],
                                                },
                                                colon_token: COLON@82..84 ":" [] [Whitespace(" ")],
                                                value: JsStringLiteralExpression {
                                                    value_token: JS_STRING_LITERAL@84..90 "\"bar\"" [] [Whitespace(" ")],
                                                },
                                            },
                                        ],
                                        r_curly_token: R_CURLY@90..91 "}" [] [],
                                    },
                                    r_paren_token: R_PAREN@91..92 ")" [] [],
                                },
                            },
                        },
                    },
                ],
            },
            semicolon_token: SEMICOLON@92..93 ";" [] [],
        },
    ],
    eof_token: EOF@93..94 "" [Newline("\n")] [],
}

0: JS_MODULE@0..94
  0: (empty)
  1: JS_DIRECTIVE_LIST@0..0
  2: JS_MODULE_ITEM_LIST@0..93
    0: JS_VARIABLE_STATEMENT@0..23
      0: JS_VARIABLE_DECLARATION@0..22
        0: (empty)
        1: LET_KW@0..4 "let" [] [Whitespace(" ")]
        2: JS_VARIABLE_DECLARATOR_LIST@4..22
          0: JS_VARIABLE_DECLARATOR@4..22
            0: JS_IDENTIFIER_BINDING@4..6
              0: IDENT@4..6 "x" [] [Whitespace(" ")]
            1: (empty)
            2: JS_INITIALIZER_CLAUSE@6..22
              0: EQ@6..8 "=" [] [Whitespace(" ")]
              1: TS_TYPE_ASSERTION_EXPRESSION@8..22
                0: L_ANGLE@8..9 "<" [] []
                1: TS_REFERENCE_TYPE@9..14
                  0: JS_REFERENCE_IDENTIFIER@9..14
                    0: IDENT@9..14 "const" [] []
                  1: (empty)
                2: R_ANGLE@14..15 ">" [] []
                3: JS_STRING_LITERAL_EXPRESSION@15..22
                  0: JS_STRING_LITERAL@15..22 "\"hello\"" [] []
      1: SEMICOLON@22..23 ";" [] []
    1: JS_VARIABLE_STATEMENT@23..43
      0: JS_VARIABLE_DECLARATION@23..42
        0: (empty)
        1: LET_KW@23..28 "let" [Newline("\n")] [Whitespace(" ")]
        2: JS_VARIABLE_DECLARATOR_LIST@28..42
          0: JS_VARIABLE_DECLARATOR@28..42
            0: JS_IDENTIFIER_BINDING@28..30
              0: IDENT@28..30 "y" [] [Whitespace(" ")]
            1: (empty)
            2: JS_INITIALIZER_CLAUSE@30..42
              0: EQ@30..32 "=" [] [Whitespace(" ")]
              1: TS_TYPE_ASSERTION_EXPRESSION@32..42
                0: L_ANGLE@32..33 "<" [] []
                1: TS_STRING_TYPE@33..39
                  0: STRING_KW@33..39 "string" [] []
                2: R_ANGLE@39..41 ">" [] [Whitespace(" ")]
                3: JS_IDENTIFIER_EXPRESSION@41..42
                  0: JS_REFERENCE_IDENTIFIER@41..42
                    0: IDENT@41..42 "x" [] []
      1: SEMICOLON@42..43 ";" [] []
    2: JS_VARIABLE_STATEMENT@43..93
      0: JS_VARIABLE_DECLARATION@43..92
        0: (empty)
        1: VAR_KW@43..48 "var" [Newline("\n")] [Whitespace(" ")]
        2: JS_VARIABLE_DECLARATOR_LIST@48..92
          0: JS_VARIABLE_DECLARATOR@48..92
            0: JS_IDENTIFIER_BINDING@48..50
              0: IDENT@48..50 "d" [] [Whitespace(" ")]
            1: (empty)
            2: JS_INITIALIZER_CLAUSE@50..92
              0: EQ@50..52 "=" [] [Whitespace(" ")]
              1: TS_TYPE_ASSERTION_EXPRESSION@52..92
                0: L_ANGLE@52..53 "<" [] []
                1: TS_REFERENCE_TYPE@53..58
                  0: JS_REFERENCE_IDENTIFIER@53..58
                    0: IDENT@53..58 "Error" [] []
                  1: (empty)
                2: R_ANGLE@58..59 ">" [] []
                3: JS_PARENTHESIZED_EXPRESSION@59..92
                  0: L_PAREN@59..60 "(" [] []
                  1: JS_OBJECT_EXPRESSION@60..91
                    0: L_CURLY@60..62 "{" [] [Whitespace(" ")]
                    1: JS_OBJECT_MEMBER_LIST@62..90
                      0: JS_PROPERTY_OBJECT_MEMBER@62..73
                        0: JS_LITERAL_MEMBER_NAME@62..66
                          0: IDENT@62..66 "name" [] []
                        1: COLON@66..68 ":" [] [Whitespace(" ")]
                        2: JS_STRING_LITERAL_EXPRESSION@68..73
                          0: JS_STRING_LITERAL@68..73 "\"foo\"" [] []
                      1: COMMA@73..75 "," [] [Whitespace(" ")]
                      2: JS_PROPERTY_OBJECT_MEMBER@75..90
                        0: JS_LITERAL_MEMBER_NAME@75..82
                          0: IDENT@75..82 "message" [] []
                        1: COLON@82..84 ":" [] [Whitespace(" ")]
                        2: JS_STRING_LITERAL_EXPRESSION@84..90
                          0: JS_STRING_LITERAL@84..90 "\"bar\"" [] [Whitespace(" ")]
                    2: R_CURLY@90..91 "}" [] []
                  2: R_PAREN@91..92 ")" [] []
      1: SEMICOLON@92..93 ";" [] []
  3: EOF@93..94 "" [Newline("\n")] []
