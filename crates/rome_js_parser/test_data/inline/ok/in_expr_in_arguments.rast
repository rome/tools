JsModule {
    interpreter_token: missing (optional),
    directives: JsDirectiveList [],
    items: JsModuleItemList [
        JsFunctionDeclaration {
            async_token: missing (optional),
            function_token: FUNCTION_KW@0..9 "function" [] [Whitespace(" ")],
            star_token: missing (optional),
            id: JsIdentifierBinding {
                name_token: IDENT@9..12 "foo" [] [],
            },
            type_parameters: missing (optional),
            parameters: JsParameters {
                l_paren_token: L_PAREN@12..13 "(" [] [],
                items: JsParameterList [],
                r_paren_token: R_PAREN@13..15 ")" [] [Whitespace(" ")],
            },
            return_type_annotation: missing (optional),
            body: JsFunctionBody {
                l_curly_token: L_CURLY@15..16 "{" [] [],
                directives: JsDirectiveList [],
                statements: JsStatementList [],
                r_curly_token: R_CURLY@16..17 "}" [] [],
            },
        },
        JsForStatement {
            for_token: FOR_KW@17..22 "for" [Newline("\n")] [Whitespace(" ")],
            l_paren_token: L_PAREN@22..23 "(" [] [],
            initializer: JsCallExpression {
                callee: JsIdentifierExpression {
                    name: JsReferenceIdentifier {
                        value_token: IDENT@23..26 "foo" [] [],
                    },
                },
                optional_chain_token: missing (optional),
                type_arguments: missing (optional),
                arguments: JsCallArguments {
                    l_paren_token: L_PAREN@26..27 "(" [] [],
                    args: JsCallArgumentList [
                        JsInExpression {
                            property: JsStringLiteralExpression {
                                value_token: JS_STRING_LITERAL@27..34 "\"call\"" [] [Whitespace(" ")],
                            },
                            in_token: IN_KW@34..37 "in" [] [Whitespace(" ")],
                            object: JsIdentifierExpression {
                                name: JsReferenceIdentifier {
                                    value_token: IDENT@37..40 "foo" [] [],
                                },
                            },
                        },
                    ],
                    r_paren_token: R_PAREN@40..41 ")" [] [],
                },
            },
            first_semi_token: SEMICOLON@41..42 ";" [] [],
            test: missing (optional),
            second_semi_token: SEMICOLON@42..43 ";" [] [],
            update: missing (optional),
            r_paren_token: R_PAREN@43..45 ")" [] [Whitespace(" ")],
            body: JsBlockStatement {
                l_curly_token: L_CURLY@45..46 "{" [] [],
                statements: JsStatementList [],
                r_curly_token: R_CURLY@46..47 "}" [] [],
            },
        },
    ],
    eof_token: EOF@47..48 "" [Newline("\n")] [],
}

0: JS_MODULE@0..48
  0: (empty)
  1: JS_DIRECTIVE_LIST@0..0
  2: JS_MODULE_ITEM_LIST@0..47
    0: JS_FUNCTION_DECLARATION@0..17
      0: (empty)
      1: FUNCTION_KW@0..9 "function" [] [Whitespace(" ")]
      2: (empty)
      3: JS_IDENTIFIER_BINDING@9..12
        0: IDENT@9..12 "foo" [] []
      4: (empty)
      5: JS_PARAMETERS@12..15
        0: L_PAREN@12..13 "(" [] []
        1: JS_PARAMETER_LIST@13..13
        2: R_PAREN@13..15 ")" [] [Whitespace(" ")]
      6: (empty)
      7: JS_FUNCTION_BODY@15..17
        0: L_CURLY@15..16 "{" [] []
        1: JS_DIRECTIVE_LIST@16..16
        2: JS_STATEMENT_LIST@16..16
        3: R_CURLY@16..17 "}" [] []
    1: JS_FOR_STATEMENT@17..47
      0: FOR_KW@17..22 "for" [Newline("\n")] [Whitespace(" ")]
      1: L_PAREN@22..23 "(" [] []
      2: JS_CALL_EXPRESSION@23..41
        0: JS_IDENTIFIER_EXPRESSION@23..26
          0: JS_REFERENCE_IDENTIFIER@23..26
            0: IDENT@23..26 "foo" [] []
        1: (empty)
        2: (empty)
        3: JS_CALL_ARGUMENTS@26..41
          0: L_PAREN@26..27 "(" [] []
          1: JS_CALL_ARGUMENT_LIST@27..40
            0: JS_IN_EXPRESSION@27..40
              0: JS_STRING_LITERAL_EXPRESSION@27..34
                0: JS_STRING_LITERAL@27..34 "\"call\"" [] [Whitespace(" ")]
              1: IN_KW@34..37 "in" [] [Whitespace(" ")]
              2: JS_IDENTIFIER_EXPRESSION@37..40
                0: JS_REFERENCE_IDENTIFIER@37..40
                  0: IDENT@37..40 "foo" [] []
          2: R_PAREN@40..41 ")" [] []
      3: SEMICOLON@41..42 ";" [] []
      4: (empty)
      5: SEMICOLON@42..43 ";" [] []
      6: (empty)
      7: R_PAREN@43..45 ")" [] [Whitespace(" ")]
      8: JS_BLOCK_STATEMENT@45..47
        0: L_CURLY@45..46 "{" [] []
        1: JS_STATEMENT_LIST@46..46
        2: R_CURLY@46..47 "}" [] []
  3: EOF@47..48 "" [Newline("\n")] []
