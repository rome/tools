JsModule {
    interpreter_token: missing (optional),
    directives: JsDirectiveList [],
    items: JsModuleItemList [
        JsExpressionStatement {
            expression: JsBinaryExpression {
                left: JsParenthesizedExpression {
                    l_paren_token: L_PAREN@0..1 "(" [] [],
                    expression: JsUnaryExpression {
                        operator_token: DELETE_KW@1..8 "delete" [] [Whitespace(" ")],
                        argument: JsStaticMemberExpression {
                            object: JsIdentifierExpression {
                                name: JsReferenceIdentifier {
                                    value_token: IDENT@8..9 "a" [] [],
                                },
                            },
                            operator_token: DOT@9..10 "." [] [],
                            member: JsName {
                                value_token: IDENT@10..11 "b" [] [],
                            },
                        },
                    },
                    r_paren_token: R_PAREN@11..13 ")" [] [Whitespace(" ")],
                },
                operator_token: STAR2@13..16 "**" [] [Whitespace(" ")],
                right: JsNumberLiteralExpression {
                    value_token: JS_NUMBER_LITERAL@16..17 "2" [] [],
                },
            },
            semicolon_token: SEMICOLON@17..18 ";" [] [],
        },
        JsExpressionStatement {
            expression: JsBinaryExpression {
                left: JsParenthesizedExpression {
                    l_paren_token: L_PAREN@18..20 "(" [Newline("\n")] [],
                    expression: JsUnaryExpression {
                        operator_token: VOID_KW@20..25 "void" [] [Whitespace(" ")],
                        argument: JsIdentifierExpression {
                            name: JsReferenceIdentifier {
                                value_token: IDENT@25..30 "ident" [] [],
                            },
                        },
                    },
                    r_paren_token: R_PAREN@30..32 ")" [] [Whitespace(" ")],
                },
                operator_token: STAR2@32..35 "**" [] [Whitespace(" ")],
                right: JsNumberLiteralExpression {
                    value_token: JS_NUMBER_LITERAL@35..36 "2" [] [],
                },
            },
            semicolon_token: SEMICOLON@36..37 ";" [] [],
        },
        JsExpressionStatement {
            expression: JsBinaryExpression {
                left: JsParenthesizedExpression {
                    l_paren_token: L_PAREN@37..39 "(" [Newline("\n")] [],
                    expression: JsUnaryExpression {
                        operator_token: TYPEOF_KW@39..46 "typeof" [] [Whitespace(" ")],
                        argument: JsIdentifierExpression {
                            name: JsReferenceIdentifier {
                                value_token: IDENT@46..51 "ident" [] [],
                            },
                        },
                    },
                    r_paren_token: R_PAREN@51..53 ")" [] [Whitespace(" ")],
                },
                operator_token: STAR2@53..56 "**" [] [Whitespace(" ")],
                right: JsNumberLiteralExpression {
                    value_token: JS_NUMBER_LITERAL@56..57 "2" [] [],
                },
            },
            semicolon_token: SEMICOLON@57..58 ";" [] [],
        },
        JsExpressionStatement {
            expression: JsBinaryExpression {
                left: JsParenthesizedExpression {
                    l_paren_token: L_PAREN@58..60 "(" [Newline("\n")] [],
                    expression: JsUnaryExpression {
                        operator_token: MINUS@60..61 "-" [] [],
                        argument: JsNumberLiteralExpression {
                            value_token: JS_NUMBER_LITERAL@61..62 "3" [] [],
                        },
                    },
                    r_paren_token: R_PAREN@62..64 ")" [] [Whitespace(" ")],
                },
                operator_token: STAR2@64..67 "**" [] [Whitespace(" ")],
                right: JsNumberLiteralExpression {
                    value_token: JS_NUMBER_LITERAL@67..68 "2" [] [],
                },
            },
            semicolon_token: SEMICOLON@68..69 ";" [] [],
        },
        JsExpressionStatement {
            expression: JsBinaryExpression {
                left: JsParenthesizedExpression {
                    l_paren_token: L_PAREN@69..71 "(" [Newline("\n")] [],
                    expression: JsUnaryExpression {
                        operator_token: PLUS@71..72 "+" [] [],
                        argument: JsNumberLiteralExpression {
                            value_token: JS_NUMBER_LITERAL@72..73 "3" [] [],
                        },
                    },
                    r_paren_token: R_PAREN@73..75 ")" [] [Whitespace(" ")],
                },
                operator_token: STAR2@75..78 "**" [] [Whitespace(" ")],
                right: JsNumberLiteralExpression {
                    value_token: JS_NUMBER_LITERAL@78..79 "2" [] [],
                },
            },
            semicolon_token: SEMICOLON@79..80 ";" [] [],
        },
        JsExpressionStatement {
            expression: JsBinaryExpression {
                left: JsParenthesizedExpression {
                    l_paren_token: L_PAREN@80..82 "(" [Newline("\n")] [],
                    expression: JsUnaryExpression {
                        operator_token: TILDE@82..83 "~" [] [],
                        argument: JsNumberLiteralExpression {
                            value_token: JS_NUMBER_LITERAL@83..84 "3" [] [],
                        },
                    },
                    r_paren_token: R_PAREN@84..86 ")" [] [Whitespace(" ")],
                },
                operator_token: STAR2@86..89 "**" [] [Whitespace(" ")],
                right: JsNumberLiteralExpression {
                    value_token: JS_NUMBER_LITERAL@89..90 "2" [] [],
                },
            },
            semicolon_token: SEMICOLON@90..91 ";" [] [],
        },
        JsExpressionStatement {
            expression: JsBinaryExpression {
                left: JsParenthesizedExpression {
                    l_paren_token: L_PAREN@91..93 "(" [Newline("\n")] [],
                    expression: JsUnaryExpression {
                        operator_token: BANG@93..94 "!" [] [],
                        argument: JsBooleanLiteralExpression {
                            value_token: TRUE_KW@94..98 "true" [] [],
                        },
                    },
                    r_paren_token: R_PAREN@98..100 ")" [] [Whitespace(" ")],
                },
                operator_token: STAR2@100..103 "**" [] [Whitespace(" ")],
                right: JsNumberLiteralExpression {
                    value_token: JS_NUMBER_LITERAL@103..104 "2" [] [],
                },
            },
            semicolon_token: SEMICOLON@104..105 ";" [] [],
        },
    ],
    eof_token: EOF@105..106 "" [Newline("\n")] [],
}

0: JS_MODULE@0..106
  0: (empty)
  1: JS_DIRECTIVE_LIST@0..0
  2: JS_MODULE_ITEM_LIST@0..105
    0: JS_EXPRESSION_STATEMENT@0..18
      0: JS_BINARY_EXPRESSION@0..17
        0: JS_PARENTHESIZED_EXPRESSION@0..13
          0: L_PAREN@0..1 "(" [] []
          1: JS_UNARY_EXPRESSION@1..11
            0: DELETE_KW@1..8 "delete" [] [Whitespace(" ")]
            1: JS_STATIC_MEMBER_EXPRESSION@8..11
              0: JS_IDENTIFIER_EXPRESSION@8..9
                0: JS_REFERENCE_IDENTIFIER@8..9
                  0: IDENT@8..9 "a" [] []
              1: DOT@9..10 "." [] []
              2: JS_NAME@10..11
                0: IDENT@10..11 "b" [] []
          2: R_PAREN@11..13 ")" [] [Whitespace(" ")]
        1: STAR2@13..16 "**" [] [Whitespace(" ")]
        2: JS_NUMBER_LITERAL_EXPRESSION@16..17
          0: JS_NUMBER_LITERAL@16..17 "2" [] []
      1: SEMICOLON@17..18 ";" [] []
    1: JS_EXPRESSION_STATEMENT@18..37
      0: JS_BINARY_EXPRESSION@18..36
        0: JS_PARENTHESIZED_EXPRESSION@18..32
          0: L_PAREN@18..20 "(" [Newline("\n")] []
          1: JS_UNARY_EXPRESSION@20..30
            0: VOID_KW@20..25 "void" [] [Whitespace(" ")]
            1: JS_IDENTIFIER_EXPRESSION@25..30
              0: JS_REFERENCE_IDENTIFIER@25..30
                0: IDENT@25..30 "ident" [] []
          2: R_PAREN@30..32 ")" [] [Whitespace(" ")]
        1: STAR2@32..35 "**" [] [Whitespace(" ")]
        2: JS_NUMBER_LITERAL_EXPRESSION@35..36
          0: JS_NUMBER_LITERAL@35..36 "2" [] []
      1: SEMICOLON@36..37 ";" [] []
    2: JS_EXPRESSION_STATEMENT@37..58
      0: JS_BINARY_EXPRESSION@37..57
        0: JS_PARENTHESIZED_EXPRESSION@37..53
          0: L_PAREN@37..39 "(" [Newline("\n")] []
          1: JS_UNARY_EXPRESSION@39..51
            0: TYPEOF_KW@39..46 "typeof" [] [Whitespace(" ")]
            1: JS_IDENTIFIER_EXPRESSION@46..51
              0: JS_REFERENCE_IDENTIFIER@46..51
                0: IDENT@46..51 "ident" [] []
          2: R_PAREN@51..53 ")" [] [Whitespace(" ")]
        1: STAR2@53..56 "**" [] [Whitespace(" ")]
        2: JS_NUMBER_LITERAL_EXPRESSION@56..57
          0: JS_NUMBER_LITERAL@56..57 "2" [] []
      1: SEMICOLON@57..58 ";" [] []
    3: JS_EXPRESSION_STATEMENT@58..69
      0: JS_BINARY_EXPRESSION@58..68
        0: JS_PARENTHESIZED_EXPRESSION@58..64
          0: L_PAREN@58..60 "(" [Newline("\n")] []
          1: JS_UNARY_EXPRESSION@60..62
            0: MINUS@60..61 "-" [] []
            1: JS_NUMBER_LITERAL_EXPRESSION@61..62
              0: JS_NUMBER_LITERAL@61..62 "3" [] []
          2: R_PAREN@62..64 ")" [] [Whitespace(" ")]
        1: STAR2@64..67 "**" [] [Whitespace(" ")]
        2: JS_NUMBER_LITERAL_EXPRESSION@67..68
          0: JS_NUMBER_LITERAL@67..68 "2" [] []
      1: SEMICOLON@68..69 ";" [] []
    4: JS_EXPRESSION_STATEMENT@69..80
      0: JS_BINARY_EXPRESSION@69..79
        0: JS_PARENTHESIZED_EXPRESSION@69..75
          0: L_PAREN@69..71 "(" [Newline("\n")] []
          1: JS_UNARY_EXPRESSION@71..73
            0: PLUS@71..72 "+" [] []
            1: JS_NUMBER_LITERAL_EXPRESSION@72..73
              0: JS_NUMBER_LITERAL@72..73 "3" [] []
          2: R_PAREN@73..75 ")" [] [Whitespace(" ")]
        1: STAR2@75..78 "**" [] [Whitespace(" ")]
        2: JS_NUMBER_LITERAL_EXPRESSION@78..79
          0: JS_NUMBER_LITERAL@78..79 "2" [] []
      1: SEMICOLON@79..80 ";" [] []
    5: JS_EXPRESSION_STATEMENT@80..91
      0: JS_BINARY_EXPRESSION@80..90
        0: JS_PARENTHESIZED_EXPRESSION@80..86
          0: L_PAREN@80..82 "(" [Newline("\n")] []
          1: JS_UNARY_EXPRESSION@82..84
            0: TILDE@82..83 "~" [] []
            1: JS_NUMBER_LITERAL_EXPRESSION@83..84
              0: JS_NUMBER_LITERAL@83..84 "3" [] []
          2: R_PAREN@84..86 ")" [] [Whitespace(" ")]
        1: STAR2@86..89 "**" [] [Whitespace(" ")]
        2: JS_NUMBER_LITERAL_EXPRESSION@89..90
          0: JS_NUMBER_LITERAL@89..90 "2" [] []
      1: SEMICOLON@90..91 ";" [] []
    6: JS_EXPRESSION_STATEMENT@91..105
      0: JS_BINARY_EXPRESSION@91..104
        0: JS_PARENTHESIZED_EXPRESSION@91..100
          0: L_PAREN@91..93 "(" [Newline("\n")] []
          1: JS_UNARY_EXPRESSION@93..98
            0: BANG@93..94 "!" [] []
            1: JS_BOOLEAN_LITERAL_EXPRESSION@94..98
              0: TRUE_KW@94..98 "true" [] []
          2: R_PAREN@98..100 ")" [] [Whitespace(" ")]
        1: STAR2@100..103 "**" [] [Whitespace(" ")]
        2: JS_NUMBER_LITERAL_EXPRESSION@103..104
          0: JS_NUMBER_LITERAL@103..104 "2" [] []
      1: SEMICOLON@104..105 ";" [] []
  3: EOF@105..106 "" [Newline("\n")] []
