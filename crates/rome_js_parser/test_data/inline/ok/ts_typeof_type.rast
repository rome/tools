JsModule {
    interpreter_token: missing (optional),
    directives: JsDirectiveList [],
    items: JsModuleItemList [
        JsVariableStatement {
            declaration: JsVariableDeclaration {
                kind: LET_KW@0..4 "let" [] [Whitespace(" ")],
                declarators: JsVariableDeclaratorList [
                    JsVariableDeclarator {
                        id: JsIdentifierBinding {
                            name_token: IDENT@4..6 "a" [] [Whitespace(" ")],
                        },
                        variable_annotation: missing (optional),
                        initializer: JsInitializerClause {
                            eq_token: EQ@6..8 "=" [] [Whitespace(" ")],
                            expression: JsStringLiteralExpression {
                                value_token: JS_STRING_LITERAL@8..14 "\"test\"" [] [],
                            },
                        },
                    },
                ],
            },
            semicolon_token: SEMICOLON@14..15 ";" [] [],
        },
        TsTypeAliasDeclaration {
            type_token: TYPE_KW@15..21 "type" [Newline("\n")] [Whitespace(" ")],
            binding_identifier: TsIdentifierBinding {
                name_token: IDENT@21..23 "B" [] [Whitespace(" ")],
            },
            type_parameters: missing (optional),
            eq_token: EQ@23..25 "=" [] [Whitespace(" ")],
            ty: TsTypeofType {
                typeof_token: TYPEOF_KW@25..32 "typeof" [] [Whitespace(" ")],
                expression_name: JsReferenceIdentifier {
                    value_token: IDENT@32..33 "a" [] [],
                },
            },
            semicolon_token: SEMICOLON@33..34 ";" [] [],
        },
        JsClassDeclaration {
            abstract_token: missing (optional),
            class_token: CLASS_KW@34..41 "class" [Newline("\n")] [Whitespace(" ")],
            id: JsIdentifierBinding {
                name_token: IDENT@41..43 "C" [] [Whitespace(" ")],
            },
            type_parameters: missing (optional),
            extends_clause: missing (optional),
            implements_clause: missing (optional),
            l_curly_token: L_CURLY@43..44 "{" [] [],
            members: JsClassMemberList [
                JsPropertyClassMember {
                    modifiers: JsPropertyModifierList [],
                    name: JsPrivateClassMemberName {
                        hash_token: HASH@44..50 "#" [Newline("\n"), Whitespace("    ")] [],
                        id_token: IDENT@50..52 "a" [] [Whitespace(" ")],
                    },
                    property_annotation: missing (optional),
                    value: JsInitializerClause {
                        eq_token: EQ@52..54 "=" [] [Whitespace(" ")],
                        expression: JsStringLiteralExpression {
                            value_token: JS_STRING_LITERAL@54..57 "'a'" [] [],
                        },
                    },
                    semicolon_token: SEMICOLON@57..58 ";" [] [],
                },
                JsConstructorClassMember {
                    modifiers: JsConstructorModifierList [],
                    name: JsLiteralMemberName {
                        value: IDENT@58..74 "constructor" [Newline("\n"), Whitespace("    ")] [],
                    },
                    parameters: JsConstructorParameters {
                        l_paren_token: L_PAREN@74..75 "(" [] [],
                        parameters: JsConstructorParameterList [],
                        r_paren_token: R_PAREN@75..77 ")" [] [Whitespace(" ")],
                    },
                    body: JsFunctionBody {
                        l_curly_token: L_CURLY@77..78 "{" [] [],
                        directives: JsDirectiveList [],
                        statements: JsStatementList [
                            JsVariableStatement {
                                declaration: JsVariableDeclaration {
                                    kind: CONST_KW@78..93 "const" [Newline("\n"), Whitespace("        ")] [Whitespace(" ")],
                                    declarators: JsVariableDeclaratorList [
                                        JsVariableDeclarator {
                                            id: JsIdentifierBinding {
                                                name_token: IDENT@93..94 "a" [] [],
                                            },
                                            variable_annotation: TsTypeAnnotation {
                                                colon_token: COLON@94..96 ":" [] [Whitespace(" ")],
                                                ty: TsTypeofType {
                                                    typeof_token: TYPEOF_KW@96..103 "typeof" [] [Whitespace(" ")],
                                                    expression_name: TsQualifiedName {
                                                        left: JsReferenceIdentifier {
                                                            value_token: IDENT@103..107 "this" [] [],
                                                        },
                                                        dot_token: DOT@107..108 "." [] [],
                                                        right: JsPrivateName {
                                                            hash_token: HASH@108..109 "#" [] [],
                                                            value_token: IDENT@109..111 "a" [] [Whitespace(" ")],
                                                        },
                                                    },
                                                },
                                            },
                                            initializer: JsInitializerClause {
                                                eq_token: EQ@111..113 "=" [] [Whitespace(" ")],
                                                expression: JsStringLiteralExpression {
                                                    value_token: JS_STRING_LITERAL@113..115 "''" [] [],
                                                },
                                            },
                                        },
                                    ],
                                },
                                semicolon_token: SEMICOLON@115..117 ";" [] [Whitespace(" ")],
                            },
                            JsVariableStatement {
                                declaration: JsVariableDeclaration {
                                    kind: CONST_KW@117..132 "const" [Newline("\n"), Whitespace("        ")] [Whitespace(" ")],
                                    declarators: JsVariableDeclaratorList [
                                        JsVariableDeclarator {
                                            id: JsIdentifierBinding {
                                                name_token: IDENT@132..133 "b" [] [],
                                            },
                                            variable_annotation: TsTypeAnnotation {
                                                colon_token: COLON@133..135 ":" [] [Whitespace(" ")],
                                                ty: TsTypeofType {
                                                    typeof_token: TYPEOF_KW@135..142 "typeof" [] [Whitespace(" ")],
                                                    expression_name: TsQualifiedName {
                                                        left: JsReferenceIdentifier {
                                                            value_token: IDENT@142..146 "this" [] [],
                                                        },
                                                        dot_token: DOT@146..147 "." [] [],
                                                        right: JsPrivateName {
                                                            hash_token: HASH@147..148 "#" [] [],
                                                            value_token: IDENT@148..150 "a" [] [Whitespace(" ")],
                                                        },
                                                    },
                                                },
                                            },
                                            initializer: JsInitializerClause {
                                                eq_token: EQ@150..152 "=" [] [Whitespace(" ")],
                                                expression: JsNumberLiteralExpression {
                                                    value_token: JS_NUMBER_LITERAL@152..153 "1" [] [],
                                                },
                                            },
                                        },
                                    ],
                                },
                                semicolon_token: SEMICOLON@153..155 ";" [] [Whitespace(" ")],
                            },
                        ],
                        r_curly_token: R_CURLY@155..161 "}" [Newline("\n"), Whitespace("    ")] [],
                    },
                },
            ],
            r_curly_token: R_CURLY@161..163 "}" [Newline("\n")] [],
        },
        JsVariableStatement {
            declaration: JsVariableDeclaration {
                kind: CONST_KW@163..170 "const" [Newline("\n")] [Whitespace(" ")],
                declarators: JsVariableDeclaratorList [
                    JsVariableDeclarator {
                        id: JsIdentifierBinding {
                            name_token: IDENT@170..172 "c" [] [Whitespace(" ")],
                        },
                        variable_annotation: missing (optional),
                        initializer: JsInitializerClause {
                            eq_token: EQ@172..174 "=" [] [Whitespace(" ")],
                            expression: JsNewExpression {
                                new_token: NEW_KW@174..178 "new" [] [Whitespace(" ")],
                                callee: JsIdentifierExpression {
                                    name: JsReferenceIdentifier {
                                        value_token: IDENT@178..179 "C" [] [],
                                    },
                                },
                                type_arguments: missing (optional),
                                arguments: JsCallArguments {
                                    l_paren_token: L_PAREN@179..180 "(" [] [],
                                    args: JsCallArgumentList [],
                                    r_paren_token: R_PAREN@180..181 ")" [] [],
                                },
                            },
                        },
                    },
                ],
            },
            semicolon_token: SEMICOLON@181..182 ";" [] [],
        },
        JsVariableStatement {
            declaration: JsVariableDeclaration {
                kind: CONST_KW@182..189 "const" [Newline("\n")] [Whitespace(" ")],
                declarators: JsVariableDeclaratorList [
                    JsVariableDeclarator {
                        id: JsIdentifierBinding {
                            name_token: IDENT@189..190 "a" [] [],
                        },
                        variable_annotation: TsTypeAnnotation {
                            colon_token: COLON@190..192 ":" [] [Whitespace(" ")],
                            ty: TsTypeofType {
                                typeof_token: TYPEOF_KW@192..199 "typeof" [] [Whitespace(" ")],
                                expression_name: TsQualifiedName {
                                    left: JsReferenceIdentifier {
                                        value_token: IDENT@199..200 "c" [] [],
                                    },
                                    dot_token: DOT@200..201 "." [] [],
                                    right: JsPrivateName {
                                        hash_token: HASH@201..202 "#" [] [],
                                        value_token: IDENT@202..204 "a" [] [Whitespace(" ")],
                                    },
                                },
                            },
                        },
                        initializer: JsInitializerClause {
                            eq_token: EQ@204..206 "=" [] [Whitespace(" ")],
                            expression: JsStringLiteralExpression {
                                value_token: JS_STRING_LITERAL@206..208 "''" [] [],
                            },
                        },
                    },
                ],
            },
            semicolon_token: SEMICOLON@208..209 ";" [] [],
        },
    ],
    eof_token: EOF@209..210 "" [Newline("\n")] [],
}

0: JS_MODULE@0..210
  0: (empty)
  1: JS_DIRECTIVE_LIST@0..0
  2: JS_MODULE_ITEM_LIST@0..209
    0: JS_VARIABLE_STATEMENT@0..15
      0: JS_VARIABLE_DECLARATION@0..14
        0: LET_KW@0..4 "let" [] [Whitespace(" ")]
        1: JS_VARIABLE_DECLARATOR_LIST@4..14
          0: JS_VARIABLE_DECLARATOR@4..14
            0: JS_IDENTIFIER_BINDING@4..6
              0: IDENT@4..6 "a" [] [Whitespace(" ")]
            1: (empty)
            2: JS_INITIALIZER_CLAUSE@6..14
              0: EQ@6..8 "=" [] [Whitespace(" ")]
              1: JS_STRING_LITERAL_EXPRESSION@8..14
                0: JS_STRING_LITERAL@8..14 "\"test\"" [] []
      1: SEMICOLON@14..15 ";" [] []
    1: TS_TYPE_ALIAS_DECLARATION@15..34
      0: TYPE_KW@15..21 "type" [Newline("\n")] [Whitespace(" ")]
      1: TS_IDENTIFIER_BINDING@21..23
        0: IDENT@21..23 "B" [] [Whitespace(" ")]
      2: (empty)
      3: EQ@23..25 "=" [] [Whitespace(" ")]
      4: TS_TYPEOF_TYPE@25..33
        0: TYPEOF_KW@25..32 "typeof" [] [Whitespace(" ")]
        1: JS_REFERENCE_IDENTIFIER@32..33
          0: IDENT@32..33 "a" [] []
      5: SEMICOLON@33..34 ";" [] []
    2: JS_CLASS_DECLARATION@34..163
      0: (empty)
      1: CLASS_KW@34..41 "class" [Newline("\n")] [Whitespace(" ")]
      2: JS_IDENTIFIER_BINDING@41..43
        0: IDENT@41..43 "C" [] [Whitespace(" ")]
      3: (empty)
      4: (empty)
      5: (empty)
      6: L_CURLY@43..44 "{" [] []
      7: JS_CLASS_MEMBER_LIST@44..161
        0: JS_PROPERTY_CLASS_MEMBER@44..58
          0: JS_PROPERTY_MODIFIER_LIST@44..44
          1: JS_PRIVATE_CLASS_MEMBER_NAME@44..52
            0: HASH@44..50 "#" [Newline("\n"), Whitespace("    ")] []
            1: IDENT@50..52 "a" [] [Whitespace(" ")]
          2: (empty)
          3: JS_INITIALIZER_CLAUSE@52..57
            0: EQ@52..54 "=" [] [Whitespace(" ")]
            1: JS_STRING_LITERAL_EXPRESSION@54..57
              0: JS_STRING_LITERAL@54..57 "'a'" [] []
          4: SEMICOLON@57..58 ";" [] []
        1: JS_CONSTRUCTOR_CLASS_MEMBER@58..161
          0: JS_CONSTRUCTOR_MODIFIER_LIST@58..58
          1: JS_LITERAL_MEMBER_NAME@58..74
            0: IDENT@58..74 "constructor" [Newline("\n"), Whitespace("    ")] []
          2: JS_CONSTRUCTOR_PARAMETERS@74..77
            0: L_PAREN@74..75 "(" [] []
            1: JS_CONSTRUCTOR_PARAMETER_LIST@75..75
            2: R_PAREN@75..77 ")" [] [Whitespace(" ")]
          3: JS_FUNCTION_BODY@77..161
            0: L_CURLY@77..78 "{" [] []
            1: JS_DIRECTIVE_LIST@78..78
            2: JS_STATEMENT_LIST@78..155
              0: JS_VARIABLE_STATEMENT@78..117
                0: JS_VARIABLE_DECLARATION@78..115
                  0: CONST_KW@78..93 "const" [Newline("\n"), Whitespace("        ")] [Whitespace(" ")]
                  1: JS_VARIABLE_DECLARATOR_LIST@93..115
                    0: JS_VARIABLE_DECLARATOR@93..115
                      0: JS_IDENTIFIER_BINDING@93..94
                        0: IDENT@93..94 "a" [] []
                      1: TS_TYPE_ANNOTATION@94..111
                        0: COLON@94..96 ":" [] [Whitespace(" ")]
                        1: TS_TYPEOF_TYPE@96..111
                          0: TYPEOF_KW@96..103 "typeof" [] [Whitespace(" ")]
                          1: TS_QUALIFIED_NAME@103..111
                            0: JS_REFERENCE_IDENTIFIER@103..107
                              0: IDENT@103..107 "this" [] []
                            1: DOT@107..108 "." [] []
                            2: JS_PRIVATE_NAME@108..111
                              0: HASH@108..109 "#" [] []
                              1: IDENT@109..111 "a" [] [Whitespace(" ")]
                      2: JS_INITIALIZER_CLAUSE@111..115
                        0: EQ@111..113 "=" [] [Whitespace(" ")]
                        1: JS_STRING_LITERAL_EXPRESSION@113..115
                          0: JS_STRING_LITERAL@113..115 "''" [] []
                1: SEMICOLON@115..117 ";" [] [Whitespace(" ")]
              1: JS_VARIABLE_STATEMENT@117..155
                0: JS_VARIABLE_DECLARATION@117..153
                  0: CONST_KW@117..132 "const" [Newline("\n"), Whitespace("        ")] [Whitespace(" ")]
                  1: JS_VARIABLE_DECLARATOR_LIST@132..153
                    0: JS_VARIABLE_DECLARATOR@132..153
                      0: JS_IDENTIFIER_BINDING@132..133
                        0: IDENT@132..133 "b" [] []
                      1: TS_TYPE_ANNOTATION@133..150
                        0: COLON@133..135 ":" [] [Whitespace(" ")]
                        1: TS_TYPEOF_TYPE@135..150
                          0: TYPEOF_KW@135..142 "typeof" [] [Whitespace(" ")]
                          1: TS_QUALIFIED_NAME@142..150
                            0: JS_REFERENCE_IDENTIFIER@142..146
                              0: IDENT@142..146 "this" [] []
                            1: DOT@146..147 "." [] []
                            2: JS_PRIVATE_NAME@147..150
                              0: HASH@147..148 "#" [] []
                              1: IDENT@148..150 "a" [] [Whitespace(" ")]
                      2: JS_INITIALIZER_CLAUSE@150..153
                        0: EQ@150..152 "=" [] [Whitespace(" ")]
                        1: JS_NUMBER_LITERAL_EXPRESSION@152..153
                          0: JS_NUMBER_LITERAL@152..153 "1" [] []
                1: SEMICOLON@153..155 ";" [] [Whitespace(" ")]
            3: R_CURLY@155..161 "}" [Newline("\n"), Whitespace("    ")] []
      8: R_CURLY@161..163 "}" [Newline("\n")] []
    3: JS_VARIABLE_STATEMENT@163..182
      0: JS_VARIABLE_DECLARATION@163..181
        0: CONST_KW@163..170 "const" [Newline("\n")] [Whitespace(" ")]
        1: JS_VARIABLE_DECLARATOR_LIST@170..181
          0: JS_VARIABLE_DECLARATOR@170..181
            0: JS_IDENTIFIER_BINDING@170..172
              0: IDENT@170..172 "c" [] [Whitespace(" ")]
            1: (empty)
            2: JS_INITIALIZER_CLAUSE@172..181
              0: EQ@172..174 "=" [] [Whitespace(" ")]
              1: JS_NEW_EXPRESSION@174..181
                0: NEW_KW@174..178 "new" [] [Whitespace(" ")]
                1: JS_IDENTIFIER_EXPRESSION@178..179
                  0: JS_REFERENCE_IDENTIFIER@178..179
                    0: IDENT@178..179 "C" [] []
                2: (empty)
                3: JS_CALL_ARGUMENTS@179..181
                  0: L_PAREN@179..180 "(" [] []
                  1: JS_CALL_ARGUMENT_LIST@180..180
                  2: R_PAREN@180..181 ")" [] []
      1: SEMICOLON@181..182 ";" [] []
    4: JS_VARIABLE_STATEMENT@182..209
      0: JS_VARIABLE_DECLARATION@182..208
        0: CONST_KW@182..189 "const" [Newline("\n")] [Whitespace(" ")]
        1: JS_VARIABLE_DECLARATOR_LIST@189..208
          0: JS_VARIABLE_DECLARATOR@189..208
            0: JS_IDENTIFIER_BINDING@189..190
              0: IDENT@189..190 "a" [] []
            1: TS_TYPE_ANNOTATION@190..204
              0: COLON@190..192 ":" [] [Whitespace(" ")]
              1: TS_TYPEOF_TYPE@192..204
                0: TYPEOF_KW@192..199 "typeof" [] [Whitespace(" ")]
                1: TS_QUALIFIED_NAME@199..204
                  0: JS_REFERENCE_IDENTIFIER@199..200
                    0: IDENT@199..200 "c" [] []
                  1: DOT@200..201 "." [] []
                  2: JS_PRIVATE_NAME@201..204
                    0: HASH@201..202 "#" [] []
                    1: IDENT@202..204 "a" [] [Whitespace(" ")]
            2: JS_INITIALIZER_CLAUSE@204..208
              0: EQ@204..206 "=" [] [Whitespace(" ")]
              1: JS_STRING_LITERAL_EXPRESSION@206..208
                0: JS_STRING_LITERAL@206..208 "''" [] []
      1: SEMICOLON@208..209 ";" [] []
  3: EOF@209..210 "" [Newline("\n")] []
