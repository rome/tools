---
source: crates/rome_cli/tests/snap_test.rs
expression: content
---
## `rome.json`

```json
{
  "linter": {
    "rules": {
      "recommended": true,
      "style": {
        "noNegationElse": "error"
      }
    }
  }
}
```

## `file.js`

```js
if(!cond) { exprA(); } else { exprB() }
```

# Termination Message

```block
internalError/io ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Some errors were emitted while running checks
  


```

# Emitted Messages

```block
file.js:1:1 lint/style/noNegationElse  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Invert blocks when performing a negation test.
  
  > 1 │ if(!cond) { exprA(); } else { exprB() }
      │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Suggested fix: Exchange alternate and consequent of the node
  
  - if(!cond)·{·exprA();·}·else·{·exprB()·}
  + if(cond)·{·exprB()·}·else·{·exprA();·}
  

```

```block
file.js format ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  i Formatter would have printed the following content:
  
    1   │ - if(!cond)·{·exprA();·}·else·{·exprB()·}
      1 │ + if·(!cond)·{
      2 │ + → exprA();
      3 │ + }·else·{
      4 │ + → exprB();
      5 │ + }
      6 │ + 
  

```

```block
internalError/io ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Some errors were emitted while running checks
  

```

```block
Checked 1 file(s) in <TIME>
```


