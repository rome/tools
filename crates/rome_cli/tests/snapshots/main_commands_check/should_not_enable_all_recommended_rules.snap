---
source: crates/rome_cli/tests/snap_test.rs
expression: content
---
## `rome.json`

```json
{
  "$schema": "https://docs.rome.tools/schemas/12.1.0/schema.json",
  "organizeImports": {
    "enabled": false
  },
  "linter": {
    "enabled": true,
    "rules": {
      "recommended": false,
      "a11y": {},
      "complexity": {},
      "correctness": {},
      "performance": {},
      "security": {},
      "style": {},
      "suspicious": {}
    }
  }
}
```

## `fix.js`

```js

    		LOOP: for (const x of xs) {
    		    if (x > 0) {
    		        break;
    		    }
    		    f(x);
    		}
		
```

# Termination Message

```block
check ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Some errors were emitted while running checks
  


```

# Emitted Messages

```block
fix.js format ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  i Formatter would have printed the following content:
  
    1   │ - 
    2   │ - ····→ → LOOP:·for·(const·x·of·xs)·{
    3   │ - ····→ → ····if·(x·>·0)·{
    4   │ - ····→ → ········break;
    5   │ - ····→ → ····}
    6   │ - ····→ → ····f(x);
    7   │ - ····→ → }
    8   │ - → → 
      1 │ + LOOP:·for·(const·x·of·xs)·{
      2 │ + → if·(x·>·0)·{
      3 │ + → → break;
      4 │ + → }
      5 │ + → f(x);
      6 │ + }
      7 │ + 
  

```

```block
check ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Some errors were emitted while running checks
  

```

```block
Checked 1 file(s) in <TIME>
```


