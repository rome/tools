---
source: crates/rome_formatter_test/src/snapshot_builder.rs
info:
  test_file: json/json/json5.json
---

# Input

```json
[
{
  '//': 'JSON5 allow `Infinity` and `NaN`',
  numbers: [
    Infinity,
    -Infinity,
    NaN,
  ],
  Infinity: NaN,
  NaN: Infinity,
  NaN: -Infinity,
},
{
  '//': 'JSON5 numbers',
  hexadecimal: 0xdecaf,
  leadingDecimalPoint: .8675309, andTrailing: 8675309.,
  positiveSign: +1,
},
{
  '//': 'JSON5 strings',
singleQuotes: 'I can use "double quotes" here',
  lineBreaks: "Look, Mom! \
No \\n's!",
}
]

```


# Prettier differences

```diff
--- Prettier
+++ Rome
@@ -1,22 +1,25 @@
 [
-  {
-    "//": "JSON5 allow `Infinity` and `NaN`",
-    "numbers": [Infinity, -Infinity, NaN],
-    "Infinity": NaN,
-    "NaN": Infinity,
-    "NaN": -Infinity
-  },
-  {
-    "//": "JSON5 numbers",
-    "hexadecimal": 0xdecaf,
-    "leadingDecimalPoint": 0.8675309,
-    "andTrailing": 8675309,
-    "positiveSign": +1
-  },
-  {
-    "//": "JSON5 strings",
-    "singleQuotes": "I can use \"double quotes\" here",
-    "lineBreaks": "Look, Mom! \
-No \\n's!"
-  }
+{
+  '//': 'JSON5 allow `Infinity` and `NaN`',
+  numbers: [
+    Infinity,
+    -Infinity,
+    NaN,
+  ],
+  Infinity: NaN,
+  NaN: Infinity,
+  NaN: -Infinity,
+},
+{
+  '//': 'JSON5 numbers',
+  hexadecimal: 0xdecaf,
+  leadingDecimalPoint: .8675309, andTrailing: 8675309.,
+  positiveSign: +1,
+},
+{
+  '//': 'JSON5 strings',
+singleQuotes: 'I can use "double quotes" here',
+  lineBreaks: "Look, Mom! \
+No \\n's!",
+}
 ]
```

# Output

```json
[
{
  '//': 'JSON5 allow `Infinity` and `NaN`',
  numbers: [
    Infinity,
    -Infinity,
    NaN,
  ],
  Infinity: NaN,
  NaN: Infinity,
  NaN: -Infinity,
},
{
  '//': 'JSON5 numbers',
  hexadecimal: 0xdecaf,
  leadingDecimalPoint: .8675309, andTrailing: 8675309.,
  positiveSign: +1,
},
{
  '//': 'JSON5 strings',
singleQuotes: 'I can use "double quotes" here',
  lineBreaks: "Look, Mom! \
No \\n's!",
}
]
```

# Errors
```
json5.json:3:3 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × JSON standard does not allow single quoted strings
  
    1 │ [
    2 │ {
  > 3 │   '//': 'JSON5 allow `Infinity` and `NaN`',
      │   ^^^^
    4 │   numbers: [
    5 │     Infinity,
  
  i Use double quotes to escape the string.
  
json5.json:3:9 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × JSON standard does not allow single quoted strings
  
    1 │ [
    2 │ {
  > 3 │   '//': 'JSON5 allow `Infinity` and `NaN`',
      │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    4 │   numbers: [
    5 │     Infinity,
  
  i Use double quotes to escape the string.
  
json5.json:5:5 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × String values must be double quoted.
  
    3 │   '//': 'JSON5 allow `Infinity` and `NaN`',
    4 │   numbers: [
  > 5 │     Infinity,
      │     ^^^^^^^^
    6 │     -Infinity,
    7 │     NaN,
  
json5.json:4:12 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × End of file expected
  
    2 │ {
    3 │   '//': 'JSON5 allow `Infinity` and `NaN`',
  > 4 │   numbers: [
      │            ^
  > 5 │     Infinity,
      │     ^^^^^^^^^
    6 │     -Infinity,
    7 │     NaN,
  
  i Use an array for a sequence of values: `[1, 2]`
  
json5.json:6:5 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Minus must be followed by a digit
  
    4 │   numbers: [
    5 │     Infinity,
  > 6 │     -Infinity,
      │     ^
    7 │     NaN,
    8 │   ],
  
json5.json:11:8 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Minus must be followed by a digit
  
     9 │   Infinity: NaN,
    10 │   NaN: Infinity,
  > 11 │   NaN: -Infinity,
       │        ^
    12 │ },
    13 │ {
  
json5.json:13:1 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × End of file expected
  
    11 │   NaN: -Infinity,
    12 │ },
  > 13 │ {
       │ ^
    14 │   '//': 'JSON5 numbers',
    15 │   hexadecimal: 0xdecaf,
  
  i Use an array for a sequence of values: `[1, 2]`
  
json5.json:14:3 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × JSON standard does not allow single quoted strings
  
    12 │ },
    13 │ {
  > 14 │   '//': 'JSON5 numbers',
       │   ^^^^
    15 │   hexadecimal: 0xdecaf,
    16 │   leadingDecimalPoint: .8675309, andTrailing: 8675309.,
  
  i Use double quotes to escape the string.
  
json5.json:14:9 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × JSON standard does not allow single quoted strings
  
    12 │ },
    13 │ {
  > 14 │   '//': 'JSON5 numbers',
       │         ^^^^^^^^^^^^^^^
    15 │   hexadecimal: 0xdecaf,
    16 │   leadingDecimalPoint: .8675309, andTrailing: 8675309.,
  
  i Use double quotes to escape the string.
  
json5.json:15:16 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × End of file expected
  
    13 │ {
    14 │   '//': 'JSON5 numbers',
  > 15 │   hexadecimal: 0xdecaf,
       │                ^
    16 │   leadingDecimalPoint: .8675309, andTrailing: 8675309.,
    17 │   positiveSign: +1,
  
  i Use an array for a sequence of values: `[1, 2]`
  
json5.json:15:17 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × String values must be double quoted.
  
    13 │ {
    14 │   '//': 'JSON5 numbers',
  > 15 │   hexadecimal: 0xdecaf,
       │                 ^^^^^^
    16 │   leadingDecimalPoint: .8675309, andTrailing: 8675309.,
    17 │   positiveSign: +1,
  
json5.json:15:23 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × End of file expected
  
    13 │ {
    14 │   '//': 'JSON5 numbers',
  > 15 │   hexadecimal: 0xdecaf,
       │                       ^
  > 16 │   leadingDecimalPoint: .8675309, andTrailing: 8675309.,
       │   ^^^^^^^^^^^^^^^^^^^^^^
    17 │   positiveSign: +1,
    18 │ },
  
  i Use an array for a sequence of values: `[1, 2]`
  
json5.json:16:24 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × unexpected character `.`
  
    14 │   '//': 'JSON5 numbers',
    15 │   hexadecimal: 0xdecaf,
  > 16 │   leadingDecimalPoint: .8675309, andTrailing: 8675309.,
       │                        ^
    17 │   positiveSign: +1,
    18 │ },
  
json5.json:16:25 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × End of file expected
  
    14 │   '//': 'JSON5 numbers',
    15 │   hexadecimal: 0xdecaf,
  > 16 │   leadingDecimalPoint: .8675309, andTrailing: 8675309.,
       │                         ^^^^^^^
    17 │   positiveSign: +1,
    18 │ },
  
  i Use an array for a sequence of values: `[1, 2]`
  
json5.json:16:32 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × End of file expected
  
    14 │   '//': 'JSON5 numbers',
    15 │   hexadecimal: 0xdecaf,
  > 16 │   leadingDecimalPoint: .8675309, andTrailing: 8675309.,
       │                                ^^^^^^^^^^^^^^^^^^^^^^^^
  > 17 │   positiveSign: +1,
       │   ^^^^^^^^^^^^^^^
    18 │ },
    19 │ {
  
  i Use an array for a sequence of values: `[1, 2]`
  
json5.json:16:55 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Missing fraction
  
    14 │   '//': 'JSON5 numbers',
    15 │   hexadecimal: 0xdecaf,
  > 16 │   leadingDecimalPoint: .8675309, andTrailing: 8675309.,
       │                                                       ^
    17 │   positiveSign: +1,
    18 │ },
  
  i Remove the `.`
  
json5.json:17:17 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × unexpected character `+`
  
    15 │   hexadecimal: 0xdecaf,
    16 │   leadingDecimalPoint: .8675309, andTrailing: 8675309.,
  > 17 │   positiveSign: +1,
       │                 ^
    18 │ },
    19 │ {
  
json5.json:17:18 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × End of file expected
  
    15 │   hexadecimal: 0xdecaf,
    16 │   leadingDecimalPoint: .8675309, andTrailing: 8675309.,
  > 17 │   positiveSign: +1,
       │                  ^
    18 │ },
    19 │ {
  
  i Use an array for a sequence of values: `[1, 2]`
  
json5.json:17:19 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × End of file expected
  
    15 │   hexadecimal: 0xdecaf,
    16 │   leadingDecimalPoint: .8675309, andTrailing: 8675309.,
  > 17 │   positiveSign: +1,
       │                   ^
  > 18 │ },
       │ ^^
    19 │ {
    20 │   '//': 'JSON5 strings',
  
  i Use an array for a sequence of values: `[1, 2]`
  
json5.json:19:1 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × End of file expected
  
    17 │   positiveSign: +1,
    18 │ },
  > 19 │ {
       │ ^
    20 │   '//': 'JSON5 strings',
    21 │ singleQuotes: 'I can use "double quotes" here',
  
  i Use an array for a sequence of values: `[1, 2]`
  
json5.json:20:3 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × JSON standard does not allow single quoted strings
  
    18 │ },
    19 │ {
  > 20 │   '//': 'JSON5 strings',
       │   ^^^^
    21 │ singleQuotes: 'I can use "double quotes" here',
    22 │   lineBreaks: "Look, Mom! \
  
  i Use double quotes to escape the string.
  
json5.json:20:9 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × JSON standard does not allow single quoted strings
  
    18 │ },
    19 │ {
  > 20 │   '//': 'JSON5 strings',
       │         ^^^^^^^^^^^^^^^
    21 │ singleQuotes: 'I can use "double quotes" here',
    22 │   lineBreaks: "Look, Mom! \
  
  i Use double quotes to escape the string.
  
json5.json:21:15 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × JSON standard does not allow single quoted strings
  
    19 │ {
    20 │   '//': 'JSON5 strings',
  > 21 │ singleQuotes: 'I can use "double quotes" here',
       │               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    22 │   lineBreaks: "Look, Mom! \
    23 │ No \\n's!",
  
  i Use double quotes to escape the string.
  
json5.json:22:15 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × End of file expected
  
    20 │   '//': 'JSON5 strings',
    21 │ singleQuotes: 'I can use "double quotes" here',
  > 22 │   lineBreaks: "Look, Mom! \
       │               ^^^^^^^^^^^^^
    23 │ No \\n's!",
    24 │ }
  
  i Use an array for a sequence of values: `[1, 2]`
  
json5.json:22:27 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Invalid escape sequence
  
    20 │   '//': 'JSON5 strings',
    21 │ singleQuotes: 'I can use "double quotes" here',
  > 22 │   lineBreaks: "Look, Mom! \
       │                           ^
  > 23 │ No \\n's!",
       │ 
    24 │ }
    25 │ ]
  
  i Valid escape sequences are: `\\`, `\/`, `/"`, `\b\`, `\f`, `\n`, `\r`, `\t` or any unicode escape sequence `\uXXXX` where X is hexedecimal number. 
  
json5.json:22:15 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Missing closing quote
  
    20 │   '//': 'JSON5 strings',
    21 │ singleQuotes: 'I can use "double quotes" here',
  > 22 │   lineBreaks: "Look, Mom! \
       │               ^^^^^^^^^^^^^
    23 │ No \\n's!",
    24 │ }
  
  i line breaks here
  
    20 │   '//': 'JSON5 strings',
    21 │ singleQuotes: 'I can use "double quotes" here',
  > 22 │   lineBreaks: "Look, Mom! \
       │                            
  > 23 │ No \\n's!",
       │ 
    24 │ }
    25 │ ]
  
json5.json:23:1 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × String values must be double quoted.
  
    21 │ singleQuotes: 'I can use "double quotes" here',
    22 │   lineBreaks: "Look, Mom! \
  > 23 │ No \\n's!",
       │ ^^
    24 │ }
    25 │ ]
  
json5.json:23:4 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × unexpected character `\`
  
    21 │ singleQuotes: 'I can use "double quotes" here',
    22 │   lineBreaks: "Look, Mom! \
  > 23 │ No \\n's!",
       │    ^
    24 │ }
    25 │ ]
  
json5.json:23:5 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × unexpected character `\`
  
    21 │ singleQuotes: 'I can use "double quotes" here',
    22 │   lineBreaks: "Look, Mom! \
  > 23 │ No \\n's!",
       │     ^
    24 │ }
    25 │ ]
  
json5.json:23:7 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Missing closing quote
  
    21 │ singleQuotes: 'I can use "double quotes" here',
    22 │   lineBreaks: "Look, Mom! \
  > 23 │ No \\n's!",
       │       ^^^^^
    24 │ }
    25 │ ]
  
  i line breaks here
  
    21 │ singleQuotes: 'I can use "double quotes" here',
    22 │   lineBreaks: "Look, Mom! \
  > 23 │ No \\n's!",
       │            
  > 24 │ }
       │ 
    25 │ ]
    26 │ 
  
json5.json:24:1 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × End of file expected
  
    22 │   lineBreaks: "Look, Mom! \
    23 │ No \\n's!",
  > 24 │ }
       │ ^
  > 25 │ ]
       │ ^
    26 │ 
  
  i Use an array for a sequence of values: `[1, 2]`
  

```


