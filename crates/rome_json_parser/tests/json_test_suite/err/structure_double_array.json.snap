---
source: crates/rome_json_parser/tests/spec_test.rs
expression: snapshot
---

## Input

```json
[][]
```


## AST

```
JsonRoot {
    value: JsonArrayValue {
        l_brack_token: missing (required),
        elements: JsonArrayElementList [
            JsonArrayValue {
                l_brack_token: L_BRACK@0..1 "[" [] [],
                elements: JsonArrayElementList [],
                r_brack_token: R_BRACK@1..2 "]" [] [],
            },
            missing separator,
            JsonArrayValue {
                l_brack_token: L_BRACK@2..3 "[" [] [],
                elements: JsonArrayElementList [],
                r_brack_token: R_BRACK@3..4 "]" [] [],
            },
        ],
        r_brack_token: missing (required),
    },
    eof_token: EOF@4..4 "" [] [],
}
```

## CST 

```
0: JSON_ROOT@0..4
  0: JSON_ARRAY_VALUE@0..4
    0: (empty)
    1: JSON_ARRAY_ELEMENT_LIST@0..4
      0: JSON_ARRAY_VALUE@0..2
        0: L_BRACK@0..1 "[" [] []
        1: JSON_ARRAY_ELEMENT_LIST@1..1
        2: R_BRACK@1..2 "]" [] []
      1: (empty)
      2: JSON_ARRAY_VALUE@2..4
        0: L_BRACK@2..3 "[" [] []
        1: JSON_ARRAY_ELEMENT_LIST@3..3
        2: R_BRACK@3..4 "]" [] []
    2: (empty)
  1: EOF@4..4 "" [] []

```

## Diagnostics

```
structure_double_array.json:1:3 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × End of file expected
  
  > 1 │ [][]
      │   ^^
  
  i Use an array for a sequence of values: `[1, 2]`
  
```


