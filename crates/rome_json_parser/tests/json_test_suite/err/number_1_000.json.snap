---
source: crates/rome_json_parser/tests/spec_test.rs
expression: snapshot
---

## Input

```json
[1 000.0]
```


## AST

```
JsonRoot {
    value: JsonArrayValue {
        l_brack_token: L_BRACK@0..1 "[" [] [],
        elements: JsonArrayElementList [
            JsonNumberValue {
                value_token: JSON_NUMBER_LITERAL@1..3 "1" [] [Whitespace(" ")],
            },
            missing separator,
            JsonBogusValue {
                items: [
                    ERROR_TOKEN@3..8 "000.0" [] [],
                ],
            },
        ],
        r_brack_token: R_BRACK@8..9 "]" [] [],
    },
    eof_token: EOF@9..9 "" [] [],
}
```

## CST

```
0: JSON_ROOT@0..9
  0: JSON_ARRAY_VALUE@0..9
    0: L_BRACK@0..1 "[" [] []
    1: JSON_ARRAY_ELEMENT_LIST@1..8
      0: JSON_NUMBER_VALUE@1..3
        0: JSON_NUMBER_LITERAL@1..3 "1" [] [Whitespace(" ")]
      1: (empty)
      2: JSON_BOGUS_VALUE@3..8
        0: ERROR_TOKEN@3..8 "000.0" [] []
    2: R_BRACK@8..9 "]" [] []
  1: EOF@9..9 "" [] []

```

## Diagnostics

```
number_1_000.json:1:4 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × The JSON standard doesn't allow octal number notation (numbers starting with zero)
  
  > 1 │ [1 000.0]
      │    ^
  
```


