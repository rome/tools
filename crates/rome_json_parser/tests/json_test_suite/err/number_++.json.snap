---
source: crates/rome_json_parser/tests/spec_test.rs
expression: snapshot
---

## Input

```json
[++1234]
```


## AST

```
JsonRoot {
    value: JsonArray {
        l_brack_token: L_BRACK@0..1 "[" [] [],
        elements: JsonArrayElementList [
            JsonUnknown {
                items: [
                    ERROR_TOKEN@1..2 "+" [] [],
                    ERROR_TOKEN@2..3 "+" [] [],
                ],
            },
            missing separator,
            JsonNumber {
                value_token: JSON_NUMBER_LITERAL@3..7 "1234" [] [],
            },
        ],
        r_brack_token: R_BRACK@7..8 "]" [] [],
    },
    eof_token: EOF@8..8 "" [] [],
}
```

## CST 

```
0: JSON_ROOT@0..8
  0: JSON_ARRAY@0..8
    0: L_BRACK@0..1 "[" [] []
    1: JSON_ARRAY_ELEMENT_LIST@1..7
      0: JSON_UNKNOWN@1..3
        0: ERROR_TOKEN@1..2 "+" [] []
        1: ERROR_TOKEN@2..3 "+" [] []
      1: (empty)
      2: JSON_NUMBER@3..7
        0: JSON_NUMBER_LITERAL@3..7 "1234" [] []
    2: R_BRACK@7..8 "]" [] []
  1: EOF@8..8 "" [] []

```

## Diagnostics

```
number_++.json:1:2 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × unexpected character `+`
  
  > 1 │ [++1234]
      │  ^
  
number_++.json:1:3 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × unexpected character `+`
  
  > 1 │ [++1234]
      │   ^
  
number_++.json:1:2 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected an array, an object, or a literal but instead found '++'
  
  > 1 │ [++1234]
      │  ^^
  
  i Expected an array, an object, or a literal here
  
  > 1 │ [++1234]
      │  ^^
  
number_++.json:1:4 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected `,` but instead found `1234`
  
  > 1 │ [++1234]
      │    ^^^^
  
  i Remove 1234
  
```


