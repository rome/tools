---
source: crates/rome_json_parser/tests/spec_test.rs
expression: snapshot
---

## Input

```json
[""],
```


## AST

```
JsonRoot {
    value: JsonArrayValue {
        l_brack_token: missing (required),
        elements: JsonArrayElementList [
            JsonArrayValue {
                l_brack_token: L_BRACK@0..1 "[" [] [],
                elements: JsonArrayElementList [
                    JsonStringValue {
                        value_token: JSON_STRING_LITERAL@1..3 "\"\"" [] [],
                    },
                ],
                r_brack_token: R_BRACK@3..4 "]" [] [],
            },
            missing separator,
            JsonBogusValue {
                items: [
                    COMMA@4..5 "," [] [],
                ],
            },
        ],
        r_brack_token: missing (required),
    },
    eof_token: EOF@5..5 "" [] [],
}
```

## CST

```
0: JSON_ROOT@0..5
  0: JSON_ARRAY_VALUE@0..5
    0: (empty)
    1: JSON_ARRAY_ELEMENT_LIST@0..5
      0: JSON_ARRAY_VALUE@0..4
        0: L_BRACK@0..1 "[" [] []
        1: JSON_ARRAY_ELEMENT_LIST@1..3
          0: JSON_STRING_VALUE@1..3
            0: JSON_STRING_LITERAL@1..3 "\"\"" [] []
        2: R_BRACK@3..4 "]" [] []
      1: (empty)
      2: JSON_BOGUS_VALUE@4..5
        0: COMMA@4..5 "," [] []
    2: (empty)
  1: EOF@5..5 "" [] []

```

## Diagnostics

```
array_comma_after_close.json:1:5 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × End of file expected
  
  > 1 │ [""],
      │     ^
  
  i Use an array for a sequence of values: `[1, 2]`
  
```


