---
source: crates/rome_json_parser/tests/spec_test.rs
expression: snapshot
---

## Input

```json
["\uD800\u"]
```


## AST

```
JsonRoot {
    value: JsonArrayValue {
        l_brack_token: L_BRACK@0..1 "[" [] [],
        elements: JsonArrayElementList [
            JsonUnknownValue {
                items: [
                    ERROR_TOKEN@1..11 "\"\\uD800\\u\"" [] [],
                ],
            },
        ],
        r_brack_token: R_BRACK@11..12 "]" [] [],
    },
    eof_token: EOF@12..12 "" [] [],
}
```

## CST 

```
0: JSON_ROOT@0..12
  0: JSON_ARRAY_VALUE@0..12
    0: L_BRACK@0..1 "[" [] []
    1: JSON_ARRAY_ELEMENT_LIST@1..11
      0: JSON_UNKNOWN_VALUE@1..11
        0: ERROR_TOKEN@1..11 "\"\\uD800\\u\"" [] []
    2: R_BRACK@11..12 "]" [] []
  1: EOF@12..12 "" [] []

```

## Diagnostics

```
string_1_surrogate_then_escape_u.json:1:2 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected an array, an object, or a literal but instead found '"\uD800\u"'
  
  > 1 │ ["\uD800\u"]
      │  ^^^^^^^^^^
  
  i Expected an array, an object, or a literal here
  
  > 1 │ ["\uD800\u"]
      │  ^^^^^^^^^^
  
string_1_surrogate_then_escape_u.json:1:9 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Invalid unicode sequence
  
  > 1 │ ["\uD800\u"]
      │         ^^
  
  i Non hexadecimal number
  
  > 1 │ ["\uD800\u"]
      │           ^
  
  i A unicode escape sequence must consist of 4 hexadecimal numbers: `\uXXXX`, e.g. `\u002F' for '/'.
  
```


