---
source: crates/rome_json_parser/tests/spec_test.rs
expression: snapshot
---

## Input

```json
[,
```


## AST

```
JsonRoot {
    value: JsonArrayValue {
        l_brack_token: L_BRACK@0..1 "[" [] [],
        elements: JsonArrayElementList [
            missing element,
            COMMA@1..2 "," [] [],
            missing element,
        ],
        r_brack_token: missing (required),
    },
    eof_token: EOF@2..2 "" [] [],
}
```

## CST

```
0: JSON_ROOT@0..2
  0: JSON_ARRAY_VALUE@0..2
    0: L_BRACK@0..1 "[" [] []
    1: JSON_ARRAY_ELEMENT_LIST@1..2
      0: (empty)
      1: COMMA@1..2 "," [] []
      2: (empty)
    2: (empty)
  1: EOF@2..2 "" [] []

```

## Diagnostics

```
structure_open_array_comma.json:1:2 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected an array, an object, or a literal but instead found ','
  
  > 1 │ [,
      │  ^
  
  i Expected an array, an object, or a literal here
  
  > 1 │ [,
      │  ^
  
structure_open_array_comma.json:1:3 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × expected an array, an object, or a literal but instead found the end of the file
  
  > 1 │ [,
      │   
  
  i Expected an array, an object, or a literal here
  
  > 1 │ [,
      │   
  
```


