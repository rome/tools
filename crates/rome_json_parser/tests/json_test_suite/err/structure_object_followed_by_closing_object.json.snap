---
source: crates/rome_json_parser/tests/spec_test.rs
expression: snapshot
---

## Input

```json
{}}
```


## AST

```
JsonRoot {
    value: JsonArray {
        l_brack_token: missing (required),
        elements: JsonArrayElementList [
            JsonObject {
                l_curly_token: L_CURLY@0..1 "{" [] [],
                json_member_list: JsonMemberList [],
                r_curly_token: R_CURLY@1..2 "}" [] [],
            },
            missing separator,
            JsonUnknown {
                items: [
                    R_CURLY@2..3 "}" [] [],
                ],
            },
        ],
        r_brack_token: missing (required),
    },
    eof_token: EOF@3..3 "" [] [],
}
```

## CST 

```
0: JSON_ROOT@0..3
  0: JSON_ARRAY@0..3
    0: (empty)
    1: JSON_ARRAY_ELEMENT_LIST@0..3
      0: JSON_OBJECT@0..2
        0: L_CURLY@0..1 "{" [] []
        1: JSON_MEMBER_LIST@1..1
        2: R_CURLY@1..2 "}" [] []
      1: (empty)
      2: JSON_UNKNOWN@2..3
        0: R_CURLY@2..3 "}" [] []
    2: (empty)
  1: EOF@3..3 "" [] []

```

## Diagnostics

```
structure_object_followed_by_closing_object.json:1:3 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × End of file expected
  
  > 1 │ {}}
      │   ^
  
  i Use an array for a sequence of values: `[1, 2]`
  
```


