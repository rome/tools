---
source: crates/rome_json_parser/tests/spec_test.rs
expression: snapshot
---

## Input

```json
["x"]]
```


## AST

```
JsonRoot {
    value: JsonArray {
        l_brack_token: missing (required),
        elements: JsonArrayElementList [
            JsonArray {
                l_brack_token: L_BRACK@0..1 "[" [] [],
                elements: JsonArrayElementList [
                    JsonString {
                        value_token: JSON_STRING_LITERAL@1..4 "\"x\"" [] [],
                    },
                ],
                r_brack_token: R_BRACK@4..5 "]" [] [],
            },
            missing separator,
            JsonUnknown {
                items: [
                    R_BRACK@5..6 "]" [] [],
                ],
            },
        ],
        r_brack_token: missing (required),
    },
    eof_token: EOF@6..6 "" [] [],
}
```

## CST 

```
0: JSON_ROOT@0..6
  0: JSON_ARRAY@0..6
    0: (empty)
    1: JSON_ARRAY_ELEMENT_LIST@0..6
      0: JSON_ARRAY@0..5
        0: L_BRACK@0..1 "[" [] []
        1: JSON_ARRAY_ELEMENT_LIST@1..4
          0: JSON_STRING@1..4
            0: JSON_STRING_LITERAL@1..4 "\"x\"" [] []
        2: R_BRACK@4..5 "]" [] []
      1: (empty)
      2: JSON_UNKNOWN@5..6
        0: R_BRACK@5..6 "]" [] []
    2: (empty)
  1: EOF@6..6 "" [] []

```

## Diagnostics

```
array_extra_close.json:1:6 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × End of file expected
  
  > 1 │ ["x"]]
      │      ^
  
  i Use an array for a sequence of values: `[1, 2]`
  
```


