---
source: crates/rome_formatter/tests/prettier_tests.rs
assertion_line: 144
expression: css-prop.js

---
# Input
```js
function SomeComponent (props) {
  // Create styles as if you're calling css and the class will be applied to the component
  return (<div css={`
    color: blue;
    font-size: 17 px;

    &:hover {
      color: green;
    }

    & .some-class {
      font-size: 20px;
    }
  `}>
    This will be blue until hovered.
    <div className="some-class">
      This font size will be 20px
    </div>
  </div>)
}

const TestComponent = ({ children, ...props }) => (
  <div css={`color: white; background: black`}>
    {children}
  </div>
);

```

# Output
```js
function SomeComponent (props) {
  // Create styles as if you're calling css and the class will be applied to the component
  return (
    <div css={`
    color: blue;
    font-size: 17 px;

    &:hover {
      color: green;
    }

    & .some-class {
      font-size: 20px;
    }
  `}>
    This will be blue until hovered.
    <div className="some-class">
      This font size will be 20px
    </div>
  </div>
  );
}

const TestComponent = ({ children, ...props }) => (
  <div css={`color: white; background: black`}>
    {children}
  </div>
);

```

# Errors
```
<<<<<<< HEAD
error[SyntaxError]: Invalid assignment to `<div css`
  ┌─ css-prop.js:3:11
  │
3 │   return (<div css={`
  │           ^^^^^^^^ This expression cannot be assigned to

error[SyntaxError]: expected a property, a shorthand property, a getter, a setter, or a method but instead found '`'
  ┌─ css-prop.js:3:21
  │
3 │   return (<div css={`
  │                     ^ Expected a property, a shorthand property, a getter, a setter, or a method here

error[SyntaxError]: expected `,` but instead found `color`
  ┌─ css-prop.js:4:5
  │
4 │     color: blue;
  │     ^^^^^ unexpected

error[SyntaxError]: expected `,` but instead found `;`
  ┌─ css-prop.js:4:16
  │
4 │     color: blue;
  │                ^ unexpected

error[SyntaxError]: Expected a semicolon or an implicit semicolon after a statement, but found none
  ┌─ css-prop.js:5:14
  │
5 │     font-size: 17 px;
  │     ---------^
  │     │        │
  │     │        An explicit or implicit semicolon is expected here...
  │     ...Which is required to end this statement

error[SyntaxError]: expected a statement but instead found '&:hover'
  ┌─ css-prop.js:7:5
  │
7 │     &:hover {
  │     ^^^^^^^ Expected a statement here

error[SyntaxError]: expected a statement but instead found '& .some-'
   ┌─ css-prop.js:11:5
   │
11 │     & .some-class {
   │     ^^^^^^^^ Expected a statement here

error[SyntaxError]: class declarations must have a name
   ┌─ css-prop.js:11:13
   │
11 │     & .some-class {
   │             ^^^^^^

error[SyntaxError]: expected a semicolon to end the class property, but found none
   ┌─ css-prop.js:12:7
   │
12 │       font-size: 20px;
   │       ^^^^

error[SyntaxError]: expected an identifier, a string literal, a number literal, a private field name, or a computed name but instead found '-'
   ┌─ css-prop.js:12:11
   │
12 │       font-size: 20px;
   │           ^ Expected an identifier, a string literal, a number literal, a private field name, or a computed name here

error[SyntaxError]: return types can only be used in TypeScript files
   ┌─ css-prop.js:12:16
   │
12 │       font-size: 20px;
   │                ^ remove this type annotation

error[SyntaxError]: expected a semicolon to end the class property, but found none
   ┌─ css-prop.js:12:12
   │
12 │       font-size: 20px;
   │            ^^^^^

error[SyntaxError]: expected an identifier, a string literal, a number literal, a private field name, or a computed name but instead found '20px'
   ┌─ css-prop.js:12:18
   │
12 │       font-size: 20px;
   │                  ^^^^ Expected an identifier, a string literal, a number literal, a private field name, or a computed name here

error[SyntaxError]: Expected a semicolon or an implicit semicolon after a statement, but found none
   ┌─ css-prop.js:23:14
   │  
14 │ ┌   `}>
15 │ │     This will be blue until hovered.
16 │ │     <div className="some-class">
17 │ │       This font size will be 20px
   · │
22 │ │ const TestComponent = ({ children, ...props }) => (
23 │ │   <div css={`color: white; background: black`}>
   │ │              ^^^^^ An explicit or implicit semicolon is expected here...
   │ └──────────────────' ...Which is required to end this statement

error: unterminated template literal
   ┌─ css-prop.js:23:46
   │  
23 │     <div css={`color: white; background: black`}>
   │ ┌──────────────────────────────────────────────^
24 │ │     {children}
25 │ │   </div>
26 │ │ );
27 │ │ 
   │ └^

error[SyntaxError]: Invalid template literal
   ┌─ css-prop.js:23:46
   │  
23 │     <div css={`color: white; background: black`}>
   │ ┌──────────────────────────────────────────────^
24 │ │     {children}
25 │ │   </div>
26 │ │ );
27 │ │ 
   │ └^

error[SyntaxError]: expected `'}'` but instead the file ends
   ┌─ css-prop.js:27:1
   │
27 │ 
   │ ^ the file ends here
=======
error: numbers cannot be followed by identifiers directly after
   ┌─ css-prop.js:17:32
   │
17 │       This font size will be 20px
   │                                ^^ an identifier cannot appear here

error[SyntaxError]: JSX elements are a JSX only feature. Convert your file to a JSX file or remove the syntax.
   ┌─ css-prop.js:3:11
   │  
 3 │     return (<div css={`
   │ ┌───────────^
 4 │ │     color: blue;
 5 │ │     font-size: 17 px;
 6 │ │ 
   · │
18 │ │     </div>
19 │ │   </div>)
   │ └────────^ JSX only syntax

error[SyntaxError]: JSX elements are a JSX only feature. Convert your file to a JSX file or remove the syntax.
   ┌─ css-prop.js:23:3
   │  
23 │ ┌   <div css={`color: white; background: black`}>
24 │ │     {children}
25 │ │   </div>
26 │ │ );
   │ └─^ JSX only syntax
>>>>>>> 5e7841b546 (update rast/snap files)


```


