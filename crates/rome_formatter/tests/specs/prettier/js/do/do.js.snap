---
source: crates/rome_formatter/tests/prettier_tests.rs
assertion_line: 144
expression: do.js

---
# Input
```js
const envSpecific = {
  domain:
    do {
      if(env === 'production') 'https://abc.mno.com/';
      else if(env === 'development') 'http://localhost:4000';
    }
};

let x = do {
  let tmp = f();
  tmp * tmp + 1
};

let y = do {
  if (foo()) { f() }
  else if (bar()) { g() }
  else { h() }
};

function foo() {
  return (
    <nav>
      <Home />
      {
        do {
          if (loggedIn) {
            <LogoutButton />
          } else {
            <LoginButton />
          }
        }
      }
    </nav>
  );
}

(do {});
(do {} + 1);
(1 + do {});
() => do {};

(do {
  switch(0) {
    case 0: "foo";
    case 1: break;
  }
});

() => do {
  var obj = { foo: "bar", bar: "foo" };
  for (var key in obj) {
    obj[key];
  }
};

```

# Output
```js
const envSpecific = {
  domain:
    do {
      if(env === 'production') 'https://abc.mno.com/';
else
if (env === "development") {
  "http://localhost:4000";
}
}
}

let x =
do {
  let tmp = f();
  tmp * tmp + 1
};

let y =
do {
  if (foo()) { f() }
  else if (bar()) { g() }
  else { h() }
};

function foo() {
  return (
    <nav>
<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
      <Home />
  {
    do {
=======
>>>>>>> a23ec66cbf (abandoning jsx if no closing element is found)
      <;
  Home />
      {
        do {
<<<<<<< HEAD
=======
>>>>>>> 0ae10e4634 (jsx in arrow functions and as statements)
=======
      <Home />
  {
    do {
>>>>>>> 9259ba1f51 (abandoning jsx if no closing element is found)
>>>>>>> a23ec66cbf (abandoning jsx if no closing element is found)
          if (loggedIn) {
            <LogoutButton />
          } else {
            <LoginButton />
          }
        }
<<<<<<< HEAD
      }
    </nav>
=======
<<<<<<< HEAD
<<<<<<< HEAD
  }
  </nav>
=======
      }
    </nav>
>>>>>>> 0ae10e4634 (jsx in arrow functions and as statements)
=======
  }
  </nav>
>>>>>>> 9259ba1f51 (abandoning jsx if no closing element is found)
>>>>>>> a23ec66cbf (abandoning jsx if no closing element is found)
  )
}

(
do {});
(
do {} + 1);
(1 +
do {});
() =>
do {};

(
do {
  switch(0) {
    case 0: "foo";
    case 1: break;
  }
});

() =>
do {
  var obj = { foo: "bar", bar: "foo" };
  for (var key in obj) {
    obj[key];
  }
};

```

# Errors
```
error[SyntaxError]: expected an expression, or an assignment but instead found 'do'
  ┌─ do.js:3:5
  │
3 │     do {
  │     ^^ Expected an expression, or an assignment here

error[SyntaxError]: expected `:` but instead found `{`
  ┌─ do.js:3:8
  │
3 │     do {
  │        ^ unexpected

error[SyntaxError]: expected `,` but instead found `===`
  ┌─ do.js:4:14
  │
4 │       if(env === 'production') 'https://abc.mno.com/';
  │              ^^^ unexpected

error[SyntaxError]: expected a function body but instead found ''https://abc.mno.com/''
  ┌─ do.js:4:32
  │
4 │       if(env === 'production') 'https://abc.mno.com/';
  │                                ^^^^^^^^^^^^^^^^^^^^^^ Expected a function body here

error[SyntaxError]: expected `:` but instead found `;`
  ┌─ do.js:4:54
  │
4 │       if(env === 'production') 'https://abc.mno.com/';
  │                                                      ^ unexpected

error[SyntaxError]: expected a statement but instead found 'else'
  ┌─ do.js:5:7
  │
5 │       else if(env === 'development') 'http://localhost:4000';
  │       ^^^^ Expected a statement here

error[SyntaxError]: expected a statement but instead found '}
}'
  ┌─ do.js:6:5
  │  
6 │ ┌     }
7 │ │ };
  │ └─^ Expected a statement here

error[SyntaxError]: expected an expression, or an assignment but instead found 'do'
  ┌─ do.js:9:9
  │
9 │ let x = do {
  │         ^^ Expected an expression, or an assignment here

error[SyntaxError]: expected `while` but instead found `;`
   ┌─ do.js:12:2
   │
12 │ };
   │  ^ unexpected

error[SyntaxError]: expected an expression, or an assignment but instead found 'do'
   ┌─ do.js:14:9
   │
14 │ let y = do {
   │         ^^ Expected an expression, or an assignment here

error[SyntaxError]: expected `while` but instead found `;`
   ┌─ do.js:18:2
   │
18 │ };
   │  ^ unexpected

<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 9259ba1f51 (abandoning jsx if no closing element is found)
error[SyntaxError]: type assertion are a TypeScript only feature. Convert your file to a TypeScript file or remove the syntax.
   ┌─ do.js:22:5
   │  
22 │ ┌     <nav>
23 │ │       <Home />
   │ └──────────────^ TypeScript only syntax
<<<<<<< HEAD
=======
>>>>>>> a23ec66cbf (abandoning jsx if no closing element is found)
error[SyntaxError]: expected `')'` but instead found `Home`
   ┌─ do.js:23:8
   │
23 │       <Home />
   │        ^^^^ unexpected
<<<<<<< HEAD
=======
>>>>>>> 0ae10e4634 (jsx in arrow functions and as statements)
=======
>>>>>>> 9259ba1f51 (abandoning jsx if no closing element is found)
>>>>>>> a23ec66cbf (abandoning jsx if no closing element is found)

error[SyntaxError]: expected `')'` but instead found `{`
   ┌─ do.js:24:7
   │
24 │       {
   │       ^ unexpected
<<<<<<< HEAD

<<<<<<< HEAD
<<<<<<< HEAD
error[SyntaxError]: JSX elements are a JSX only feature. Convert your file to a JSX file or remove the syntax.
   ┌─ do.js:27:13
<<<<<<< HEAD
   │
27 │             <LogoutButton />
   │             ^^^^^^^^^^^^^^^^ JSX only syntax
=======
   │  
27 │ ┌             <LogoutButton />
28 │ │           } else {
   │ └───────────^ JSX only syntax
=======
error[SyntaxError]: expected `,` but instead found `else`
   ┌─ do.js:28:13
   │
28 │           } else {
   │             ^^^^ unexpected

error[SyntaxError]: expected `:` but instead found `{`
   ┌─ do.js:28:18
   │
28 │           } else {
   │                  ^ unexpected
>>>>>>> 0ae10e4634 (jsx in arrow functions and as statements)
>>>>>>> ed0e4b6d04 (jsx in arrow functions and as statements)

error[SyntaxError]: JSX elements are a JSX only feature. Convert your file to a JSX file or remove the syntax.
   ┌─ do.js:29:13
   │
29 │             <LoginButton />
   │             ^^^^^^^^^^^^^^^ JSX only syntax

error[SyntaxError]: expected `while` but instead found `}`
=======

<<<<<<< HEAD
<<<<<<< HEAD
error[SyntaxError]: expected `WHILE_KW` but instead found `}`
>>>>>>> 9259ba1f51 (abandoning jsx if no closing element is found)
=======
=======
error[SyntaxError]: jsx elements are a Jsx only feature. Convert your file to a Jsx file or remove the syntax.
=======
error[SyntaxError]: JSX elements are a JSX only feature. Convert your file to a JSX file or remove the syntax.
>>>>>>> 1273bfcd13 (jsx is now uppercase)
   ┌─ do.js:27:13
   │  
27 │ ┌             <LogoutButton />
28 │ │           } else {
   │ └───────────^ JSX only syntax

error[SyntaxError]: JSX elements are a JSX only feature. Convert your file to a JSX file or remove the syntax.
   ┌─ do.js:29:13
   │  
29 │ ┌             <LoginButton />
30 │ │           }
   │ └───────────^ JSX only syntax

>>>>>>> 844f141c04 (jsx parser enabled by language variant)
error[SyntaxError]: expected `while` but instead found `}`
>>>>>>> 3f24da8315 (formatter codegen supporting jsx)
   ┌─ do.js:32:7
   │
32 │       }
   │       ^ unexpected

error[SyntaxError]: type assertion are a TypeScript only feature. Convert your file to a TypeScript file or remove the syntax.
   ┌─ do.js:33:5
   │
33 │     </nav>
   │     ^^^^^ TypeScript only syntax

error[SyntaxError]: expected an expression but instead found ')'
   ┌─ do.js:34:3
   │
34 │   );
   │   ^ Expected an expression here

error[SyntaxError]: expected `')'` but instead found `do`
   ┌─ do.js:37:2
   │
37 │ (do {});
   │  ^^ unexpected

error[SyntaxError]: expected `while` but instead found `)`
   ┌─ do.js:37:7
   │
37 │ (do {});
   │       ^ unexpected

error[SyntaxError]: expected `')'` but instead found `do`
   ┌─ do.js:38:2
   │
38 │ (do {} + 1);
   │  ^^ unexpected

error[SyntaxError]: expected `while` but instead found `+`
   ┌─ do.js:38:8
   │
38 │ (do {} + 1);
   │        ^ unexpected

error[SyntaxError]: expected an expression but instead found 'do'
   ┌─ do.js:39:6
   │
39 │ (1 + do {});
   │      ^^ Expected an expression here

error[SyntaxError]: expected `while` but instead found `)`
   ┌─ do.js:39:11
   │
39 │ (1 + do {});
   │           ^ unexpected

error[SyntaxError]: expected a function body, or an expression but instead found 'do'
   ┌─ do.js:40:7
   │
40 │ () => do {};
   │       ^^ Expected a function body, or an expression here

error[SyntaxError]: expected `while` but instead found `;`
   ┌─ do.js:40:12
   │
40 │ () => do {};
   │            ^ unexpected

error[SyntaxError]: expected `')'` but instead found `do`
   ┌─ do.js:42:2
   │
42 │ (do {
   │  ^^ unexpected

error[SyntaxError]: expected `while` but instead found `)`
   ┌─ do.js:47:2
   │
47 │ });
   │  ^ unexpected

error[SyntaxError]: expected a function body, or an expression but instead found 'do'
   ┌─ do.js:49:7
   │
49 │ () => do {
   │       ^^ Expected a function body, or an expression here

error[SyntaxError]: expected `while` but instead found `;`
   ┌─ do.js:54:2
   │
54 │ };
   │  ^ unexpected


```


