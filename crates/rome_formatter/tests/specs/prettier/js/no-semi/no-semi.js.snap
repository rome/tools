---
source: crates/rome_formatter/tests/prettier_tests.rs
assertion_line: 144
expression: no-semi.js

---
# Input
```js

// with preexisting semi

x; [1, 2, 3].forEach(fn)
x; [a, b, ...c] = [1, 2]
x; /r/i.test('r')
x; +1
x; - 1
x; ('h' + 'i').repeat(10)
x; (1, 2)
x; (() => {})()
x; ({ a: 1 }).entries()
x; ({ a: 1 }).entries()
x; <Hello />
x; `string`
x; (x, y) => x

// doesn't have to be preceded by a semicolon

class X {} [1, 2, 3].forEach(fn)


// don't semicolon if it doesn't start statement

if (true) (() => {})()


// check indentation

if (true) {
  x; (() => {})()
}

// check statement clauses

do break; while (false)
if (true) do break; while (false)

if (true) 1; else 2
for (;;) ;
for (x of y) ;

debugger

// check that it doesn't break non-ASI

1
- 1

1
+ 1

1
/ 1

arr
[0]

fn
(x)

!1

1
< 1

tag
`string`

x; x => x

x; (a || b).c++

x; ++(a || b).c

while (false)
  (function(){}())

aReallyLongLine012345678901234567890123456789012345678901234567890123456789 *
  (b + c)

```

# Output
```js
// with preexisting semi

x;
[1, 2, 3].forEach(fn);
x;
[a, b, ...c] = [1, 2];
x;
/r/i.test("r");
x;
+1;
x;
-1;
x;
("h" + "i").repeat(10);
x;
(1, 2);
x;
(() => {})();
x;
({ a: 1 }).entries();
x;
({ a: 1 }).entries();
x;
<Hello />
x;
`string`;
x;
(x, y) => x;

// doesn't have to be preceded by a semicolon

class X {}
[1, 2, 3].forEach(fn);

// don't semicolon if it doesn't start statement

if (true) {
  (() => {})();
}

// check indentation

if (true) {
  x;
  (() => {})();
}

// check statement clauses

do break; while (false);
if (true) {
  do break; while (false);
}

if (true) {
  1;
} else {
  2;
}
for (;;);
for (x of y);

debugger;

// check that it doesn't break non-ASI

1 - 1;

1 + 1;

1 / 1;

arr[0];

fn(x);

!1;

1 < 1;

tag`string`;

x;
(x) => x;

x;
(a || b).c++;

x;
++(a || b).c;

while (false) (function () {}());

aReallyLongLine012345678901234567890123456789012345678901234567890123456789 * (
  b + c
);

```

<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
# Errors
```
error[SyntaxError]: JSX elements are a JSX only feature. Convert your file to a JSX file or remove the syntax.
   ┌─ no-semi.js:14:4
   │
14 │ x; <Hello />
   │    ^^^^^^^^^ JSX only syntax
=======
# Errors
```
error[SyntaxError]: JSX elements are a JSX only feature. Convert your file to a JSX file or remove the syntax.
   ┌─ no-semi.js:14:4
   │  
14 │   x; <Hello />
   │ ┌────^
15 │ │ x; `string`
<<<<<<< HEAD
   │ └─^ Jsx only syntax
>>>>>>> 1ab4ecffde (jsx parser enabled by language variant)
=======
   │ └─^ JSX only syntax
>>>>>>> 5fae734162 (jsx is now uppercase)


```

<<<<<<< HEAD
=======
>>>>>>> 0ae10e4634 (jsx in arrow functions and as statements)
=======
>>>>>>> 5f301e8a10 (formatter codegen supporting jsx)
=======
>>>>>>> 1ab4ecffde (jsx parser enabled by language variant)

