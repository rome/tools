---
source: crates/rome_formatter/tests/prettier_tests.rs
assertion_line: 144
expression: nested.js

---
# Input
```js
let icecream = what == "cone"
  ? p => !!p ? `here's your ${p} cone` : `just the empty cone for you`
  : p => `here's your ${p} ${what}`;

const value = condition1
? value1
: condition2
    ? value2
    : condition3
        ? value3
        : value4;


const StorybookLoader = ({ match }) => (
  match.params.storyId === "button"
    ? <ButtonStorybook />
    : match.params.storyId === "color"
    ? <ColorBook />
    : match.params.storyId === "typography"
    ? <TypographyBook />
    : match.params.storyId === "loading"
    ? <LoaderStorybook />
    : match.params.storyId === "deal-list"
    ? <DealListStory />
    : (
      <Message>
        <Title>{'Missing story book'}</Title>
        <Content>
          <BackButton/>
        </Content>
      </Message>
    )
)

const message =
    i % 3 === 0 && i % 5 === 0 ?
        'fizzbuzz'
    : i % 3 === 0 ?
        'fizz'
    : i % 5 === 0 ?
        'buzz'
    :
        String(i)

const paymentMessage = state == 'success'
  ? 'Payment completed successfully'

: state == 'processing'
  ? 'Payment processing'

: state == 'invalid_cvc'
  ? 'There was an issue with your CVC number'

: state == 'invalid_expiry'
  ? 'Expiry must be sometime in the past.'

  : 'There was an issue with the payment.  Please contact support.'

const paymentMessage2 = state == 'success'
  ? 1 //'Payment completed successfully'

: state == 'processing'
  ? 2 //'Payment processing'

: state == 'invalid_cvc'
  ? 3 //'There was an issue with your CVC number'

: true //state == 'invalid_expiry'
  ? 4 //'Expiry must be sometime in the past.'

  : 5 // 'There was an issue with the payment.  Please contact support.'

const foo = <div className={'match-achievement-medal-type type' + (medals[0].record ? '-record' : (medals[0].unique ? '-unique' : medals[0].type))}>
	{medals[0].record ? (
		i18n('Record')
	) : medals[0].unique ? (
		i18n('Unique')
	) : medals[0].type === 0 ? (
		i18n('Silver')
	) : medals[0].type === 1 ? (
		i18n('Gold')
	) : medals[0].type === 2 ? (
		i18n('Platinum')
	) : (
		i18n('Theme')
	)}
</div>

a
    ? literalline
    : {
      123: 12
    }
    ? line
    : softline

```

# Output
```js
let icecream = what == "cone" ? (p) =>
  !!p ? `here's your ${p} cone` : `just the empty cone for you` : (p) =>
  `here's your ${p} ${what}`;

const value = condition1
  ? value1
  : condition2
    ? value2
    : condition3
      ? value3
      : value4;

const StorybookLoader = ({ match }) => (
  match.params.storyId === "button"
    ? <ButtonStorybook />
    : match.params.storyId === "color"
    ? <ColorBook />
    : match.params.storyId === "typography"
    ? <TypographyBook />
    : match.params.storyId === "loading"
    ? <LoaderStorybook />
    : match.params.storyId === "deal-list"
    ? <DealListStory />
    : (
      <Message>
        <Title>{'Missing story book'}</Title>
        <Content>
          <BackButton/>
        </Content>
      </Message>
<<<<<<< HEAD
<<<<<<< HEAD
    )
);
<<<<<<< HEAD

const message = i % 3 === 0 && i % 5 === 0
  ? "fizzbuzz"
  : i % 3 === 0
    ? "fizz"
    : i % 5 === 0
      ? "buzz"
      : String(i);

const paymentMessage = state == "success"
  ? "Payment completed successfully"
  : state == "processing"
    ? "Payment processing"
    : state == "invalid_cvc"
      ? "There was an issue with your CVC number"
      : state == "invalid_expiry"
        ? "Expiry must be sometime in the past."
        : "There was an issue with the payment.  Please contact support.";

const paymentMessage2 = state == "success"
  ? 1 //'Payment completed successfully'
  : state == "processing"
    ? 2 //'Payment processing'
    : state == "invalid_cvc"
      ? 3 //'There was an issue with your CVC number'
      : true
        //state == 'invalid_expiry'
        ? 4 //'Expiry must be sometime in the past.'
        : 5; // 'There was an issue with the payment.  Please contact support.'

const foo = <div className={'match-achievement-medal-type type' + (medals[0].record ? '-record' : (medals[0].unique ? '-unique' : medals[0].type))}>
	{medals[0].record ? (
		i18n('Record')
	) : medals[0].unique ? (
		i18n('Unique')
	) : medals[0].type === 0 ? (
		i18n('Silver')
	) : medals[0].type === 1 ? (
		i18n('Gold')
	) : medals[0].type === 2 ? (
		i18n('Platinum')
	) : (
		i18n('Theme')
	)}
</div>

a
    ? literalline
    : {
      123: 12
    }
    ? line
    : softline

```

# Errors
```
error[SyntaxError]: JSX elements are a JSX only feature. Convert your file to a JSX file or remove the syntax.
<<<<<<< HEAD
   ┌─ nested.js:16:7
   │  
16 │       ? <ButtonStorybook />
   │ ┌───────^
17 │ │     : match.params.storyId === "color"
   │ └─────^ JSX only syntax

error[SyntaxError]: JSX elements are a JSX only feature. Convert your file to a JSX file or remove the syntax.
   ┌─ nested.js:18:7
   │  
18 │       ? <ColorBook />
   │ ┌───────^
19 │ │     : match.params.storyId === "typography"
   │ └─────^ JSX only syntax

error[SyntaxError]: JSX elements are a JSX only feature. Convert your file to a JSX file or remove the syntax.
   ┌─ nested.js:20:7
   │  
20 │       ? <TypographyBook />
   │ ┌───────^
21 │ │     : match.params.storyId === "loading"
   │ └─────^ JSX only syntax

error[SyntaxError]: JSX elements are a JSX only feature. Convert your file to a JSX file or remove the syntax.
   ┌─ nested.js:22:7
   │  
22 │       ? <LoaderStorybook />
   │ ┌───────^
23 │ │     : match.params.storyId === "deal-list"
   │ └─────^ JSX only syntax

error[SyntaxError]: JSX elements are a JSX only feature. Convert your file to a JSX file or remove the syntax.
   ┌─ nested.js:24:7
   │  
24 │       ? <DealListStory />
   │ ┌───────^
25 │ │     : (
   │ └─────^ JSX only syntax

error[SyntaxError]: type assertion are a TypeScript only feature. Convert your file to a TypeScript file or remove the syntax.
   ┌─ nested.js:26:7
   │  
26 │ ┌       <Message>
27 │ │         <Title>{'Missing story book'}</Title>
   │ └─────────────────────────────────────^ TypeScript only syntax
=======
=======
    )
>>>>>>> 9259ba1f51 (abandoning jsx if no closing element is found)
)
=======
>>>>>>> 844f141c04 (jsx parser enabled by language variant)

const message = i % 3 === 0 && i % 5 === 0
  ? "fizzbuzz"
  : i % 3 === 0
    ? "fizz"
    : i % 5 === 0
      ? "buzz"
      : String(i);

const paymentMessage = state == "success"
  ? "Payment completed successfully"
  : state == "processing"
    ? "Payment processing"
    : state == "invalid_cvc"
      ? "There was an issue with your CVC number"
      : state == "invalid_expiry"
        ? "Expiry must be sometime in the past."
        : "There was an issue with the payment.  Please contact support.";

const paymentMessage2 = state == "success"
  ? 1 //'Payment completed successfully'
  : state == "processing"
    ? 2 //'Payment processing'
    : state == "invalid_cvc"
      ? 3 //'There was an issue with your CVC number'
      : true
        //state == 'invalid_expiry'
        ? 4 //'Expiry must be sometime in the past.'
        : 5; // 'There was an issue with the payment.  Please contact support.'

const foo = <div className={'match-achievement-medal-type type' + (medals[0].record ? '-record' : (medals[0].unique ? '-unique' : medals[0].type))}>
	{medals[0].record ? (
		i18n('Record')
	) : medals[0].unique ? (
		i18n('Unique')
	) : medals[0].type === 0 ? (
		i18n('Silver')
	) : medals[0].type === 1 ? (
		i18n('Gold')
	) : medals[0].type === 2 ? (
		i18n('Platinum')
	) : (
		i18n('Theme')
	)}
</div>

a
    ? literalline
    : {
      123: 12
    }
    ? line
    : softline

```

# Errors
```
<<<<<<< HEAD
<<<<<<< HEAD
error[SyntaxError]: expected `')'` but instead found `Title`
   ┌─ nested.js:27:10
   │
27 │         <Title>{'Missing story book'}</Title>
   │          ^^^^^ unexpected

error[SyntaxError]: expected `:` but instead found `}`
   ┌─ nested.js:27:37
   │
27 │         <Title>{'Missing story book'}</Title>
   │                                     ^ unexpected
>>>>>>> 0ae10e4634 (jsx in arrow functions and as statements)
=======
=======
error[SyntaxError]: jsx elements are a Jsx only feature. Convert your file to a Jsx file or remove the syntax.
=======
>>>>>>> 1273bfcd13 (jsx is now uppercase)
   ┌─ nested.js:16:7
   │  
16 │       ? <ButtonStorybook />
   │ ┌───────^
17 │ │     : match.params.storyId === "color"
   │ └─────^ JSX only syntax

error[SyntaxError]: JSX elements are a JSX only feature. Convert your file to a JSX file or remove the syntax.
   ┌─ nested.js:18:7
   │  
18 │       ? <ColorBook />
   │ ┌───────^
19 │ │     : match.params.storyId === "typography"
   │ └─────^ JSX only syntax

error[SyntaxError]: JSX elements are a JSX only feature. Convert your file to a JSX file or remove the syntax.
   ┌─ nested.js:20:7
   │  
20 │       ? <TypographyBook />
   │ ┌───────^
21 │ │     : match.params.storyId === "loading"
   │ └─────^ JSX only syntax

error[SyntaxError]: JSX elements are a JSX only feature. Convert your file to a JSX file or remove the syntax.
   ┌─ nested.js:22:7
   │  
22 │       ? <LoaderStorybook />
   │ ┌───────^
23 │ │     : match.params.storyId === "deal-list"
   │ └─────^ JSX only syntax

error[SyntaxError]: JSX elements are a JSX only feature. Convert your file to a JSX file or remove the syntax.
   ┌─ nested.js:24:7
   │  
24 │       ? <DealListStory />
   │ ┌───────^
25 │ │     : (
   │ └─────^ JSX only syntax

>>>>>>> 844f141c04 (jsx parser enabled by language variant)
error[SyntaxError]: type assertion are a TypeScript only feature. Convert your file to a TypeScript file or remove the syntax.
   ┌─ nested.js:26:7
   │  
26 │ ┌       <Message>
27 │ │         <Title>{'Missing story book'}</Title>
   │ └─────────────────────────────────────^ TypeScript only syntax
>>>>>>> 9259ba1f51 (abandoning jsx if no closing element is found)

error[SyntaxError]: Expected an expression for the right hand side of a `<`, but found an operator instead
   ┌─ nested.js:27:39
   │
27 │         <Title>{'Missing story book'}</Title>
   │                                      -^ But this operator was encountered instead
   │                                      │ 
   │                                      This operator requires a right hand side value

error[SyntaxError]: type assertion are a TypeScript only feature. Convert your file to a TypeScript file or remove the syntax.
   ┌─ nested.js:28:9
   │  
28 │ ┌         <Content>
29 │ │           <BackButton/>
<<<<<<< HEAD
<<<<<<< HEAD
   │ └───────────────────────^ TypeScript only syntax
=======
   │ │            ^^^^^^^^^^ An explicit or implicit semicolon is expected here...
   │ └─────────────────────' ...Which is required to end this statement

error[SyntaxError]: Expected an expression for the right hand side of a `/`, but found an operator instead
   ┌─ nested.js:29:23
   │
29 │           <BackButton/>
   │                      -^ But this operator was encountered instead
   │                      │ 
   │                      This operator requires a right hand side value
>>>>>>> 0ae10e4634 (jsx in arrow functions and as statements)

=======
   │ └───────────────────────^ TypeScript only syntax

>>>>>>> 9259ba1f51 (abandoning jsx if no closing element is found)
error[SyntaxError]: Expected an expression for the right hand side of a `<`, but found an operator instead
   ┌─ nested.js:30:10
   │
30 │         </Content>
   │         -^ But this operator was encountered instead
   │         │ 
   │         This operator requires a right hand side value

error[SyntaxError]: type assertion are a TypeScript only feature. Convert your file to a TypeScript file or remove the syntax.
   ┌─ nested.js:31:7
   │
31 │       </Message>
   │       ^ TypeScript only syntax

error[SyntaxError]: expected an expression but instead found ')'
   ┌─ nested.js:32:5
   │
32 │     )
   │     ^ Expected an expression here

error[SyntaxError]: Invalid assignment to `<div className`
   ┌─ nested.js:73:13
   │
73 │ const foo = <div className={'match-achievement-medal-type type' + (medals[0].record ? '-record' : (medals[0].unique ? '-unique' : medals[0].type))}>
   │             ^^^^^^^^^^^^^^ This expression cannot be assigned to

error[SyntaxError]: expected `:` but instead found `+`
   ┌─ nested.js:73:65
   │
73 │ const foo = <div className={'match-achievement-medal-type type' + (medals[0].record ? '-record' : (medals[0].unique ? '-unique' : medals[0].type))}>
   │                                                                 ^ unexpected

error[SyntaxError]: expected `,` but instead found `[`
   ┌─ nested.js:74:9
   │
74 │     {medals[0].record ? (
   │            ^ unexpected

error[SyntaxError]: expected `:` but instead found `.`
   ┌─ nested.js:74:12
   │
74 │     {medals[0].record ? (
   │               ^ unexpected

error[SyntaxError]: expected `,` but instead found `i18n`
   ┌─ nested.js:75:3
   │
75 │         i18n('Record')
   │         ^^^^ unexpected

error[SyntaxError]: expected a parameter but instead found ''Record''
   ┌─ nested.js:75:8
   │
75 │         i18n('Record')
   │              ^^^^^^^^ Expected a parameter here

error[SyntaxError]: expected a function body but instead found ')'
   ┌─ nested.js:76:2
   │
76 │     ) : medals[0].unique ? (
   │     ^ Expected a function body here

error[SyntaxError]: Expected an expression for the right hand side of a `<`, but found an operator instead
   ┌─ nested.js:87:2
   │
87 │ </div>
   │ -^ But this operator was encountered instead
   │ │ 
   │ This operator requires a right hand side value


```


