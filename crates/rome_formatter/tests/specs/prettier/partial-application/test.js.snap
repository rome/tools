---
source: crates/rome_formatter/tests/prettier_tests.rs
assertion_line: 83
expression: test.js

---
# Input
```js
const addOne = add(1, ?); // apply from the left
addOne(2); // 3

const addTen = add(?, 10); // apply from the right
addTen(2); // 12

// with pipeline
let newScore = player.score
  |> add(7, ?)
  |> clamp(0, 100, ?); // shallow stack, the pipe to `clamp` is the same frame as the pipe to `add`.

```

# Output
```js
const addOne = add(1, ?); // apply from the left
addOne(2); // 3

const addTen = add(?, 10); // apply from the right
addTen(2); // 12

// with pipeline
let newScore = player.score
  |> add(7, ?)
  |> clamp(0, 100, ?); // shallow stack, the pipe to `clamp` is the same frame as the pipe to `add`.

```

# Errors
```
error[SyntaxError]: expected an expression but instead found '?'
  ┌─ test.js:1:23
  │
1 │ const addOne = add(1, ?); // apply from the left
  │                       ^ Expected an expression here

error[SyntaxError]: expected an expression but instead found '?, 10'
  ┌─ test.js:4:20
  │
4 │ const addTen = add(?, 10); // apply from the right
  │                    ^^^^^ Expected an expression here

error[SyntaxError]: Expected an expression for the right hand side of a `|`, but found an operator instead
  ┌─ test.js:9:4
  │
9 │   |> add(7, ?)
  │   -^ But this operator was encountered instead
  │   │ 
  │   This operator requires a right hand side value

error[SyntaxError]: expected an expression but instead found '?'
  ┌─ test.js:9:13
  │
9 │   |> add(7, ?)
  │             ^ Expected an expression here

error[SyntaxError]: Expected an expression for the right hand side of a `|`, but found an operator instead
   ┌─ test.js:10:4
   │
10 │   |> clamp(0, 100, ?); // shallow stack, the pipe to `clamp` is the same frame as the pipe to `add`.
   │   -^ But this operator was encountered instead
   │   │ 
   │   This operator requires a right hand side value

error[SyntaxError]: expected an expression but instead found '?'
   ┌─ test.js:10:20
   │
10 │   |> clamp(0, 100, ?); // shallow stack, the pipe to `clamp` is the same frame as the pipe to `add`.
   │                    ^ Expected an expression here


```


