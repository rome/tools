---
source: crates/rome_formatter/tests/prettier_tests.rs
assertion_line: 123
expression: assignment2.ts

---
# Input
```js
const defaultMaskGetter = $parse(attrs[directiveName]) as (
  scope: ng.IScope
) => Mask;

(this.configuration as any) = (this.editor as any) = (this
  .editorBody as any) = undefined;

angular.module("foo").directive("formIsolator", () => {
  return {
    name: "form",
    controller: class FormIsolatorController {
      $addControl = angular.noop;
    } as ng.IControllerConstructor,
  };
});

(this.selectorElem as any) = this.multiselectWidget = this.initialValues = undefined;

const extraRendererAttrs = ((attrs.rendererAttrs &&
  this.utils.safeParseJsonString(attrs.rendererAttrs)) ||
  Object.create(null)) as FieldService.RendererAttributes;

const annotate = (angular.injector as any).$$annotate as (
  fn: Function
) => string[];

const originalPrototype = originalConstructor.prototype as TComponent & InjectionTarget,
  propertyToServiceName = originalPrototype._inject;

```

# Output
```js
const defaultMaskGetter = $parse(attrs[directiveName]) as (
  scope: ng.IScope
) => Mask;

(this.configuration as any) =
  (this.editor as any) =
    (this
  .editorBody as any) = undefined;

angular.module("foo").directive(
  "formIsolator",
  () => {
    return {
      name: "form",
      controller: class FormIsolatorController {
        $addControl = angular.noop;
      } as ng.IControllerConstructor,
    };
  },
);

(this.selectorElem as any) =
  this.multiselectWidget = this.initialValues = undefined;

const extraRendererAttrs = ((attrs.rendererAttrs && this.utils.safeParseJsonString(
  attrs.rendererAttrs,
)) || Object.create(null)) as FieldService.RendererAttributes;

const annotate = (angular.injector as any).$$annotate as (
  fn: Function
) => string[];

const originalPrototype = originalConstructor.prototype as TComponent & InjectionTarget,
  propertyToServiceName = originalPrototype._inject;

```

# Errors
```
error[SyntaxError]: Invalid assignment to `this.configuration as any`
  ┌─ assignment2.ts:5:2
  │
5 │ (this.configuration as any) = (this.editor as any) = (this
  │  ^^^^^^^^^^^^^^^^^^^^^^^^^ This expression cannot be assigned to

error[SyntaxError]: Invalid assignment to `this.editor as any`
  ┌─ assignment2.ts:5:32
  │
5 │ (this.configuration as any) = (this.editor as any) = (this
  │                                ^^^^^^^^^^^^^^^^^^ This expression cannot be assigned to

error[SyntaxError]: Invalid assignment to `this
  .editorBody as any`
  ┌─ assignment2.ts:5:55
  │  
5 │   (this.configuration as any) = (this.editor as any) = (this
  │ ┌───────────────────────────────────────────────────────^
6 │ │   .editorBody as any) = undefined;
  │ └────────────────────^ This expression cannot be assigned to

error[SyntaxError]: Invalid assignment to `this.selectorElem as any`
   ┌─ assignment2.ts:17:2
   │
17 │ (this.selectorElem as any) = this.multiselectWidget = this.initialValues = undefined;
   │  ^^^^^^^^^^^^^^^^^^^^^^^^ This expression cannot be assigned to


```


