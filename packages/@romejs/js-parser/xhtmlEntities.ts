/**
 * Portions Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

import {Dict} from "@romejs/typescript-helpers";

export const xhtmlEntityNameToChar: Dict<string> = {
	quot: '"',
	amp: "&",
	apos: "'",
	lt: "<",
	gt: ">",
	nbsp: "\xa0",
	iexcl: "\xa1",
	cent: "\xa2",
	pound: "\xa3",
	curren: "\xa4",
	yen: "\xa5",
	brvbar: "\xa6",
	sect: "\xa7",
	uml: "\xa8",
	copy: "\xa9",
	ordf: "\xaa",
	laquo: "\xab",
	not: "\xac",
	shy: "\xad",
	reg: "\xae",
	macr: "\xaf",
	deg: "\xb0",
	plusmn: "\xb1",
	sup2: "\xb2",
	sup3: "\xb3",
	acute: "\xb4",
	micro: "\xb5",
	para: "\xb6",
	middot: "\xb7",
	cedil: "\xb8",
	sup1: "\xb9",
	ordm: "\xba",
	raquo: "\xbb",
	frac14: "\xbc",
	frac12: "\xbd",
	frac34: "\xbe",
	iquest: "\xbf",
	Agrave: "\xc0",
	Aacute: "\xc1",
	Acirc: "\xc2",
	Atilde: "\xc3",
	Auml: "\xc4",
	Aring: "\xc5",
	AElig: "\xc6",
	Ccedil: "\xc7",
	Egrave: "\xc8",
	Eacute: "\xc9",
	Ecirc: "\xca",
	Euml: "\xcb",
	Igrave: "\xcc",
	Iacute: "\xcd",
	Icirc: "\xce",
	Iuml: "\xcf",
	ETH: "\xd0",
	Ntilde: "\xd1",
	Ograve: "\xd2",
	Oacute: "\xd3",
	Ocirc: "\xd4",
	Otilde: "\xd5",
	Ouml: "\xd6",
	times: "\xd7",
	Oslash: "\xd8",
	Ugrave: "\xd9",
	Uacute: "\xda",
	Ucirc: "\xdb",
	Uuml: "\xdc",
	Yacute: "\xdd",
	THORN: "\xde",
	szlig: "\xdf",
	agrave: "\xe0",
	aacute: "\xe1",
	acirc: "\xe2",
	atilde: "\xe3",
	auml: "\xe4",
	aring: "\xe5",
	aelig: "\xe6",
	ccedil: "\xe7",
	egrave: "\xe8",
	eacute: "\xe9",
	ecirc: "\xea",
	euml: "\xeb",
	igrave: "\xec",
	iacute: "\xed",
	icirc: "\xee",
	iuml: "\xef",
	eth: "\xf0",
	ntilde: "\xf1",
	ograve: "\xf2",
	oacute: "\xf3",
	ocirc: "\xf4",
	otilde: "\xf5",
	ouml: "\xf6",
	divide: "\xf7",
	oslash: "\xf8",
	ugrave: "\xf9",
	uacute: "\xfa",
	ucirc: "\xfb",
	uuml: "\xfc",
	yacute: "\xfd",
	thorn: "\xfe",
	yuml: "\xff",
	OElig: "\u0152",
	oelig: "\u0153",
	Scaron: "\u0160",
	scaron: "\u0161",
	Yuml: "\u0178",
	fnof: "\u0192",
	circ: "\u02c6",
	tilde: "\u02dc",
	Alpha: "\u0391",
	Beta: "\u0392",
	Gamma: "\u0393",
	Delta: "\u0394",
	Epsilon: "\u0395",
	Zeta: "\u0396",
	Eta: "\u0397",
	Theta: "\u0398",
	Iota: "\u0399",
	Kappa: "\u039a",
	Lambda: "\u039b",
	Mu: "\u039c",
	Nu: "\u039d",
	Xi: "\u039e",
	Omicron: "\u039f",
	Pi: "\u03a0",
	Rho: "\u03a1",
	Sigma: "\u03a3",
	Tau: "\u03a4",
	Upsilon: "\u03a5",
	Phi: "\u03a6",
	Chi: "\u03a7",
	Psi: "\u03a8",
	Omega: "\u03a9",
	alpha: "\u03b1",
	beta: "\u03b2",
	gamma: "\u03b3",
	delta: "\u03b4",
	epsilon: "\u03b5",
	zeta: "\u03b6",
	eta: "\u03b7",
	theta: "\u03b8",
	iota: "\u03b9",
	kappa: "\u03ba",
	lambda: "\u03bb",
	mu: "\u03bc",
	nu: "\u03bd",
	xi: "\u03be",
	omicron: "\u03bf",
	pi: "\u03c0",
	rho: "\u03c1",
	sigmaf: "\u03c2",
	sigma: "\u03c3",
	tau: "\u03c4",
	upsilon: "\u03c5",
	phi: "\u03c6",
	chi: "\u03c7",
	psi: "\u03c8",
	omega: "\u03c9",
	thetasym: "\u03d1",
	upsih: "\u03d2",
	piv: "\u03d6",
	ensp: "\u2002",
	emsp: "\u2003",
	thinsp: "\u2009",
	zwnj: "\u200c",
	zwj: "\u200d",
	lrm: "\u200e",
	rlm: "\u200f",
	ndash: "\u2013",
	mdash: "\u2014",
	lsquo: "\u2018",
	rsquo: "\u2019",
	sbquo: "\u201a",
	ldquo: "\u201c",
	rdquo: "\u201d",
	bdquo: "\u201e",
	dagger: "\u2020",
	Dagger: "\u2021",
	bull: "\u2022",
	hellip: "\u2026",
	permil: "\u2030",
	prime: "\u2032",
	Prime: "\u2033",
	lsaquo: "\u2039",
	rsaquo: "\u203a",
	oline: "\u203e",
	frasl: "\u2044",
	euro: "\u20ac",
	image: "\u2111",
	weierp: "\u2118",
	real: "\u211c",
	trade: "\u2122",
	alefsym: "\u2135",
	larr: "\u2190",
	uarr: "\u2191",
	rarr: "\u2192",
	darr: "\u2193",
	harr: "\u2194",
	crarr: "\u21b5",
	lArr: "\u21d0",
	uArr: "\u21d1",
	rArr: "\u21d2",
	dArr: "\u21d3",
	hArr: "\u21d4",
	forall: "\u2200",
	part: "\u2202",
	exist: "\u2203",
	empty: "\u2205",
	nabla: "\u2207",
	isin: "\u2208",
	notin: "\u2209",
	ni: "\u220b",
	prod: "\u220f",
	sum: "\u2211",
	minus: "\u2212",
	lowast: "\u2217",
	radic: "\u221a",
	prop: "\u221d",
	infin: "\u221e",
	ang: "\u2220",
	and: "\u2227",
	or: "\u2228",
	cap: "\u2229",
	cup: "\u222a",
	int: "\u222b",
	there4: "\u2234",
	sim: "\u223c",
	cong: "\u2245",
	asymp: "\u2248",
	ne: "\u2260",
	equiv: "\u2261",
	le: "\u2264",
	ge: "\u2265",
	sub: "\u2282",
	sup: "\u2283",
	nsub: "\u2284",
	sube: "\u2286",
	supe: "\u2287",
	oplus: "\u2295",
	otimes: "\u2297",
	perp: "\u22a5",
	sdot: "\u22c5",
	lceil: "\u2308",
	rceil: "\u2309",
	lfloor: "\u230a",
	rfloor: "\u230b",
	lang: "\u2329",
	rang: "\u232a",
	loz: "\u25ca",
	spades: "\u2660",
	clubs: "\u2663",
	hearts: "\u2665",
	diams: "\u2666",
};

export const xhtmlEntityCharToName: Dict<string> = {};
for (const key in xhtmlEntityNameToChar) {
	xhtmlEntityCharToName[xhtmlEntityNameToChar[key]] = key;
}

export function escapeXHTMLEntities(value: string, only?: Array<string>): string {
	let escaped = "";
	for (const char of value) {
		const entity = xhtmlEntityCharToName[char];
		if (entity !== undefined && (only === undefined || only.includes(char))) {
			escaped += `&${entity};`;
		} else {
			escaped += char;
		}
	}
	return escaped;
}
