Program {
  comments: Array []
  corrupt: false
  diagnostics: Array []
  directives: Array []
  filename: 'input.js'
  hasHoistedVars: false
  interpreter: undefined
  mtime: undefined
  sourceType: 'module'
  syntax: Array [
    'jsx'
    'flow'
  ]
  loc: Object {
    filename: 'input.js'
    end: Object {
      column: 0
      index: 52
      line: 2
    }
    start: Object {
      column: 0
      index: 0
      line: 1
    }
  }
  body: Array [
    ExportDefaultDeclaration {
      loc: Object {
        filename: 'input.js'
        end: Object {
          column: 51
          index: 51
          line: 1
        }
        start: Object {
          column: 0
          index: 0
          line: 1
        }
      }
      declaration: ArrowFunctionExpression {
        loc: Object {
          filename: 'input.js'
          end: Object {
            column: 50
            index: 50
            line: 1
          }
          start: Object {
            column: 15
            index: 15
            line: 1
          }
        }
        body: BlockStatement {
          body: Array []
          directives: Array []
          loc: Object {
            filename: 'input.js'
            end: Object {
              column: 50
              index: 50
              line: 1
            }
            start: Object {
              column: 48
              index: 48
              line: 1
            }
          }
        }
        head: FunctionHead {
          async: false
          hasHoistedVars: false
          params: Array []
          predicate: undefined
          thisType: undefined
          loc: Object {
            filename: 'input.js'
            end: Object {
              column: 48
              index: 48
              line: 1
            }
            start: Object {
              column: 15
              index: 15
              line: 1
            }
          }
          rest: BindingIdentifier {
            name: 'modifiers'
            loc: Object {
              filename: 'input.js'
              end: Object {
                column: 28
                index: 28
                line: 1
              }
              start: Object {
                column: 19
                index: 19
                line: 1
              }
            }
          }
          returnType: FlowGenericTypeAnnotation {
            id: ReferenceIdentifier {
              name: 'Array'
              loc: Object {
                filename: 'input.js'
                end: Object {
                  column: 36
                  index: 36
                  line: 1
                }
                start: Object {
                  column: 31
                  index: 31
                  line: 1
                }
              }
            }
            loc: Object {
              filename: 'input.js'
              end: Object {
                column: 44
                index: 44
                line: 1
              }
              start: Object {
                column: 31
                index: 31
                line: 1
              }
            }
            typeParameters: FlowTypeParameterInstantiation {
              loc: Object {
                filename: 'input.js'
                end: Object {
                  column: 44
                  index: 44
                  line: 1
                }
                start: Object {
                  column: 36
                  index: 36
                  line: 1
                }
              }
              params: Array [
                StringKeywordTypeAnnotation {
                  loc: Object {
                    filename: 'input.js'
                    end: Object {
                      column: 43
                      index: 43
                      line: 1
                    }
                    start: Object {
                      column: 37
                      index: 37
                      line: 1
                    }
                  }
                }
              ]
            }
          }
        }
      }
    }
  ]
}