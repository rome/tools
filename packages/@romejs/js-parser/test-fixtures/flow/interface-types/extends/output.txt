Program {
  comments: Array []
  corrupt: false
  diagnostics: Array []
  directives: Array []
  filename: 'input.js'
  hasHoistedVars: false
  interpreter: undefined
  mtime: undefined
  sourceType: 'module'
  syntax: Array [
    'jsx'
    'flow'
  ]
  loc: Object {
    filename: 'input.js'
    end: Object {
      column: 0
      index: 43
      line: 2
    }
    start: Object {
      column: 0
      index: 0
      line: 1
    }
  }
  body: Array [
    TypeAliasTypeAnnotation {
      id: BindingIdentifier {
        name: 'T'
        loc: Object {
          filename: 'input.js'
          end: Object {
            column: 6
            index: 6
            line: 1
          }
          start: Object {
            column: 5
            index: 5
            line: 1
          }
        }
      }
      typeParameters: undefined
      loc: Object {
        filename: 'input.js'
        end: Object {
          column: 42
          index: 42
          line: 1
        }
        start: Object {
          column: 0
          index: 0
          line: 1
        }
      }
      right: FlowInterfaceTypeAnnotation {
        loc: Object {
          filename: 'input.js'
          end: Object {
            column: 42
            index: 42
            line: 1
          }
          start: Object {
            column: 9
            index: 9
            line: 1
          }
        }
        extends: Array [
          FlowInterfaceExtends {
            id: ReferenceIdentifier {
              name: 'X'
              loc: Object {
                filename: 'input.js'
                end: Object {
                  column: 28
                  index: 28
                  line: 1
                }
                start: Object {
                  column: 27
                  index: 27
                  line: 1
                }
              }
            }
            typeParameters: undefined
            loc: Object {
              filename: 'input.js'
              end: Object {
                column: 28
                index: 28
                line: 1
              }
              start: Object {
                column: 27
                index: 27
                line: 1
              }
            }
          }
        ]
        body: FlowObjectTypeAnnotation {
          exact: false
          inexact: undefined
          loc: Object {
            filename: 'input.js'
            end: Object {
              column: 42
              index: 42
              line: 1
            }
            start: Object {
              column: 29
              index: 29
              line: 1
            }
          }
          properties: Array [
            FlowObjectTypeProperty {
              kind: 'init'
              key: Identifier {
                name: 'p'
                loc: Object {
                  filename: 'input.js'
                  end: Object {
                    column: 32
                    index: 32
                    line: 1
                  }
                  start: Object {
                    column: 31
                    index: 31
                    line: 1
                  }
                }
              }
              value: StringKeywordTypeAnnotation {
                loc: Object {
                  filename: 'input.js'
                  end: Object {
                    column: 40
                    index: 40
                    line: 1
                  }
                  start: Object {
                    column: 34
                    index: 34
                    line: 1
                  }
                }
              }
              optional: false
              proto: false
              static: false
              variance: undefined
              loc: Object {
                filename: 'input.js'
                end: Object {
                  column: 40
                  index: 40
                  line: 1
                }
                start: Object {
                  column: 31
                  index: 31
                  line: 1
                }
              }
            }
          ]
        }
      }
    }
  ]
}