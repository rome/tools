Program {
  comments: Array []
  directives: Array []
  filename: '..'
  hasHoistedVars: false
  interpreter: undefined
  mtime: undefined
  sourceType: 'script'
  syntax: Array []
  loc: Object {
    filename: '..'
    end: Object {
      column: 0
      index: 38
      line: 2
    }
    start: Object {
      column: 0
      index: 0
      line: 1
    }
  }
  diagnostics: Array [
    Object {
      advice: Array []
      category: 'parse/js'
      filename: '..'
      message: 'Unexpected token, expected ","'
      mtime: undefined
      origins: Array [Object {category: 'js-parser'}]
      end: Object {
        column: 22
        index: 22
        line: 1
      }
      start: Object {
        column: 21
        index: 21
        line: 1
      }
    }
  ]
  body: Array [
    VariableDeclarationStatement {
      loc: Object {
        filename: '..'
        end: Object {
          column: 27
          index: 27
          line: 1
        }
        start: Object {
          column: 0
          index: 0
          line: 1
        }
      }
      declaration: VariableDeclaration {
        kind: 'const'
        loc: Object {
          filename: '..'
          end: Object {
            column: 27
            index: 27
            line: 1
          }
          start: Object {
            column: 0
            index: 0
            line: 1
          }
        }
        declarations: Array [
          VariableDeclarator {
            id: BindingIdentifier {
              name: 'foo'
              loc: Object {
                filename: '..'
                end: Object {
                  column: 9
                  index: 9
                  line: 1
                }
                start: Object {
                  column: 6
                  index: 6
                  line: 1
                }
              }
            }
            loc: Object {
              filename: '..'
              end: Object {
                column: 27
                index: 27
                line: 1
              }
              start: Object {
                column: 6
                index: 6
                line: 1
              }
            }
            init: AssignmentExpression {
              operator: '='
              loc: Object {
                filename: '..'
                end: Object {
                  column: 27
                  index: 27
                  line: 1
                }
                start: Object {
                  column: 13
                  index: 13
                  line: 1
                }
              }
              right: BooleanLiteral {
                value: true
                loc: Object {
                  filename: '..'
                  end: Object {
                    column: 27
                    index: 27
                    line: 1
                  }
                  start: Object {
                    column: 23
                    index: 23
                    line: 1
                  }
                }
              }
              left: AssignmentObjectPattern {
                rest: undefined
                loc: Object {
                  filename: '..'
                  end: Object {
                    column: 20
                    index: 20
                    line: 1
                  }
                  start: Object {
                    column: 13
                    index: 13
                    line: 1
                  }
                }
                properties: Array [
                  AssignmentObjectPatternProperty {
                    key: StaticPropertyKey {
                      value: Identifier {
                        name: 'async'
                        loc: Object {
                          filename: '..'
                          end: Object {
                            column: 20
                            index: 20
                            line: 1
                          }
                          start: Object {
                            column: 15
                            index: 15
                            line: 1
                          }
                        }
                      }
                      loc: Object {
                        filename: '..'
                        end: Object {
                          column: 20
                          index: 20
                          line: 1
                        }
                        start: Object {
                          column: 15
                          index: 15
                          line: 1
                        }
                      }
                    }
                    value: AssignmentIdentifier {
                      name: 'async'
                      loc: Object {
                        filename: '..'
                        end: Object {
                          column: 20
                          index: 20
                          line: 1
                        }
                        start: Object {
                          column: 15
                          index: 15
                          line: 1
                        }
                      }
                    }
                    loc: Object {
                      filename: '..'
                      end: Object {
                        column: 20
                        index: 20
                        line: 1
                      }
                      start: Object {
                        column: 15
                        index: 15
                        line: 1
                      }
                    }
                  }
                ]
              }
            }
          }
        ]
      }
    }
    ExpressionStatement {
      loc: Object {
        filename: '..'
        end: Object {
          column: 29
          index: 29
          line: 1
        }
        start: Object {
          column: 28
          index: 28
          line: 1
        }
      }
      expression: ReferenceIdentifier {
        name: 'INVALID_PLACEHOLDER'
        loc: Object {
          filename: '..'
          end: Object {
            column: 29
            index: 29
            line: 1
          }
          start: Object {
            column: 28
            index: 28
            line: 1
          }
        }
      }
    }
    ExpressionStatement {
      loc: Object {
        filename: '..'
        end: Object {
          column: 30
          index: 30
          line: 1
        }
        start: Object {
          column: 29
          index: 29
          line: 1
        }
      }
      expression: ReferenceIdentifier {
        name: 'INVALID_PLACEHOLDER'
        loc: Object {
          filename: '..'
          end: Object {
            column: 30
            index: 30
            line: 1
          }
          start: Object {
            column: 29
            index: 29
            line: 1
          }
        }
      }
    }
    ExpressionStatement {
      loc: Object {
        filename: '..'
        end: Object {
          column: 33
          index: 33
          line: 1
        }
        start: Object {
          column: 31
          index: 31
          line: 1
        }
      }
      expression: ReferenceIdentifier {
        name: 'INVALID_PLACEHOLDER'
        loc: Object {
          filename: '..'
          end: Object {
            column: 33
            index: 33
            line: 1
          }
          start: Object {
            column: 31
            index: 31
            line: 1
          }
        }
      }
    }
    BlockStatement {
      body: Array []
      directives: Array []
      loc: Object {
        filename: '..'
        end: Object {
          column: 36
          index: 36
          line: 1
        }
        start: Object {
          column: 34
          index: 34
          line: 1
        }
      }
    }
    EmptyStatement {
      loc: Object {
        filename: '..'
        end: Object {
          column: 37
          index: 37
          line: 1
        }
        start: Object {
          column: 36
          index: 36
          line: 1
        }
      }
    }
  ]
}
