Program {
  comments: Array []
  directives: Array []
  filename: '..'
  hasHoistedVars: false
  interpreter: undefined
  mtime: undefined
  sourceType: 'module'
  syntax: Array [
    'jsx'
    'flow'
  ]
  loc: Object {
    filename: '..'
    end: Object {
      column: 0
      index: 24
      line: 2
    }
    start: Object {
      column: 0
      index: 0
      line: 1
    }
  }
  diagnostics: Array [
    Object {
      advice: undefined
      category: 'parse/js'
      filename: '..'
      message: 'Unknown start to an conditional consequent'
      mtime: undefined
      origins: Array [Object {category: 'js-parser'}]
      end: Object {
        column: 16
        index: 16
        line: 1
      }
      start: Object {
        column: 16
        index: 16
        line: 1
      }
    }
  ]
  body: Array [
    VariableDeclarationStatement {
      loc: Object {
        filename: '..'
        end: Object {
          column: 20
          index: 20
          line: 1
        }
        start: Object {
          column: 0
          index: 0
          line: 1
        }
      }
      declaration: VariableDeclaration {
        kind: 'const'
        loc: Object {
          filename: '..'
          end: Object {
            column: 20
            index: 20
            line: 1
          }
          start: Object {
            column: 0
            index: 0
            line: 1
          }
        }
        declarations: Array [
          VariableDeclarator {
            id: BindingIdentifier {
              name: 'f'
              loc: Object {
                filename: '..'
                end: Object {
                  column: 7
                  index: 7
                  line: 1
                }
                start: Object {
                  column: 6
                  index: 6
                  line: 1
                }
              }
            }
            loc: Object {
              filename: '..'
              end: Object {
                column: 20
                index: 20
                line: 1
              }
              start: Object {
                column: 6
                index: 6
                line: 1
              }
            }
            init: ReferenceIdentifier {
              name: 'INVALID_PLACEHOLDER'
              loc: Object {
                filename: '..'
                end: Object {
                  column: 20
                  index: 20
                  line: 1
                }
                start: Object {
                  column: 21
                  index: 21
                  line: 1
                }
              }
            }
          }
        ]
      }
    }
    BlockStatement {
      body: Array []
      directives: Array []
      loc: Object {
        filename: '..'
        end: Object {
          column: 23
          index: 23
          line: 1
        }
        start: Object {
          column: 21
          index: 21
          line: 1
        }
      }
    }
  ]
}
