Program {
  directives: Array []
  filename: '..'
  hasHoistedVars: false
  interpreter: undefined
  mtime: undefined
  sourceType: 'module'
  syntax: Array [
    'jsx'
    'flow'
  ]
  loc: Object {
    filename: '..'
    end: Object {
      column: 0
      index: 1_931
      line: 45
    }
    start: Object {
      column: 0
      index: 0
      line: 1
    }
  }
  diagnostics: Array [
    Object {
      advice: undefined
      category: 'parse/js'
      filename: '..'
      message: 'Missing conditional expression consequent separator'
      mtime: undefined
      origins: Array [Object {category: 'js-parser'}]
      end: Object {
        column: 16
        index: 54
        line: 2
      }
      start: Object {
        column: 16
        index: 54
        line: 2
      }
    }
  ]
  comments: Array [
    CommentLine {
      value: ' Valid lhs value inside parentheses'
      loc: Object {
        filename: '..'
        end: Object {
          column: 0
          index: 0
          line: 1
        }
        start: Object {
          column: 0
          index: 0
          line: 1
        }
      }
    }
    CommentLine {
      value: ' a ? b : (c => d)'
      loc: Object {
        filename: '..'
        end: Object {
          column: 16
          index: 54
          line: 2
        }
        start: Object {
          column: 16
          index: 54
          line: 2
        }
      }
    }
    CommentLine {
      value: ' a ? ((b): c => d) : e'
      loc: Object {
        filename: '..'
        end: Object {
          column: 20
          index: 96
          line: 3
        }
        start: Object {
          column: 20
          index: 96
          line: 3
        }
      }
    }
    CommentLine {
      value: ' a ? b : ((c): d => e)'
      loc: Object {
        filename: '..'
        end: Object {
          column: 22
          index: 145
          line: 4
        }
        start: Object {
          column: 22
          index: 145
          line: 4
        }
      }
    }
    CommentLine {
      value: ' Nested arrow function inside parentheses'
      loc: Object {
        filename: '..'
        end: Object {
          column: 22
          index: 145
          line: 4
        }
        start: Object {
          column: 22
          index: 145
          line: 4
        }
      }
    }
    CommentLine {
      value: ' a ? (b = (c) => d) : (e => f)'
      loc: Object {
        filename: '..'
        end: Object {
          column: 27
          index: 244
          line: 7
        }
        start: Object {
          column: 27
          index: 244
          line: 7
        }
      }
    }
    CommentLine {
      value: ' a ? ((b = (c) => d): e => f) : g'
      loc: Object {
        filename: '..'
        end: Object {
          column: 31
          index: 310
          line: 8
        }
        start: Object {
          column: 31
          index: 310
          line: 8
        }
      }
    }
    CommentLine {
      value: ' Nested conditional expressions'
      loc: Object {
        filename: '..'
        end: Object {
          column: 31
          index: 310
          line: 8
        }
        start: Object {
          column: 31
          index: 310
          line: 8
        }
      }
    }
    CommentLine {
      value: ' b ? (c ? ((d): e => f) : g) : h'
      loc: Object {
        filename: '..'
        end: Object {
          column: 34
          index: 417
          line: 11
        }
        start: Object {
          column: 34
          index: 417
          line: 11
        }
      }
    }
    CommentLine {
      value: ' a ? (b ? (c ? d : (e => f)) : g) : h'
      loc: Object {
        filename: '..'
        end: Object {
          column: 34
          index: 488
          line: 12
        }
        start: Object {
          column: 34
          index: 488
          line: 12
        }
      }
    }
    CommentLine {
      value: ' a ? (b ? c : ((d): e => f)) : g'
      loc: Object {
        filename: '..'
        end: Object {
          column: 32
          index: 563
          line: 14
        }
        start: Object {
          column: 32
          index: 563
          line: 14
        }
      }
    }
    CommentLine {
      value: ' Multiple arrow functions'
      loc: Object {
        filename: '..'
        end: Object {
          column: 32
          index: 563
          line: 14
        }
        start: Object {
          column: 32
          index: 563
          line: 14
        }
      }
    }
    CommentLine {
      value: ' a ? ((b): c => d) : ((e): f => g)'
      loc: Object {
        filename: '..'
        end: Object {
          column: 31
          index: 660
          line: 17
        }
        start: Object {
          column: 31
          index: 660
          line: 17
        }
      }
    }
    CommentLine {
      value: ' Multiple nested arrow functions (<T> is needed to avoid ambiguities)'
      loc: Object {
        filename: '..'
        end: Object {
          column: 31
          index: 660
          line: 17
        }
        start: Object {
          column: 31
          index: 660
          line: 17
        }
      }
    }
    CommentLine {
      value: ' a ? ((b): c => ((d): e => f)) : g'
      loc: Object {
        filename: '..'
        end: Object {
          column: 31
          index: 803
          line: 20
        }
        start: Object {
          column: 31
          index: 803
          line: 20
        }
      }
    }
    CommentLine {
      value: ' a ? b : (c => (<T>(d): e => f))'
      loc: Object {
        filename: '..'
        end: Object {
          column: 30
          index: 872
          line: 21
        }
        start: Object {
          column: 30
          index: 872
          line: 21
        }
      }
    }
    CommentLine {
      value: ' a ? (<T>(b): c => d) : (e => f)'
      loc: Object {
        filename: '..'
        end: Object {
          column: 30
          index: 939
          line: 22
        }
        start: Object {
          column: 30
          index: 939
          line: 22
        }
      }
    }
    CommentLine {
      value: ' Invalid lhs value inside parentheses'
      loc: Object {
        filename: '..'
        end: Object {
          column: 30
          index: 939
          line: 22
        }
        start: Object {
          column: 30
          index: 939
          line: 22
        }
      }
    }
    CommentLine {
      value: ' a ? (b => c) : (d => e)'
      loc: Object {
        filename: '..'
        end: Object {
          column: 21
          index: 1_038
          line: 25
        }
        start: Object {
          column: 21
          index: 1_038
          line: 25
        }
      }
    }
    CommentLine {
      value: ' a ? (b ? (c => d) : (e => f)) : g'
      loc: Object {
        filename: '..'
        end: Object {
          column: 29
          index: 1_096
          line: 26
        }
        start: Object {
          column: 29
          index: 1_096
          line: 26
        }
      }
    }
    CommentLine {
      value: ' Invalid lhs value inside parentheses inside arrow function'
      loc: Object {
        filename: '..'
        end: Object {
          column: 29
          index: 1_096
          line: 26
        }
        start: Object {
          column: 29
          index: 1_096
          line: 26
        }
      }
    }
    CommentLine {
      value: ' a ? ((b): c => (d => e)) : (f => g)'
      loc: Object {
        filename: '..'
        end: Object {
          column: 32
          index: 1_230
          line: 29
        }
        start: Object {
          column: 32
          index: 1_230
          line: 29
        }
      }
    }
    CommentLine {
      value: ' a ? (b ? (c => d) : (e => (f => g))) : (h => i)'
      loc: Object {
        filename: '..'
        end: Object {
          column: 41
          index: 1_312
          line: 30
        }
        start: Object {
          column: 41
          index: 1_312
          line: 30
        }
      }
    }
    CommentLine {
      value: ' Function as type annotation'
      loc: Object {
        filename: '..'
        end: Object {
          column: 41
          index: 1_312
          line: 30
        }
        start: Object {
          column: 41
          index: 1_312
          line: 30
        }
      }
    }
    CommentLine {
      value: ' a ? ((b): (c => d) => e) : f'
      loc: Object {
        filename: '..'
        end: Object {
          column: 27
          index: 1_424
          line: 33
        }
        start: Object {
          column: 27
          index: 1_424
          line: 33
        }
      }
    }
    CommentLine {
      value: ' Async functions or calls'
      loc: Object {
        filename: '..'
        end: Object {
          column: 27
          index: 1_424
          line: 33
        }
        start: Object {
          column: 27
          index: 1_424
          line: 33
        }
      }
    }
    CommentLine {
      value: ' a ? (async(b)) : (c => d)'
      loc: Object {
        filename: '..'
        end: Object {
          column: 22
          index: 1_509
          line: 36
        }
        start: Object {
          column: 22
          index: 1_509
          line: 36
        }
      }
    }
    CommentLine {
      value: ' a ? (async (b): c => d) : e'
      loc: Object {
        filename: '..'
        end: Object {
          column: 26
          index: 1_566
          line: 37
        }
        start: Object {
          column: 26
          index: 1_566
          line: 37
        }
      }
    }
    CommentLine {
      value: ' a ? (async(b => c)) : (d => e)'
      loc: Object {
        filename: '..'
        end: Object {
          column: 27
          index: 1_626
          line: 38
        }
        start: Object {
          column: 27
          index: 1_626
          line: 38
        }
      }
    }
    CommentLine {
      value: ' a ? (async (b) => c => d) : (e => f)'
      loc: Object {
        filename: '..'
        end: Object {
          column: 34
          index: 1_696
          line: 39
        }
        start: Object {
          column: 34
          index: 1_696
          line: 39
        }
      }
    }
    CommentLine {
      value: ' https://github.com/prettier/prettier/issues/2194'
      loc: Object {
        filename: '..'
        end: Object {
          column: 34
          index: 1_696
          line: 39
        }
        start: Object {
          column: 34
          index: 1_696
          line: 39
        }
      }
    }
  ]
  body: Array [
    ExpressionStatement {
      loc: Object {
        filename: '..'
        end: Object {
          column: 17
          index: 55
          line: 2
        }
        start: Object {
          column: 0
          index: 38
          line: 2
        }
      }
      expression: ConditionalExpression {
        loc: Object {
          filename: '..'
          end: Object {
            column: 17
            index: 55
            line: 2
          }
          start: Object {
            column: 0
            index: 38
            line: 2
          }
        }
        alternate: ReferenceIdentifier {
          name: 'INVALID_PLACEHOLDER'
          loc: Object {
            filename: '..'
            end: Object {
              column: 17
              index: 55
              line: 2
            }
            start: Object {
              column: 16
              index: 54
              line: 2
            }
          }
        }
        test: ReferenceIdentifier {
          name: 'a'
          loc: Object {
            filename: '..'
            end: Object {
              column: 1
              index: 39
              line: 2
            }
            start: Object {
              column: 0
              index: 38
              line: 2
            }
          }
        }
        consequent: ArrowFunctionExpression {
          loc: Object {
            filename: '..'
            end: Object {
              column: 16
              index: 54
              line: 2
            }
            start: Object {
              column: 4
              index: 42
              line: 2
            }
          }
          body: ReferenceIdentifier {
            name: 'd'
            loc: Object {
              filename: '..'
              end: Object {
                column: 16
                index: 54
                line: 2
              }
              start: Object {
                column: 15
                index: 53
                line: 2
              }
            }
          }
          head: FunctionHead {
            async: false
            hasHoistedVars: false
            predicate: undefined
            rest: undefined
            thisType: undefined
            loc: Object {
              filename: '..'
              end: Object {
                column: 15
                index: 53
                line: 2
              }
              start: Object {
                column: 4
                index: 42
                line: 2
              }
            }
            params: Array [
              BindingIdentifier {
                name: 'b'
                loc: Object {
                  filename: '..'
                  end: Object {
                    column: 6
                    index: 44
                    line: 2
                  }
                  start: Object {
                    column: 5
                    index: 43
                    line: 2
                  }
                }
              }
            ]
            returnType: FlowGenericTypeAnnotation {
              id: Identifier {
                name: 'c'
                loc: Object {
                  filename: '..'
                  end: Object {
                    column: 11
                    index: 49
                    line: 2
                  }
                  start: Object {
                    column: 10
                    index: 48
                    line: 2
                  }
                }
              }
              typeParameters: undefined
              loc: Object {
                filename: '..'
                end: Object {
                  column: 11
                  index: 49
                  line: 2
                }
                start: Object {
                  column: 10
                  index: 48
                  line: 2
                }
              }
            }
          }
        }
      }
    }
    ExpressionStatement {
      loc: Object {
        filename: '..'
        end: Object {
          column: 21
          index: 97
          line: 3
        }
        start: Object {
          column: 0
          index: 76
          line: 3
        }
      }
      expression: ConditionalExpression {
        loc: Object {
          filename: '..'
          end: Object {
            column: 20
            index: 96
            line: 3
          }
          start: Object {
            column: 0
            index: 76
            line: 3
          }
        }
        alternate: ReferenceIdentifier {
          name: 'e'
          loc: Object {
            filename: '..'
            end: Object {
              column: 20
              index: 96
              line: 3
            }
            start: Object {
              column: 19
              index: 95
              line: 3
            }
          }
        }
        test: ReferenceIdentifier {
          name: 'a'
          loc: Object {
            filename: '..'
            end: Object {
              column: 1
              index: 77
              line: 3
            }
            start: Object {
              column: 0
              index: 76
              line: 3
            }
          }
        }
        consequent: ArrowFunctionExpression {
          loc: Object {
            filename: '..'
            end: Object {
              column: 16
              index: 92
              line: 3
            }
            start: Object {
              column: 4
              index: 80
              line: 3
            }
          }
          body: ReferenceIdentifier {
            name: 'd'
            loc: Object {
              filename: '..'
              end: Object {
                column: 16
                index: 92
                line: 3
              }
              start: Object {
                column: 15
                index: 91
                line: 3
              }
            }
          }
          head: FunctionHead {
            async: false
            hasHoistedVars: false
            predicate: undefined
            rest: undefined
            thisType: undefined
            loc: Object {
              filename: '..'
              end: Object {
                column: 15
                index: 91
                line: 3
              }
              start: Object {
                column: 4
                index: 80
                line: 3
              }
            }
            params: Array [
              BindingIdentifier {
                name: 'b'
                loc: Object {
                  filename: '..'
                  end: Object {
                    column: 6
                    index: 82
                    line: 3
                  }
                  start: Object {
                    column: 5
                    index: 81
                    line: 3
                  }
                }
              }
            ]
            returnType: FlowGenericTypeAnnotation {
              id: Identifier {
                name: 'c'
                loc: Object {
                  filename: '..'
                  end: Object {
                    column: 11
                    index: 87
                    line: 3
                  }
                  start: Object {
                    column: 10
                    index: 86
                    line: 3
                  }
                }
              }
              typeParameters: undefined
              loc: Object {
                filename: '..'
                end: Object {
                  column: 11
                  index: 87
                  line: 3
                }
                start: Object {
                  column: 10
                  index: 86
                  line: 3
                }
              }
            }
          }
        }
      }
    }
    ExpressionStatement {
      loc: Object {
        filename: '..'
        end: Object {
          column: 23
          index: 146
          line: 4
        }
        start: Object {
          column: 0
          index: 123
          line: 4
        }
      }
      expression: ConditionalExpression {
        loc: Object {
          filename: '..'
          end: Object {
            column: 22
            index: 145
            line: 4
          }
          start: Object {
            column: 0
            index: 123
            line: 4
          }
        }
        consequent: ReferenceIdentifier {
          name: 'b'
          loc: Object {
            filename: '..'
            end: Object {
              column: 6
              index: 129
              line: 4
            }
            start: Object {
              column: 5
              index: 128
              line: 4
            }
          }
        }
        test: ReferenceIdentifier {
          name: 'a'
          loc: Object {
            filename: '..'
            end: Object {
              column: 1
              index: 124
              line: 4
            }
            start: Object {
              column: 0
              index: 123
              line: 4
            }
          }
        }
        alternate: ArrowFunctionExpression {
          loc: Object {
            filename: '..'
            end: Object {
              column: 22
              index: 145
              line: 4
            }
            start: Object {
              column: 10
              index: 133
              line: 4
            }
          }
          body: ReferenceIdentifier {
            name: 'e'
            loc: Object {
              filename: '..'
              end: Object {
                column: 22
                index: 145
                line: 4
              }
              start: Object {
                column: 21
                index: 144
                line: 4
              }
            }
          }
          head: FunctionHead {
            async: false
            hasHoistedVars: false
            predicate: undefined
            rest: undefined
            thisType: undefined
            loc: Object {
              filename: '..'
              end: Object {
                column: 21
                index: 144
                line: 4
              }
              start: Object {
                column: 10
                index: 133
                line: 4
              }
            }
            params: Array [
              BindingIdentifier {
                name: 'c'
                loc: Object {
                  filename: '..'
                  end: Object {
                    column: 12
                    index: 135
                    line: 4
                  }
                  start: Object {
                    column: 11
                    index: 134
                    line: 4
                  }
                }
              }
            ]
            returnType: FlowGenericTypeAnnotation {
              id: Identifier {
                name: 'd'
                loc: Object {
                  filename: '..'
                  end: Object {
                    column: 17
                    index: 140
                    line: 4
                  }
                  start: Object {
                    column: 16
                    index: 139
                    line: 4
                  }
                }
              }
              typeParameters: undefined
              loc: Object {
                filename: '..'
                end: Object {
                  column: 17
                  index: 140
                  line: 4
                }
                start: Object {
                  column: 16
                  index: 139
                  line: 4
                }
              }
            }
          }
        }
      }
    }
    ExpressionStatement {
      loc: Object {
        filename: '..'
        end: Object {
          column: 28
          index: 245
          line: 7
        }
        start: Object {
          column: 0
          index: 217
          line: 7
        }
      }
      expression: ConditionalExpression {
        loc: Object {
          filename: '..'
          end: Object {
            column: 28
            index: 245
            line: 7
          }
          start: Object {
            column: 0
            index: 217
            line: 7
          }
        }
        alternate: ReferenceIdentifier {
          name: 'INVALID_PLACEHOLDER'
          loc: Object {
            filename: '..'
            end: Object {
              column: 28
              index: 245
              line: 7
            }
            start: Object {
              column: 27
              index: 244
              line: 7
            }
          }
        }
        test: ReferenceIdentifier {
          name: 'a'
          loc: Object {
            filename: '..'
            end: Object {
              column: 1
              index: 218
              line: 7
            }
            start: Object {
              column: 0
              index: 217
              line: 7
            }
          }
        }
        consequent: ArrowFunctionExpression {
          loc: Object {
            filename: '..'
            end: Object {
              column: 27
              index: 244
              line: 7
            }
            start: Object {
              column: 4
              index: 221
              line: 7
            }
          }
          body: ReferenceIdentifier {
            name: 'f'
            loc: Object {
              filename: '..'
              end: Object {
                column: 27
                index: 244
                line: 7
              }
              start: Object {
                column: 26
                index: 243
                line: 7
              }
            }
          }
          head: FunctionHead {
            async: false
            hasHoistedVars: false
            predicate: undefined
            rest: undefined
            thisType: undefined
            loc: Object {
              filename: '..'
              end: Object {
                column: 26
                index: 243
                line: 7
              }
              start: Object {
                column: 4
                index: 221
                line: 7
              }
            }
            returnType: FlowGenericTypeAnnotation {
              id: Identifier {
                name: 'e'
                loc: Object {
                  filename: '..'
                  end: Object {
                    column: 22
                    index: 239
                    line: 7
                  }
                  start: Object {
                    column: 21
                    index: 238
                    line: 7
                  }
                }
              }
              typeParameters: undefined
              loc: Object {
                filename: '..'
                end: Object {
                  column: 22
                  index: 239
                  line: 7
                }
                start: Object {
                  column: 21
                  index: 238
                  line: 7
                }
              }
            }
            params: Array [
              BindingAssignmentPattern {
                loc: Object {
                  filename: '..'
                  end: Object {
                    column: 17
                    index: 234
                    line: 7
                  }
                  start: Object {
                    column: 5
                    index: 222
                    line: 7
                  }
                }
                left: BindingIdentifier {
                  name: 'b'
                  loc: Object {
                    filename: '..'
                    end: Object {
                      column: 6
                      index: 223
                      line: 7
                    }
                    start: Object {
                      column: 5
                      index: 222
                      line: 7
                    }
                  }
                }
                right: ArrowFunctionExpression {
                  loc: Object {
                    filename: '..'
                    end: Object {
                      column: 17
                      index: 234
                      line: 7
                    }
                    start: Object {
                      column: 9
                      index: 226
                      line: 7
                    }
                  }
                  body: ReferenceIdentifier {
                    name: 'd'
                    loc: Object {
                      filename: '..'
                      end: Object {
                        column: 17
                        index: 234
                        line: 7
                      }
                      start: Object {
                        column: 16
                        index: 233
                        line: 7
                      }
                    }
                  }
                  head: FunctionHead {
                    async: false
                    hasHoistedVars: false
                    predicate: undefined
                    rest: undefined
                    returnType: undefined
                    thisType: undefined
                    loc: Object {
                      filename: '..'
                      end: Object {
                        column: 16
                        index: 233
                        line: 7
                      }
                      start: Object {
                        column: 9
                        index: 226
                        line: 7
                      }
                    }
                    params: Array [
                      BindingIdentifier {
                        name: 'c'
                        loc: Object {
                          filename: '..'
                          end: Object {
                            column: 11
                            index: 228
                            line: 7
                          }
                          start: Object {
                            column: 10
                            index: 227
                            line: 7
                          }
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      }
    }
    ExpressionStatement {
      loc: Object {
        filename: '..'
        end: Object {
          column: 32
          index: 311
          line: 8
        }
        start: Object {
          column: 0
          index: 279
          line: 8
        }
      }
      expression: ConditionalExpression {
        loc: Object {
          filename: '..'
          end: Object {
            column: 31
            index: 310
            line: 8
          }
          start: Object {
            column: 0
            index: 279
            line: 8
          }
        }
        alternate: ReferenceIdentifier {
          name: 'g'
          loc: Object {
            filename: '..'
            end: Object {
              column: 31
              index: 310
              line: 8
            }
            start: Object {
              column: 30
              index: 309
              line: 8
            }
          }
        }
        test: ReferenceIdentifier {
          name: 'a'
          loc: Object {
            filename: '..'
            end: Object {
              column: 1
              index: 280
              line: 8
            }
            start: Object {
              column: 0
              index: 279
              line: 8
            }
          }
        }
        consequent: ArrowFunctionExpression {
          loc: Object {
            filename: '..'
            end: Object {
              column: 27
              index: 306
              line: 8
            }
            start: Object {
              column: 4
              index: 283
              line: 8
            }
          }
          body: ReferenceIdentifier {
            name: 'f'
            loc: Object {
              filename: '..'
              end: Object {
                column: 27
                index: 306
                line: 8
              }
              start: Object {
                column: 26
                index: 305
                line: 8
              }
            }
          }
          head: FunctionHead {
            async: false
            hasHoistedVars: false
            predicate: undefined
            rest: undefined
            thisType: undefined
            loc: Object {
              filename: '..'
              end: Object {
                column: 26
                index: 305
                line: 8
              }
              start: Object {
                column: 4
                index: 283
                line: 8
              }
            }
            returnType: FlowGenericTypeAnnotation {
              id: Identifier {
                name: 'e'
                loc: Object {
                  filename: '..'
                  end: Object {
                    column: 22
                    index: 301
                    line: 8
                  }
                  start: Object {
                    column: 21
                    index: 300
                    line: 8
                  }
                }
              }
              typeParameters: undefined
              loc: Object {
                filename: '..'
                end: Object {
                  column: 22
                  index: 301
                  line: 8
                }
                start: Object {
                  column: 21
                  index: 300
                  line: 8
                }
              }
            }
            params: Array [
              BindingAssignmentPattern {
                loc: Object {
                  filename: '..'
                  end: Object {
                    column: 17
                    index: 296
                    line: 8
                  }
                  start: Object {
                    column: 5
                    index: 284
                    line: 8
                  }
                }
                left: BindingIdentifier {
                  name: 'b'
                  loc: Object {
                    filename: '..'
                    end: Object {
                      column: 6
                      index: 285
                      line: 8
                    }
                    start: Object {
                      column: 5
                      index: 284
                      line: 8
                    }
                  }
                }
                right: ArrowFunctionExpression {
                  loc: Object {
                    filename: '..'
                    end: Object {
                      column: 17
                      index: 296
                      line: 8
                    }
                    start: Object {
                      column: 9
                      index: 288
                      line: 8
                    }
                  }
                  body: ReferenceIdentifier {
                    name: 'd'
                    loc: Object {
                      filename: '..'
                      end: Object {
                        column: 17
                        index: 296
                        line: 8
                      }
                      start: Object {
                        column: 16
                        index: 295
                        line: 8
                      }
                    }
                  }
                  head: FunctionHead {
                    async: false
                    hasHoistedVars: false
                    predicate: undefined
                    rest: undefined
                    returnType: undefined
                    thisType: undefined
                    loc: Object {
                      filename: '..'
                      end: Object {
                        column: 16
                        index: 295
                        line: 8
                      }
                      start: Object {
                        column: 9
                        index: 288
                        line: 8
                      }
                    }
                    params: Array [
                      BindingIdentifier {
                        name: 'c'
                        loc: Object {
                          filename: '..'
                          end: Object {
                            column: 11
                            index: 290
                            line: 8
                          }
                          start: Object {
                            column: 10
                            index: 289
                            line: 8
                          }
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      }
    }
    ExpressionStatement {
      loc: Object {
        filename: '..'
        end: Object {
          column: 35
          index: 418
          line: 11
        }
        start: Object {
          column: 4
          index: 387
          line: 11
        }
      }
      expression: ConditionalExpression {
        loc: Object {
          filename: '..'
          end: Object {
            column: 34
            index: 417
            line: 11
          }
          start: Object {
            column: 4
            index: 387
            line: 11
          }
        }
        alternate: ReferenceIdentifier {
          name: 'h'
          loc: Object {
            filename: '..'
            end: Object {
              column: 34
              index: 417
              line: 11
            }
            start: Object {
              column: 33
              index: 416
              line: 11
            }
          }
        }
        test: ReferenceIdentifier {
          name: 'b'
          loc: Object {
            filename: '..'
            end: Object {
              column: 5
              index: 388
              line: 11
            }
            start: Object {
              column: 4
              index: 387
              line: 11
            }
          }
        }
        consequent: ConditionalExpression {
          loc: Object {
            filename: '..'
            end: Object {
              column: 30
              index: 413
              line: 11
            }
            start: Object {
              column: 8
              index: 391
              line: 11
            }
          }
          alternate: ReferenceIdentifier {
            name: 'g'
            loc: Object {
              filename: '..'
              end: Object {
                column: 30
                index: 413
                line: 11
              }
              start: Object {
                column: 29
                index: 412
                line: 11
              }
            }
          }
          test: ReferenceIdentifier {
            name: 'c'
            loc: Object {
              filename: '..'
              end: Object {
                column: 9
                index: 392
                line: 11
              }
              start: Object {
                column: 8
                index: 391
                line: 11
              }
            }
          }
          consequent: ArrowFunctionExpression {
            loc: Object {
              filename: '..'
              end: Object {
                column: 26
                index: 409
                line: 11
              }
              start: Object {
                column: 12
                index: 395
                line: 11
              }
            }
            body: ReferenceIdentifier {
              name: 'f'
              loc: Object {
                filename: '..'
                end: Object {
                  column: 25
                  index: 408
                  line: 11
                }
                start: Object {
                  column: 24
                  index: 407
                  line: 11
                }
              }
            }
            head: FunctionHead {
              async: false
              hasHoistedVars: false
              predicate: undefined
              rest: undefined
              thisType: undefined
              loc: Object {
                filename: '..'
                end: Object {
                  column: 23
                  index: 406
                  line: 11
                }
                start: Object {
                  column: 12
                  index: 395
                  line: 11
                }
              }
              params: Array [
                BindingIdentifier {
                  name: 'd'
                  loc: Object {
                    filename: '..'
                    end: Object {
                      column: 14
                      index: 397
                      line: 11
                    }
                    start: Object {
                      column: 13
                      index: 396
                      line: 11
                    }
                  }
                }
              ]
              returnType: FlowGenericTypeAnnotation {
                id: Identifier {
                  name: 'e'
                  loc: Object {
                    filename: '..'
                    end: Object {
                      column: 19
                      index: 402
                      line: 11
                    }
                    start: Object {
                      column: 18
                      index: 401
                      line: 11
                    }
                  }
                }
                typeParameters: undefined
                loc: Object {
                  filename: '..'
                  end: Object {
                    column: 19
                    index: 402
                    line: 11
                  }
                  start: Object {
                    column: 18
                    index: 401
                    line: 11
                  }
                }
              }
            }
          }
        }
      }
    }
    ExpressionStatement {
      loc: Object {
        filename: '..'
        end: Object {
          column: 35
          index: 489
          line: 12
        }
        start: Object {
          column: 0
          index: 454
          line: 12
        }
      }
      expression: ConditionalExpression {
        loc: Object {
          filename: '..'
          end: Object {
            column: 35
            index: 489
            line: 12
          }
          start: Object {
            column: 0
            index: 454
            line: 12
          }
        }
        alternate: ReferenceIdentifier {
          name: 'INVALID_PLACEHOLDER'
          loc: Object {
            filename: '..'
            end: Object {
              column: 35
              index: 489
              line: 12
            }
            start: Object {
              column: 34
              index: 488
              line: 12
            }
          }
        }
        test: ReferenceIdentifier {
          name: 'a'
          loc: Object {
            filename: '..'
            end: Object {
              column: 1
              index: 455
              line: 12
            }
            start: Object {
              column: 0
              index: 454
              line: 12
            }
          }
        }
        consequent: ConditionalExpression {
          loc: Object {
            filename: '..'
            end: Object {
              column: 34
              index: 488
              line: 12
            }
            start: Object {
              column: 4
              index: 458
              line: 12
            }
          }
          alternate: ReferenceIdentifier {
            name: 'h'
            loc: Object {
              filename: '..'
              end: Object {
                column: 34
                index: 488
                line: 12
              }
              start: Object {
                column: 33
                index: 487
                line: 12
              }
            }
          }
          test: ReferenceIdentifier {
            name: 'b'
            loc: Object {
              filename: '..'
              end: Object {
                column: 5
                index: 459
                line: 12
              }
              start: Object {
                column: 4
                index: 458
                line: 12
              }
            }
          }
          consequent: ConditionalExpression {
            loc: Object {
              filename: '..'
              end: Object {
                column: 30
                index: 484
                line: 12
              }
              start: Object {
                column: 8
                index: 462
                line: 12
              }
            }
            alternate: ReferenceIdentifier {
              name: 'g'
              loc: Object {
                filename: '..'
                end: Object {
                  column: 30
                  index: 484
                  line: 12
                }
                start: Object {
                  column: 29
                  index: 483
                  line: 12
                }
              }
            }
            test: ReferenceIdentifier {
              name: 'c'
              loc: Object {
                filename: '..'
                end: Object {
                  column: 9
                  index: 463
                  line: 12
                }
                start: Object {
                  column: 8
                  index: 462
                  line: 12
                }
              }
            }
            consequent: ArrowFunctionExpression {
              loc: Object {
                filename: '..'
                end: Object {
                  column: 26
                  index: 480
                  line: 12
                }
                start: Object {
                  column: 12
                  index: 466
                  line: 12
                }
              }
              body: ReferenceIdentifier {
                name: 'f'
                loc: Object {
                  filename: '..'
                  end: Object {
                    column: 25
                    index: 479
                    line: 12
                  }
                  start: Object {
                    column: 24
                    index: 478
                    line: 12
                  }
                }
              }
              head: FunctionHead {
                async: false
                hasHoistedVars: false
                predicate: undefined
                rest: undefined
                thisType: undefined
                loc: Object {
                  filename: '..'
                  end: Object {
                    column: 23
                    index: 477
                    line: 12
                  }
                  start: Object {
                    column: 12
                    index: 466
                    line: 12
                  }
                }
                params: Array [
                  BindingIdentifier {
                    name: 'd'
                    loc: Object {
                      filename: '..'
                      end: Object {
                        column: 14
                        index: 468
                        line: 12
                      }
                      start: Object {
                        column: 13
                        index: 467
                        line: 12
                      }
                    }
                  }
                ]
                returnType: FlowGenericTypeAnnotation {
                  id: Identifier {
                    name: 'e'
                    loc: Object {
                      filename: '..'
                      end: Object {
                        column: 19
                        index: 473
                        line: 12
                      }
                      start: Object {
                        column: 18
                        index: 472
                        line: 12
                      }
                    }
                  }
                  typeParameters: undefined
                  loc: Object {
                    filename: '..'
                    end: Object {
                      column: 19
                      index: 473
                      line: 12
                    }
                    start: Object {
                      column: 18
                      index: 472
                      line: 12
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    ExpressionStatement {
      loc: Object {
        filename: '..'
        end: Object {
          column: 33
          index: 564
          line: 14
        }
        start: Object {
          column: 0
          index: 531
          line: 14
        }
      }
      expression: ConditionalExpression {
        loc: Object {
          filename: '..'
          end: Object {
            column: 32
            index: 563
            line: 14
          }
          start: Object {
            column: 0
            index: 531
            line: 14
          }
        }
        alternate: ReferenceIdentifier {
          name: 'g'
          loc: Object {
            filename: '..'
            end: Object {
              column: 32
              index: 563
              line: 14
            }
            start: Object {
              column: 31
              index: 562
              line: 14
            }
          }
        }
        test: ReferenceIdentifier {
          name: 'a'
          loc: Object {
            filename: '..'
            end: Object {
              column: 1
              index: 532
              line: 14
            }
            start: Object {
              column: 0
              index: 531
              line: 14
            }
          }
        }
        consequent: ConditionalExpression {
          loc: Object {
            filename: '..'
            end: Object {
              column: 28
              index: 559
              line: 14
            }
            start: Object {
              column: 4
              index: 535
              line: 14
            }
          }
          consequent: ReferenceIdentifier {
            name: 'c'
            loc: Object {
              filename: '..'
              end: Object {
                column: 10
                index: 541
                line: 14
              }
              start: Object {
                column: 9
                index: 540
                line: 14
              }
            }
          }
          test: ReferenceIdentifier {
            name: 'b'
            loc: Object {
              filename: '..'
              end: Object {
                column: 5
                index: 536
                line: 14
              }
              start: Object {
                column: 4
                index: 535
                line: 14
              }
            }
          }
          alternate: ArrowFunctionExpression {
            loc: Object {
              filename: '..'
              end: Object {
                column: 28
                index: 559
                line: 14
              }
              start: Object {
                column: 14
                index: 545
                line: 14
              }
            }
            body: ReferenceIdentifier {
              name: 'f'
              loc: Object {
                filename: '..'
                end: Object {
                  column: 28
                  index: 559
                  line: 14
                }
                start: Object {
                  column: 27
                  index: 558
                  line: 14
                }
              }
            }
            head: FunctionHead {
              async: false
              hasHoistedVars: false
              predicate: undefined
              rest: undefined
              thisType: undefined
              loc: Object {
                filename: '..'
                end: Object {
                  column: 27
                  index: 558
                  line: 14
                }
                start: Object {
                  column: 14
                  index: 545
                  line: 14
                }
              }
              params: Array [
                BindingIdentifier {
                  name: 'd'
                  loc: Object {
                    filename: '..'
                    end: Object {
                      column: 16
                      index: 547
                      line: 14
                    }
                    start: Object {
                      column: 15
                      index: 546
                      line: 14
                    }
                  }
                }
              ]
              returnType: FlowGenericTypeAnnotation {
                id: Identifier {
                  name: 'e'
                  loc: Object {
                    filename: '..'
                    end: Object {
                      column: 22
                      index: 553
                      line: 14
                    }
                    start: Object {
                      column: 21
                      index: 552
                      line: 14
                    }
                  }
                }
                typeParameters: undefined
                loc: Object {
                  filename: '..'
                  end: Object {
                    column: 22
                    index: 553
                    line: 14
                  }
                  start: Object {
                    column: 21
                    index: 552
                    line: 14
                  }
                }
              }
            }
          }
        }
      }
    }
    ExpressionStatement {
      loc: Object {
        filename: '..'
        end: Object {
          column: 32
          index: 661
          line: 17
        }
        start: Object {
          column: 0
          index: 629
          line: 17
        }
      }
      expression: ConditionalExpression {
        loc: Object {
          filename: '..'
          end: Object {
            column: 31
            index: 660
            line: 17
          }
          start: Object {
            column: 0
            index: 629
            line: 17
          }
        }
        test: ReferenceIdentifier {
          name: 'a'
          loc: Object {
            filename: '..'
            end: Object {
              column: 1
              index: 630
              line: 17
            }
            start: Object {
              column: 0
              index: 629
              line: 17
            }
          }
        }
        alternate: ArrowFunctionExpression {
          loc: Object {
            filename: '..'
            end: Object {
              column: 31
              index: 660
              line: 17
            }
            start: Object {
              column: 19
              index: 648
              line: 17
            }
          }
          body: ReferenceIdentifier {
            name: 'g'
            loc: Object {
              filename: '..'
              end: Object {
                column: 31
                index: 660
                line: 17
              }
              start: Object {
                column: 30
                index: 659
                line: 17
              }
            }
          }
          head: FunctionHead {
            async: false
            hasHoistedVars: false
            predicate: undefined
            rest: undefined
            thisType: undefined
            loc: Object {
              filename: '..'
              end: Object {
                column: 30
                index: 659
                line: 17
              }
              start: Object {
                column: 19
                index: 648
                line: 17
              }
            }
            params: Array [
              BindingIdentifier {
                name: 'e'
                loc: Object {
                  filename: '..'
                  end: Object {
                    column: 21
                    index: 650
                    line: 17
                  }
                  start: Object {
                    column: 20
                    index: 649
                    line: 17
                  }
                }
              }
            ]
            returnType: FlowGenericTypeAnnotation {
              id: Identifier {
                name: 'f'
                loc: Object {
                  filename: '..'
                  end: Object {
                    column: 26
                    index: 655
                    line: 17
                  }
                  start: Object {
                    column: 25
                    index: 654
                    line: 17
                  }
                }
              }
              typeParameters: undefined
              loc: Object {
                filename: '..'
                end: Object {
                  column: 26
                  index: 655
                  line: 17
                }
                start: Object {
                  column: 25
                  index: 654
                  line: 17
                }
              }
            }
          }
        }
        consequent: ArrowFunctionExpression {
          loc: Object {
            filename: '..'
            end: Object {
              column: 16
              index: 645
              line: 17
            }
            start: Object {
              column: 4
              index: 633
              line: 17
            }
          }
          body: ReferenceIdentifier {
            name: 'd'
            loc: Object {
              filename: '..'
              end: Object {
                column: 16
                index: 645
                line: 17
              }
              start: Object {
                column: 15
                index: 644
                line: 17
              }
            }
          }
          head: FunctionHead {
            async: false
            hasHoistedVars: false
            predicate: undefined
            rest: undefined
            thisType: undefined
            loc: Object {
              filename: '..'
              end: Object {
                column: 15
                index: 644
                line: 17
              }
              start: Object {
                column: 4
                index: 633
                line: 17
              }
            }
            params: Array [
              BindingIdentifier {
                name: 'b'
                loc: Object {
                  filename: '..'
                  end: Object {
                    column: 6
                    index: 635
                    line: 17
                  }
                  start: Object {
                    column: 5
                    index: 634
                    line: 17
                  }
                }
              }
            ]
            returnType: FlowGenericTypeAnnotation {
              id: Identifier {
                name: 'c'
                loc: Object {
                  filename: '..'
                  end: Object {
                    column: 11
                    index: 640
                    line: 17
                  }
                  start: Object {
                    column: 10
                    index: 639
                    line: 17
                  }
                }
              }
              typeParameters: undefined
              loc: Object {
                filename: '..'
                end: Object {
                  column: 11
                  index: 640
                  line: 17
                }
                start: Object {
                  column: 10
                  index: 639
                  line: 17
                }
              }
            }
          }
        }
      }
    }
    ExpressionStatement {
      loc: Object {
        filename: '..'
        end: Object {
          column: 32
          index: 804
          line: 20
        }
        start: Object {
          column: 0
          index: 772
          line: 20
        }
      }
      expression: ConditionalExpression {
        loc: Object {
          filename: '..'
          end: Object {
            column: 31
            index: 803
            line: 20
          }
          start: Object {
            column: 0
            index: 772
            line: 20
          }
        }
        alternate: ReferenceIdentifier {
          name: 'g'
          loc: Object {
            filename: '..'
            end: Object {
              column: 31
              index: 803
              line: 20
            }
            start: Object {
              column: 30
              index: 802
              line: 20
            }
          }
        }
        test: ReferenceIdentifier {
          name: 'a'
          loc: Object {
            filename: '..'
            end: Object {
              column: 1
              index: 773
              line: 20
            }
            start: Object {
              column: 0
              index: 772
              line: 20
            }
          }
        }
        consequent: ArrowFunctionExpression {
          loc: Object {
            filename: '..'
            end: Object {
              column: 27
              index: 799
              line: 20
            }
            start: Object {
              column: 4
              index: 776
              line: 20
            }
          }
          head: FunctionHead {
            async: false
            hasHoistedVars: false
            predicate: undefined
            rest: undefined
            thisType: undefined
            loc: Object {
              filename: '..'
              end: Object {
                column: 15
                index: 787
                line: 20
              }
              start: Object {
                column: 4
                index: 776
                line: 20
              }
            }
            params: Array [
              BindingIdentifier {
                name: 'b'
                loc: Object {
                  filename: '..'
                  end: Object {
                    column: 6
                    index: 778
                    line: 20
                  }
                  start: Object {
                    column: 5
                    index: 777
                    line: 20
                  }
                }
              }
            ]
            returnType: FlowGenericTypeAnnotation {
              id: Identifier {
                name: 'c'
                loc: Object {
                  filename: '..'
                  end: Object {
                    column: 11
                    index: 783
                    line: 20
                  }
                  start: Object {
                    column: 10
                    index: 782
                    line: 20
                  }
                }
              }
              typeParameters: undefined
              loc: Object {
                filename: '..'
                end: Object {
                  column: 11
                  index: 783
                  line: 20
                }
                start: Object {
                  column: 10
                  index: 782
                  line: 20
                }
              }
            }
          }
          body: ArrowFunctionExpression {
            loc: Object {
              filename: '..'
              end: Object {
                column: 27
                index: 799
                line: 20
              }
              start: Object {
                column: 15
                index: 787
                line: 20
              }
            }
            body: ReferenceIdentifier {
              name: 'f'
              loc: Object {
                filename: '..'
                end: Object {
                  column: 27
                  index: 799
                  line: 20
                }
                start: Object {
                  column: 26
                  index: 798
                  line: 20
                }
              }
            }
            head: FunctionHead {
              async: false
              hasHoistedVars: false
              predicate: undefined
              rest: undefined
              thisType: undefined
              loc: Object {
                filename: '..'
                end: Object {
                  column: 26
                  index: 798
                  line: 20
                }
                start: Object {
                  column: 15
                  index: 787
                  line: 20
                }
              }
              params: Array [
                BindingIdentifier {
                  name: 'd'
                  loc: Object {
                    filename: '..'
                    end: Object {
                      column: 17
                      index: 789
                      line: 20
                    }
                    start: Object {
                      column: 16
                      index: 788
                      line: 20
                    }
                  }
                }
              ]
              returnType: FlowGenericTypeAnnotation {
                id: Identifier {
                  name: 'e'
                  loc: Object {
                    filename: '..'
                    end: Object {
                      column: 22
                      index: 794
                      line: 20
                    }
                    start: Object {
                      column: 21
                      index: 793
                      line: 20
                    }
                  }
                }
                typeParameters: undefined
                loc: Object {
                  filename: '..'
                  end: Object {
                    column: 22
                    index: 794
                    line: 20
                  }
                  start: Object {
                    column: 21
                    index: 793
                    line: 20
                  }
                }
              }
            }
          }
        }
      }
    }
    ExpressionStatement {
      loc: Object {
        filename: '..'
        end: Object {
          column: 31
          index: 873
          line: 21
        }
        start: Object {
          column: 0
          index: 842
          line: 21
        }
      }
      expression: ConditionalExpression {
        loc: Object {
          filename: '..'
          end: Object {
            column: 31
            index: 873
            line: 21
          }
          start: Object {
            column: 0
            index: 842
            line: 21
          }
        }
        alternate: ReferenceIdentifier {
          name: 'INVALID_PLACEHOLDER'
          loc: Object {
            filename: '..'
            end: Object {
              column: 31
              index: 873
              line: 21
            }
            start: Object {
              column: 30
              index: 872
              line: 21
            }
          }
        }
        test: ReferenceIdentifier {
          name: 'a'
          loc: Object {
            filename: '..'
            end: Object {
              column: 1
              index: 843
              line: 21
            }
            start: Object {
              column: 0
              index: 842
              line: 21
            }
          }
        }
        consequent: ArrowFunctionExpression {
          loc: Object {
            filename: '..'
            end: Object {
              column: 30
              index: 872
              line: 21
            }
            start: Object {
              column: 4
              index: 846
              line: 21
            }
          }
          head: FunctionHead {
            async: false
            hasHoistedVars: false
            predicate: undefined
            rest: undefined
            thisType: undefined
            loc: Object {
              filename: '..'
              end: Object {
                column: 15
                index: 857
                line: 21
              }
              start: Object {
                column: 4
                index: 846
                line: 21
              }
            }
            params: Array [
              BindingIdentifier {
                name: 'b'
                loc: Object {
                  filename: '..'
                  end: Object {
                    column: 6
                    index: 848
                    line: 21
                  }
                  start: Object {
                    column: 5
                    index: 847
                    line: 21
                  }
                }
              }
            ]
            returnType: FlowGenericTypeAnnotation {
              id: Identifier {
                name: 'c'
                loc: Object {
                  filename: '..'
                  end: Object {
                    column: 11
                    index: 853
                    line: 21
                  }
                  start: Object {
                    column: 10
                    index: 852
                    line: 21
                  }
                }
              }
              typeParameters: undefined
              loc: Object {
                filename: '..'
                end: Object {
                  column: 11
                  index: 853
                  line: 21
                }
                start: Object {
                  column: 10
                  index: 852
                  line: 21
                }
              }
            }
          }
          body: ArrowFunctionExpression {
            loc: Object {
              filename: '..'
              end: Object {
                column: 30
                index: 872
                line: 21
              }
              start: Object {
                column: 15
                index: 857
                line: 21
              }
            }
            body: ReferenceIdentifier {
              name: 'f'
              loc: Object {
                filename: '..'
                end: Object {
                  column: 30
                  index: 872
                  line: 21
                }
                start: Object {
                  column: 29
                  index: 871
                  line: 21
                }
              }
            }
            typeParameters: FlowTypeParameterDeclaration {
              loc: Object {
                filename: '..'
                end: Object {
                  column: 18
                  index: 860
                  line: 21
                }
                start: Object {
                  column: 15
                  index: 857
                  line: 21
                }
              }
              params: Array [
                FlowTypeParameter {
                  name: 'T'
                  bound: undefined
                  default: undefined
                  variance: undefined
                  loc: Object {
                    filename: '..'
                    end: Object {
                      column: 17
                      index: 859
                      line: 21
                    }
                    start: Object {
                      column: 16
                      index: 858
                      line: 21
                    }
                  }
                }
              ]
            }
            head: FunctionHead {
              async: false
              hasHoistedVars: false
              predicate: undefined
              rest: undefined
              thisType: undefined
              loc: Object {
                filename: '..'
                end: Object {
                  column: 29
                  index: 871
                  line: 21
                }
                start: Object {
                  column: 18
                  index: 860
                  line: 21
                }
              }
              params: Array [
                BindingIdentifier {
                  name: 'd'
                  loc: Object {
                    filename: '..'
                    end: Object {
                      column: 20
                      index: 862
                      line: 21
                    }
                    start: Object {
                      column: 19
                      index: 861
                      line: 21
                    }
                  }
                }
              ]
              returnType: FlowGenericTypeAnnotation {
                id: Identifier {
                  name: 'e'
                  loc: Object {
                    filename: '..'
                    end: Object {
                      column: 25
                      index: 867
                      line: 21
                    }
                    start: Object {
                      column: 24
                      index: 866
                      line: 21
                    }
                  }
                }
                typeParameters: undefined
                loc: Object {
                  filename: '..'
                  end: Object {
                    column: 25
                    index: 867
                    line: 21
                  }
                  start: Object {
                    column: 24
                    index: 866
                    line: 21
                  }
                }
              }
            }
          }
        }
      }
    }
    ExpressionStatement {
      loc: Object {
        filename: '..'
        end: Object {
          column: 31
          index: 940
          line: 22
        }
        start: Object {
          column: 0
          index: 909
          line: 22
        }
      }
      expression: ConditionalExpression {
        loc: Object {
          filename: '..'
          end: Object {
            column: 31
            index: 940
            line: 22
          }
          start: Object {
            column: 0
            index: 909
            line: 22
          }
        }
        alternate: ReferenceIdentifier {
          name: 'INVALID_PLACEHOLDER'
          loc: Object {
            filename: '..'
            end: Object {
              column: 31
              index: 940
              line: 22
            }
            start: Object {
              column: 30
              index: 939
              line: 22
            }
          }
        }
        test: ReferenceIdentifier {
          name: 'a'
          loc: Object {
            filename: '..'
            end: Object {
              column: 1
              index: 910
              line: 22
            }
            start: Object {
              column: 0
              index: 909
              line: 22
            }
          }
        }
        consequent: ArrowFunctionExpression {
          loc: Object {
            filename: '..'
            end: Object {
              column: 30
              index: 939
              line: 22
            }
            start: Object {
              column: 4
              index: 913
              line: 22
            }
          }
          typeParameters: FlowTypeParameterDeclaration {
            loc: Object {
              filename: '..'
              end: Object {
                column: 7
                index: 916
                line: 22
              }
              start: Object {
                column: 4
                index: 913
                line: 22
              }
            }
            params: Array [
              FlowTypeParameter {
                name: 'T'
                bound: undefined
                default: undefined
                variance: undefined
                loc: Object {
                  filename: '..'
                  end: Object {
                    column: 6
                    index: 915
                    line: 22
                  }
                  start: Object {
                    column: 5
                    index: 914
                    line: 22
                  }
                }
              }
            ]
          }
          head: FunctionHead {
            async: false
            hasHoistedVars: false
            predicate: undefined
            rest: undefined
            thisType: undefined
            loc: Object {
              filename: '..'
              end: Object {
                column: 18
                index: 927
                line: 22
              }
              start: Object {
                column: 7
                index: 916
                line: 22
              }
            }
            params: Array [
              BindingIdentifier {
                name: 'b'
                loc: Object {
                  filename: '..'
                  end: Object {
                    column: 9
                    index: 918
                    line: 22
                  }
                  start: Object {
                    column: 8
                    index: 917
                    line: 22
                  }
                }
              }
            ]
            returnType: FlowGenericTypeAnnotation {
              id: Identifier {
                name: 'c'
                loc: Object {
                  filename: '..'
                  end: Object {
                    column: 14
                    index: 923
                    line: 22
                  }
                  start: Object {
                    column: 13
                    index: 922
                    line: 22
                  }
                }
              }
              typeParameters: undefined
              loc: Object {
                filename: '..'
                end: Object {
                  column: 14
                  index: 923
                  line: 22
                }
                start: Object {
                  column: 13
                  index: 922
                  line: 22
                }
              }
            }
          }
          body: ArrowFunctionExpression {
            loc: Object {
              filename: '..'
              end: Object {
                column: 30
                index: 939
                line: 22
              }
              start: Object {
                column: 18
                index: 927
                line: 22
              }
            }
            body: ReferenceIdentifier {
              name: 'f'
              loc: Object {
                filename: '..'
                end: Object {
                  column: 30
                  index: 939
                  line: 22
                }
                start: Object {
                  column: 29
                  index: 938
                  line: 22
                }
              }
            }
            head: FunctionHead {
              async: false
              hasHoistedVars: false
              predicate: undefined
              rest: undefined
              thisType: undefined
              loc: Object {
                filename: '..'
                end: Object {
                  column: 29
                  index: 938
                  line: 22
                }
                start: Object {
                  column: 18
                  index: 927
                  line: 22
                }
              }
              params: Array [
                BindingIdentifier {
                  name: 'd'
                  loc: Object {
                    filename: '..'
                    end: Object {
                      column: 20
                      index: 929
                      line: 22
                    }
                    start: Object {
                      column: 19
                      index: 928
                      line: 22
                    }
                  }
                }
              ]
              returnType: FlowGenericTypeAnnotation {
                id: Identifier {
                  name: 'e'
                  loc: Object {
                    filename: '..'
                    end: Object {
                      column: 25
                      index: 934
                      line: 22
                    }
                    start: Object {
                      column: 24
                      index: 933
                      line: 22
                    }
                  }
                }
                typeParameters: undefined
                loc: Object {
                  filename: '..'
                  end: Object {
                    column: 25
                    index: 934
                    line: 22
                  }
                  start: Object {
                    column: 24
                    index: 933
                    line: 22
                  }
                }
              }
            }
          }
        }
      }
    }
    ExpressionStatement {
      loc: Object {
        filename: '..'
        end: Object {
          column: 22
          index: 1_039
          line: 25
        }
        start: Object {
          column: 0
          index: 1_017
          line: 25
        }
      }
      expression: ConditionalExpression {
        loc: Object {
          filename: '..'
          end: Object {
            column: 22
            index: 1_039
            line: 25
          }
          start: Object {
            column: 0
            index: 1_017
            line: 25
          }
        }
        alternate: ReferenceIdentifier {
          name: 'INVALID_PLACEHOLDER'
          loc: Object {
            filename: '..'
            end: Object {
              column: 22
              index: 1_039
              line: 25
            }
            start: Object {
              column: 21
              index: 1_038
              line: 25
            }
          }
        }
        test: ReferenceIdentifier {
          name: 'a'
          loc: Object {
            filename: '..'
            end: Object {
              column: 1
              index: 1_018
              line: 25
            }
            start: Object {
              column: 0
              index: 1_017
              line: 25
            }
          }
        }
        consequent: ArrowFunctionExpression {
          loc: Object {
            filename: '..'
            end: Object {
              column: 21
              index: 1_038
              line: 25
            }
            start: Object {
              column: 4
              index: 1_021
              line: 25
            }
          }
          body: ReferenceIdentifier {
            name: 'e'
            loc: Object {
              filename: '..'
              end: Object {
                column: 21
                index: 1_038
                line: 25
              }
              start: Object {
                column: 20
                index: 1_037
                line: 25
              }
            }
          }
          head: FunctionHead {
            async: false
            hasHoistedVars: false
            predicate: undefined
            rest: undefined
            thisType: undefined
            loc: Object {
              filename: '..'
              end: Object {
                column: 20
                index: 1_037
                line: 25
              }
              start: Object {
                column: 4
                index: 1_021
                line: 25
              }
            }
            params: Array [
              BindingIdentifier {
                name: 'INVALID_PLACEHOLDER'
                loc: Object {
                  filename: '..'
                  end: Object {
                    column: 19
                    index: 1_036
                    line: 25
                  }
                  start: Object {
                    column: 20
                    index: 1_037
                    line: 25
                  }
                }
              }
            ]
            returnType: FlowGenericTypeAnnotation {
              id: Identifier {
                name: 'd'
                loc: Object {
                  filename: '..'
                  end: Object {
                    column: 16
                    index: 1_033
                    line: 25
                  }
                  start: Object {
                    column: 15
                    index: 1_032
                    line: 25
                  }
                }
              }
              typeParameters: undefined
              loc: Object {
                filename: '..'
                end: Object {
                  column: 16
                  index: 1_033
                  line: 25
                }
                start: Object {
                  column: 15
                  index: 1_032
                  line: 25
                }
              }
            }
          }
        }
      }
    }
    ExpressionStatement {
      loc: Object {
        filename: '..'
        end: Object {
          column: 30
          index: 1_097
          line: 26
        }
        start: Object {
          column: 0
          index: 1_067
          line: 26
        }
      }
      expression: ConditionalExpression {
        loc: Object {
          filename: '..'
          end: Object {
            column: 30
            index: 1_097
            line: 26
          }
          start: Object {
            column: 0
            index: 1_067
            line: 26
          }
        }
        alternate: ReferenceIdentifier {
          name: 'INVALID_PLACEHOLDER'
          loc: Object {
            filename: '..'
            end: Object {
              column: 30
              index: 1_097
              line: 26
            }
            start: Object {
              column: 29
              index: 1_096
              line: 26
            }
          }
        }
        test: ReferenceIdentifier {
          name: 'a'
          loc: Object {
            filename: '..'
            end: Object {
              column: 1
              index: 1_068
              line: 26
            }
            start: Object {
              column: 0
              index: 1_067
              line: 26
            }
          }
        }
        consequent: ConditionalExpression {
          loc: Object {
            filename: '..'
            end: Object {
              column: 29
              index: 1_096
              line: 26
            }
            start: Object {
              column: 4
              index: 1_071
              line: 26
            }
          }
          alternate: ReferenceIdentifier {
            name: 'g'
            loc: Object {
              filename: '..'
              end: Object {
                column: 29
                index: 1_096
                line: 26
              }
              start: Object {
                column: 28
                index: 1_095
                line: 26
              }
            }
          }
          test: ReferenceIdentifier {
            name: 'b'
            loc: Object {
              filename: '..'
              end: Object {
                column: 5
                index: 1_072
                line: 26
              }
              start: Object {
                column: 4
                index: 1_071
                line: 26
              }
            }
          }
          consequent: ArrowFunctionExpression {
            loc: Object {
              filename: '..'
              end: Object {
                column: 25
                index: 1_092
                line: 26
              }
              start: Object {
                column: 8
                index: 1_075
                line: 26
              }
            }
            body: ReferenceIdentifier {
              name: 'f'
              loc: Object {
                filename: '..'
                end: Object {
                  column: 25
                  index: 1_092
                  line: 26
                }
                start: Object {
                  column: 24
                  index: 1_091
                  line: 26
                }
              }
            }
            head: FunctionHead {
              async: false
              hasHoistedVars: false
              predicate: undefined
              rest: undefined
              thisType: undefined
              loc: Object {
                filename: '..'
                end: Object {
                  column: 24
                  index: 1_091
                  line: 26
                }
                start: Object {
                  column: 8
                  index: 1_075
                  line: 26
                }
              }
              params: Array [
                BindingIdentifier {
                  name: 'INVALID_PLACEHOLDER'
                  loc: Object {
                    filename: '..'
                    end: Object {
                      column: 23
                      index: 1_090
                      line: 26
                    }
                    start: Object {
                      column: 24
                      index: 1_091
                      line: 26
                    }
                  }
                }
              ]
              returnType: FlowGenericTypeAnnotation {
                id: Identifier {
                  name: 'e'
                  loc: Object {
                    filename: '..'
                    end: Object {
                      column: 20
                      index: 1_087
                      line: 26
                    }
                    start: Object {
                      column: 19
                      index: 1_086
                      line: 26
                    }
                  }
                }
                typeParameters: undefined
                loc: Object {
                  filename: '..'
                  end: Object {
                    column: 20
                    index: 1_087
                    line: 26
                  }
                  start: Object {
                    column: 19
                    index: 1_086
                    line: 26
                  }
                }
              }
            }
          }
        }
      }
    }
    ExpressionStatement {
      loc: Object {
        filename: '..'
        end: Object {
          column: 33
          index: 1_231
          line: 29
        }
        start: Object {
          column: 0
          index: 1_198
          line: 29
        }
      }
      expression: ConditionalExpression {
        loc: Object {
          filename: '..'
          end: Object {
            column: 33
            index: 1_231
            line: 29
          }
          start: Object {
            column: 0
            index: 1_198
            line: 29
          }
        }
        alternate: ReferenceIdentifier {
          name: 'INVALID_PLACEHOLDER'
          loc: Object {
            filename: '..'
            end: Object {
              column: 33
              index: 1_231
              line: 29
            }
            start: Object {
              column: 32
              index: 1_230
              line: 29
            }
          }
        }
        test: ReferenceIdentifier {
          name: 'a'
          loc: Object {
            filename: '..'
            end: Object {
              column: 1
              index: 1_199
              line: 29
            }
            start: Object {
              column: 0
              index: 1_198
              line: 29
            }
          }
        }
        consequent: ArrowFunctionExpression {
          loc: Object {
            filename: '..'
            end: Object {
              column: 32
              index: 1_230
              line: 29
            }
            start: Object {
              column: 4
              index: 1_202
              line: 29
            }
          }
          head: FunctionHead {
            async: false
            hasHoistedVars: false
            predicate: undefined
            rest: undefined
            thisType: undefined
            loc: Object {
              filename: '..'
              end: Object {
                column: 15
                index: 1_213
                line: 29
              }
              start: Object {
                column: 4
                index: 1_202
                line: 29
              }
            }
            params: Array [
              BindingIdentifier {
                name: 'b'
                loc: Object {
                  filename: '..'
                  end: Object {
                    column: 6
                    index: 1_204
                    line: 29
                  }
                  start: Object {
                    column: 5
                    index: 1_203
                    line: 29
                  }
                }
              }
            ]
            returnType: FlowGenericTypeAnnotation {
              id: Identifier {
                name: 'c'
                loc: Object {
                  filename: '..'
                  end: Object {
                    column: 11
                    index: 1_209
                    line: 29
                  }
                  start: Object {
                    column: 10
                    index: 1_208
                    line: 29
                  }
                }
              }
              typeParameters: undefined
              loc: Object {
                filename: '..'
                end: Object {
                  column: 11
                  index: 1_209
                  line: 29
                }
                start: Object {
                  column: 10
                  index: 1_208
                  line: 29
                }
              }
            }
          }
          body: ArrowFunctionExpression {
            loc: Object {
              filename: '..'
              end: Object {
                column: 32
                index: 1_230
                line: 29
              }
              start: Object {
                column: 15
                index: 1_213
                line: 29
              }
            }
            body: ReferenceIdentifier {
              name: 'g'
              loc: Object {
                filename: '..'
                end: Object {
                  column: 32
                  index: 1_230
                  line: 29
                }
                start: Object {
                  column: 31
                  index: 1_229
                  line: 29
                }
              }
            }
            head: FunctionHead {
              async: false
              hasHoistedVars: false
              predicate: undefined
              rest: undefined
              thisType: undefined
              loc: Object {
                filename: '..'
                end: Object {
                  column: 31
                  index: 1_229
                  line: 29
                }
                start: Object {
                  column: 15
                  index: 1_213
                  line: 29
                }
              }
              params: Array [
                BindingIdentifier {
                  name: 'INVALID_PLACEHOLDER'
                  loc: Object {
                    filename: '..'
                    end: Object {
                      column: 30
                      index: 1_228
                      line: 29
                    }
                    start: Object {
                      column: 31
                      index: 1_229
                      line: 29
                    }
                  }
                }
              ]
              returnType: FlowGenericTypeAnnotation {
                id: Identifier {
                  name: 'f'
                  loc: Object {
                    filename: '..'
                    end: Object {
                      column: 27
                      index: 1_225
                      line: 29
                    }
                    start: Object {
                      column: 26
                      index: 1_224
                      line: 29
                    }
                  }
                }
                typeParameters: undefined
                loc: Object {
                  filename: '..'
                  end: Object {
                    column: 27
                    index: 1_225
                    line: 29
                  }
                  start: Object {
                    column: 26
                    index: 1_224
                    line: 29
                  }
                }
              }
            }
          }
        }
      }
    }
    ExpressionStatement {
      loc: Object {
        filename: '..'
        end: Object {
          column: 28
          index: 1_425
          line: 33
        }
        start: Object {
          column: 0
          index: 1_271
          line: 30
        }
      }
      expression: ConditionalExpression {
        loc: Object {
          filename: '..'
          end: Object {
            column: 27
            index: 1_424
            line: 33
          }
          start: Object {
            column: 0
            index: 1_271
            line: 30
          }
        }
        test: ReferenceIdentifier {
          name: 'a'
          loc: Object {
            filename: '..'
            end: Object {
              column: 1
              index: 1_272
              line: 30
            }
            start: Object {
              column: 0
              index: 1_271
              line: 30
            }
          }
        }
        alternate: ConditionalExpression {
          loc: Object {
            filename: '..'
            end: Object {
              column: 27
              index: 1_424
              line: 33
            }
            start: Object {
              column: 0
              index: 1_397
              line: 33
            }
          }
          alternate: ReferenceIdentifier {
            name: 'f'
            loc: Object {
              filename: '..'
              end: Object {
                column: 27
                index: 1_424
                line: 33
              }
              start: Object {
                column: 26
                index: 1_423
                line: 33
              }
            }
          }
          test: ReferenceIdentifier {
            name: 'a'
            loc: Object {
              filename: '..'
              end: Object {
                column: 1
                index: 1_398
                line: 33
              }
              start: Object {
                column: 0
                index: 1_397
                line: 33
              }
            }
          }
          consequent: ArrowFunctionExpression {
            loc: Object {
              filename: '..'
              end: Object {
                column: 23
                index: 1_420
                line: 33
              }
              start: Object {
                column: 4
                index: 1_401
                line: 33
              }
            }
            body: ReferenceIdentifier {
              name: 'e'
              loc: Object {
                filename: '..'
                end: Object {
                  column: 23
                  index: 1_420
                  line: 33
                }
                start: Object {
                  column: 22
                  index: 1_419
                  line: 33
                }
              }
            }
            head: FunctionHead {
              async: false
              hasHoistedVars: false
              predicate: undefined
              rest: undefined
              thisType: undefined
              loc: Object {
                filename: '..'
                end: Object {
                  column: 22
                  index: 1_419
                  line: 33
                }
                start: Object {
                  column: 4
                  index: 1_401
                  line: 33
                }
              }
              params: Array [
                BindingIdentifier {
                  name: 'b'
                  loc: Object {
                    filename: '..'
                    end: Object {
                      column: 6
                      index: 1_403
                      line: 33
                    }
                    start: Object {
                      column: 5
                      index: 1_402
                      line: 33
                    }
                  }
                }
              ]
              returnType: FlowFunctionTypeAnnotation {
                loc: Object {
                  filename: '..'
                  end: Object {
                    column: 17
                    index: 1_414
                    line: 33
                  }
                  start: Object {
                    column: 11
                    index: 1_408
                    line: 33
                  }
                }
                returnType: FlowGenericTypeAnnotation {
                  id: Identifier {
                    name: 'd'
                    loc: Object {
                      filename: '..'
                      end: Object {
                        column: 17
                        index: 1_414
                        line: 33
                      }
                      start: Object {
                        column: 16
                        index: 1_413
                        line: 33
                      }
                    }
                  }
                  typeParameters: undefined
                  loc: Object {
                    filename: '..'
                    end: Object {
                      column: 17
                      index: 1_414
                      line: 33
                    }
                    start: Object {
                      column: 16
                      index: 1_413
                      line: 33
                    }
                  }
                }
                params: Array [
                  FlowFunctionTypeParam {
                    name: undefined
                    loc: Object {
                      filename: '..'
                      end: Object {
                        column: 15
                        index: 1_412
                        line: 33
                      }
                      start: Object {
                        column: 11
                        index: 1_408
                        line: 33
                      }
                    }
                    meta: PatternMeta {
                      optional: false
                      loc: Object {
                        filename: '..'
                        end: Object {
                          column: 15
                          index: 1_412
                          line: 33
                        }
                        start: Object {
                          column: 11
                          index: 1_408
                          line: 33
                        }
                      }
                      typeAnnotation: FlowGenericTypeAnnotation {
                        id: Identifier {
                          name: 'c'
                          loc: Object {
                            filename: '..'
                            end: Object {
                              column: 12
                              index: 1_409
                              line: 33
                            }
                            start: Object {
                              column: 11
                              index: 1_408
                              line: 33
                            }
                          }
                        }
                        typeParameters: undefined
                        loc: Object {
                          filename: '..'
                          end: Object {
                            column: 12
                            index: 1_409
                            line: 33
                          }
                          start: Object {
                            column: 11
                            index: 1_408
                            line: 33
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        }
        consequent: ConditionalExpression {
          loc: Object {
            filename: '..'
            end: Object {
              column: 42
              index: 1_313
              line: 30
            }
            start: Object {
              column: 4
              index: 1_275
              line: 30
            }
          }
          alternate: ReferenceIdentifier {
            name: 'INVALID_PLACEHOLDER'
            loc: Object {
              filename: '..'
              end: Object {
                column: 42
                index: 1_313
                line: 30
              }
              start: Object {
                column: 41
                index: 1_312
                line: 30
              }
            }
          }
          test: ReferenceIdentifier {
            name: 'b'
            loc: Object {
              filename: '..'
              end: Object {
                column: 5
                index: 1_276
                line: 30
              }
              start: Object {
                column: 4
                index: 1_275
                line: 30
              }
            }
          }
          consequent: ArrowFunctionExpression {
            loc: Object {
              filename: '..'
              end: Object {
                column: 41
                index: 1_312
                line: 30
              }
              start: Object {
                column: 8
                index: 1_279
                line: 30
              }
            }
            head: FunctionHead {
              async: false
              hasHoistedVars: false
              predicate: undefined
              rest: undefined
              thisType: undefined
              loc: Object {
                filename: '..'
                end: Object {
                  column: 24
                  index: 1_295
                  line: 30
                }
                start: Object {
                  column: 8
                  index: 1_279
                  line: 30
                }
              }
              params: Array [
                BindingIdentifier {
                  name: 'INVALID_PLACEHOLDER'
                  loc: Object {
                    filename: '..'
                    end: Object {
                      column: 23
                      index: 1_294
                      line: 30
                    }
                    start: Object {
                      column: 24
                      index: 1_295
                      line: 30
                    }
                  }
                }
              ]
              returnType: FlowGenericTypeAnnotation {
                id: Identifier {
                  name: 'e'
                  loc: Object {
                    filename: '..'
                    end: Object {
                      column: 20
                      index: 1_291
                      line: 30
                    }
                    start: Object {
                      column: 19
                      index: 1_290
                      line: 30
                    }
                  }
                }
                typeParameters: undefined
                loc: Object {
                  filename: '..'
                  end: Object {
                    column: 20
                    index: 1_291
                    line: 30
                  }
                  start: Object {
                    column: 19
                    index: 1_290
                    line: 30
                  }
                }
              }
            }
            body: ArrowFunctionExpression {
              loc: Object {
                filename: '..'
                end: Object {
                  column: 41
                  index: 1_312
                  line: 30
                }
                start: Object {
                  column: 24
                  index: 1_295
                  line: 30
                }
              }
              body: ReferenceIdentifier {
                name: 'i'
                loc: Object {
                  filename: '..'
                  end: Object {
                    column: 41
                    index: 1_312
                    line: 30
                  }
                  start: Object {
                    column: 40
                    index: 1_311
                    line: 30
                  }
                }
              }
              head: FunctionHead {
                async: false
                hasHoistedVars: false
                predicate: undefined
                rest: undefined
                thisType: undefined
                loc: Object {
                  filename: '..'
                  end: Object {
                    column: 40
                    index: 1_311
                    line: 30
                  }
                  start: Object {
                    column: 24
                    index: 1_295
                    line: 30
                  }
                }
                params: Array [
                  BindingIdentifier {
                    name: 'INVALID_PLACEHOLDER'
                    loc: Object {
                      filename: '..'
                      end: Object {
                        column: 39
                        index: 1_310
                        line: 30
                      }
                      start: Object {
                        column: 40
                        index: 1_311
                        line: 30
                      }
                    }
                  }
                ]
                returnType: FlowGenericTypeAnnotation {
                  id: Identifier {
                    name: 'h'
                    loc: Object {
                      filename: '..'
                      end: Object {
                        column: 36
                        index: 1_307
                        line: 30
                      }
                      start: Object {
                        column: 35
                        index: 1_306
                        line: 30
                      }
                    }
                  }
                  typeParameters: undefined
                  loc: Object {
                    filename: '..'
                    end: Object {
                      column: 36
                      index: 1_307
                      line: 30
                    }
                    start: Object {
                      column: 35
                      index: 1_306
                      line: 30
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    ExpressionStatement {
      loc: Object {
        filename: '..'
        end: Object {
          column: 23
          index: 1_510
          line: 36
        }
        start: Object {
          column: 0
          index: 1_487
          line: 36
        }
      }
      expression: ConditionalExpression {
        loc: Object {
          filename: '..'
          end: Object {
            column: 23
            index: 1_510
            line: 36
          }
          start: Object {
            column: 0
            index: 1_487
            line: 36
          }
        }
        alternate: ReferenceIdentifier {
          name: 'INVALID_PLACEHOLDER'
          loc: Object {
            filename: '..'
            end: Object {
              column: 23
              index: 1_510
              line: 36
            }
            start: Object {
              column: 22
              index: 1_509
              line: 36
            }
          }
        }
        test: ReferenceIdentifier {
          name: 'a'
          loc: Object {
            filename: '..'
            end: Object {
              column: 1
              index: 1_488
              line: 36
            }
            start: Object {
              column: 0
              index: 1_487
              line: 36
            }
          }
        }
        consequent: ArrowFunctionExpression {
          loc: Object {
            filename: '..'
            end: Object {
              column: 22
              index: 1_509
              line: 36
            }
            start: Object {
              column: 4
              index: 1_491
              line: 36
            }
          }
          body: ReferenceIdentifier {
            name: 'd'
            loc: Object {
              filename: '..'
              end: Object {
                column: 22
                index: 1_509
                line: 36
              }
              start: Object {
                column: 21
                index: 1_508
                line: 36
              }
            }
          }
          head: FunctionHead {
            async: true
            hasHoistedVars: false
            rest: undefined
            thisType: undefined
            loc: Object {
              filename: '..'
              end: Object {
                column: 21
                index: 1_508
                line: 36
              }
              start: Object {
                column: 4
                index: 1_491
                line: 36
              }
            }
            params: Array [
              BindingIdentifier {
                name: 'b'
                loc: Object {
                  filename: '..'
                  end: Object {
                    column: 12
                    index: 1_499
                    line: 36
                  }
                  start: Object {
                    column: 11
                    index: 1_498
                    line: 36
                  }
                }
              }
            ]
            returnType: FlowGenericTypeAnnotation {
              id: Identifier {
                name: 'c'
                loc: Object {
                  filename: '..'
                  end: Object {
                    column: 17
                    index: 1_504
                    line: 36
                  }
                  start: Object {
                    column: 16
                    index: 1_503
                    line: 36
                  }
                }
              }
              typeParameters: undefined
              loc: Object {
                filename: '..'
                end: Object {
                  column: 17
                  index: 1_504
                  line: 36
                }
                start: Object {
                  column: 16
                  index: 1_503
                  line: 36
                }
              }
            }
          }
        }
      }
    }
    ExpressionStatement {
      loc: Object {
        filename: '..'
        end: Object {
          column: 27
          index: 1_567
          line: 37
        }
        start: Object {
          column: 0
          index: 1_540
          line: 37
        }
      }
      expression: ConditionalExpression {
        loc: Object {
          filename: '..'
          end: Object {
            column: 26
            index: 1_566
            line: 37
          }
          start: Object {
            column: 0
            index: 1_540
            line: 37
          }
        }
        alternate: ReferenceIdentifier {
          name: 'e'
          loc: Object {
            filename: '..'
            end: Object {
              column: 26
              index: 1_566
              line: 37
            }
            start: Object {
              column: 25
              index: 1_565
              line: 37
            }
          }
        }
        test: ReferenceIdentifier {
          name: 'a'
          loc: Object {
            filename: '..'
            end: Object {
              column: 1
              index: 1_541
              line: 37
            }
            start: Object {
              column: 0
              index: 1_540
              line: 37
            }
          }
        }
        consequent: ArrowFunctionExpression {
          loc: Object {
            filename: '..'
            end: Object {
              column: 22
              index: 1_562
              line: 37
            }
            start: Object {
              column: 4
              index: 1_544
              line: 37
            }
          }
          body: ReferenceIdentifier {
            name: 'd'
            loc: Object {
              filename: '..'
              end: Object {
                column: 22
                index: 1_562
                line: 37
              }
              start: Object {
                column: 21
                index: 1_561
                line: 37
              }
            }
          }
          head: FunctionHead {
            async: true
            hasHoistedVars: false
            rest: undefined
            thisType: undefined
            loc: Object {
              filename: '..'
              end: Object {
                column: 21
                index: 1_561
                line: 37
              }
              start: Object {
                column: 4
                index: 1_544
                line: 37
              }
            }
            params: Array [
              BindingIdentifier {
                name: 'b'
                loc: Object {
                  filename: '..'
                  end: Object {
                    column: 12
                    index: 1_552
                    line: 37
                  }
                  start: Object {
                    column: 11
                    index: 1_551
                    line: 37
                  }
                }
              }
            ]
            returnType: FlowGenericTypeAnnotation {
              id: Identifier {
                name: 'c'
                loc: Object {
                  filename: '..'
                  end: Object {
                    column: 17
                    index: 1_557
                    line: 37
                  }
                  start: Object {
                    column: 16
                    index: 1_556
                    line: 37
                  }
                }
              }
              typeParameters: undefined
              loc: Object {
                filename: '..'
                end: Object {
                  column: 17
                  index: 1_557
                  line: 37
                }
                start: Object {
                  column: 16
                  index: 1_556
                  line: 37
                }
              }
            }
          }
        }
      }
    }
    ExpressionStatement {
      loc: Object {
        filename: '..'
        end: Object {
          column: 28
          index: 1_627
          line: 38
        }
        start: Object {
          column: 0
          index: 1_599
          line: 38
        }
      }
      expression: ConditionalExpression {
        loc: Object {
          filename: '..'
          end: Object {
            column: 28
            index: 1_627
            line: 38
          }
          start: Object {
            column: 0
            index: 1_599
            line: 38
          }
        }
        alternate: ReferenceIdentifier {
          name: 'INVALID_PLACEHOLDER'
          loc: Object {
            filename: '..'
            end: Object {
              column: 28
              index: 1_627
              line: 38
            }
            start: Object {
              column: 27
              index: 1_626
              line: 38
            }
          }
        }
        test: ReferenceIdentifier {
          name: 'a'
          loc: Object {
            filename: '..'
            end: Object {
              column: 1
              index: 1_600
              line: 38
            }
            start: Object {
              column: 0
              index: 1_599
              line: 38
            }
          }
        }
        consequent: ArrowFunctionExpression {
          loc: Object {
            filename: '..'
            end: Object {
              column: 27
              index: 1_626
              line: 38
            }
            start: Object {
              column: 4
              index: 1_603
              line: 38
            }
          }
          body: ReferenceIdentifier {
            name: 'e'
            loc: Object {
              filename: '..'
              end: Object {
                column: 27
                index: 1_626
                line: 38
              }
              start: Object {
                column: 26
                index: 1_625
                line: 38
              }
            }
          }
          head: FunctionHead {
            async: true
            hasHoistedVars: false
            rest: undefined
            thisType: undefined
            loc: Object {
              filename: '..'
              end: Object {
                column: 26
                index: 1_625
                line: 38
              }
              start: Object {
                column: 4
                index: 1_603
                line: 38
              }
            }
            params: Array [
              BindingIdentifier {
                name: 'INVALID_PLACEHOLDER'
                loc: Object {
                  filename: '..'
                  end: Object {
                    column: 25
                    index: 1_624
                    line: 38
                  }
                  start: Object {
                    column: 26
                    index: 1_625
                    line: 38
                  }
                }
              }
            ]
            returnType: FlowGenericTypeAnnotation {
              id: Identifier {
                name: 'd'
                loc: Object {
                  filename: '..'
                  end: Object {
                    column: 22
                    index: 1_621
                    line: 38
                  }
                  start: Object {
                    column: 21
                    index: 1_620
                    line: 38
                  }
                }
              }
              typeParameters: undefined
              loc: Object {
                filename: '..'
                end: Object {
                  column: 22
                  index: 1_621
                  line: 38
                }
                start: Object {
                  column: 21
                  index: 1_620
                  line: 38
                }
              }
            }
          }
        }
      }
    }
    ExpressionStatement {
      loc: Object {
        filename: '..'
        end: Object {
          column: 35
          index: 1_697
          line: 39
        }
        start: Object {
          column: 0
          index: 1_662
          line: 39
        }
      }
      expression: ConditionalExpression {
        loc: Object {
          filename: '..'
          end: Object {
            column: 35
            index: 1_697
            line: 39
          }
          start: Object {
            column: 0
            index: 1_662
            line: 39
          }
        }
        alternate: ReferenceIdentifier {
          name: 'INVALID_PLACEHOLDER'
          loc: Object {
            filename: '..'
            end: Object {
              column: 35
              index: 1_697
              line: 39
            }
            start: Object {
              column: 34
              index: 1_696
              line: 39
            }
          }
        }
        test: ReferenceIdentifier {
          name: 'a'
          loc: Object {
            filename: '..'
            end: Object {
              column: 1
              index: 1_663
              line: 39
            }
            start: Object {
              column: 0
              index: 1_662
              line: 39
            }
          }
        }
        consequent: ArrowFunctionExpression {
          loc: Object {
            filename: '..'
            end: Object {
              column: 34
              index: 1_696
              line: 39
            }
            start: Object {
              column: 4
              index: 1_666
              line: 39
            }
          }
          head: FunctionHead {
            async: true
            hasHoistedVars: false
            rest: undefined
            returnType: undefined
            thisType: undefined
            loc: Object {
              filename: '..'
              end: Object {
                column: 17
                index: 1_679
                line: 39
              }
              start: Object {
                column: 4
                index: 1_666
                line: 39
              }
            }
            params: Array [
              BindingIdentifier {
                name: 'b'
                loc: Object {
                  filename: '..'
                  end: Object {
                    column: 12
                    index: 1_674
                    line: 39
                  }
                  start: Object {
                    column: 11
                    index: 1_673
                    line: 39
                  }
                }
              }
            ]
          }
          body: ArrowFunctionExpression {
            loc: Object {
              filename: '..'
              end: Object {
                column: 34
                index: 1_696
                line: 39
              }
              start: Object {
                column: 17
                index: 1_679
                line: 39
              }
            }
            body: ReferenceIdentifier {
              name: 'f'
              loc: Object {
                filename: '..'
                end: Object {
                  column: 34
                  index: 1_696
                  line: 39
                }
                start: Object {
                  column: 33
                  index: 1_695
                  line: 39
                }
              }
            }
            head: FunctionHead {
              async: false
              hasHoistedVars: false
              predicate: undefined
              rest: undefined
              thisType: undefined
              loc: Object {
                filename: '..'
                end: Object {
                  column: 33
                  index: 1_695
                  line: 39
                }
                start: Object {
                  column: 17
                  index: 1_679
                  line: 39
                }
              }
              params: Array [
                BindingIdentifier {
                  name: 'INVALID_PLACEHOLDER'
                  loc: Object {
                    filename: '..'
                    end: Object {
                      column: 32
                      index: 1_694
                      line: 39
                    }
                    start: Object {
                      column: 33
                      index: 1_695
                      line: 39
                    }
                  }
                }
              ]
              returnType: FlowGenericTypeAnnotation {
                id: Identifier {
                  name: 'e'
                  loc: Object {
                    filename: '..'
                    end: Object {
                      column: 29
                      index: 1_691
                      line: 39
                    }
                    start: Object {
                      column: 28
                      index: 1_690
                      line: 39
                    }
                  }
                }
                typeParameters: undefined
                loc: Object {
                  filename: '..'
                  end: Object {
                    column: 29
                    index: 1_691
                    line: 39
                  }
                  start: Object {
                    column: 28
                    index: 1_690
                    line: 39
                  }
                }
              }
            }
          }
        }
      }
    }
    VariableDeclarationStatement {
      loc: Object {
        filename: '..'
        end: Object {
          column: 36
          index: 1_930
          line: 44
        }
        start: Object {
          column: 0
          index: 1_791
          line: 42
        }
      }
      declaration: VariableDeclaration {
        kind: 'let'
        loc: Object {
          filename: '..'
          end: Object {
            column: 36
            index: 1_930
            line: 44
          }
          start: Object {
            column: 0
            index: 1_791
            line: 42
          }
        }
        declarations: Array [
          VariableDeclarator {
            id: BindingIdentifier {
              name: 'icecream'
              loc: Object {
                filename: '..'
                end: Object {
                  column: 12
                  index: 1_803
                  line: 42
                }
                start: Object {
                  column: 4
                  index: 1_795
                  line: 42
                }
              }
            }
            loc: Object {
              filename: '..'
              end: Object {
                column: 36
                index: 1_930
                line: 44
              }
              start: Object {
                column: 4
                index: 1_795
                line: 42
              }
            }
            init: ConditionalExpression {
              loc: Object {
                filename: '..'
                end: Object {
                  column: 36
                  index: 1_930
                  line: 44
                }
                start: Object {
                  column: 15
                  index: 1_806
                  line: 42
                }
              }
              alternate: ReferenceIdentifier {
                name: 'INVALID_PLACEHOLDER'
                loc: Object {
                  filename: '..'
                  end: Object {
                    column: 36
                    index: 1_930
                    line: 44
                  }
                  start: Object {
                    column: 35
                    index: 1_929
                    line: 44
                  }
                }
              }
              test: BinaryExpression {
                operator: '=='
                loc: Object {
                  filename: '..'
                  end: Object {
                    column: 29
                    index: 1_820
                    line: 42
                  }
                  start: Object {
                    column: 15
                    index: 1_806
                    line: 42
                  }
                }
                left: ReferenceIdentifier {
                  name: 'what'
                  loc: Object {
                    filename: '..'
                    end: Object {
                      column: 19
                      index: 1_810
                      line: 42
                    }
                    start: Object {
                      column: 15
                      index: 1_806
                      line: 42
                    }
                  }
                }
                right: StringLiteral {
                  value: 'cone'
                  loc: Object {
                    filename: '..'
                    end: Object {
                      column: 29
                      index: 1_820
                      line: 42
                    }
                    start: Object {
                      column: 23
                      index: 1_814
                      line: 42
                    }
                  }
                }
              }
              consequent: ArrowFunctionExpression {
                loc: Object {
                  filename: '..'
                  end: Object {
                    column: 35
                    index: 1_929
                    line: 44
                  }
                  start: Object {
                    column: 4
                    index: 1_825
                    line: 43
                  }
                }
                head: FunctionHead {
                  async: false
                  hasHoistedVars: false
                  rest: undefined
                  thisType: undefined
                  loc: Object {
                    filename: '..'
                    end: Object {
                      column: 9
                      index: 1_830
                      line: 43
                    }
                    start: Object {
                      column: 4
                      index: 1_825
                      line: 43
                    }
                  }
                  params: Array [
                    BindingIdentifier {
                      name: 'p'
                      loc: Object {
                        filename: '..'
                        end: Object {
                          column: 5
                          index: 1_826
                          line: 43
                        }
                        start: Object {
                          column: 4
                          index: 1_825
                          line: 43
                        }
                      }
                    }
                  ]
                }
                body: ArrowFunctionExpression {
                  loc: Object {
                    filename: '..'
                    end: Object {
                      column: 35
                      index: 1_929
                      line: 44
                    }
                    start: Object {
                      column: 9
                      index: 1_830
                      line: 43
                    }
                  }
                  head: FunctionHead {
                    async: false
                    hasHoistedVars: false
                    predicate: undefined
                    rest: undefined
                    thisType: undefined
                    loc: Object {
                      filename: '..'
                      end: Object {
                        column: 9
                        index: 1_903
                        line: 44
                      }
                      start: Object {
                        column: 9
                        index: 1_830
                        line: 43
                      }
                    }
                    params: Array [
                      BindingIdentifier {
                        name: 'INVALID_PLACEHOLDER'
                        loc: Object {
                          filename: '..'
                          end: Object {
                            column: 8
                            index: 1_902
                            line: 44
                          }
                          start: Object {
                            column: 9
                            index: 1_903
                            line: 44
                          }
                        }
                      }
                    ]
                    returnType: FlowGenericTypeAnnotation {
                      id: Identifier {
                        name: 'p'
                        loc: Object {
                          filename: '..'
                          end: Object {
                            column: 5
                            index: 1_899
                            line: 44
                          }
                          start: Object {
                            column: 4
                            index: 1_898
                            line: 44
                          }
                        }
                      }
                      typeParameters: undefined
                      loc: Object {
                        filename: '..'
                        end: Object {
                          column: 5
                          index: 1_899
                          line: 44
                        }
                        start: Object {
                          column: 4
                          index: 1_898
                          line: 44
                        }
                      }
                    }
                  }
                  body: TemplateLiteral {
                    loc: Object {
                      filename: '..'
                      end: Object {
                        column: 35
                        index: 1_929
                        line: 44
                      }
                      start: Object {
                        column: 9
                        index: 1_903
                        line: 44
                      }
                    }
                    expressions: Array [
                      ReferenceIdentifier {
                        name: 'p'
                        loc: Object {
                          filename: '..'
                          end: Object {
                            column: 25
                            index: 1_919
                            line: 44
                          }
                          start: Object {
                            column: 24
                            index: 1_918
                            line: 44
                          }
                        }
                      }
                      ReferenceIdentifier {
                        name: 'what'
                        loc: Object {
                          filename: '..'
                          end: Object {
                            column: 33
                            index: 1_927
                            line: 44
                          }
                          start: Object {
                            column: 29
                            index: 1_923
                            line: 44
                          }
                        }
                      }
                    ]
                    quasis: Array [
                      TemplateElement {
                        cooked: 'here\'s your '
                        raw: 'here\'s your '
                        tail: false
                        loc: Object {
                          filename: '..'
                          end: Object {
                            column: 22
                            index: 1_916
                            line: 44
                          }
                          start: Object {
                            column: 10
                            index: 1_904
                            line: 44
                          }
                        }
                      }
                      TemplateElement {
                        cooked: ' '
                        raw: ' '
                        tail: false
                        loc: Object {
                          filename: '..'
                          end: Object {
                            column: 27
                            index: 1_921
                            line: 44
                          }
                          start: Object {
                            column: 26
                            index: 1_920
                            line: 44
                          }
                        }
                      }
                      TemplateElement {
                        cooked: ''
                        raw: ''
                        tail: true
                        loc: Object {
                          filename: '..'
                          end: Object {
                            column: 34
                            index: 1_928
                            line: 44
                          }
                          start: Object {
                            column: 34
                            index: 1_928
                            line: 44
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        ]
      }
    }
  ]
}
