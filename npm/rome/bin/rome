#!/usr/bin/env node
const { platform, arch } = process;

const PLATFORMS = {
	win32: {
		x64: "@rometools/cli-win32-x64/rome.exe",
		arm64: "@rometools/cli-win32-arm64/rome.exe",
	},
	darwin: {
		x64: "@rometools/cli-darwin-x64/rome",
		arm64: "@rometools/cli-darwin-arm64/rome",
	},
	linux: {
		x64: "@rometools/cli-linux-x64/rome",
		arm64: "@rometools/cli-linux-arm64/rome",
	},
};

const binPath = PLATFORMS?.[platform]?.[arch];
if (binPath) {
	const result = require("child_process").spawnSync(
		require.resolve(binPath),
		process.argv.slice(2),
		{ shell: false, stdio: "inherit" },
	);

	if (result.error) {
		throw result.error;
	}

	process.exitCode = result.status;
} else {
	console.error(
		"The Rome CLI package doesn't ship with prebuilt binaries for your platform yet. " +
			"You can still use the CLI by cloning the rome/tools repo from GitHub, " +
			"and follow the instructions there to build the CLI for your platform.",
	);
	process.exitCode = 1;
}
