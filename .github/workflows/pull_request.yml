_
# Jobs run on pull request
name: Pull request
on:
  pull_request:
    branches:
      - main
    paths: # Only run when changes are made to rust code or root Cargo
      - 'crates/**'
      - 'xtask/**'
      - 'Cargo.toml'
      - 'Cargo.lock'
      - 'rust-toolchain.toml'
      - 'rustfmt.toml'

env:
  RUST_LOG: info
  RUST_BACKTRACE: 1

jobs:
  format:
    name: Format Rust Files
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install toolchain
        run: rustup show
      - name: Cache
        uses: Swatinem/rust-cache@v1
      - name: Run rustfmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all --verbose -- --check

  lint:
    name: Lint Rust Files
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR Branch
        uses: actions/checkout@v3
        with:
          submodules: false
      - name: Install toolchain
        run: rustup show
      - name: Cache
        uses: Swatinem/rust-cache@v1
      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --workspace --all-targets --release
      - name: Run clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --workspace --all-targets --verbose -- --deny warnings

  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install toolchain
        run: rustup show
      - name: Cache
        uses: Swatinem/rust-cache@v1
      - name: Compile for tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --no-run --workspace --verbose
      - name: Run tests
        uses: actions-rs/cargo@v1
        env:
          RUST_TEST_THREADS: 1
        with:
          command: test
          args: --workspace --verbose

  test-node-api:
    name: Test node.js API
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Install toolchain
        run: rustup show
      - name: Cache
        uses: Swatinem/rust-cache@v1
      - name: Build main binary
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: -p rome_bin --release

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 14.x
      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-
      - uses: pnpm/action-setup@v2.1.0
        with:
          version: 7
          run_install: |
            args: [--prefix npm/backend-jsonrpc]
      - name: Build TypeScript code
        run: pnpm --prefix npm/backend-jsonrpc run tsc
      - name: Run JS tests
        run: pnpm --prefix npm/backend-jsonrpc test:ci

  documentation:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install toolchain
        run: rustup show
      - name: Cache
        uses: Swatinem/rust-cache@v1
      - name: Compile for tests
        uses: actions-rs/cargo@v1
      - name: Run doc command
        uses: actions-rs/cargo@v1
        with:
          command: documentation

  codegen:
    name: Codegen
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install toolchain
        run: rustup show
      - name: Cache
        uses: Swatinem/rust-cache@v1
      - name: Run the grammar codegen
        uses: actions-rs/cargo@v1
        with:
          command: codegen
          args: grammar
      - name: Run the analyzer codegen
        uses: actions-rs/cargo@v1
        with:
          command: codegen
          args: analyzer
      - name: Run the configuration codegen
        uses: actions-rs/cargo@v1
        with:
          command: codegen-configuration
      - name: Run the schema codegen
        uses: actions-rs/cargo@v1
        with:
          command: codegen-schema
      - name: Run the schema codegen
        uses: actions-rs/cargo@v1
        with:
          command: codegen-bindings
      - name: Run the website codegen
        uses: actions-rs/cargo@v1
        with:
          command: lintdoc
      - name: Check for git diff
        run: |
          if [[ `git status --porcelain` ]]; then
            git status
            exit 1
          fi