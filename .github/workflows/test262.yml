name: CI
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  RUST_LOG: info
  RUST_BACKTRACE: 1

jobs:
  coverage:
    name: Test262 coverage
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
       os: [windows-latest, macos-latest, ubuntu-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.56.1
          profile: minimal
      - name: Cache
        uses: Swatinem/rust-cache@v1
      - name: Run Test262 suite
        continue-on-error: true
        run:  cargo xtask coverage --json > new_results.json
      - name: Save test results
        uses: actions/upload-artifact@v2
        with:
          name: new_results
          path: new_results.json

# This job compares the coverage results from this PR and the coverage results from master
  coverage-comparison:
    needs: coverage
    name: Compare coverage
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
       os: [windows-latest, macos-latest, ubuntu-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: recursive
          ref: main
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.56.1
          profile: minimal
      - name: Cache
        uses: Swatinem/rust-cache@v1
      - name: Run Test262 suite on main branch
        continue-on-error: true
        run:  cargo xtask coverage --json > base_results.json
      - name: Download PRs test results
        uses: actions/download-artifact@v2
        with:
          name: new_results
      - name: Compare results on ${{ matrix.os }}
        if: github.event_name == 'pull_request'
        id: comparison
        shell: bash
        run: |
          comment="$(cargo xtask compare ./base_results.json ./new_results.json  --markdown)"
          comment="${comment//'%'/'%25'}"
          comment="${comment//$'\n'/'%0A'}"
          comment="${comment//$'\r'/'%0D'}"
          echo "::set-output name=comment::$comment"

      - name: Get the PR number
        if: github.event_name == 'pull_request'
        id: pr-number
        uses: kkak10/pr-number-action@v1.3

      - name: Find Previous Comment
        if: github.event_name == 'pull_request'
        uses: peter-evans/find-comment@v1.3.0
        id: previous-comment
        with:
          issue-number: ${{ steps.pr-number.outputs.pr }}
          body-includes: Test262 conformance changes

      - name: Update comment
        if: github.event_name == 'pull_request' && steps.previous-comment.outputs.comment-id
        uses: peter-evans/create-or-update-comment@v1.4.5
        continue-on-error: true
        with:
          comment-id: ${{ steps.previous-comment.outputs.comment-id }}
          body: |
            ### Test262 comparison coverage results on ${{ matrix.os }}

            ${{ steps.comparison.outputs.comment }}
          edit-mode: replace

      - name: Write a new comment
        if: github.event_name == 'pull_request' && !steps.previous-comment.outputs.comment-id
        uses: peter-evans/create-or-update-comment@v1.4.5
        continue-on-error: true
        with:
          issue-number: ${{ steps.pr-number.outputs.pr }}
          body: |
            ### Test262 comparison coverage results on ${{ matrix.os }}

            ${{ steps.comparison.outputs.comment }}

