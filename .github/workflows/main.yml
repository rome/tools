
# This workflow run when something is pushed on main and it does:
  # - normal checks like in the normal PRs
  # - runs the coverage and prints in the command line
name: CI on main
on:
  push:
    branches:
      - main

env:
  RUST_LOG: info
  RUST_BACKTRACE: 1
  CARGO_INCREMENTAL: 0
  CI: 1

jobs:
  format:
    name: format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.57.0
          profile: minimal
          components: rustfmt
      - name: Cache
        uses: Swatinem/rust-cache@v1
      - name: Run rustfmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all --verbose -- --check

  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.57.0
          profile: minimal
          components: clippy
      - name: Cache
        uses: Swatinem/rust-cache@v1
      - name: Run clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --workspace --all-targets --verbose -- --deny warnings

  test:
    name: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: 1.57.0
      - name: Cache
        uses: Swatinem/rust-cache@v1
      - name: Compile for tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --no-run --workspace --verbose
      - name: Run tests
        uses: actions-rs/cargo@v1
        env:
          RUST_TEST_THREADS: 1
        with:
          command: test
          args: --workspace --verbose
      - name: Clean cache
        run: cargo install cargo-cache --no-default-features --features ci-autoclean && cargo-cache

  coverage:
    name: Test262 coverage
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
       os: [windows-latest, ubuntu-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.57.0
          profile: minimal
      - name: Cache
        uses: Swatinem/rust-cache@v1
      - name: Compile
        run: cargo build --release --locked -p xtask
      - name: Run Test262 suite
        continue-on-error: true
        run: cargo xtask coverage
      - name: Clean cache
        run: cargo install cargo-cache --no-default-features --features ci-autoclean && cargo-cache
