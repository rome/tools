name: Release
on:
  release:
    types: [published]

jobs:
  package:
    strategy:
      matrix:
        include:
          - os: windows-2022
            target: x86_64-pc-windows-msvc
            code-target: win32-x64
          - os: windows-2022
            target: aarch64-pc-windows-msvc
            code-target: win32-arm64
          - os: ubuntu-20.04
            target: x86_64-unknown-linux-gnu
            code-target: linux-x64
          - os: ubuntu-20.04
            target: aarch64-unknown-linux-gnu
            code-target: linux-arm64
          - os: macos-11
            target: x86_64-apple-darwin
            code-target: darwin-x64
          - os: macos-11
            target: aarch64-apple-darwin
            code-target: darwin-arm64

    name: Package ${{ matrix.code-target }}
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: '1.58.0'
          target: ${{ matrix.target }}
          profile: minimal
          override: true

      - name: Install arm64 toolchain
        if: matrix.code-target == 'linux-arm64'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Install Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Audit crates.io dependencies
        if: matrix.code-target == 'linux-x64'
        run: cargo audit
      
      - name: Build LSP
        run: cargo build -p rome_lsp --release --target ${{ matrix.target }}
        env:
          CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: aarch64-linux-gnu-gcc
          CARGO_PROFILE_RELEASE_LTO: thin

      - name: Copy binary
        if: matrix.os == 'windows-2022'
        run: |
          mkdir editors/vscode/server
          cp target/${{ matrix.target }}/release/rome_lsp.exe editors/vscode/server/rome_lsp.exe
      - name: Copy binary
        if: matrix.os != 'windows-2022'
        run: |
          mkdir editors/vscode/server
          cp target/${{ matrix.target }}/release/rome_lsp editors/vscode/server/rome_lsp

      - name: Package extension
        run: |
          npm ci
          npm run compile
          mkdir ../../dist
          npx vsce package -o "../../dist/rome_lsp-${{ matrix.code-target }}.vsix" --target ${{ matrix.code-target }}
        working-directory: editors/vscode

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: vscode_packages
          path: ./dist/rome_lsp-${{ matrix.code-target }}.vsix

  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs: package
    if: success() && github.event_name == 'release'
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: vscode_packages
      - name: Publish extension (pre-release)
        run: npx vsce publish --pre-release --packagePath $(find . -iname "rome_lsp-*.vsix")
        if: ${{ github.event.release.prerelease }}
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}
      - name: Publish extension
        run: npx vsce publish --packagePath $(find . -iname "rome_lsp-*.vsix")
        if: ${{ !github.event.release.prerelease }}
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}
